
NonSecureApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003a84  00008000  00008000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000ba84  0000ba84  0000ba84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000001d4  20002000  0000ba8c  00012000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006e4  200021d8  0000bc68  000121d8  2**3
                  ALLOC
  4 .heap         00000204  200028bc  0000c34c  000121d8  2**0
                  ALLOC
  5 .stack        00001400  20002ac0  0000c550  000121d8  2**0
                  ALLOC
  6 .ARM.attributes 0000002c  00000000  00000000  000121d4  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00012200  2**0
                  CONTENTS, READONLY
  8 .debug_info   0000970d  00000000  00000000  00012259  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00001056  00000000  00000000  0001b966  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000225c  00000000  00000000  0001c9bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000001d8  00000000  00000000  0001ec18  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000005e0  00000000  00000000  0001edf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000144de  00000000  00000000  0001f3d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   000028dd  00000000  00000000  000338ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00085dd4  00000000  00000000  0003618b  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  0000105c  00000000  00000000  000bbf60  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      00000231  00000000  00000000  000bcfbc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00008000 <exception_table>:
    8000:	c0 3e 00 20 65 81 00 00 61 81 00 00 61 81 00 00     .>. e...a...a...
	...
    802c:	61 81 00 00 00 00 00 00 00 00 00 00 61 81 00 00     a...........a...
    803c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    804c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    805c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    806c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    807c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    808c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    809c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80ac:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80bc:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80cc:	f1 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     ....a...a...a...
    80dc:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80ec:	61 81 00 00 61 81 00 00                             a...a...

000080f4 <__do_global_dtors_aux>:
    80f4:	b510      	push	{r4, lr}
    80f6:	f242 14d8 	movw	r4, #8664	; 0x21d8
    80fa:	f2c2 0400 	movt	r4, #8192	; 0x2000
    80fe:	7823      	ldrb	r3, [r4, #0]
    8100:	b963      	cbnz	r3, 811c <__do_global_dtors_aux+0x28>
    8102:	f240 0300 	movw	r3, #0
    8106:	f2c0 0300 	movt	r3, #0
    810a:	b12b      	cbz	r3, 8118 <__do_global_dtors_aux+0x24>
    810c:	f64b 208c 	movw	r0, #47756	; 0xba8c
    8110:	f2c0 0000 	movt	r0, #0
    8114:	e000      	b.n	8118 <__do_global_dtors_aux+0x24>
    8116:	bf00      	nop
    8118:	2301      	movs	r3, #1
    811a:	7023      	strb	r3, [r4, #0]
    811c:	bd10      	pop	{r4, pc}
    811e:	46c0      	nop			; (mov r8, r8)

00008120 <frame_dummy>:
    8120:	f240 0300 	movw	r3, #0
    8124:	f2c0 0300 	movt	r3, #0
    8128:	b510      	push	{r4, lr}
    812a:	b14b      	cbz	r3, 8140 <frame_dummy+0x20>
    812c:	f242 11dc 	movw	r1, #8668	; 0x21dc
    8130:	f64b 208c 	movw	r0, #47756	; 0xba8c
    8134:	f2c2 0100 	movt	r1, #8192	; 0x2000
    8138:	f2c0 0000 	movt	r0, #0
    813c:	e000      	b.n	8140 <frame_dummy+0x20>
    813e:	bf00      	nop
    8140:	f64b 208c 	movw	r0, #47756	; 0xba8c
    8144:	f2c0 0000 	movt	r0, #0
    8148:	6803      	ldr	r3, [r0, #0]
    814a:	b903      	cbnz	r3, 814e <frame_dummy+0x2e>
    814c:	bd10      	pop	{r4, pc}
    814e:	f240 0300 	movw	r3, #0
    8152:	f2c0 0300 	movt	r3, #0
    8156:	2b00      	cmp	r3, #0
    8158:	d0f8      	beq.n	814c <frame_dummy+0x2c>
    815a:	4798      	blx	r3
    815c:	e7f6      	b.n	814c <frame_dummy+0x2c>
    815e:	46c0      	nop			; (mov r8, r8)

00008160 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    8160:	e7fe      	b.n	8160 <Dummy_Handler>
    8162:	46c0      	nop			; (mov r8, r8)

00008164 <Reset_Handler>:
        if (pSrc != pDest) {
    8164:	f64b 218c 	movw	r1, #47756	; 0xba8c
    8168:	f242 0000 	movw	r0, #8192	; 0x2000
    816c:	f2c0 0100 	movt	r1, #0
    8170:	f2c2 0000 	movt	r0, #8192	; 0x2000
{
    8174:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
    8176:	4281      	cmp	r1, r0
    8178:	d00f      	beq.n	819a <Reset_Handler+0x36>
                for (; pDest < &_erelocate;) {
    817a:	f242 13d4 	movw	r3, #8660	; 0x21d4
    817e:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8182:	4298      	cmp	r0, r3
    8184:	d209      	bcs.n	819a <Reset_Handler+0x36>
                        *pDest++ = *pSrc++;
    8186:	43c2      	mvns	r2, r0
    8188:	18d2      	adds	r2, r2, r3
    818a:	f64a 33c7 	movw	r3, #43975	; 0xabc7
    818e:	0892      	lsrs	r2, r2, #2
    8190:	3201      	adds	r2, #1
    8192:	0092      	lsls	r2, r2, #2
    8194:	f2c0 0300 	movt	r3, #0
    8198:	4798      	blx	r3
        for (pDest = &_szero; pDest < &_ezero;) {
    819a:	f242 10d8 	movw	r0, #8664	; 0x21d8
    819e:	f642 03bc 	movw	r3, #10428	; 0x28bc
    81a2:	f2c2 0000 	movt	r0, #8192	; 0x2000
    81a6:	f2c2 0300 	movt	r3, #8192	; 0x2000
    81aa:	4298      	cmp	r0, r3
    81ac:	d20a      	bcs.n	81c4 <Reset_Handler+0x60>
                *pDest++ = 0;
    81ae:	43c2      	mvns	r2, r0
    81b0:	18d2      	adds	r2, r2, r3
    81b2:	f64a 33d9 	movw	r3, #43993	; 0xabd9
    81b6:	0892      	lsrs	r2, r2, #2
    81b8:	3201      	adds	r2, #1
    81ba:	0092      	lsls	r2, r2, #2
    81bc:	2100      	movs	r1, #0
    81be:	f2c0 0300 	movt	r3, #0
    81c2:	4798      	blx	r3
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    81c4:	f248 0300 	movw	r3, #32768	; 0x8000
    81c8:	227f      	movs	r2, #127	; 0x7f
    81ca:	f2c0 0300 	movt	r3, #0
    81ce:	4393      	bics	r3, r2
    81d0:	f64e 5200 	movw	r2, #60672	; 0xed00
    81d4:	f2ce 0200 	movt	r2, #57344	; 0xe000
    81d8:	6093      	str	r3, [r2, #8]
        __libc_init_array();
    81da:	f64a 3345 	movw	r3, #43845	; 0xab45
    81de:	f2c0 0300 	movt	r3, #0
    81e2:	4798      	blx	r3
        main();
    81e4:	f648 53b5 	movw	r3, #36277	; 0x8db5
    81e8:	f2c0 0300 	movt	r3, #0
    81ec:	4798      	blx	r3
    81ee:	e7fe      	b.n	81ee <Reset_Handler+0x8a>

000081f0 <TC1_Handler>:
	num_overflows = 0;
}

void TC1_Handler(void)
{
	num_overflows++;
    81f0:	f242 13f8 	movw	r3, #8696	; 0x21f8
    81f4:	2001      	movs	r0, #1
    81f6:	2100      	movs	r1, #0
    81f8:	f2c2 0300 	movt	r3, #8192	; 0x2000
{
    81fc:	b530      	push	{r4, r5, lr}
	num_overflows++;
    81fe:	689c      	ldr	r4, [r3, #8]
    8200:	68dd      	ldr	r5, [r3, #12]
    8202:	1900      	adds	r0, r0, r4
    8204:	4169      	adcs	r1, r5
    8206:	6098      	str	r0, [r3, #8]
    8208:	60d9      	str	r1, [r3, #12]
	if (TC1->COUNT16.INTFLAG.reg & TC_INTFLAG_MC(1))
    820a:	f241 4300 	movw	r3, #5120	; 0x1400
    820e:	2210      	movs	r2, #16
    8210:	f2c4 2300 	movt	r3, #16896	; 0x4200
    8214:	7a99      	ldrb	r1, [r3, #10]
    8216:	420a      	tst	r2, r1
    8218:	d000      	beq.n	821c <TC1_Handler+0x2c>
	{
		//HAL_GPIO_LED_toggle();
		TC1->COUNT16.INTFLAG.reg = TC_INTFLAG_MC(1);
    821a:	729a      	strb	r2, [r3, #10]
	}
}
    821c:	bd30      	pop	{r4, r5, pc}
    821e:	46c0      	nop			; (mov r8, r8)

00008220 <uart_init>:
Sercom *ser;
uint32_t mask;
uint32_t clk_id;

void uart_init(uint32_t baud)
{
    8220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	ser = SERCOM0;
    8222:	f240 4200 	movw	r2, #1024	; 0x400
    8226:	f242 2348 	movw	r3, #8776	; 0x2248
    822a:	f2c4 2200 	movt	r2, #16896	; 0x4200
    822e:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8232:	601a      	str	r2, [r3, #0]
	clk_id = SERCOM0_GCLK_ID_CORE;
    8234:	f242 2344 	movw	r3, #8772	; 0x2244
    8238:	220b      	movs	r2, #11
    823a:	f2c2 0300 	movt	r3, #8192	; 0x2000
    823e:	601a      	str	r2, [r3, #0]
	mask = MCLK_APBCMASK_SERCOM0;
    8240:	f242 2340 	movw	r3, #8768	; 0x2240
    8244:	2402      	movs	r4, #2
    8246:	f2c2 0300 	movt	r3, #8192	; 0x2000
    824a:	601c      	str	r4, [r3, #0]
	
	uint64_t br = (uint64_t)65536 * (F_CPU - 16 * baud) / F_CPU;
    824c:	f242 4300 	movw	r3, #9216	; 0x2400
    8250:	f2c0 03f4 	movt	r3, #244	; 0xf4
    8254:	469c      	mov	ip, r3
    8256:	f249 7505 	movw	r5, #38661	; 0x9705
    825a:	f242 4200 	movw	r2, #9216	; 0x2400
    PORT->Group[HAL_GPIO_PORT##port].PINCFG[pin].reg &= ~PORT_PINCFG_PMUXEN;\
    (void)HAL_GPIO_##name##_pmuxdis;						\
  }										\

  // SERCOM0: RX=25, TX=24
  HAL_GPIO_PIN(UART_TX,  A, 24)
    825e:	2601      	movs	r6, #1
    8260:	0100      	lsls	r0, r0, #4
    8262:	4240      	negs	r0, r0
    8264:	4460      	add	r0, ip
    8266:	0c01      	lsrs	r1, r0, #16
    8268:	f2c0 0500 	movt	r5, #0
    826c:	f2c0 02f4 	movt	r2, #244	; 0xf4
    8270:	2300      	movs	r3, #0
    8272:	0400      	lsls	r0, r0, #16
    8274:	47a8      	blx	r5
    8276:	46b4      	mov	ip, r6
    8278:	f243 0300 	movw	r3, #12288	; 0x3000
    827c:	2280      	movs	r2, #128	; 0x80
    827e:	2158      	movs	r1, #88	; 0x58
    8280:	2502      	movs	r5, #2
    8282:	4666      	mov	r6, ip
    8284:	f2c4 0300 	movt	r3, #16384	; 0x4000
    8288:	0452      	lsls	r2, r2, #17
    828a:	609a      	str	r2, [r3, #8]
    828c:	5c5a      	ldrb	r2, [r3, r1]
    828e:	273c      	movs	r7, #60	; 0x3c
    8290:	432a      	orrs	r2, r5
    8292:	b2d2      	uxtb	r2, r2
    8294:	545a      	strb	r2, [r3, r1]
    8296:	5c5a      	ldrb	r2, [r3, r1]
    8298:	4332      	orrs	r2, r6
    829a:	b2d2      	uxtb	r2, r2
    829c:	545a      	strb	r2, [r3, r1]
    829e:	220f      	movs	r2, #15
    82a0:	5dd9      	ldrb	r1, [r3, r7]
    82a2:	4391      	bics	r1, r2
    82a4:	4329      	orrs	r1, r5
    82a6:	55d9      	strb	r1, [r3, r7]
  HAL_GPIO_PIN(UART_RX,  A, 25)
    82a8:	2180      	movs	r1, #128	; 0x80
    82aa:	0489      	lsls	r1, r1, #18
    82ac:	6059      	str	r1, [r3, #4]
    82ae:	2159      	movs	r1, #89	; 0x59
    82b0:	5c5e      	ldrb	r6, [r3, r1]
    82b2:	432e      	orrs	r6, r5
    82b4:	b2f6      	uxtb	r6, r6
    82b6:	545e      	strb	r6, [r3, r1]
    82b8:	2604      	movs	r6, #4
    82ba:	5c5d      	ldrb	r5, [r3, r1]
    82bc:	43b5      	bics	r5, r6
    82be:	4666      	mov	r6, ip
    82c0:	545d      	strb	r5, [r3, r1]
    82c2:	5c5d      	ldrb	r5, [r3, r1]
    82c4:	4335      	orrs	r5, r6
    82c6:	b2ed      	uxtb	r5, r5
    82c8:	545d      	strb	r5, [r3, r1]
    82ca:	5dd9      	ldrb	r1, [r3, r7]
    82cc:	400a      	ands	r2, r1
    82ce:	2120      	movs	r1, #32
    82d0:	430a      	orrs	r2, r1
    82d2:	55da      	strb	r2, [r3, r7]
	HAL_GPIO_UART_TX_out();
	HAL_GPIO_UART_TX_pmuxen(HAL_GPIO_PMUX_C);
	HAL_GPIO_UART_RX_in();
	HAL_GPIO_UART_RX_pmuxen(HAL_GPIO_PMUX_C);

	MCLK->APBCMASK.reg |= mask;
    82d4:	f640 0300 	movw	r3, #2048	; 0x800
    82d8:	f2c4 0300 	movt	r3, #16384	; 0x4000
    82dc:	69da      	ldr	r2, [r3, #28]

	GCLK->PCHCTRL[clk_id].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    82de:	2140      	movs	r1, #64	; 0x40
	MCLK->APBCMASK.reg |= mask;
    82e0:	4314      	orrs	r4, r2
	GCLK->PCHCTRL[clk_id].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    82e2:	f641 4200 	movw	r2, #7168	; 0x1c00
	MCLK->APBCMASK.reg |= mask;
    82e6:	61dc      	str	r4, [r3, #28]
	GCLK->PCHCTRL[clk_id].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    82e8:	23ac      	movs	r3, #172	; 0xac
	while (0 == (GCLK->PCHCTRL[clk_id].reg & GCLK_PCHCTRL_CHEN));
    82ea:	24ac      	movs	r4, #172	; 0xac
	GCLK->PCHCTRL[clk_id].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    82ec:	f2c4 0200 	movt	r2, #16384	; 0x4000
    82f0:	50d1      	str	r1, [r2, r3]
	while (0 == (GCLK->PCHCTRL[clk_id].reg & GCLK_PCHCTRL_CHEN));
    82f2:	5913      	ldr	r3, [r2, r4]
    82f4:	4219      	tst	r1, r3
    82f6:	d0fc      	beq.n	82f2 <uart_init+0xd2>

	ser->USART.CTRLA.reg =
    82f8:	f240 4200 	movw	r2, #1024	; 0x400
    82fc:	2304      	movs	r3, #4
    82fe:	f2c4 2200 	movt	r2, #16896	; 0x4200
    8302:	f2c4 0331 	movt	r3, #16433	; 0x4031
    8306:	6013      	str	r3, [r2, #0]
	SERCOM_USART_CTRLA_DORD | SERCOM_USART_CTRLA_MODE(1/*USART_INT_CLK*/) |
	SERCOM_USART_CTRLA_RXPO(3/*PAD3*/) | SERCOM_USART_CTRLA_TXPO(1/*PAD2*/);

	ser->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    8308:	23c0      	movs	r3, #192	; 0xc0
	SERCOM_USART_CTRLB_CHSIZE(0/*8 bits*/);

	ser->USART.BAUD.reg = (uint16_t)br;

	ser->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    830a:	2102      	movs	r1, #2
	ser->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    830c:	029b      	lsls	r3, r3, #10
	ser->USART.BAUD.reg = (uint16_t)br;
    830e:	b280      	uxth	r0, r0
	ser->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    8310:	6053      	str	r3, [r2, #4]
	ser->USART.BAUD.reg = (uint16_t)br;
    8312:	8190      	strh	r0, [r2, #12]
	ser->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    8314:	6813      	ldr	r3, [r2, #0]
    8316:	430b      	orrs	r3, r1
    8318:	6013      	str	r3, [r2, #0]
	
	while (ser->USART.SYNCBUSY.reg & SERCOM_USART_SYNCBUSY_ENABLE);
    831a:	69d3      	ldr	r3, [r2, #28]
    831c:	4219      	tst	r1, r3
    831e:	d1fc      	bne.n	831a <uart_init+0xfa>
}
    8320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8322:	46c0      	nop			; (mov r8, r8)

00008324 <uart_puts>:
	ser->USART.DATA.reg = c;
}

//-----------------------------------------------------------------------------
void uart_puts(char *s)
{
    8324:	b510      	push	{r4, lr}
	while (*s)
    8326:	7804      	ldrb	r4, [r0, #0]
    8328:	b174      	cbz	r4, 8348 <uart_puts+0x24>
    832a:	f242 2348 	movw	r3, #8776	; 0x2248
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    832e:	2101      	movs	r1, #1
    8330:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8334:	681a      	ldr	r2, [r3, #0]
	uart_putc(*s++);
    8336:	3001      	adds	r0, #1
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    8338:	7e13      	ldrb	r3, [r2, #24]
    833a:	4219      	tst	r1, r3
    833c:	d0fc      	beq.n	8338 <uart_puts+0x14>
	ser->USART.DATA.reg = c;
    833e:	b2a4      	uxth	r4, r4
    8340:	8514      	strh	r4, [r2, #40]	; 0x28
	while (*s)
    8342:	7804      	ldrb	r4, [r0, #0]
    8344:	2c00      	cmp	r4, #0
    8346:	d1f6      	bne.n	8336 <uart_puts+0x12>
}
    8348:	bd10      	pop	{r4, pc}
    834a:	46c0      	nop			; (mov r8, r8)

0000834c <uart_puti>:
void uart_puti(int i)
{
	char s[11];
	int last = 0;
	do {
		s[last] = i%10 + '0';
    834c:	220a      	movs	r2, #10
    834e:	fb90 f1f2 	sdiv	r1, r0, r2
{
    8352:	b530      	push	{r4, r5, lr}
		s[last] = i%10 + '0';
    8354:	008c      	lsls	r4, r1, #2
    8356:	1864      	adds	r4, r4, r1
    8358:	0064      	lsls	r4, r4, #1
{
    835a:	b085      	sub	sp, #20
		s[last] = i%10 + '0';
    835c:	1b04      	subs	r4, r0, r4
    835e:	ab01      	add	r3, sp, #4
    8360:	3430      	adds	r4, #48	; 0x30
    8362:	701c      	strb	r4, [r3, #0]
		i = i/10;
		last++;
	} while(i > 0);
    8364:	2900      	cmp	r1, #0
    8366:	dc00      	bgt.n	836a <uart_puti+0x1e>
    8368:	e091      	b.n	848e <uart_puti+0x142>
		s[last] = i%10 + '0';
    836a:	fb91 f5f2 	sdiv	r5, r1, r2
    836e:	00ac      	lsls	r4, r5, #2
    8370:	1964      	adds	r4, r4, r5
    8372:	0064      	lsls	r4, r4, #1
    8374:	1b09      	subs	r1, r1, r4
    8376:	3130      	adds	r1, #48	; 0x30
    8378:	7059      	strb	r1, [r3, #1]
		i = i/10;
    837a:	2164      	movs	r1, #100	; 0x64
    837c:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    8380:	2900      	cmp	r1, #0
    8382:	d100      	bne.n	8386 <uart_puti+0x3a>
    8384:	e085      	b.n	8492 <uart_puti+0x146>
		s[last] = i%10 + '0';
    8386:	fb91 f5f2 	sdiv	r5, r1, r2
    838a:	00ac      	lsls	r4, r5, #2
    838c:	1964      	adds	r4, r4, r5
    838e:	0064      	lsls	r4, r4, #1
    8390:	1b09      	subs	r1, r1, r4
    8392:	3130      	adds	r1, #48	; 0x30
    8394:	7099      	strb	r1, [r3, #2]
		i = i/10;
    8396:	f240 31e8 	movw	r1, #1000	; 0x3e8
    839a:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    839e:	2900      	cmp	r1, #0
    83a0:	d100      	bne.n	83a4 <uart_puti+0x58>
    83a2:	e078      	b.n	8496 <uart_puti+0x14a>
		s[last] = i%10 + '0';
    83a4:	fb91 f5f2 	sdiv	r5, r1, r2
    83a8:	00ac      	lsls	r4, r5, #2
    83aa:	1964      	adds	r4, r4, r5
    83ac:	0064      	lsls	r4, r4, #1
    83ae:	1b09      	subs	r1, r1, r4
    83b0:	3130      	adds	r1, #48	; 0x30
    83b2:	70d9      	strb	r1, [r3, #3]
		i = i/10;
    83b4:	f242 7110 	movw	r1, #10000	; 0x2710
    83b8:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    83bc:	2900      	cmp	r1, #0
    83be:	d100      	bne.n	83c2 <uart_puti+0x76>
    83c0:	e06b      	b.n	849a <uart_puti+0x14e>
		s[last] = i%10 + '0';
    83c2:	fb91 f5f2 	sdiv	r5, r1, r2
    83c6:	00ac      	lsls	r4, r5, #2
    83c8:	1964      	adds	r4, r4, r5
    83ca:	0064      	lsls	r4, r4, #1
    83cc:	1b09      	subs	r1, r1, r4
    83ce:	3130      	adds	r1, #48	; 0x30
    83d0:	7119      	strb	r1, [r3, #4]
		i = i/10;
    83d2:	f248 61a0 	movw	r1, #34464	; 0x86a0
    83d6:	f2c0 0101 	movt	r1, #1
    83da:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    83de:	2900      	cmp	r1, #0
    83e0:	d05d      	beq.n	849e <uart_puti+0x152>
		s[last] = i%10 + '0';
    83e2:	fb91 f5f2 	sdiv	r5, r1, r2
    83e6:	00ac      	lsls	r4, r5, #2
    83e8:	1964      	adds	r4, r4, r5
    83ea:	0064      	lsls	r4, r4, #1
    83ec:	1b09      	subs	r1, r1, r4
    83ee:	3130      	adds	r1, #48	; 0x30
    83f0:	7159      	strb	r1, [r3, #5]
		i = i/10;
    83f2:	f244 2140 	movw	r1, #16960	; 0x4240
    83f6:	f2c0 010f 	movt	r1, #15
    83fa:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    83fe:	2900      	cmp	r1, #0
    8400:	d04f      	beq.n	84a2 <uart_puti+0x156>
		s[last] = i%10 + '0';
    8402:	fb91 f5f2 	sdiv	r5, r1, r2
    8406:	00ac      	lsls	r4, r5, #2
    8408:	1964      	adds	r4, r4, r5
    840a:	0064      	lsls	r4, r4, #1
    840c:	1b09      	subs	r1, r1, r4
    840e:	3130      	adds	r1, #48	; 0x30
    8410:	7199      	strb	r1, [r3, #6]
		i = i/10;
    8412:	f249 6180 	movw	r1, #38528	; 0x9680
    8416:	f2c0 0198 	movt	r1, #152	; 0x98
    841a:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    841e:	2900      	cmp	r1, #0
    8420:	d041      	beq.n	84a6 <uart_puti+0x15a>
		s[last] = i%10 + '0';
    8422:	fb91 f5f2 	sdiv	r5, r1, r2
    8426:	00ac      	lsls	r4, r5, #2
    8428:	1964      	adds	r4, r4, r5
    842a:	0064      	lsls	r4, r4, #1
    842c:	1b09      	subs	r1, r1, r4
    842e:	3130      	adds	r1, #48	; 0x30
    8430:	71d9      	strb	r1, [r3, #7]
		i = i/10;
    8432:	f24e 1100 	movw	r1, #57600	; 0xe100
    8436:	f2c0 51f5 	movt	r1, #1525	; 0x5f5
    843a:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    843e:	2900      	cmp	r1, #0
    8440:	d033      	beq.n	84aa <uart_puti+0x15e>
		s[last] = i%10 + '0';
    8442:	fb91 f2f2 	sdiv	r2, r1, r2
    8446:	0094      	lsls	r4, r2, #2
    8448:	18a2      	adds	r2, r4, r2
    844a:	0052      	lsls	r2, r2, #1
    844c:	1a89      	subs	r1, r1, r2
		i = i/10;
    844e:	f64c 2200 	movw	r2, #51712	; 0xca00
    8452:	f6c3 329a 	movt	r2, #15258	; 0x3b9a
    8456:	fb90 f0f2 	sdiv	r0, r0, r2
		s[last] = i%10 + '0';
    845a:	3130      	adds	r1, #48	; 0x30
    845c:	7219      	strb	r1, [r3, #8]
	} while(i > 0);
    845e:	b330      	cbz	r0, 84ae <uart_puti+0x162>
		s[last] = i%10 + '0';
    8460:	3030      	adds	r0, #48	; 0x30
    8462:	7258      	strb	r0, [r3, #9]
		last++;
    8464:	2009      	movs	r0, #9
    8466:	f242 2248 	movw	r2, #8776	; 0x2248
    846a:	1818      	adds	r0, r3, r0
    846c:	466b      	mov	r3, sp
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    846e:	2101      	movs	r1, #1
    8470:	f2c2 0200 	movt	r2, #8192	; 0x2000
    8474:	6812      	ldr	r2, [r2, #0]
    8476:	1cdd      	adds	r5, r3, #3
	
	for(int j=last-1; j>=0; j--) {
		uart_putc(s[j]);
    8478:	7804      	ldrb	r4, [r0, #0]
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    847a:	7e13      	ldrb	r3, [r2, #24]
    847c:	4219      	tst	r1, r3
    847e:	d0fc      	beq.n	847a <uart_puti+0x12e>
	ser->USART.DATA.reg = c;
    8480:	b2a4      	uxth	r4, r4
    8482:	3801      	subs	r0, #1
    8484:	8514      	strh	r4, [r2, #40]	; 0x28
	for(int j=last-1; j>=0; j--) {
    8486:	42a8      	cmp	r0, r5
    8488:	d1f6      	bne.n	8478 <uart_puti+0x12c>
	}
}
    848a:	b005      	add	sp, #20
    848c:	bd30      	pop	{r4, r5, pc}
	int last = 0;
    848e:	2000      	movs	r0, #0
    8490:	e7e9      	b.n	8466 <uart_puti+0x11a>
		last++;
    8492:	2001      	movs	r0, #1
    8494:	e7e7      	b.n	8466 <uart_puti+0x11a>
    8496:	2002      	movs	r0, #2
    8498:	e7e5      	b.n	8466 <uart_puti+0x11a>
    849a:	2003      	movs	r0, #3
    849c:	e7e3      	b.n	8466 <uart_puti+0x11a>
    849e:	2004      	movs	r0, #4
    84a0:	e7e1      	b.n	8466 <uart_puti+0x11a>
    84a2:	2005      	movs	r0, #5
    84a4:	e7df      	b.n	8466 <uart_puti+0x11a>
    84a6:	2006      	movs	r0, #6
    84a8:	e7dd      	b.n	8466 <uart_puti+0x11a>
    84aa:	2007      	movs	r0, #7
    84ac:	e7db      	b.n	8466 <uart_puti+0x11a>
    84ae:	2008      	movs	r0, #8
    84b0:	e7d9      	b.n	8466 <uart_puti+0x11a>
    84b2:	46c0      	nop			; (mov r8, r8)

000084b4 <uart_getc>:
	}
}


char uart_getc()
{
    84b4:	f242 2348 	movw	r3, #8776	; 0x2248
    84b8:	f2c2 0300 	movt	r3, #8192	; 0x2000
    84bc:	681a      	ldr	r2, [r3, #0]
	char rx;
	//volatile uint32_t i=0, MAX_TIME_OUT = 1000000;
	
	while(!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    84be:	2104      	movs	r1, #4
    84c0:	e003      	b.n	84ca <uart_getc+0x16>
	{
		if(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR)
    84c2:	7e13      	ldrb	r3, [r2, #24]
    84c4:	b25b      	sxtb	r3, r3
    84c6:	2b00      	cmp	r3, #0
    84c8:	db05      	blt.n	84d6 <uart_getc+0x22>
	while(!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    84ca:	7e13      	ldrb	r3, [r2, #24]
    84cc:	4219      	tst	r1, r3
    84ce:	d0f8      	beq.n	84c2 <uart_getc+0xe>
			break;
		}
		//i++;
		//if(i >= MAX_TIME_OUT) return 'O';
	}
	rx = (uint8_t)ser->USART.DATA.reg;
    84d0:	8d10      	ldrh	r0, [r2, #40]	; 0x28
	return rx;
    84d2:	b2c0      	uxtb	r0, r0
}
    84d4:	4770      	bx	lr
			ser->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    84d6:	2180      	movs	r1, #128	; 0x80
    84d8:	7e13      	ldrb	r3, [r2, #24]
    84da:	430b      	orrs	r3, r1
    84dc:	7613      	strb	r3, [r2, #24]
			break;
    84de:	e7f7      	b.n	84d0 <uart_getc+0x1c>

000084e0 <uart_get_bytes>:
		s[idx] = c;
		idx++;
	}
}

void uart_get_bytes(uint8_t* output, int size){
    84e0:	b570      	push	{r4, r5, r6, lr}
	for (int i = 0; i < size; i++)
    84e2:	2900      	cmp	r1, #0
    84e4:	dd15      	ble.n	8512 <uart_get_bytes+0x32>
    84e6:	f242 2548 	movw	r5, #8776	; 0x2248
			ser->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    84ea:	2680      	movs	r6, #128	; 0x80
	while(!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    84ec:	2404      	movs	r4, #4
    84ee:	1841      	adds	r1, r0, r1
    84f0:	f2c2 0500 	movt	r5, #8192	; 0x2000
			ser->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    84f4:	4276      	negs	r6, r6
    84f6:	682a      	ldr	r2, [r5, #0]
    84f8:	e003      	b.n	8502 <uart_get_bytes+0x22>
		if(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR)
    84fa:	7e13      	ldrb	r3, [r2, #24]
    84fc:	b25b      	sxtb	r3, r3
    84fe:	2b00      	cmp	r3, #0
    8500:	db08      	blt.n	8514 <uart_get_bytes+0x34>
	while(!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    8502:	7e13      	ldrb	r3, [r2, #24]
    8504:	421c      	tst	r4, r3
    8506:	d0f8      	beq.n	84fa <uart_get_bytes+0x1a>
	rx = (uint8_t)ser->USART.DATA.reg;
    8508:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    850a:	7003      	strb	r3, [r0, #0]
    850c:	3001      	adds	r0, #1
	for (int i = 0; i < size; i++)
    850e:	4288      	cmp	r0, r1
    8510:	d1f1      	bne.n	84f6 <uart_get_bytes+0x16>
	{
		output[i] = uart_getc();
	}
}
    8512:	bd70      	pop	{r4, r5, r6, pc}
			ser->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    8514:	7e13      	ldrb	r3, [r2, #24]
    8516:	4333      	orrs	r3, r6
    8518:	b2db      	uxtb	r3, r3
    851a:	7613      	strb	r3, [r2, #24]
	rx = (uint8_t)ser->USART.DATA.reg;
    851c:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    851e:	7003      	strb	r3, [r0, #0]
    8520:	3001      	adds	r0, #1
	for (int i = 0; i < size; i++)
    8522:	4288      	cmp	r0, r1
    8524:	d1e7      	bne.n	84f6 <uart_get_bytes+0x16>
    8526:	e7f4      	b.n	8512 <uart_get_bytes+0x32>

00008528 <uart_put_bytes>:

void uart_put_bytes(uint8_t* output, int size){
    8528:	b530      	push	{r4, r5, lr}
	for (int i = 0; i < size; i++)
    852a:	2900      	cmp	r1, #0
    852c:	dd0f      	ble.n	854e <uart_put_bytes+0x26>
    852e:	f242 2348 	movw	r3, #8776	; 0x2248
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    8532:	2401      	movs	r4, #1
    8534:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8538:	681a      	ldr	r2, [r3, #0]
    853a:	1841      	adds	r1, r0, r1
	{
		uart_putc(output[i]);
    853c:	7805      	ldrb	r5, [r0, #0]
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    853e:	7e13      	ldrb	r3, [r2, #24]
    8540:	421c      	tst	r4, r3
    8542:	d0fc      	beq.n	853e <uart_put_bytes+0x16>
	ser->USART.DATA.reg = c;
    8544:	b2ad      	uxth	r5, r5
    8546:	3001      	adds	r0, #1
    8548:	8515      	strh	r5, [r2, #40]	; 0x28
	for (int i = 0; i < size; i++)
    854a:	4288      	cmp	r0, r1
    854c:	d1f6      	bne.n	853c <uart_put_bytes+0x14>
	}
}
    854e:	bd30      	pop	{r4, r5, pc}

00008550 <wrapper_init>:
	float init_val = *(float*)(pox_input+4*2);
	train(init_val, numEpochs, lr);
	secure_setState(&s, sizeof(State));
}

void wrapper_init() {
    8550:	b5f0      	push	{r4, r5, r6, r7, lr}
    8552:	46de      	mov	lr, fp
    8554:	464e      	mov	r6, r9
    8556:	4657      	mov	r7, sl
    8558:	4645      	mov	r5, r8
	secure_checkState(&s, sizeof(State));
    855a:	f242 2074 	movw	r0, #8820	; 0x2274
    855e:	f647 4309 	movw	r3, #31753	; 0x7c09
void wrapper_init() {
    8562:	b5e0      	push	{r5, r6, r7, lr}
	secure_checkState(&s, sizeof(State));
    8564:	f2c0 0300 	movt	r3, #0
void wrapper_init() {
    8568:	b083      	sub	sp, #12
	secure_checkState(&s, sizeof(State));
    856a:	f240 6144 	movw	r1, #1604	; 0x644
    856e:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8572:	4798      	blx	r3
    8574:	f242 2374 	movw	r3, #8820	; 0x2274
    8578:	f2c2 0300 	movt	r3, #8192	; 0x2000
    857c:	9301      	str	r3, [sp, #4]
    857e:	4698      	mov	r8, r3
			if(j%4 == 0 && i==j%FEATURE_SIZE) s.input[j][i] = 100000.0f;
    8580:	f245 0300 	movw	r3, #20480	; 0x5000
    8584:	f24a 79f1 	movw	r9, #42993	; 0xa7f1
    8588:	f2c4 73c3 	movt	r3, #18371	; 0x47c3
	int idx = 0;
    858c:	2400      	movs	r4, #0
	for(int j=0; j<INPUT_SIZE; j++) {
    858e:	f240 0a00 	movw	sl, #0
			idx = (idx+1)%26;
    8592:	261a      	movs	r6, #26
			if(j%4 == 0 && i==j%FEATURE_SIZE) s.input[j][i] = 100000.0f;
    8594:	469b      	mov	fp, r3
    8596:	f2c0 0900 	movt	r9, #0
    859a:	2303      	movs	r3, #3
    859c:	4652      	mov	r2, sl
    859e:	4213      	tst	r3, r2
    85a0:	d038      	beq.n	8614 <wrapper_init+0xc4>
    85a2:	4645      	mov	r5, r8
	for(int j=0; j<INPUT_SIZE; j++) {
    85a4:	4647      	mov	r7, r8
    85a6:	3560      	adds	r5, #96	; 0x60
			s.input[j][i] = (float)(c+idx);
    85a8:	0020      	movs	r0, r4
			idx = (idx+1)%26;
    85aa:	3401      	adds	r4, #1
			s.input[j][i] = (float)(c+idx);
    85ac:	3061      	adds	r0, #97	; 0x61
    85ae:	47c8      	blx	r9
			idx = (idx+1)%26;
    85b0:	fb94 f3f6 	sdiv	r3, r4, r6
    85b4:	4373      	muls	r3, r6
			s.input[j][i] = (float)(c+idx);
    85b6:	c701      	stmia	r7!, {r0}
			idx = (idx+1)%26;
    85b8:	1ae4      	subs	r4, r4, r3
		for(int i=0; i<FEATURE_SIZE; i++) {
    85ba:	42af      	cmp	r7, r5
    85bc:	d1f4      	bne.n	85a8 <wrapper_init+0x58>
		else s.target[j][0] = 0.0f;
    85be:	2200      	movs	r2, #0
    85c0:	4653      	mov	r3, sl
    85c2:	f242 2174 	movw	r1, #8820	; 0x2274
    85c6:	f240 6c00 	movw	ip, #1536	; 0x600
    85ca:	009b      	lsls	r3, r3, #2
    85cc:	f2c2 0100 	movt	r1, #8192	; 0x2000
    85d0:	4463      	add	r3, ip
    85d2:	468c      	mov	ip, r1
    85d4:	4463      	add	r3, ip
	for(int j=0; j<INPUT_SIZE; j++) {
    85d6:	f240 0c01 	movw	ip, #1
    85da:	44e2      	add	sl, ip
    85dc:	601a      	str	r2, [r3, #0]
    85de:	4653      	mov	r3, sl
    85e0:	46a8      	mov	r8, r5
    85e2:	2b10      	cmp	r3, #16
    85e4:	d1d9      	bne.n	859a <wrapper_init+0x4a>
	s.curIdx = INPUT_SIZE-2;
    85e6:	220e      	movs	r2, #14
    85e8:	f240 6340 	movw	r3, #1600	; 0x640
    85ec:	9901      	ldr	r1, [sp, #4]
	initialize();
	secure_setState(&s, sizeof(State));
    85ee:	f242 2074 	movw	r0, #8820	; 0x2274
	s.curIdx = INPUT_SIZE-2;
    85f2:	50ca      	str	r2, [r1, r3]
	secure_setState(&s, sizeof(State));
    85f4:	f647 4311 	movw	r3, #31761	; 0x7c11
    85f8:	f240 6144 	movw	r1, #1604	; 0x644
    85fc:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8600:	f2c0 0300 	movt	r3, #0
    8604:	4798      	blx	r3
}
    8606:	b003      	add	sp, #12
    8608:	bc3c      	pop	{r2, r3, r4, r5}
    860a:	4690      	mov	r8, r2
    860c:	4699      	mov	r9, r3
    860e:	46a2      	mov	sl, r4
    8610:	46ab      	mov	fp, r5
    8612:	bdf0      	pop	{r4, r5, r6, r7, pc}
void wrapper_init() {
    8614:	4647      	mov	r7, r8
    8616:	2500      	movs	r5, #0
    8618:	e003      	b.n	8622 <wrapper_init+0xd2>
		for(int i=0; i<FEATURE_SIZE; i++) {
    861a:	3501      	adds	r5, #1
    861c:	3704      	adds	r7, #4
    861e:	2d18      	cmp	r5, #24
    8620:	d010      	beq.n	8644 <wrapper_init+0xf4>
			s.input[j][i] = (float)(c+idx);
    8622:	0020      	movs	r0, r4
			idx = (idx+1)%26;
    8624:	3401      	adds	r4, #1
			s.input[j][i] = (float)(c+idx);
    8626:	3061      	adds	r0, #97	; 0x61
    8628:	47c8      	blx	r9
			idx = (idx+1)%26;
    862a:	fb94 f3f6 	sdiv	r3, r4, r6
    862e:	4373      	muls	r3, r6
			s.input[j][i] = (float)(c+idx);
    8630:	6038      	str	r0, [r7, #0]
			idx = (idx+1)%26;
    8632:	1ae4      	subs	r4, r4, r3
			if(j%4 == 0 && i==j%FEATURE_SIZE) s.input[j][i] = 100000.0f;
    8634:	4555      	cmp	r5, sl
    8636:	d1f0      	bne.n	861a <wrapper_init+0xca>
    8638:	465b      	mov	r3, fp
		for(int i=0; i<FEATURE_SIZE; i++) {
    863a:	3501      	adds	r5, #1
			if(j%4 == 0 && i==j%FEATURE_SIZE) s.input[j][i] = 100000.0f;
    863c:	603b      	str	r3, [r7, #0]
    863e:	3704      	adds	r7, #4
		for(int i=0; i<FEATURE_SIZE; i++) {
    8640:	2d18      	cmp	r5, #24
    8642:	d1ee      	bne.n	8622 <wrapper_init+0xd2>
		if(j%4==0) s.target[j][0] = 1.0f;
    8644:	22fe      	movs	r2, #254	; 0xfe
    8646:	4645      	mov	r5, r8
    8648:	0592      	lsls	r2, r2, #22
    864a:	3560      	adds	r5, #96	; 0x60
    864c:	e7b8      	b.n	85c0 <wrapper_init+0x70>
    864e:	46c0      	nop			; (mov r8, r8)

00008650 <wrapper_collect>:

void wrapper_collect() {
	secure_checkState(&s, sizeof(State));
    8650:	f242 2074 	movw	r0, #8820	; 0x2274
    8654:	f647 4309 	movw	r3, #31753	; 0x7c09
void wrapper_collect() {
    8658:	b570      	push	{r4, r5, r6, lr}
	secure_checkState(&s, sizeof(State));
    865a:	f240 6144 	movw	r1, #1604	; 0x644
void wrapper_collect() {
    865e:	b09a      	sub	sp, #104	; 0x68
	secure_checkState(&s, sizeof(State));
    8660:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8664:	f2c0 0300 	movt	r3, #0
    8668:	4798      	blx	r3
	uart_puts("[S]AA[E]\n");
    866a:	f248 3525 	movw	r5, #33573	; 0x8325
    866e:	f24b 6000 	movw	r0, #46592	; 0xb600
    8672:	f2c0 0500 	movt	r5, #0
    8676:	f2c0 0000 	movt	r0, #0
    867a:	f248 44b5 	movw	r4, #33973	; 0x84b5
    867e:	47a8      	blx	r5
    8680:	f2c0 0400 	movt	r4, #0
	uint8_t c1 = uart_getc();
    8684:	47a0      	blx	r4
	if(c1 != '<') return 0;
    8686:	283c      	cmp	r0, #60	; 0x3c
    8688:	d1fc      	bne.n	8684 <wrapper_collect+0x34>
	c1 = uart_getc();
    868a:	47a0      	blx	r4
	if(c1 != 'p') return 0;
    868c:	2870      	cmp	r0, #112	; 0x70
    868e:	d1f9      	bne.n	8684 <wrapper_collect+0x34>
	c1 = uart_getc();
    8690:	47a0      	blx	r4
	if(c1 != '>') return 0;
    8692:	283e      	cmp	r0, #62	; 0x3e
    8694:	d1f6      	bne.n	8684 <wrapper_collect+0x34>
	while(!is_pzem_online());
	uart_puts("[S]BB[E]\n");
    8696:	f24b 600c 	movw	r0, #46604	; 0xb60c
    869a:	f2c0 0000 	movt	r0, #0
    869e:	47a8      	blx	r5
		uint8_t c1 = uart_getc();
    86a0:	47a0      	blx	r4
		if(c1 != '<') continue;
    86a2:	283c      	cmp	r0, #60	; 0x3c
    86a4:	d1fc      	bne.n	86a0 <wrapper_collect+0x50>
		c1 = uart_getc();
    86a6:	47a0      	blx	r4
		if(c1 != 'p') continue;
    86a8:	2870      	cmp	r0, #112	; 0x70
    86aa:	d1f9      	bne.n	86a0 <wrapper_collect+0x50>
		c1 = uart_getc();
    86ac:	47a0      	blx	r4
		if(c1 != '>') continue;
    86ae:	283e      	cmp	r0, #62	; 0x3e
    86b0:	d1f6      	bne.n	86a0 <wrapper_collect+0x50>
		uart_get_bytes(arr,3);
    86b2:	f248 43e1 	movw	r3, #34017	; 0x84e1
    86b6:	2103      	movs	r1, #3
    86b8:	4668      	mov	r0, sp
    86ba:	f2c0 0300 	movt	r3, #0
    86be:	4798      	blx	r3
		uart_puts("[S]");
    86c0:	f24b 6018 	movw	r0, #46616	; 0xb618
    86c4:	f2c0 0000 	movt	r0, #0
    86c8:	47a8      	blx	r5
		arr[3] = '\0';
    86ca:	466a      	mov	r2, sp
    86cc:	2300      	movs	r3, #0
    86ce:	70d3      	strb	r3, [r2, #3]
		uint8_t energy = (uint8_t) atoi(arr);
    86d0:	f64a 3319 	movw	r3, #43801	; 0xab19
    86d4:	4668      	mov	r0, sp
    86d6:	f2c0 0300 	movt	r3, #0
    86da:	4798      	blx	r3
		uart_puti(energy);
    86dc:	f248 334d 	movw	r3, #33613	; 0x834d
		uint8_t energy = (uint8_t) atoi(arr);
    86e0:	0006      	movs	r6, r0
		uart_puti(energy);
    86e2:	20ff      	movs	r0, #255	; 0xff
    86e4:	f2c0 0300 	movt	r3, #0
    86e8:	4030      	ands	r0, r6
    86ea:	4798      	blx	r3
		uart_puts("[E]\n");
    86ec:	f24b 601c 	movw	r0, #46620	; 0xb61c
    86f0:	f2c0 0000 	movt	r0, #0
    86f4:	47a8      	blx	r5
		energyList[idx] = (float) (energy);
    86f6:	f64a 0391 	movw	r3, #43153	; 0xa891
    86fa:	b2f0      	uxtb	r0, r6
    86fc:	f2c0 0300 	movt	r3, #0
    8700:	4798      	blx	r3
    8702:	9002      	str	r0, [sp, #8]
	memcpy(s.input[s.curIdx], energyList, FEATURE_SIZE);
    8704:	f242 2074 	movw	r0, #8820	; 0x2274
    8708:	f240 6140 	movw	r1, #1600	; 0x640
    870c:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8710:	5843      	ldr	r3, [r0, r1]
		energyList[idx] = (float) (energy);
    8712:	ac02      	add	r4, sp, #8
	memcpy(s.input[s.curIdx], energyList, FEATURE_SIZE);
    8714:	4684      	mov	ip, r0
    8716:	005a      	lsls	r2, r3, #1
    8718:	18d2      	adds	r2, r2, r3
    871a:	0023      	movs	r3, r4
    871c:	0152      	lsls	r2, r2, #5
    871e:	4462      	add	r2, ip
    8720:	cb70      	ldmia	r3!, {r4, r5, r6}
    8722:	c270      	stmia	r2!, {r4, r5, r6}
    8724:	0014      	movs	r4, r2
    8726:	cb64      	ldmia	r3!, {r2, r5, r6}
    8728:	c464      	stmia	r4!, {r2, r5, r6}
	s.target[s.curIdx][0] = 0.0f; // assuming no anomaly
    872a:	5843      	ldr	r3, [r0, r1]
    872c:	2400      	movs	r4, #0
    872e:	001a      	movs	r2, r3
    8730:	3281      	adds	r2, #129	; 0x81
    8732:	32ff      	adds	r2, #255	; 0xff
    8734:	0092      	lsls	r2, r2, #2
    8736:	5014      	str	r4, [r2, r0]
	s.curIdx = (s.curIdx+1)%INPUT_SIZE;
    8738:	220f      	movs	r2, #15
    873a:	3301      	adds	r3, #1
    873c:	17dc      	asrs	r4, r3, #31
    873e:	0f24      	lsrs	r4, r4, #28
    8740:	191b      	adds	r3, r3, r4
    8742:	4013      	ands	r3, r2
    8744:	1b1b      	subs	r3, r3, r4
    8746:	5043      	str	r3, [r0, r1]
	collect();
	secure_setState(&s, sizeof(State));
    8748:	f647 4311 	movw	r3, #31761	; 0x7c11
    874c:	3104      	adds	r1, #4
    874e:	f2c0 0300 	movt	r3, #0
    8752:	4798      	blx	r3
}
    8754:	b01a      	add	sp, #104	; 0x68
    8756:	bd70      	pop	{r4, r5, r6, pc}

00008758 <train>:
void train(float init_val, int epochs, float rate) {
    8758:	b5f0      	push	{r4, r5, r6, r7, lr}
    875a:	464e      	mov	r6, r9
    875c:	4645      	mov	r5, r8
    875e:	4657      	mov	r7, sl
    8760:	46de      	mov	lr, fp
    8762:	b5e0      	push	{r5, r6, r7, lr}
	setWeight(tinn, init_val);
    8764:	f242 254c 	movw	r5, #8780	; 0x224c
    8768:	f2c2 0500 	movt	r5, #8192	; 0x2000
void train(float init_val, int epochs, float rate) {
    876c:	b0a3      	sub	sp, #140	; 0x8c
	setWeight(tinn, init_val);
    876e:	002b      	movs	r3, r5
void train(float init_val, int epochs, float rate) {
    8770:	4690      	mov	r8, r2
	setWeight(tinn, init_val);
    8772:	466a      	mov	r2, sp
    8774:	9006      	str	r0, [sp, #24]
void train(float init_val, int epochs, float rate) {
    8776:	9110      	str	r1, [sp, #64]	; 0x40
	setWeight(tinn, init_val);
    8778:	3310      	adds	r3, #16
    877a:	cb51      	ldmia	r3!, {r0, r4, r6}
    877c:	c251      	stmia	r2!, {r0, r4, r6}
    877e:	cb51      	ldmia	r3!, {r0, r4, r6}
    8780:	c251      	stmia	r2!, {r0, r4, r6}
    8782:	f249 0405 	movw	r4, #36869	; 0x9005
void train(float init_val, int epochs, float rate) {
    8786:	000f      	movs	r7, r1
	setWeight(tinn, init_val);
    8788:	6828      	ldr	r0, [r5, #0]
    878a:	6869      	ldr	r1, [r5, #4]
    878c:	68aa      	ldr	r2, [r5, #8]
    878e:	68eb      	ldr	r3, [r5, #12]
    8790:	f2c0 0400 	movt	r4, #0
    8794:	47a0      	blx	r4
	 for(int i = 0; i < epochs; i++)
    8796:	2f00      	cmp	r7, #0
    8798:	dc00      	bgt.n	879c <train+0x44>
    879a:	e0f7      	b.n	898c <train+0x234>
    879c:	f24a 233d 	movw	r3, #41533	; 0xa23d
    87a0:	2100      	movs	r1, #0
    87a2:	f24a 7ab5 	movw	sl, #42933	; 0xa7b5
    87a6:	f2c0 0300 	movt	r3, #0
    87aa:	930b      	str	r3, [sp, #44]	; 0x2c
    87ac:	f2c4 21c8 	movt	r1, #17096	; 0x42c8
    87b0:	4640      	mov	r0, r8
    87b2:	4798      	blx	r3
    87b4:	f2c0 0a00 	movt	sl, #0
    87b8:	47d0      	blx	sl
    87ba:	2300      	movs	r3, #0
    87bc:	930c      	str	r3, [sp, #48]	; 0x30
    87be:	f242 2374 	movw	r3, #8820	; 0x2274
    87c2:	f64a 31d9 	movw	r1, #43993	; 0xabd9
    87c6:	f2c2 0300 	movt	r3, #8192	; 0x2000
    87ca:	f248 3b25 	movw	fp, #33573	; 0x8325
    87ce:	469c      	mov	ip, r3
    87d0:	9313      	str	r3, [sp, #76]	; 0x4c
    87d2:	f649 3255 	movw	r2, #39765	; 0x9b55
    87d6:	4653      	mov	r3, sl
    87d8:	4644      	mov	r4, r8
    87da:	f2c0 0100 	movt	r1, #0
    87de:	f2c0 0b00 	movt	fp, #0
    87e2:	9112      	str	r1, [sp, #72]	; 0x48
    87e4:	f24b 01e1 	movw	r1, #45281	; 0xb0e1
    87e8:	f249 190d 	movw	r9, #37133	; 0x910d
    87ec:	f2c0 0200 	movt	r2, #0
    87f0:	f240 6800 	movw	r8, #1536	; 0x600
    87f4:	930d      	str	r3, [sp, #52]	; 0x34
    87f6:	465b      	mov	r3, fp
    87f8:	46a2      	mov	sl, r4
    87fa:	4693      	mov	fp, r2
    87fc:	f2c0 0100 	movt	r1, #0
    8800:	900f      	str	r0, [sp, #60]	; 0x3c
    8802:	f2c0 0900 	movt	r9, #0
    8806:	9111      	str	r1, [sp, #68]	; 0x44
    8808:	44e0      	add	r8, ip
    880a:	930e      	str	r3, [sp, #56]	; 0x38
    880c:	f242 2474 	movw	r4, #8820	; 0x2274
    8810:	4646      	mov	r6, r8
    8812:	2700      	movs	r7, #0
    8814:	f2c2 0400 	movt	r4, #8192	; 0x2000
    8818:	960a      	str	r6, [sp, #40]	; 0x28
			 error += xttrain(tinn, s.input[j], s.target[j], rate);
    881a:	4653      	mov	r3, sl
    881c:	9308      	str	r3, [sp, #32]
    881e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8820:	466a      	mov	r2, sp
    8822:	9307      	str	r3, [sp, #28]
    8824:	002b      	movs	r3, r5
    8826:	9406      	str	r4, [sp, #24]
    8828:	3310      	adds	r3, #16
    882a:	cb43      	ldmia	r3!, {r0, r1, r6}
    882c:	c243      	stmia	r2!, {r0, r1, r6}
    882e:	cb43      	ldmia	r3!, {r0, r1, r6}
    8830:	c243      	stmia	r2!, {r0, r1, r6}
    8832:	68eb      	ldr	r3, [r5, #12]
    8834:	6869      	ldr	r1, [r5, #4]
    8836:	68aa      	ldr	r2, [r5, #8]
    8838:	6828      	ldr	r0, [r5, #0]
    883a:	47c8      	blx	r9
    883c:	1c01      	adds	r1, r0, #0
    883e:	1c38      	adds	r0, r7, #0
    8840:	47d8      	blx	fp
    8842:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8844:	3460      	adds	r4, #96	; 0x60
    8846:	3304      	adds	r3, #4
    8848:	1c07      	adds	r7, r0, #0
    884a:	930a      	str	r3, [sp, #40]	; 0x28
		 for(int j = 0; j < INPUT_SIZE; j++)
    884c:	4544      	cmp	r4, r8
    884e:	d1e4      	bne.n	881a <train+0xc2>
		 char buffer[50] = {0};
    8850:	2232      	movs	r2, #50	; 0x32
    8852:	2100      	movs	r1, #0
    8854:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8856:	a815      	add	r0, sp, #84	; 0x54
    8858:	4798      	blx	r3
		 sprintf(buffer, "error %d :: learning rate %d\n", (int) (100*error / INPUT_SIZE), (int) (rate*100));
    885a:	2100      	movs	r1, #0
    885c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    885e:	f2c4 01c8 	movt	r1, #16584	; 0x40c8
    8862:	1c38      	adds	r0, r7, #0
    8864:	4798      	blx	r3
    8866:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8868:	4798      	blx	r3
    886a:	f24b 6130 	movw	r1, #46640	; 0xb630
    886e:	0002      	movs	r2, r0
    8870:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8872:	f2c0 0100 	movt	r1, #0
    8876:	a815      	add	r0, sp, #84	; 0x54
    8878:	9c11      	ldr	r4, [sp, #68]	; 0x44
    887a:	47a0      	blx	r4
		 uart_puts(buffer);
    887c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    887e:	a815      	add	r0, sp, #84	; 0x54
    8880:	4798      	blx	r3
	 for(int i = 0; i < epochs; i++)
    8882:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8884:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8886:	3301      	adds	r3, #1
    8888:	930c      	str	r3, [sp, #48]	; 0x30
    888a:	429a      	cmp	r2, r3
    888c:	d1be      	bne.n	880c <train+0xb4>
    888e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8890:	469a      	mov	sl, r3
    8892:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8894:	469b      	mov	fp, r3
    8896:	f240 6c00 	movw	ip, #1536	; 0x600
    889a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    889c:	4652      	mov	r2, sl
    889e:	4463      	add	r3, ip
    88a0:	930c      	str	r3, [sp, #48]	; 0x30
    88a2:	4698      	mov	r8, r3
    88a4:	f249 03c9 	movw	r3, #37065	; 0x90c9
    88a8:	f242 2474 	movw	r4, #8820	; 0x2274
    88ac:	f248 364d 	movw	r6, #33613	; 0x834d
    88b0:	465f      	mov	r7, fp
    88b2:	46aa      	mov	sl, r5
    88b4:	f2c0 0300 	movt	r3, #0
    88b8:	f2c2 0400 	movt	r4, #8192	; 0x2000
    88bc:	930d      	str	r3, [sp, #52]	; 0x34
    88be:	f2c0 0600 	movt	r6, #0
    88c2:	920a      	str	r2, [sp, #40]	; 0x28
		 float* pd = xtpredict(tinn, s.input[j]);
    88c4:	4653      	mov	r3, sl
    88c6:	466a      	mov	r2, sp
    88c8:	9406      	str	r4, [sp, #24]
    88ca:	3310      	adds	r3, #16
    88cc:	cb23      	ldmia	r3!, {r0, r1, r5}
    88ce:	c223      	stmia	r2!, {r0, r1, r5}
    88d0:	cb23      	ldmia	r3!, {r0, r1, r5}
    88d2:	c223      	stmia	r2!, {r0, r1, r5}
    88d4:	4653      	mov	r3, sl
    88d6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    88d8:	6859      	ldr	r1, [r3, #4]
    88da:	689a      	ldr	r2, [r3, #8]
    88dc:	6818      	ldr	r0, [r3, #0]
    88de:	68db      	ldr	r3, [r3, #12]
    88e0:	47a8      	blx	r5
    88e2:	4683      	mov	fp, r0
		 uart_puts("Input:\n");
    88e4:	f24b 6050 	movw	r0, #46672	; 0xb650
    88e8:	f240 0960 	movw	r9, #96	; 0x60
    88ec:	f2c0 0000 	movt	r0, #0
    88f0:	47b8      	blx	r7
    88f2:	003b      	movs	r3, r7
    88f4:	44a1      	add	r9, r4
    88f6:	464d      	mov	r5, r9
    88f8:	4699      	mov	r9, r3
    88fa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
			 uart_puti((int) s.input[j][i]);
    88fc:	cc01      	ldmia	r4!, {r0}
    88fe:	47b8      	blx	r7
    8900:	47b0      	blx	r6
			 uart_puts(" ");
    8902:	f24b 7078 	movw	r0, #46968	; 0xb778
    8906:	f2c0 0000 	movt	r0, #0
    890a:	47c8      	blx	r9
		 for(i=0; i<FEATURE_SIZE; i++) {
    890c:	42ac      	cmp	r4, r5
    890e:	d1f5      	bne.n	88fc <train+0x1a4>
		 uart_puts("\nPD:");
    8910:	f24b 6058 	movw	r0, #46680	; 0xb658
    8914:	f2c0 0000 	movt	r0, #0
    8918:	970a      	str	r7, [sp, #40]	; 0x28
    891a:	47c8      	blx	r9
			 uart_puti((int) (pd[0]*100));
    891c:	465b      	mov	r3, fp
    891e:	2100      	movs	r1, #0
    8920:	6818      	ldr	r0, [r3, #0]
    8922:	f2c4 21c8 	movt	r1, #17096	; 0x42c8
    8926:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    8928:	47a8      	blx	r5
    892a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    892c:	4790      	blx	r2
    892e:	47b0      	blx	r6
			 uart_puts(" ");
    8930:	f24b 7078 	movw	r0, #46968	; 0xb778
    8934:	f2c0 0000 	movt	r0, #0
    8938:	47c8      	blx	r9
		 uart_puts("\nGT:");
    893a:	f24b 6060 	movw	r0, #46688	; 0xb660
    893e:	f2c0 0000 	movt	r0, #0
    8942:	47c8      	blx	r9
			 uart_puti(tg[i]*100);
    8944:	4642      	mov	r2, r8
    8946:	2100      	movs	r1, #0
    8948:	ca01      	ldmia	r2!, {r0}
    894a:	f2c4 21c8 	movt	r1, #17096	; 0x42c8
    894e:	4690      	mov	r8, r2
    8950:	47a8      	blx	r5
    8952:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8954:	4798      	blx	r3
    8956:	47b0      	blx	r6
			 uart_puts(" ");
    8958:	f24b 7078 	movw	r0, #46968	; 0xb778
    895c:	f2c0 0000 	movt	r0, #0
    8960:	47c8      	blx	r9
		 uart_puts("\n");
    8962:	f24b 70d8 	movw	r0, #47064	; 0xb7d8
    8966:	f2c0 0000 	movt	r0, #0
    896a:	47c8      	blx	r9
	 for(int j = 0; j<INPUT_SIZE; j++) {
    896c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    896e:	464f      	mov	r7, r9
    8970:	429c      	cmp	r4, r3
    8972:	d1a7      	bne.n	88c4 <train+0x16c>
	 uart_puts("\n");
    8974:	f24b 70d8 	movw	r0, #47064	; 0xb7d8
    8978:	f2c0 0000 	movt	r0, #0
    897c:	47c8      	blx	r9
}
    897e:	b023      	add	sp, #140	; 0x8c
    8980:	bc3c      	pop	{r2, r3, r4, r5}
    8982:	4690      	mov	r8, r2
    8984:	4699      	mov	r9, r3
    8986:	46a2      	mov	sl, r4
    8988:	46ab      	mov	fp, r5
    898a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    898c:	f242 2374 	movw	r3, #8820	; 0x2274
    8990:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8994:	9313      	str	r3, [sp, #76]	; 0x4c
    8996:	f24a 233d 	movw	r3, #41533	; 0xa23d
    899a:	f24a 7ab5 	movw	sl, #42933	; 0xa7b5
    899e:	f248 3b25 	movw	fp, #33573	; 0x8325
    89a2:	f2c0 0300 	movt	r3, #0
    89a6:	930b      	str	r3, [sp, #44]	; 0x2c
    89a8:	f2c0 0a00 	movt	sl, #0
    89ac:	f2c0 0b00 	movt	fp, #0
    89b0:	e771      	b.n	8896 <train+0x13e>
    89b2:	46c0      	nop			; (mov r8, r8)

000089b4 <wrapper_train>:
void wrapper_train() {
    89b4:	b570      	push	{r4, r5, r6, lr}
	secure_checkState(&s, sizeof(State));
    89b6:	f242 2574 	movw	r5, #8820	; 0x2274
    89ba:	f647 4309 	movw	r3, #31753	; 0x7c09
    89be:	f2c2 0500 	movt	r5, #8192	; 0x2000
    89c2:	0028      	movs	r0, r5
    89c4:	f240 6144 	movw	r1, #1604	; 0x644
    89c8:	f2c0 0300 	movt	r3, #0
	float lr = *(float*)(pox_input);
    89cc:	f242 2408 	movw	r4, #8712	; 0x2208
	secure_checkState(&s, sizeof(State));
    89d0:	4798      	blx	r3
	int numEpochs = (int) (*(float*)(pox_input+4));
    89d2:	f24a 73b5 	movw	r3, #42933	; 0xa7b5
	float lr = *(float*)(pox_input);
    89d6:	f2c2 0400 	movt	r4, #8192	; 0x2000
	int numEpochs = (int) (*(float*)(pox_input+4));
    89da:	6860      	ldr	r0, [r4, #4]
    89dc:	f2c0 0300 	movt	r3, #0
    89e0:	4798      	blx	r3
	train(init_val, numEpochs, lr);
    89e2:	f248 7359 	movw	r3, #34649	; 0x8759
    89e6:	6826      	ldr	r6, [r4, #0]
	int numEpochs = (int) (*(float*)(pox_input+4));
    89e8:	0001      	movs	r1, r0
	train(init_val, numEpochs, lr);
    89ea:	1c32      	adds	r2, r6, #0
    89ec:	68a0      	ldr	r0, [r4, #8]
    89ee:	f2c0 0300 	movt	r3, #0
    89f2:	4798      	blx	r3
	secure_setState(&s, sizeof(State));
    89f4:	f647 4311 	movw	r3, #31761	; 0x7c11
    89f8:	0028      	movs	r0, r5
    89fa:	f240 6144 	movw	r1, #1604	; 0x644
    89fe:	f2c0 0300 	movt	r3, #0
    8a02:	4798      	blx	r3
}
    8a04:	bd70      	pop	{r4, r5, r6, pc}
    8a06:	46c0      	nop			; (mov r8, r8)

00008a08 <single>:
	uart_puts("printing init state\n");
	print_token(hash.hash, SHA256_DIGEST_SIZE);
	uart_puts("done init state\n");
}

void single() {
    8a08:	b5f0      	push	{r4, r5, r6, r7, lr}
    8a0a:	46de      	mov	lr, fp
    8a0c:	4657      	mov	r7, sl
    8a0e:	464e      	mov	r6, r9
    8a10:	4645      	mov	r5, r8
	for(volatile int i=0; i<10000; i++);
    8a12:	2300      	movs	r3, #0
void single() {
    8a14:	b5e0      	push	{r5, r6, r7, lr}
    8a16:	b0a7      	sub	sp, #156	; 0x9c
	for(volatile int i=0; i<10000; i++);
    8a18:	9304      	str	r3, [sp, #16]
    8a1a:	f242 730f 	movw	r3, #9999	; 0x270f
    8a1e:	9904      	ldr	r1, [sp, #16]
    8a20:	f242 720f 	movw	r2, #9999	; 0x270f
    8a24:	4299      	cmp	r1, r3
    8a26:	dc05      	bgt.n	8a34 <single+0x2c>
    8a28:	9b04      	ldr	r3, [sp, #16]
    8a2a:	3301      	adds	r3, #1
    8a2c:	9304      	str	r3, [sp, #16]
    8a2e:	9b04      	ldr	r3, [sp, #16]
    8a30:	4293      	cmp	r3, r2
    8a32:	ddf9      	ble.n	8a28 <single+0x20>
	uint8_t req[100]={};
    8a34:	f64a 33d9 	movw	r3, #43993	; 0xabd9
    8a38:	ad0d      	add	r5, sp, #52	; 0x34
    8a3a:	2264      	movs	r2, #100	; 0x64
    8a3c:	2100      	movs	r1, #0
    8a3e:	f2c0 0300 	movt	r3, #0
    8a42:	0028      	movs	r0, r5
    8a44:	4798      	blx	r3
	uart_get_bytes(req, REQUEST_SIZE);
	
	pox_call_t pc;
	pc.input = pox_input;
    8a46:	f242 2808 	movw	r8, #8712	; 0x2208
	uart_get_bytes(req, REQUEST_SIZE);
    8a4a:	f248 43e1 	movw	r3, #34017	; 0x84e1
    8a4e:	2139      	movs	r1, #57	; 0x39
    8a50:	0028      	movs	r0, r5
    8a52:	f2c0 0300 	movt	r3, #0
	pc.input = pox_input;
    8a56:	f2c2 0800 	movt	r8, #8192	; 0x2000
	uart_get_bytes(req, REQUEST_SIZE);
    8a5a:	4798      	blx	r3
	pc.input = pox_input;
    8a5c:	4643      	mov	r3, r8
    8a5e:	ae05      	add	r6, sp, #20
    8a60:	6073      	str	r3, [r6, #4]
	pc.output = pox_output;
	pc.command_size = 5; // assume to be fixed
	pc.command = req; // either [stp] or [clt]
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a62:	f24b 6194 	movw	r1, #46740	; 0xb694
	pc.output = pox_output;
    8a66:	330c      	adds	r3, #12
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a68:	f64a 34a9 	movw	r4, #43945	; 0xaba9
	pc.output = pox_output;
    8a6c:	60f3      	str	r3, [r6, #12]
	pc.command_size = 5; // assume to be fixed
    8a6e:	2305      	movs	r3, #5
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a70:	2205      	movs	r2, #5
    8a72:	f2c0 0100 	movt	r1, #0
    8a76:	0028      	movs	r0, r5
    8a78:	f2c0 0400 	movt	r4, #0
	pc.command_size = 5; // assume to be fixed
    8a7c:	7733      	strb	r3, [r6, #28]
	pc.command = req; // either [stp] or [clt]
    8a7e:	61b5      	str	r5, [r6, #24]
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a80:	47a0      	blx	r4
    8a82:	b148      	cbz	r0, 8a98 <single+0x90>
	memcmp(pc.command, "[clt]", pc.command_size) == 0) {
    8a84:	f24b 619c 	movw	r1, #46748	; 0xb69c
    8a88:	2205      	movs	r2, #5
    8a8a:	f2c0 0100 	movt	r1, #0
    8a8e:	0028      	movs	r0, r5
    8a90:	47a0      	blx	r4
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a92:	2800      	cmp	r0, #0
    8a94:	d000      	beq.n	8a98 <single+0x90>
    8a96:	e08f      	b.n	8bb8 <single+0x1b0>
		uart_puts("[Test] Setup/collect: ");
    8a98:	f24b 60a4 	movw	r0, #46756	; 0xb6a4
    8a9c:	f248 3425 	movw	r4, #33573	; 0x8325
    8aa0:	f2c0 0000 	movt	r0, #0
    8aa4:	f2c0 0400 	movt	r4, #0
    8aa8:	47a0      	blx	r4
		uint32_t counter = *((uint32_t*)(req+5));
    8aaa:	ab04      	add	r3, sp, #16
    8aac:	469c      	mov	ip, r3
    8aae:	2229      	movs	r2, #41	; 0x29
    8ab0:	4462      	add	r2, ip
    8ab2:	7853      	ldrb	r3, [r2, #1]
    8ab4:	7811      	ldrb	r1, [r2, #0]
    8ab6:	021b      	lsls	r3, r3, #8
    8ab8:	4319      	orrs	r1, r3
    8aba:	7893      	ldrb	r3, [r2, #2]
    8abc:	78d2      	ldrb	r2, [r2, #3]
    8abe:	041b      	lsls	r3, r3, #16
    8ac0:	430b      	orrs	r3, r1
    8ac2:	0612      	lsls	r2, r2, #24
    8ac4:	431a      	orrs	r2, r3
    8ac6:	4691      	mov	r9, r2
		uint32_t func = *((uint32_t*)(req+5+4));
    8ac8:	222d      	movs	r2, #45	; 0x2d
		uart_puts("returning ");
    8aca:	f24b 60bc 	movw	r0, #46780	; 0xb6bc
		uint32_t func = *((uint32_t*)(req+5+4));
    8ace:	4462      	add	r2, ip
    8ad0:	7853      	ldrb	r3, [r2, #1]
    8ad2:	7817      	ldrb	r7, [r2, #0]
    8ad4:	021b      	lsls	r3, r3, #8
    8ad6:	433b      	orrs	r3, r7
    8ad8:	7897      	ldrb	r7, [r2, #2]
		uart_puts("returning ");
    8ada:	f2c0 0000 	movt	r0, #0
		uint32_t func = *((uint32_t*)(req+5+4));
    8ade:	043f      	lsls	r7, r7, #16
    8ae0:	433b      	orrs	r3, r7
    8ae2:	78d7      	ldrb	r7, [r2, #3]
		uart_put_bytes(req, REQUEST_SIZE);
		uart_puts(", counter=");
		uart_puti(counter);
    8ae4:	f248 3a4d 	movw	sl, #33613	; 0x834d
		uint32_t func = *((uint32_t*)(req+5+4));
    8ae8:	063f      	lsls	r7, r7, #24
    8aea:	431f      	orrs	r7, r3
		uart_puts("returning ");
    8aec:	47a0      	blx	r4
		uart_put_bytes(req, REQUEST_SIZE);
    8aee:	0028      	movs	r0, r5
    8af0:	f248 5529 	movw	r5, #34089	; 0x8529
    8af4:	2139      	movs	r1, #57	; 0x39
    8af6:	f2c0 0500 	movt	r5, #0
    8afa:	47a8      	blx	r5
		uart_puts(", counter=");
    8afc:	f24b 60c8 	movw	r0, #46792	; 0xb6c8
    8b00:	f2c0 0000 	movt	r0, #0
    8b04:	47a0      	blx	r4
		uart_puti(counter);
    8b06:	f2c0 0a00 	movt	sl, #0
    8b0a:	4648      	mov	r0, r9
    8b0c:	47d0      	blx	sl
		uart_puts(", func=");
    8b0e:	f24b 60d4 	movw	r0, #46804	; 0xb6d4
    8b12:	f2c0 0000 	movt	r0, #0
    8b16:	47a0      	blx	r4
		uart_puti(func);
    8b18:	0038      	movs	r0, r7
    8b1a:	47d0      	blx	sl
		uart_puts(" = done  [/Test] \n");
    8b1c:	f24b 60dc 	movw	r0, #46812	; 0xb6dc
    8b20:	f2c0 0000 	movt	r0, #0
    8b24:	47a0      	blx	r4
		
		uint8_t *token = (uint8_t*) (req+PLAINTEXT_SIZE);
		
		pc.counter = counter;
    8b26:	464b      	mov	r3, r9
    8b28:	6173      	str	r3, [r6, #20]
		pc.addr = func;
		pc.input_size = 12;
    8b2a:	230c      	movs	r3, #12
    8b2c:	60b3      	str	r3, [r6, #8]
		pc.output_size = 32;
    8b2e:	3314      	adds	r3, #20
    8b30:	6133      	str	r3, [r6, #16]
		// pox_input = b'\x00'*12
		memcpy(pox_input, req+5+4*2, 12);
    8b32:	ab04      	add	r3, sp, #16
    8b34:	469c      	mov	ip, r3
    8b36:	2131      	movs	r1, #49	; 0x31
    8b38:	f242 2008 	movw	r0, #8712	; 0x2208
    8b3c:	f64a 33c7 	movw	r3, #43975	; 0xabc7
    8b40:	4461      	add	r1, ip
    8b42:	220c      	movs	r2, #12
    8b44:	f2c0 0300 	movt	r3, #0
    8b48:	f2c2 0000 	movt	r0, #8192	; 0x2000
		pc.addr = func;
    8b4c:	9705      	str	r7, [sp, #20]
		memcpy(pox_input, req+5+4*2, 12);
    8b4e:	4798      	blx	r3
		
		secure_pox(&pc, token);
    8b50:	ab04      	add	r3, sp, #16
    8b52:	469c      	mov	ip, r3
    8b54:	273d      	movs	r7, #61	; 0x3d
    8b56:	f647 4301 	movw	r3, #31745	; 0x7c01
    8b5a:	4467      	add	r7, ip
    8b5c:	0039      	movs	r1, r7
    8b5e:	0030      	movs	r0, r6
    8b60:	f2c0 0300 	movt	r3, #0
    8b64:	4798      	blx	r3
    8b66:	003b      	movs	r3, r7
    8b68:	260a      	movs	r6, #10
    8b6a:	4647      	mov	r7, r8
    8b6c:	4698      	mov	r8, r3
		
		// fault tolerance
		for(int i=0; i<10; i++) {
			uart_puts("[OS]");
    8b6e:	f24b 60f0 	movw	r0, #46832	; 0xb6f0
    8b72:	f2c0 0000 	movt	r0, #0
    8b76:	47a0      	blx	r4
			uart_put_bytes(pox_output, 32);
    8b78:	0038      	movs	r0, r7
    8b7a:	2120      	movs	r1, #32
    8b7c:	300c      	adds	r0, #12
    8b7e:	47a8      	blx	r5
			uart_puts(" ");
    8b80:	f24b 7078 	movw	r0, #46968	; 0xb778
    8b84:	f2c0 0000 	movt	r0, #0
    8b88:	47a0      	blx	r4
			uart_put_bytes(token, 32);
    8b8a:	2120      	movs	r1, #32
    8b8c:	4640      	mov	r0, r8
    8b8e:	47a8      	blx	r5
			uart_puts("[OE]\n");
    8b90:	f24b 60f8 	movw	r0, #46840	; 0xb6f8
    8b94:	3e01      	subs	r6, #1
    8b96:	f2c0 0000 	movt	r0, #0
    8b9a:	47a0      	blx	r4
		for(int i=0; i<10; i++) {
    8b9c:	2e00      	cmp	r6, #0
    8b9e:	d1e6      	bne.n	8b6e <single+0x166>
		}
		uart_puts("[Over]\n");
    8ba0:	f24b 7000 	movw	r0, #46848	; 0xb700
    8ba4:	f2c0 0000 	movt	r0, #0
    8ba8:	47a0      	blx	r4
		uart_puts("failed to parse command: ");
		uart_puts(req);
		uart_puts("\n");
	}
	
}
    8baa:	b027      	add	sp, #156	; 0x9c
    8bac:	bc3c      	pop	{r2, r3, r4, r5}
    8bae:	4690      	mov	r8, r2
    8bb0:	4699      	mov	r9, r3
    8bb2:	46a2      	mov	sl, r4
    8bb4:	46ab      	mov	fp, r5
    8bb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
	} else if(memcmp(pc.command, "[trn]", pc.command_size) == 0) {
    8bb8:	f24b 7108 	movw	r1, #46856	; 0xb708
    8bbc:	2205      	movs	r2, #5
    8bbe:	f2c0 0100 	movt	r1, #0
    8bc2:	0028      	movs	r0, r5
    8bc4:	47a0      	blx	r4
    8bc6:	2800      	cmp	r0, #0
    8bc8:	d000      	beq.n	8bcc <single+0x1c4>
    8bca:	e0e1      	b.n	8d90 <single+0x388>
		uart_puts("[Test] Training: ");
    8bcc:	f24b 7010 	movw	r0, #46864	; 0xb710
    8bd0:	f248 3425 	movw	r4, #33573	; 0x8325
    8bd4:	f2c0 0000 	movt	r0, #0
    8bd8:	f2c0 0400 	movt	r4, #0
    8bdc:	47a0      	blx	r4
		uint32_t counter = *((uint32_t*)(req+5));
    8bde:	ab04      	add	r3, sp, #16
    8be0:	469c      	mov	ip, r3
    8be2:	2229      	movs	r2, #41	; 0x29
    8be4:	4462      	add	r2, ip
    8be6:	7853      	ldrb	r3, [r2, #1]
    8be8:	7811      	ldrb	r1, [r2, #0]
    8bea:	021b      	lsls	r3, r3, #8
    8bec:	4319      	orrs	r1, r3
    8bee:	7893      	ldrb	r3, [r2, #2]
    8bf0:	78d2      	ldrb	r2, [r2, #3]
    8bf2:	041b      	lsls	r3, r3, #16
    8bf4:	430b      	orrs	r3, r1
    8bf6:	0612      	lsls	r2, r2, #24
    8bf8:	431a      	orrs	r2, r3
    8bfa:	4692      	mov	sl, r2
		uint32_t func = *((uint32_t*)(req+5+4));
    8bfc:	222d      	movs	r2, #45	; 0x2d
    8bfe:	4462      	add	r2, ip
    8c00:	7853      	ldrb	r3, [r2, #1]
    8c02:	7811      	ldrb	r1, [r2, #0]
    8c04:	021b      	lsls	r3, r3, #8
    8c06:	4319      	orrs	r1, r3
    8c08:	7893      	ldrb	r3, [r2, #2]
    8c0a:	78d2      	ldrb	r2, [r2, #3]
    8c0c:	041b      	lsls	r3, r3, #16
    8c0e:	430b      	orrs	r3, r1
    8c10:	0612      	lsls	r2, r2, #24
    8c12:	431a      	orrs	r2, r3
		pc.counter = counter;
    8c14:	4653      	mov	r3, sl
    8c16:	6173      	str	r3, [r6, #20]
		pc.input_size = 12;
    8c18:	230c      	movs	r3, #12
    8c1a:	60b3      	str	r3, [r6, #8]
		pc.output = tinn.w;
    8c1c:	f242 234c 	movw	r3, #8780	; 0x224c
		float lr = *((float*)(req+5+4*2));
    8c20:	2731      	movs	r7, #49	; 0x31
		pc.output = tinn.w;
    8c22:	f2c2 0300 	movt	r3, #8192	; 0x2000
		uint32_t func = *((uint32_t*)(req+5+4));
    8c26:	4691      	mov	r9, r2
		pc.addr = func;
    8c28:	6032      	str	r2, [r6, #0]
		pc.output = tinn.w;
    8c2a:	681a      	ldr	r2, [r3, #0]
		pc.output_size = tinn.nw*sizeof(float);
    8c2c:	699b      	ldr	r3, [r3, #24]
		float lr = *((float*)(req+5+4*2));
    8c2e:	4467      	add	r7, ip
		pc.output_size = tinn.nw*sizeof(float);
    8c30:	009b      	lsls	r3, r3, #2
    8c32:	6133      	str	r3, [r6, #16]
		float lr = *((float*)(req+5+4*2));
    8c34:	787b      	ldrb	r3, [r7, #1]
		pc.output = tinn.w;
    8c36:	60f2      	str	r2, [r6, #12]
		float lr = *((float*)(req+5+4*2));
    8c38:	783a      	ldrb	r2, [r7, #0]
    8c3a:	021b      	lsls	r3, r3, #8
    8c3c:	431a      	orrs	r2, r3
    8c3e:	78bb      	ldrb	r3, [r7, #2]
		int numEpochs = *((float*)(req+5+4*3));
    8c40:	f24a 7bb5 	movw	fp, #42933	; 0xa7b5
		float lr = *((float*)(req+5+4*2));
    8c44:	041b      	lsls	r3, r3, #16
    8c46:	4313      	orrs	r3, r2
    8c48:	78fa      	ldrb	r2, [r7, #3]
		int numEpochs = *((float*)(req+5+4*3));
    8c4a:	f2c0 0b00 	movt	fp, #0
		float lr = *((float*)(req+5+4*2));
    8c4e:	0612      	lsls	r2, r2, #24
    8c50:	431a      	orrs	r2, r3
    8c52:	9201      	str	r2, [sp, #4]
		int numEpochs = *((float*)(req+5+4*3));
    8c54:	2235      	movs	r2, #53	; 0x35
    8c56:	4462      	add	r2, ip
    8c58:	7853      	ldrb	r3, [r2, #1]
    8c5a:	7810      	ldrb	r0, [r2, #0]
    8c5c:	021b      	lsls	r3, r3, #8
    8c5e:	4303      	orrs	r3, r0
    8c60:	7890      	ldrb	r0, [r2, #2]
    8c62:	0400      	lsls	r0, r0, #16
    8c64:	4303      	orrs	r3, r0
    8c66:	78d0      	ldrb	r0, [r2, #3]
    8c68:	0600      	lsls	r0, r0, #24
    8c6a:	4318      	orrs	r0, r3
    8c6c:	47d8      	blx	fp
		float init_val = *((float*)(req+5+4*4));
    8c6e:	ab04      	add	r3, sp, #16
    8c70:	469c      	mov	ip, r3
    8c72:	2239      	movs	r2, #57	; 0x39
		int numEpochs = *((float*)(req+5+4*3));
    8c74:	9003      	str	r0, [sp, #12]
		uart_puts("Returning ");
    8c76:	f24b 7024 	movw	r0, #46884	; 0xb724
		float init_val = *((float*)(req+5+4*4));
    8c7a:	4462      	add	r2, ip
    8c7c:	7853      	ldrb	r3, [r2, #1]
    8c7e:	7811      	ldrb	r1, [r2, #0]
    8c80:	021b      	lsls	r3, r3, #8
    8c82:	4319      	orrs	r1, r3
    8c84:	7893      	ldrb	r3, [r2, #2]
    8c86:	78d2      	ldrb	r2, [r2, #3]
    8c88:	041b      	lsls	r3, r3, #16
    8c8a:	430b      	orrs	r3, r1
    8c8c:	0612      	lsls	r2, r2, #24
    8c8e:	431a      	orrs	r2, r3
		uart_puts("Returning ");
    8c90:	f2c0 0000 	movt	r0, #0
		float init_val = *((float*)(req+5+4*4));
    8c94:	9202      	str	r2, [sp, #8]
		uart_puts("Returning ");
    8c96:	47a0      	blx	r4
		uart_put_bytes(req, REQUEST_SIZE);
    8c98:	0028      	movs	r0, r5
    8c9a:	f248 5529 	movw	r5, #34089	; 0x8529
    8c9e:	2139      	movs	r1, #57	; 0x39
    8ca0:	f2c0 0500 	movt	r5, #0
    8ca4:	47a8      	blx	r5
		uart_puts(", counter=");
    8ca6:	f24b 60c8 	movw	r0, #46792	; 0xb6c8
    8caa:	f2c0 0000 	movt	r0, #0
    8cae:	47a0      	blx	r4
		uart_puti(counter);
    8cb0:	4650      	mov	r0, sl
    8cb2:	f248 3a4d 	movw	sl, #33613	; 0x834d
    8cb6:	f2c0 0a00 	movt	sl, #0
    8cba:	47d0      	blx	sl
		uart_puts(", func=");
    8cbc:	f24b 60d4 	movw	r0, #46804	; 0xb6d4
    8cc0:	f2c0 0000 	movt	r0, #0
    8cc4:	47a0      	blx	r4
		uart_puti(func);
    8cc6:	4648      	mov	r0, r9
    8cc8:	47d0      	blx	sl
		uart_puts(", lr=");
    8cca:	f24b 7030 	movw	r0, #46896	; 0xb730
    8cce:	f2c0 0000 	movt	r0, #0
    8cd2:	47a0      	blx	r4
		uart_puti((int) (lr*10000));
    8cd4:	f24a 293d 	movw	r9, #41533	; 0xa23d
    8cd8:	f244 0100 	movw	r1, #16384	; 0x4000
    8cdc:	f2c0 0900 	movt	r9, #0
    8ce0:	f2c4 611c 	movt	r1, #17948	; 0x461c
    8ce4:	9801      	ldr	r0, [sp, #4]
    8ce6:	47c8      	blx	r9
    8ce8:	47d8      	blx	fp
    8cea:	47d0      	blx	sl
		uart_puts(", epoch=");
    8cec:	f24b 7038 	movw	r0, #46904	; 0xb738
    8cf0:	f2c0 0000 	movt	r0, #0
    8cf4:	47a0      	blx	r4
		uart_puti(numEpochs);
    8cf6:	9803      	ldr	r0, [sp, #12]
    8cf8:	47d0      	blx	sl
		uart_puts(", init_val=");
    8cfa:	f24b 7044 	movw	r0, #46916	; 0xb744
    8cfe:	f2c0 0000 	movt	r0, #0
    8d02:	47a0      	blx	r4
		uart_puti((int) (init_val*10000));
    8d04:	f244 0100 	movw	r1, #16384	; 0x4000
    8d08:	9802      	ldr	r0, [sp, #8]
    8d0a:	f2c4 611c 	movt	r1, #17948	; 0x461c
    8d0e:	47c8      	blx	r9
    8d10:	47d8      	blx	fp
    8d12:	47d0      	blx	sl
		uart_puts(", output size=");
    8d14:	f24b 7050 	movw	r0, #46928	; 0xb750
    8d18:	f2c0 0000 	movt	r0, #0
    8d1c:	47a0      	blx	r4
		uart_puti(pc.output_size);
    8d1e:	6930      	ldr	r0, [r6, #16]
    8d20:	47d0      	blx	sl
		uart_puts(" = done  [/Test] \n");
    8d22:	f24b 60dc 	movw	r0, #46812	; 0xb6dc
    8d26:	f2c0 0000 	movt	r0, #0
    8d2a:	47a0      	blx	r4
		memcpy(pox_input, req+5+4*2, 12);
    8d2c:	f64a 33c7 	movw	r3, #43975	; 0xabc7
    8d30:	0039      	movs	r1, r7
    8d32:	220c      	movs	r2, #12
    8d34:	4640      	mov	r0, r8
    8d36:	f2c0 0300 	movt	r3, #0
    8d3a:	4798      	blx	r3
		secure_pox(&pc, token);
    8d3c:	ab04      	add	r3, sp, #16
    8d3e:	469c      	mov	ip, r3
    8d40:	273d      	movs	r7, #61	; 0x3d
    8d42:	f647 4301 	movw	r3, #31745	; 0x7c01
    8d46:	4467      	add	r7, ip
    8d48:	0039      	movs	r1, r7
    8d4a:	f2c0 0300 	movt	r3, #0
    8d4e:	0030      	movs	r0, r6
    8d50:	f240 080a 	movw	r8, #10
    8d54:	4798      	blx	r3
    8d56:	003b      	movs	r3, r7
    8d58:	002f      	movs	r7, r5
    8d5a:	4645      	mov	r5, r8
    8d5c:	4698      	mov	r8, r3
			uart_puts("[OS]");
    8d5e:	f24b 60f0 	movw	r0, #46832	; 0xb6f0
    8d62:	f2c0 0000 	movt	r0, #0
    8d66:	47a0      	blx	r4
			uart_put_bytes(pc.output, pc.output_size);
    8d68:	6931      	ldr	r1, [r6, #16]
    8d6a:	68f0      	ldr	r0, [r6, #12]
    8d6c:	47b8      	blx	r7
			uart_puts(" ");
    8d6e:	f24b 7078 	movw	r0, #46968	; 0xb778
    8d72:	f2c0 0000 	movt	r0, #0
    8d76:	47a0      	blx	r4
			uart_put_bytes(token, 32);
    8d78:	2120      	movs	r1, #32
    8d7a:	4640      	mov	r0, r8
    8d7c:	47b8      	blx	r7
			uart_puts("[OE]\n");
    8d7e:	f24b 60f8 	movw	r0, #46840	; 0xb6f8
    8d82:	3d01      	subs	r5, #1
    8d84:	f2c0 0000 	movt	r0, #0
    8d88:	47a0      	blx	r4
		for(int i=0; i<10; i++) {
    8d8a:	2d00      	cmp	r5, #0
    8d8c:	d1e7      	bne.n	8d5e <single+0x356>
    8d8e:	e707      	b.n	8ba0 <single+0x198>
		uart_puts("failed to parse command: ");
    8d90:	f24b 7060 	movw	r0, #46944	; 0xb760
    8d94:	f248 3425 	movw	r4, #33573	; 0x8325
    8d98:	f2c0 0000 	movt	r0, #0
    8d9c:	f2c0 0400 	movt	r4, #0
    8da0:	47a0      	blx	r4
		uart_puts(req);
    8da2:	0028      	movs	r0, r5
    8da4:	47a0      	blx	r4
		uart_puts("\n");
    8da6:	f24b 70d8 	movw	r0, #47064	; 0xb7d8
    8daa:	f2c0 0000 	movt	r0, #0
    8dae:	47a0      	blx	r4
}
    8db0:	e6fb      	b.n	8baa <single+0x1a2>
    8db2:	46c0      	nop			; (mov r8, r8)

00008db4 <main>:
{
	
	//__disable_irq();
	//timer_init(PERIOD_1S);
	
	uart_init(115200);
    8db4:	20e1      	movs	r0, #225	; 0xe1
    8db6:	f248 2321 	movw	r3, #33313	; 0x8221
{
    8dba:	b5f0      	push	{r4, r5, r6, r7, lr}
	uart_init(115200);
    8dbc:	f2c0 0300 	movt	r3, #0
{
    8dc0:	b08b      	sub	sp, #44	; 0x2c
	uart_init(115200);
    8dc2:	0240      	lsls	r0, r0, #9
    8dc4:	4798      	blx	r3
	uart_puts(" A lot of hellooooo");
    8dc6:	f248 3525 	movw	r5, #33573	; 0x8325
    8dca:	f24b 707c 	movw	r0, #46972	; 0xb77c
    8dce:	f2c0 0500 	movt	r5, #0
    8dd2:	f2c0 0000 	movt	r0, #0
    8dd6:	47a8      	blx	r5
	uart_puts(" wrapper_init at: ");
    8dd8:	f24b 7090 	movw	r0, #46992	; 0xb790
    8ddc:	f2c0 0000 	movt	r0, #0
    8de0:	47a8      	blx	r5
	uart_puti(&wrapper_init);
    8de2:	f248 344d 	movw	r4, #33613	; 0x834d
    8de6:	f248 5051 	movw	r0, #34129	; 0x8551
    8dea:	f2c0 0400 	movt	r4, #0
    8dee:	f2c0 0000 	movt	r0, #0
    8df2:	47a0      	blx	r4
	uart_puts(" wrapper_collect at: ");
    8df4:	f24b 70a4 	movw	r0, #47012	; 0xb7a4
    8df8:	f2c0 0000 	movt	r0, #0
    8dfc:	47a8      	blx	r5
	uart_puti(&wrapper_collect);
    8dfe:	f248 6051 	movw	r0, #34385	; 0x8651
    8e02:	f2c0 0000 	movt	r0, #0
    8e06:	47a0      	blx	r4
	uart_puts(" wrapper_train at: ");
    8e08:	f24b 70bc 	movw	r0, #47036	; 0xb7bc
    8e0c:	f2c0 0000 	movt	r0, #0
    8e10:	47a8      	blx	r5
	uart_puti(&wrapper_train);
    8e12:	f648 10b5 	movw	r0, #35253	; 0x89b5
    8e16:	f2c0 0000 	movt	r0, #0
    8e1a:	47a0      	blx	r4
	uart_puts("[Start] \n");
    8e1c:	f24b 70d0 	movw	r0, #47056	; 0xb7d0
    8e20:	f2c0 0000 	movt	r0, #0
    8e24:	47a8      	blx	r5
	
	//h();
	
	memset(&s, 0, sizeof(State));
    8e26:	f242 2074 	movw	r0, #8820	; 0x2274
    8e2a:	f64a 33d9 	movw	r3, #43993	; 0xabd9

	
	tinn = xtbuild(FEATURE_SIZE, HIDDEN_SIZE, OUTPUT_SIZE);
    8e2e:	f242 264c 	movw	r6, #8780	; 0x224c
    8e32:	f249 27e5 	movw	r7, #37605	; 0x92e5
	memset(&s, 0, sizeof(State));
    8e36:	f240 6244 	movw	r2, #1604	; 0x644
    8e3a:	2100      	movs	r1, #0
    8e3c:	f2c0 0300 	movt	r3, #0
    8e40:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8e44:	4798      	blx	r3
	tinn = xtbuild(FEATURE_SIZE, HIDDEN_SIZE, OUTPUT_SIZE);
    8e46:	f2c2 0600 	movt	r6, #8192	; 0x2000
    8e4a:	2301      	movs	r3, #1
    8e4c:	2118      	movs	r1, #24
    8e4e:	4668      	mov	r0, sp
    8e50:	2208      	movs	r2, #8
    8e52:	f2c0 0700 	movt	r7, #0
    8e56:	47b8      	blx	r7
    8e58:	466c      	mov	r4, sp
    8e5a:	0032      	movs	r2, r6
    8e5c:	cc0b      	ldmia	r4!, {r0, r1, r3}
    8e5e:	c20b      	stmia	r2!, {r0, r1, r3}
    8e60:	cc0b      	ldmia	r4!, {r0, r1, r3}
    8e62:	c20b      	stmia	r2!, {r0, r1, r3}
    8e64:	cc0b      	ldmia	r4!, {r0, r1, r3}
    8e66:	c20b      	stmia	r2!, {r0, r1, r3}
    8e68:	f648 2609 	movw	r6, #35337	; 0x8a09
    8e6c:	6823      	ldr	r3, [r4, #0]
    8e6e:	f248 44b5 	movw	r4, #33973	; 0x84b5
    8e72:	6013      	str	r3, [r2, #0]
    8e74:	f2c0 0600 	movt	r6, #0
    8e78:	f2c0 0400 	movt	r4, #0
	execute(0.1f, iterations, rate);
	uart_puti(sizeof(State));
	return;*/
	
	for(;;) {
		single();
    8e7c:	47b0      	blx	r6
		char r = uart_getc();
    8e7e:	47a0      	blx	r4
		if(r!=c1) continue;
    8e80:	284f      	cmp	r0, #79	; 0x4f
    8e82:	d1fc      	bne.n	8e7e <main+0xca>
		r = uart_getc();
    8e84:	47a0      	blx	r4
		if(r!=c2) continue;
    8e86:	2841      	cmp	r0, #65	; 0x41
    8e88:	d1f9      	bne.n	8e7e <main+0xca>
		r = uart_getc();
    8e8a:	47a0      	blx	r4
		if(r!=c3) continue;
    8e8c:	284b      	cmp	r0, #75	; 0x4b
    8e8e:	d1f6      	bne.n	8e7e <main+0xca>
		read_until('O', 'A', 'K');
		uart_puts("[Next]\n");
    8e90:	f24b 70dc 	movw	r0, #47068	; 0xb7dc
    8e94:	f2c0 0000 	movt	r0, #0
    8e98:	47a8      	blx	r5
		single();
    8e9a:	e7ef      	b.n	8e7c <main+0xc8>

00008e9c <fprop.isra.1>:
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    }
}

// Performs forward propagation.
static void fprop(Tinn t, const float* const in)
    8e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
    8e9e:	46de      	mov	lr, fp
    8ea0:	4657      	mov	r7, sl
    8ea2:	464e      	mov	r6, r9
    8ea4:	4645      	mov	r5, r8
    8ea6:	b5e0      	push	{r5, r6, r7, lr}
    8ea8:	b087      	sub	sp, #28
    8eaa:	469a      	mov	sl, r3
    8eac:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8eae:	9104      	str	r1, [sp, #16]
    8eb0:	469b      	mov	fp, r3
{
    // Calculate hidden layer neuron values.
    for(int i = 0; i < t.nhid; i++)
    8eb2:	9b12      	ldr	r3, [sp, #72]	; 0x48
static void fprop(Tinn t, const float* const in)
    8eb4:	9202      	str	r2, [sp, #8]
    for(int i = 0; i < t.nhid; i++)
    8eb6:	2b00      	cmp	r3, #0
    8eb8:	dd4d      	ble.n	8f56 <fprop.isra.1+0xba>
    8eba:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8ebc:	f649 3555 	movw	r5, #39765	; 0x9b55
    8ec0:	009b      	lsls	r3, r3, #2
    8ec2:	4698      	mov	r8, r3
    8ec4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8ec6:	f24a 293d 	movw	r9, #41533	; 0xa23d
    8eca:	009b      	lsls	r3, r3, #2
    8ecc:	4453      	add	r3, sl
    8ece:	9303      	str	r3, [sp, #12]
    8ed0:	f249 3361 	movw	r3, #37729	; 0x9361
    8ed4:	f2c0 0300 	movt	r3, #0
    8ed8:	9300      	str	r3, [sp, #0]
    8eda:	f649 636d 	movw	r3, #40557	; 0x9e6d
    8ede:	f2c0 0300 	movt	r3, #0
    8ee2:	9301      	str	r3, [sp, #4]
    8ee4:	4653      	mov	r3, sl
    8ee6:	0007      	movs	r7, r0
    8ee8:	f2c0 0500 	movt	r5, #0
    8eec:	f2c0 0900 	movt	r9, #0
    8ef0:	9305      	str	r3, [sp, #20]
    {
        float sum = 0.0f;
        for(int j = 0; j < t.nips; j++)
    8ef2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8ef4:	2600      	movs	r6, #0
    8ef6:	2b00      	cmp	r3, #0
    8ef8:	dd12      	ble.n	8f20 <fprop.isra.1+0x84>
    8efa:	002b      	movs	r3, r5
    8efc:	2400      	movs	r4, #0
    8efe:	4645      	mov	r5, r8
    8f00:	2600      	movs	r6, #0
    8f02:	4698      	mov	r8, r3
            sum += in[j] * t.w[i * t.nips + j];
    8f04:	465b      	mov	r3, fp
    8f06:	5939      	ldr	r1, [r7, r4]
    8f08:	5918      	ldr	r0, [r3, r4]
    8f0a:	47c8      	blx	r9
    8f0c:	1c01      	adds	r1, r0, #0
    8f0e:	1c30      	adds	r0, r6, #0
    8f10:	47c0      	blx	r8
    8f12:	3404      	adds	r4, #4
    8f14:	1c06      	adds	r6, r0, #0
        for(int j = 0; j < t.nips; j++)
    8f16:	42a5      	cmp	r5, r4
    8f18:	d1f4      	bne.n	8f04 <fprop.isra.1+0x68>
    8f1a:	4643      	mov	r3, r8
    8f1c:	46a8      	mov	r8, r5
    8f1e:	001d      	movs	r5, r3
        t.h[i] = act(sum + t.b[0]);
    8f20:	9b02      	ldr	r3, [sp, #8]
    8f22:	1c30      	adds	r0, r6, #0
    8f24:	6819      	ldr	r1, [r3, #0]
    8f26:	47a8      	blx	r5
    return 1.0f / (1.0f + expf(-a));
    8f28:	2380      	movs	r3, #128	; 0x80
    8f2a:	061b      	lsls	r3, r3, #24
    8f2c:	469c      	mov	ip, r3
    8f2e:	9b00      	ldr	r3, [sp, #0]
    8f30:	4460      	add	r0, ip
    8f32:	4798      	blx	r3
    8f34:	21fe      	movs	r1, #254	; 0xfe
    8f36:	0589      	lsls	r1, r1, #22
    8f38:	47a8      	blx	r5
    8f3a:	1c01      	adds	r1, r0, #0
    8f3c:	20fe      	movs	r0, #254	; 0xfe
    8f3e:	9b01      	ldr	r3, [sp, #4]
    8f40:	0580      	lsls	r0, r0, #22
    8f42:	4798      	blx	r3
        t.h[i] = act(sum + t.b[0]);
    8f44:	4653      	mov	r3, sl
    8f46:	c301      	stmia	r3!, {r0}
    8f48:	469a      	mov	sl, r3
    for(int i = 0; i < t.nhid; i++)
    8f4a:	9b03      	ldr	r3, [sp, #12]
    8f4c:	4447      	add	r7, r8
    8f4e:	4553      	cmp	r3, sl
    8f50:	d1cf      	bne.n	8ef2 <fprop.isra.1+0x56>
    8f52:	9b05      	ldr	r3, [sp, #20]
    8f54:	469a      	mov	sl, r3
    }
    // Calculate output layer neuron values.
    for(int i = 0; i < t.nops; i++)
    8f56:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8f58:	2b00      	cmp	r3, #0
    8f5a:	dd4b      	ble.n	8ff4 <fprop.isra.1+0x158>
    8f5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8f5e:	f649 3555 	movw	r5, #39765	; 0x9b55
    8f62:	469b      	mov	fp, r3
    8f64:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8f66:	f24a 293d 	movw	r9, #41533	; 0xa23d
    8f6a:	009b      	lsls	r3, r3, #2
    8f6c:	4698      	mov	r8, r3
    8f6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8f70:	9f04      	ldr	r7, [sp, #16]
    8f72:	009b      	lsls	r3, r3, #2
    8f74:	445b      	add	r3, fp
    8f76:	9303      	str	r3, [sp, #12]
    8f78:	f249 3361 	movw	r3, #37729	; 0x9361
    8f7c:	f2c0 0300 	movt	r3, #0
    8f80:	9300      	str	r3, [sp, #0]
    8f82:	f649 636d 	movw	r3, #40557	; 0x9e6d
    8f86:	f2c0 0300 	movt	r3, #0
    8f8a:	f2c0 0500 	movt	r5, #0
    8f8e:	9301      	str	r3, [sp, #4]
    8f90:	f2c0 0900 	movt	r9, #0
    {
        float sum = 0.0f;
        for(int j = 0; j < t.nhid; j++)
    8f94:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8f96:	2600      	movs	r6, #0
    8f98:	2b00      	cmp	r3, #0
    8f9a:	dd12      	ble.n	8fc2 <fprop.isra.1+0x126>
    8f9c:	002b      	movs	r3, r5
    8f9e:	2400      	movs	r4, #0
    8fa0:	4645      	mov	r5, r8
    8fa2:	2600      	movs	r6, #0
    8fa4:	4698      	mov	r8, r3
            sum += t.h[j] * t.x[i * t.nhid + j];
    8fa6:	4653      	mov	r3, sl
    8fa8:	5939      	ldr	r1, [r7, r4]
    8faa:	5918      	ldr	r0, [r3, r4]
    8fac:	47c8      	blx	r9
    8fae:	1c01      	adds	r1, r0, #0
    8fb0:	1c30      	adds	r0, r6, #0
    8fb2:	47c0      	blx	r8
    8fb4:	3404      	adds	r4, #4
    8fb6:	1c06      	adds	r6, r0, #0
        for(int j = 0; j < t.nhid; j++)
    8fb8:	42a5      	cmp	r5, r4
    8fba:	d1f4      	bne.n	8fa6 <fprop.isra.1+0x10a>
    8fbc:	4643      	mov	r3, r8
    8fbe:	46a8      	mov	r8, r5
    8fc0:	001d      	movs	r5, r3
        t.o[i] = act(sum + t.b[1]);
    8fc2:	9b02      	ldr	r3, [sp, #8]
    8fc4:	1c30      	adds	r0, r6, #0
    8fc6:	6859      	ldr	r1, [r3, #4]
    8fc8:	47a8      	blx	r5
    return 1.0f / (1.0f + expf(-a));
    8fca:	2380      	movs	r3, #128	; 0x80
    8fcc:	061b      	lsls	r3, r3, #24
    8fce:	469c      	mov	ip, r3
    8fd0:	9b00      	ldr	r3, [sp, #0]
    8fd2:	4460      	add	r0, ip
    8fd4:	4798      	blx	r3
    8fd6:	21fe      	movs	r1, #254	; 0xfe
    8fd8:	0589      	lsls	r1, r1, #22
    8fda:	47a8      	blx	r5
    8fdc:	1c01      	adds	r1, r0, #0
    8fde:	20fe      	movs	r0, #254	; 0xfe
    8fe0:	9b01      	ldr	r3, [sp, #4]
    8fe2:	0580      	lsls	r0, r0, #22
    8fe4:	4798      	blx	r3
        t.o[i] = act(sum + t.b[1]);
    8fe6:	465b      	mov	r3, fp
    8fe8:	c301      	stmia	r3!, {r0}
    8fea:	469b      	mov	fp, r3
    for(int i = 0; i < t.nops; i++)
    8fec:	9b03      	ldr	r3, [sp, #12]
    8fee:	4447      	add	r7, r8
    8ff0:	455b      	cmp	r3, fp
    8ff2:	d1cf      	bne.n	8f94 <fprop.isra.1+0xf8>
    }
}
    8ff4:	b007      	add	sp, #28
    8ff6:	bc3c      	pop	{r2, r3, r4, r5}
    8ff8:	4690      	mov	r8, r2
    8ffa:	4699      	mov	r9, r3
    8ffc:	46a2      	mov	sl, r4
    8ffe:	46ab      	mov	fp, r5
    9000:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9002:	46c0      	nop			; (mov r8, r8)

00009004 <setWeight>:
    for(int i = 0; i < t.nb; i++) t.b[i] = frand() - 0.5f;
}


void setWeight(Tinn t, float init_val)
{
    9004:	b084      	sub	sp, #16
    9006:	b5f0      	push	{r4, r5, r6, r7, lr}
    9008:	46de      	mov	lr, fp
    900a:	464e      	mov	r6, r9
    900c:	4657      	mov	r7, sl
    900e:	4645      	mov	r5, r8
    9010:	b5e0      	push	{r5, r6, r7, lr}
    9012:	b083      	sub	sp, #12
    9014:	930f      	str	r3, [sp, #60]	; 0x3c
    9016:	9b16      	ldr	r3, [sp, #88]	; 0x58
    9018:	900c      	str	r0, [sp, #48]	; 0x30
    901a:	4699      	mov	r9, r3
    901c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    901e:	910d      	str	r1, [sp, #52]	; 0x34
    9020:	9301      	str	r3, [sp, #4]
    9022:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9024:	920e      	str	r2, [sp, #56]	; 0x38
    9026:	469b      	mov	fp, r3
	for(int i = 0; i < t.nw; i++) t.w[i] = frand() - init_val;
    9028:	2b00      	cmp	r3, #0
    902a:	dd1f      	ble.n	906c <setWeight+0x68>
    902c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    902e:	f24b 084d 	movw	r8, #45133	; 0xb04d
    9032:	f24a 77f1 	movw	r7, #42993	; 0xa7f1
    9036:	f24a 263d 	movw	r6, #41533	; 0xa23d
    903a:	f24a 4595 	movw	r5, #42133	; 0xa495
    903e:	469a      	mov	sl, r3
    9040:	2400      	movs	r4, #0
    9042:	f2c0 0800 	movt	r8, #0
    9046:	f2c0 0700 	movt	r7, #0
    904a:	f2c0 0600 	movt	r6, #0
    904e:	f2c0 0500 	movt	r5, #0
    return rand() / (float) RAND_MAX;
    9052:	47c0      	blx	r8
    9054:	47b8      	blx	r7
    9056:	21c0      	movs	r1, #192	; 0xc0
    9058:	0589      	lsls	r1, r1, #22
    905a:	47b0      	blx	r6
	for(int i = 0; i < t.nw; i++) t.w[i] = frand() - init_val;
    905c:	4649      	mov	r1, r9
    905e:	47a8      	blx	r5
    9060:	4653      	mov	r3, sl
    9062:	3401      	adds	r4, #1
    9064:	c301      	stmia	r3!, {r0}
    9066:	469a      	mov	sl, r3
    9068:	455c      	cmp	r4, fp
    906a:	d1f2      	bne.n	9052 <setWeight+0x4e>
	for(int i = 0; i < t.nb; i++) t.b[i] = frand() - init_val;
    906c:	9b01      	ldr	r3, [sp, #4]
    906e:	2b00      	cmp	r3, #0
    9070:	dd20      	ble.n	90b4 <setWeight+0xb0>
    9072:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9074:	f24b 084d 	movw	r8, #45133	; 0xb04d
    9078:	f24a 77f1 	movw	r7, #42993	; 0xa7f1
    907c:	f24a 263d 	movw	r6, #41533	; 0xa23d
    9080:	f24a 4595 	movw	r5, #42133	; 0xa495
    9084:	469a      	mov	sl, r3
    9086:	2400      	movs	r4, #0
    9088:	f2c0 0800 	movt	r8, #0
    908c:	f2c0 0700 	movt	r7, #0
    9090:	f2c0 0600 	movt	r6, #0
    9094:	f2c0 0500 	movt	r5, #0
    return rand() / (float) RAND_MAX;
    9098:	47c0      	blx	r8
    909a:	47b8      	blx	r7
    909c:	21c0      	movs	r1, #192	; 0xc0
    909e:	0589      	lsls	r1, r1, #22
    90a0:	47b0      	blx	r6
	for(int i = 0; i < t.nb; i++) t.b[i] = frand() - init_val;
    90a2:	4649      	mov	r1, r9
    90a4:	47a8      	blx	r5
    90a6:	4653      	mov	r3, sl
    90a8:	c301      	stmia	r3!, {r0}
    90aa:	469a      	mov	sl, r3
    90ac:	9b01      	ldr	r3, [sp, #4]
    90ae:	3401      	adds	r4, #1
    90b0:	429c      	cmp	r4, r3
    90b2:	d1f1      	bne.n	9098 <setWeight+0x94>
}
    90b4:	b003      	add	sp, #12
    90b6:	bc3c      	pop	{r2, r3, r4, r5}
    90b8:	4690      	mov	r8, r2
    90ba:	4699      	mov	r9, r3
    90bc:	46a2      	mov	sl, r4
    90be:	46ab      	mov	fp, r5
    90c0:	bcf0      	pop	{r4, r5, r6, r7}
    90c2:	bc08      	pop	{r3}
    90c4:	b004      	add	sp, #16
    90c6:	4718      	bx	r3

000090c8 <xtpredict>:

// Returns an output prediction given an input.
float* xtpredict(Tinn t, const float* const in)
{
    90c8:	b084      	sub	sp, #16
    90ca:	b530      	push	{r4, r5, lr}
    90cc:	b087      	sub	sp, #28
    90ce:	0004      	movs	r4, r0
    90d0:	900a      	str	r0, [sp, #40]	; 0x28
    90d2:	910b      	str	r1, [sp, #44]	; 0x2c
    90d4:	0008      	movs	r0, r1
    90d6:	0011      	movs	r1, r2
    90d8:	920c      	str	r2, [sp, #48]	; 0x30
    fprop(t, in);
    90da:	000a      	movs	r2, r1
    90dc:	0001      	movs	r1, r0
    90de:	0020      	movs	r0, r4
    90e0:	9c14      	ldr	r4, [sp, #80]	; 0x50
    90e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
    90e4:	9404      	str	r4, [sp, #16]
    90e6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    90e8:	9500      	str	r5, [sp, #0]
    90ea:	9403      	str	r4, [sp, #12]
    90ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
{
    90ee:	930d      	str	r3, [sp, #52]	; 0x34
    fprop(t, in);
    90f0:	9402      	str	r4, [sp, #8]
    90f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
    90f4:	9401      	str	r4, [sp, #4]
    90f6:	f648 649d 	movw	r4, #36509	; 0x8e9d
    90fa:	f2c0 0400 	movt	r4, #0
    90fe:	47a0      	blx	r4
    return t.o;
}
    9100:	0028      	movs	r0, r5
    9102:	b007      	add	sp, #28
    9104:	bc30      	pop	{r4, r5}
    9106:	bc08      	pop	{r3}
    9108:	b004      	add	sp, #16
    910a:	4718      	bx	r3

0000910c <xttrain>:

// Trains a tinn with an input and target output with a learning rate. Returns target to output error.
float xttrain(Tinn t, const float* const in, const float* const tg, float rate)
{
    910c:	b084      	sub	sp, #16
    910e:	b5f0      	push	{r4, r5, r6, r7, lr}
    9110:	46de      	mov	lr, fp
    9112:	4657      	mov	r7, sl
    9114:	464e      	mov	r6, r9
    9116:	4645      	mov	r5, r8
    9118:	b5e0      	push	{r5, r6, r7, lr}
    911a:	b093      	sub	sp, #76	; 0x4c
    911c:	001e      	movs	r6, r3
    911e:	931f      	str	r3, [sp, #124]	; 0x7c
    9120:	9b20      	ldr	r3, [sp, #128]	; 0x80
    9122:	0005      	movs	r5, r0
    9124:	901c      	str	r0, [sp, #112]	; 0x70
    9126:	9308      	str	r3, [sp, #32]
    9128:	0018      	movs	r0, r3
    912a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    912c:	000c      	movs	r4, r1
    912e:	001f      	movs	r7, r3
    9130:	911d      	str	r1, [sp, #116]	; 0x74
    9132:	0011      	movs	r1, r2
    fprop(t, in);
    9134:	9701      	str	r7, [sp, #4]
    9136:	f648 679d 	movw	r7, #36509	; 0x8e9d
{
    913a:	921e      	str	r2, [sp, #120]	; 0x78
    913c:	9a25      	ldr	r2, [sp, #148]	; 0x94
    913e:	9311      	str	r3, [sp, #68]	; 0x44
    9140:	920f      	str	r2, [sp, #60]	; 0x3c
    fprop(t, in);
    9142:	000a      	movs	r2, r1
    9144:	9926      	ldr	r1, [sp, #152]	; 0x98
    9146:	9b24      	ldr	r3, [sp, #144]	; 0x90
    9148:	9104      	str	r1, [sp, #16]
    914a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    914c:	9310      	str	r3, [sp, #64]	; 0x40
    914e:	9103      	str	r1, [sp, #12]
    9150:	9302      	str	r3, [sp, #8]
    9152:	9000      	str	r0, [sp, #0]
    9154:	0033      	movs	r3, r6
    9156:	0021      	movs	r1, r4
    9158:	0028      	movs	r0, r5
    915a:	f2c0 0700 	movt	r7, #0
    915e:	47b8      	blx	r7
    for(int i = 0; i < t.nhid; i++)
    9160:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9162:	2b00      	cmp	r3, #0
    9164:	dc00      	bgt.n	9168 <xttrain+0x5c>
    9166:	e086      	b.n	9276 <xttrain+0x16a>
    9168:	9b11      	ldr	r3, [sp, #68]	; 0x44
    916a:	46b2      	mov	sl, r6
    916c:	009b      	lsls	r3, r3, #2
    916e:	9307      	str	r3, [sp, #28]
    9170:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9172:	940c      	str	r4, [sp, #48]	; 0x30
    9174:	009b      	lsls	r3, r3, #2
    9176:	930a      	str	r3, [sp, #40]	; 0x28
    9178:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    917a:	f24a 4695 	movw	r6, #42133	; 0xa495
    917e:	009b      	lsls	r3, r3, #2
    9180:	9309      	str	r3, [sp, #36]	; 0x24
    9182:	2300      	movs	r3, #0
    9184:	930e      	str	r3, [sp, #56]	; 0x38
    9186:	f649 3355 	movw	r3, #39765	; 0x9b55
    918a:	f24a 243d 	movw	r4, #41533	; 0xa23d
    918e:	f2c0 0300 	movt	r3, #0
    9192:	950d      	str	r5, [sp, #52]	; 0x34
    9194:	f2c0 0600 	movt	r6, #0
    9198:	f2c0 0400 	movt	r4, #0
    919c:	930b      	str	r3, [sp, #44]	; 0x2c
        for(int j = 0; j < t.nops; j++)
    919e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    91a0:	2b00      	cmp	r3, #0
    91a2:	dc00      	bgt.n	91a6 <xttrain+0x9a>
    91a4:	e099      	b.n	92da <xttrain+0x1ce>
    91a6:	2300      	movs	r3, #0
    91a8:	2500      	movs	r5, #0
    91aa:	46d1      	mov	r9, sl
    91ac:	9f0c      	ldr	r7, [sp, #48]	; 0x30
    91ae:	9306      	str	r3, [sp, #24]
            const float a = pderr(t.o[j], tg[j]);
    91b0:	9b08      	ldr	r3, [sp, #32]
    91b2:	595b      	ldr	r3, [r3, r5]
    91b4:	4698      	mov	r8, r3
    return a - b;
    91b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
    91b8:	4640      	mov	r0, r8
    91ba:	5959      	ldr	r1, [r3, r5]
    91bc:	47b0      	blx	r6
    91be:	4683      	mov	fp, r0
    return a * (1.0f - a);
    91c0:	20fe      	movs	r0, #254	; 0xfe
    91c2:	4641      	mov	r1, r8
    91c4:	0580      	lsls	r0, r0, #22
    91c6:	47b0      	blx	r6
    91c8:	4641      	mov	r1, r8
    91ca:	47a0      	blx	r4
    91cc:	4682      	mov	sl, r0
            sum += a * b * t.x[j * t.nhid + i];
    91ce:	683b      	ldr	r3, [r7, #0]
    91d0:	4658      	mov	r0, fp
    91d2:	1c19      	adds	r1, r3, #0
    91d4:	4698      	mov	r8, r3
    91d6:	47a0      	blx	r4
    91d8:	4651      	mov	r1, sl
    91da:	47a0      	blx	r4
    91dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    91de:	1c01      	adds	r1, r0, #0
    91e0:	9806      	ldr	r0, [sp, #24]
    91e2:	4798      	blx	r3
            t.x[j * t.nhid + i] -= rate * a * b * t.h[i];
    91e4:	464b      	mov	r3, r9
            sum += a * b * t.x[j * t.nhid + i];
    91e6:	9006      	str	r0, [sp, #24]
            t.x[j * t.nhid + i] -= rate * a * b * t.h[i];
    91e8:	6819      	ldr	r1, [r3, #0]
    91ea:	9828      	ldr	r0, [sp, #160]	; 0xa0
    91ec:	47a0      	blx	r4
    91ee:	4659      	mov	r1, fp
    91f0:	47a0      	blx	r4
    91f2:	4651      	mov	r1, sl
    91f4:	47a0      	blx	r4
    91f6:	1c01      	adds	r1, r0, #0
    91f8:	4640      	mov	r0, r8
    91fa:	47b0      	blx	r6
    91fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    91fe:	3504      	adds	r5, #4
    9200:	469c      	mov	ip, r3
        for(int j = 0; j < t.nops; j++)
    9202:	9b09      	ldr	r3, [sp, #36]	; 0x24
            t.x[j * t.nhid + i] -= rate * a * b * t.h[i];
    9204:	6038      	str	r0, [r7, #0]
    9206:	4467      	add	r7, ip
        for(int j = 0; j < t.nops; j++)
    9208:	42ab      	cmp	r3, r5
    920a:	d1d1      	bne.n	91b0 <xttrain+0xa4>
    920c:	9b06      	ldr	r3, [sp, #24]
    920e:	46ca      	mov	sl, r9
    9210:	4699      	mov	r9, r3
        for(int j = 0; j < t.nips; j++)
    9212:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9214:	2500      	movs	r5, #0
    9216:	2b00      	cmp	r3, #0
    9218:	dd1c      	ble.n	9254 <xttrain+0x148>
    921a:	46b0      	mov	r8, r6
    921c:	9e0d      	ldr	r6, [sp, #52]	; 0x34
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    921e:	4653      	mov	r3, sl
    return a * (1.0f - a);
    9220:	20fe      	movs	r0, #254	; 0xfe
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    9222:	681f      	ldr	r7, [r3, #0]
    return a * (1.0f - a);
    9224:	0580      	lsls	r0, r0, #22
    9226:	1c39      	adds	r1, r7, #0
    9228:	47c0      	blx	r8
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    922a:	1c39      	adds	r1, r7, #0
    return a * (1.0f - a);
    922c:	4683      	mov	fp, r0
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    922e:	9828      	ldr	r0, [sp, #160]	; 0xa0
    9230:	47a0      	blx	r4
    9232:	1c01      	adds	r1, r0, #0
    9234:	4658      	mov	r0, fp
    9236:	47a0      	blx	r4
    9238:	4649      	mov	r1, r9
    923a:	47a0      	blx	r4
    923c:	9b26      	ldr	r3, [sp, #152]	; 0x98
    923e:	5959      	ldr	r1, [r3, r5]
    9240:	47a0      	blx	r4
    9242:	1c01      	adds	r1, r0, #0
    9244:	5970      	ldr	r0, [r6, r5]
    9246:	47c0      	blx	r8
        for(int j = 0; j < t.nips; j++)
    9248:	9b07      	ldr	r3, [sp, #28]
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    924a:	5170      	str	r0, [r6, r5]
    924c:	3504      	adds	r5, #4
        for(int j = 0; j < t.nips; j++)
    924e:	42ab      	cmp	r3, r5
    9250:	d1e5      	bne.n	921e <xttrain+0x112>
    9252:	4646      	mov	r6, r8
    9254:	f240 0c04 	movw	ip, #4
    9258:	9907      	ldr	r1, [sp, #28]
    925a:	44e2      	add	sl, ip
    925c:	468c      	mov	ip, r1
    925e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    for(int i = 0; i < t.nhid; i++)
    9260:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9262:	4462      	add	r2, ip
    9264:	920d      	str	r2, [sp, #52]	; 0x34
    9266:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9268:	3301      	adds	r3, #1
    926a:	3204      	adds	r2, #4
    926c:	920c      	str	r2, [sp, #48]	; 0x30
    926e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    9270:	930e      	str	r3, [sp, #56]	; 0x38
    9272:	429a      	cmp	r2, r3
    9274:	d193      	bne.n	919e <xttrain+0x92>
    for(int i = 0; i < size; i++)
    9276:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9278:	2b00      	cmp	r3, #0
    927a:	dd31      	ble.n	92e0 <xttrain+0x1d4>
    927c:	009b      	lsls	r3, r3, #2
    927e:	f649 3755 	movw	r7, #39765	; 0x9b55
    9282:	4699      	mov	r9, r3
    9284:	9b27      	ldr	r3, [sp, #156]	; 0x9c
    9286:	f24a 4895 	movw	r8, #42133	; 0xa495
    928a:	f24a 253d 	movw	r5, #41533	; 0xa23d
    928e:	2400      	movs	r4, #0
    9290:	2600      	movs	r6, #0
    9292:	469a      	mov	sl, r3
    9294:	f2c0 0700 	movt	r7, #0
    9298:	46bb      	mov	fp, r7
    929a:	9f08      	ldr	r7, [sp, #32]
    929c:	f2c0 0800 	movt	r8, #0
    92a0:	f2c0 0500 	movt	r5, #0
    return 0.5f * (a - b) * (a - b);
    92a4:	4653      	mov	r3, sl
    92a6:	5939      	ldr	r1, [r7, r4]
    92a8:	5918      	ldr	r0, [r3, r4]
    92aa:	47c0      	blx	r8
    92ac:	1c01      	adds	r1, r0, #0
    92ae:	47a8      	blx	r5
    92b0:	21fc      	movs	r1, #252	; 0xfc
    92b2:	0589      	lsls	r1, r1, #22
    92b4:	47a8      	blx	r5
    92b6:	1c01      	adds	r1, r0, #0
        sum += err(tg[i], o[i]);
    92b8:	1c30      	adds	r0, r6, #0
    92ba:	47d8      	blx	fp
    92bc:	3404      	adds	r4, #4
    92be:	1c06      	adds	r6, r0, #0
    for(int i = 0; i < size; i++)
    92c0:	45a1      	cmp	r9, r4
    92c2:	d1ef      	bne.n	92a4 <xttrain+0x198>
    bprop(t, in, tg, rate);
    return toterr(tg, t.o, t.nops);
}
    92c4:	1c30      	adds	r0, r6, #0
    92c6:	b013      	add	sp, #76	; 0x4c
    92c8:	bc3c      	pop	{r2, r3, r4, r5}
    92ca:	4690      	mov	r8, r2
    92cc:	4699      	mov	r9, r3
    92ce:	46a2      	mov	sl, r4
    92d0:	46ab      	mov	fp, r5
    92d2:	bcf0      	pop	{r4, r5, r6, r7}
    92d4:	bc08      	pop	{r3}
    92d6:	b004      	add	sp, #16
    92d8:	4718      	bx	r3
        for(int j = 0; j < t.nops; j++)
    92da:	2300      	movs	r3, #0
    92dc:	4699      	mov	r9, r3
    92de:	e798      	b.n	9212 <xttrain+0x106>
    for(int i = 0; i < size; i++)
    92e0:	2600      	movs	r6, #0
    return toterr(tg, t.o, t.nops);
    92e2:	e7ef      	b.n	92c4 <xttrain+0x1b8>

000092e4 <xtbuild>:

// Constructs a tinn with number of inputs, number of hidden neurons, and number of outputs
Tinn xtbuild(const int nips, const int nhid, const int nops)
{
    92e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    92e6:	46de      	mov	lr, fp
    92e8:	4657      	mov	r7, sl
    92ea:	464e      	mov	r6, r9
    92ec:	4645      	mov	r5, r8
    92ee:	4698      	mov	r8, r3
    Tinn t;
    // Tinn only supports one hidden layer so there are two biases.
    t.nb = 2;
    t.nw = nhid * (nips + nops);
    92f0:	000b      	movs	r3, r1
{
    92f2:	b5e0      	push	{r5, r6, r7, lr}
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    92f4:	f64a 3525 	movw	r5, #43813	; 0xab25
    t.nw = nhid * (nips + nops);
    92f8:	4443      	add	r3, r8
    92fa:	4353      	muls	r3, r2
{
    92fc:	0004      	movs	r4, r0
    92fe:	b083      	sub	sp, #12
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    9300:	0018      	movs	r0, r3
    9302:	f2c0 0500 	movt	r5, #0
{
    9306:	4689      	mov	r9, r1
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    9308:	2104      	movs	r1, #4
{
    930a:	0016      	movs	r6, r2
    t.nw = nhid * (nips + nops);
    930c:	469a      	mov	sl, r3
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    930e:	47a8      	blx	r5
    t.x = t.w + nhid * nips;
    t.b = (float*) calloc(t.nb, sizeof(*t.b));
    9310:	2104      	movs	r1, #4
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    9312:	0007      	movs	r7, r0
    t.b = (float*) calloc(t.nb, sizeof(*t.b));
    9314:	2002      	movs	r0, #2
    9316:	47a8      	blx	r5
    t.h = (float*) calloc(nhid, sizeof(*t.h));
    9318:	2104      	movs	r1, #4
    t.b = (float*) calloc(t.nb, sizeof(*t.b));
    931a:	4683      	mov	fp, r0
    t.h = (float*) calloc(nhid, sizeof(*t.h));
    931c:	0030      	movs	r0, r6
    931e:	47a8      	blx	r5
    t.o = (float*) calloc(nops, sizeof(*t.o));
    9320:	2104      	movs	r1, #4
    t.h = (float*) calloc(nhid, sizeof(*t.h));
    9322:	9001      	str	r0, [sp, #4]
    t.o = (float*) calloc(nops, sizeof(*t.o));
    9324:	4640      	mov	r0, r8
    9326:	47a8      	blx	r5
    t.x = t.w + nhid * nips;
    9328:	464b      	mov	r3, r9
    932a:	4373      	muls	r3, r6
    932c:	009b      	lsls	r3, r3, #2
    t.nips = nips;
    t.nhid = nhid;
    t.nops = nops;
    //wbrand(t);
    return t;
    932e:	6027      	str	r7, [r4, #0]
    t.x = t.w + nhid * nips;
    9330:	18ff      	adds	r7, r7, r3
    return t;
    9332:	465b      	mov	r3, fp
    9334:	60a3      	str	r3, [r4, #8]
    9336:	9b01      	ldr	r3, [sp, #4]
    9338:	6120      	str	r0, [r4, #16]
    933a:	60e3      	str	r3, [r4, #12]
    933c:	2302      	movs	r3, #2
    933e:	6163      	str	r3, [r4, #20]
    9340:	4653      	mov	r3, sl
    9342:	61a3      	str	r3, [r4, #24]
    9344:	464b      	mov	r3, r9
}
    9346:	0020      	movs	r0, r4
    return t;
    9348:	61e3      	str	r3, [r4, #28]
    934a:	4643      	mov	r3, r8
    934c:	6067      	str	r7, [r4, #4]
    934e:	6226      	str	r6, [r4, #32]
    9350:	6263      	str	r3, [r4, #36]	; 0x24
}
    9352:	b003      	add	sp, #12
    9354:	bc3c      	pop	{r2, r3, r4, r5}
    9356:	4690      	mov	r8, r2
    9358:	4699      	mov	r9, r3
    935a:	46a2      	mov	sl, r4
    935c:	46ab      	mov	fp, r5
    935e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00009360 <expf>:
    9360:	b5f0      	push	{r4, r5, r6, r7, lr}
    9362:	f242 0400 	movw	r4, #8192	; 0x2000
    9366:	b08b      	sub	sp, #44	; 0x2c
    9368:	1c05      	adds	r5, r0, #0
    936a:	f000 f873 	bl	9454 <__ieee754_expf>
    936e:	2300      	movs	r3, #0
    9370:	f2c2 0400 	movt	r4, #8192	; 0x2000
    9374:	56e3      	ldrsb	r3, [r4, r3]
    9376:	1c06      	adds	r6, r0, #0
    9378:	3301      	adds	r3, #1
    937a:	d03d      	beq.n	93f8 <expf+0x98>
    937c:	1c28      	adds	r0, r5, #0
    937e:	f000 f97d 	bl	967c <finitef>
    9382:	b3c8      	cbz	r0, 93f8 <expf+0x98>
    9384:	f247 1180 	movw	r1, #29056	; 0x7180
    9388:	1c28      	adds	r0, r5, #0
    938a:	f2c4 21b1 	movt	r1, #17073	; 0x42b1
    938e:	f000 f9a5 	bl	96dc <__aeabi_fcmpgt>
    9392:	0007      	movs	r7, r0
    9394:	2800      	cmp	r0, #0
    9396:	d132      	bne.n	93fe <expf+0x9e>
    9398:	f24f 11b5 	movw	r1, #61877	; 0xf1b5
    939c:	1c28      	adds	r0, r5, #0
    939e:	f2cc 21cf 	movt	r1, #49871	; 0xc2cf
    93a2:	f000 f987 	bl	96b4 <__aeabi_fcmplt>
    93a6:	b338      	cbz	r0, 93f8 <expf+0x98>
    93a8:	2304      	movs	r3, #4
    93aa:	9300      	str	r3, [sp, #0]
    93ac:	f24b 73e4 	movw	r3, #47076	; 0xb7e4
    93b0:	1c28      	adds	r0, r5, #0
    93b2:	f2c0 0300 	movt	r3, #0
    93b6:	9301      	str	r3, [sp, #4]
    93b8:	9708      	str	r7, [sp, #32]
    93ba:	f001 faaf 	bl	a91c <__aeabi_f2d>
    93be:	2300      	movs	r3, #0
    93c0:	2200      	movs	r2, #0
    93c2:	9206      	str	r2, [sp, #24]
    93c4:	9307      	str	r3, [sp, #28]
    93c6:	2300      	movs	r3, #0
    93c8:	56e3      	ldrsb	r3, [r4, r3]
    93ca:	466e      	mov	r6, sp
    93cc:	9004      	str	r0, [sp, #16]
    93ce:	9105      	str	r1, [sp, #20]
    93d0:	9002      	str	r0, [sp, #8]
    93d2:	9103      	str	r1, [sp, #12]
    93d4:	2b02      	cmp	r3, #2
    93d6:	d037      	beq.n	9448 <expf+0xe8>
    93d8:	0030      	movs	r0, r6
    93da:	f000 f94d 	bl	9678 <matherr>
    93de:	2800      	cmp	r0, #0
    93e0:	d032      	beq.n	9448 <expf+0xe8>
    93e2:	6a33      	ldr	r3, [r6, #32]
    93e4:	b11b      	cbz	r3, 93ee <expf+0x8e>
    93e6:	f001 fba7 	bl	ab38 <__errno>
    93ea:	6a33      	ldr	r3, [r6, #32]
    93ec:	6003      	str	r3, [r0, #0]
    93ee:	69b0      	ldr	r0, [r6, #24]
    93f0:	69f1      	ldr	r1, [r6, #28]
    93f2:	f001 fae5 	bl	a9c0 <__aeabi_d2f>
    93f6:	1c06      	adds	r6, r0, #0
    93f8:	1c30      	adds	r0, r6, #0
    93fa:	b00b      	add	sp, #44	; 0x2c
    93fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    93fe:	2303      	movs	r3, #3
    9400:	9300      	str	r3, [sp, #0]
    9402:	f24b 73e4 	movw	r3, #47076	; 0xb7e4
    9406:	f2c0 0300 	movt	r3, #0
    940a:	9301      	str	r3, [sp, #4]
    940c:	2300      	movs	r3, #0
    940e:	1c28      	adds	r0, r5, #0
    9410:	9308      	str	r3, [sp, #32]
    9412:	f001 fa83 	bl	a91c <__aeabi_f2d>
    9416:	2300      	movs	r3, #0
    9418:	56e3      	ldrsb	r3, [r4, r3]
    941a:	466e      	mov	r6, sp
    941c:	9004      	str	r0, [sp, #16]
    941e:	9105      	str	r1, [sp, #20]
    9420:	9002      	str	r0, [sp, #8]
    9422:	9103      	str	r1, [sp, #12]
    9424:	b943      	cbnz	r3, 9438 <expf+0xd8>
    9426:	22e0      	movs	r2, #224	; 0xe0
    9428:	f64f 73ff 	movw	r3, #65535	; 0xffff
    942c:	0612      	lsls	r2, r2, #24
    942e:	f2c4 73ef 	movt	r3, #18415	; 0x47ef
    9432:	9206      	str	r2, [sp, #24]
    9434:	9307      	str	r3, [sp, #28]
    9436:	e7cf      	b.n	93d8 <expf+0x78>
    9438:	2100      	movs	r1, #0
    943a:	2000      	movs	r0, #0
    943c:	f6c7 71f0 	movt	r1, #32752	; 0x7ff0
    9440:	9006      	str	r0, [sp, #24]
    9442:	9107      	str	r1, [sp, #28]
    9444:	2b02      	cmp	r3, #2
    9446:	d1c7      	bne.n	93d8 <expf+0x78>
    9448:	f001 fb76 	bl	ab38 <__errno>
    944c:	2322      	movs	r3, #34	; 0x22
    944e:	6003      	str	r3, [r0, #0]
    9450:	e7c7      	b.n	93e2 <expf+0x82>
    9452:	46c0      	nop			; (mov r8, r8)

00009454 <__ieee754_expf>:
    9454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9456:	22ff      	movs	r2, #255	; 0xff
    9458:	46ce      	mov	lr, r9
    945a:	4647      	mov	r7, r8
    945c:	0043      	lsls	r3, r0, #1
    945e:	b580      	push	{r7, lr}
    9460:	1c04      	adds	r4, r0, #0
    9462:	085b      	lsrs	r3, r3, #1
    9464:	05d2      	lsls	r2, r2, #23
    9466:	4293      	cmp	r3, r2
    9468:	d900      	bls.n	946c <__ieee754_expf+0x18>
    946a:	e08e      	b.n	958a <__ieee754_expf+0x136>
    946c:	0fc5      	lsrs	r5, r0, #31
    946e:	4293      	cmp	r3, r2
    9470:	d100      	bne.n	9474 <__ieee754_expf+0x20>
    9472:	e091      	b.n	9598 <__ieee754_expf+0x144>
    9474:	f247 2217 	movw	r2, #29207	; 0x7217
    9478:	f2c4 22b1 	movt	r2, #17073	; 0x42b1
    947c:	4290      	cmp	r0, r2
    947e:	dd00      	ble.n	9482 <__ieee754_expf+0x2e>
    9480:	e0b0      	b.n	95e4 <__ieee754_expf+0x190>
    9482:	2800      	cmp	r0, #0
    9484:	da00      	bge.n	9488 <__ieee754_expf+0x34>
    9486:	e0a3      	b.n	95d0 <__ieee754_expf+0x17c>
    9488:	f247 2218 	movw	r2, #29208	; 0x7218
    948c:	f6c3 62b1 	movt	r2, #16049	; 0x3eb1
    9490:	4293      	cmp	r3, r2
    9492:	d800      	bhi.n	9496 <__ieee754_expf+0x42>
    9494:	e084      	b.n	95a0 <__ieee754_expf+0x14c>
    9496:	f241 5291 	movw	r2, #5521	; 0x1591
    949a:	f6c3 7285 	movt	r2, #16261	; 0x3f85
    949e:	4293      	cmp	r3, r2
    94a0:	d900      	bls.n	94a4 <__ieee754_expf+0x50>
    94a2:	e0bc      	b.n	961e <__ieee754_expf+0x1ca>
    94a4:	f24b 73f4 	movw	r3, #47092	; 0xb7f4
    94a8:	00af      	lsls	r7, r5, #2
    94aa:	f2c0 0300 	movt	r3, #0
    94ae:	58f9      	ldr	r1, [r7, r3]
    94b0:	1c20      	adds	r0, r4, #0
    94b2:	f000 ffef 	bl	a494 <__aeabi_fsub>
    94b6:	f24b 73fc 	movw	r3, #47100	; 0xb7fc
    94ba:	2401      	movs	r4, #1
    94bc:	4681      	mov	r9, r0
    94be:	f2c0 0300 	movt	r3, #0
    94c2:	1b64      	subs	r4, r4, r5
    94c4:	58ff      	ldr	r7, [r7, r3]
    94c6:	1b65      	subs	r5, r4, r5
    94c8:	1c39      	adds	r1, r7, #0
    94ca:	4648      	mov	r0, r9
    94cc:	f000 ffe2 	bl	a494 <__aeabi_fsub>
    94d0:	1c04      	adds	r4, r0, #0
    94d2:	1c21      	adds	r1, r4, #0
    94d4:	1c20      	adds	r0, r4, #0
    94d6:	f000 feb1 	bl	a23c <__aeabi_fmul>
    94da:	f64b 314c 	movw	r1, #47948	; 0xbb4c
    94de:	f2c3 3131 	movt	r1, #13105	; 0x3331
    94e2:	1c06      	adds	r6, r0, #0
    94e4:	f000 feaa 	bl	a23c <__aeabi_fmul>
    94e8:	f64e 210e 	movw	r1, #59918	; 0xea0e
    94ec:	f2c3 51dd 	movt	r1, #13789	; 0x35dd
    94f0:	f000 ffd0 	bl	a494 <__aeabi_fsub>
    94f4:	1c31      	adds	r1, r6, #0
    94f6:	f000 fea1 	bl	a23c <__aeabi_fmul>
    94fa:	f24b 3155 	movw	r1, #45909	; 0xb355
    94fe:	f6c3 018a 	movt	r1, #14474	; 0x388a
    9502:	f000 fb27 	bl	9b54 <__aeabi_fadd>
    9506:	1c31      	adds	r1, r6, #0
    9508:	f000 fe98 	bl	a23c <__aeabi_fmul>
    950c:	f640 3161 	movw	r1, #2913	; 0xb61
    9510:	f6c3 3136 	movt	r1, #15158	; 0x3b36
    9514:	f000 ffbe 	bl	a494 <__aeabi_fsub>
    9518:	1c31      	adds	r1, r6, #0
    951a:	f000 fe8f 	bl	a23c <__aeabi_fmul>
    951e:	f64a 21ab 	movw	r1, #43691	; 0xaaab
    9522:	f6c3 612a 	movt	r1, #15914	; 0x3e2a
    9526:	f000 fb15 	bl	9b54 <__aeabi_fadd>
    952a:	1c31      	adds	r1, r6, #0
    952c:	f000 fe86 	bl	a23c <__aeabi_fmul>
    9530:	1c01      	adds	r1, r0, #0
    9532:	1c20      	adds	r0, r4, #0
    9534:	f000 ffae 	bl	a494 <__aeabi_fsub>
    9538:	4680      	mov	r8, r0
    953a:	1c01      	adds	r1, r0, #0
    953c:	1c20      	adds	r0, r4, #0
    953e:	2d00      	cmp	r5, #0
    9540:	d058      	beq.n	95f4 <__ieee754_expf+0x1a0>
    9542:	f000 fe7b 	bl	a23c <__aeabi_fmul>
    9546:	1c04      	adds	r4, r0, #0
    9548:	2080      	movs	r0, #128	; 0x80
    954a:	4641      	mov	r1, r8
    954c:	05c0      	lsls	r0, r0, #23
    954e:	f000 ffa1 	bl	a494 <__aeabi_fsub>
    9552:	1c01      	adds	r1, r0, #0
    9554:	1c20      	adds	r0, r4, #0
    9556:	f000 fc89 	bl	9e6c <__aeabi_fdiv>
    955a:	1c01      	adds	r1, r0, #0
    955c:	1c38      	adds	r0, r7, #0
    955e:	f000 ff99 	bl	a494 <__aeabi_fsub>
    9562:	4649      	mov	r1, r9
    9564:	f000 ff96 	bl	a494 <__aeabi_fsub>
    9568:	1c01      	adds	r1, r0, #0
    956a:	20fe      	movs	r0, #254	; 0xfe
    956c:	0580      	lsls	r0, r0, #22
    956e:	f000 ff91 	bl	a494 <__aeabi_fsub>
    9572:	002b      	movs	r3, r5
    9574:	337d      	adds	r3, #125	; 0x7d
    9576:	db00      	blt.n	957a <__ieee754_expf+0x126>
    9578:	e07a      	b.n	9670 <__ieee754_expf+0x21c>
    957a:	21d8      	movs	r1, #216	; 0xd8
    957c:	3564      	adds	r5, #100	; 0x64
    957e:	05ed      	lsls	r5, r5, #23
    9580:	1828      	adds	r0, r5, r0
    9582:	0509      	lsls	r1, r1, #20
    9584:	f000 fe5a 	bl	a23c <__aeabi_fmul>
    9588:	e002      	b.n	9590 <__ieee754_expf+0x13c>
    958a:	1c01      	adds	r1, r0, #0
    958c:	f000 fae2 	bl	9b54 <__aeabi_fadd>
    9590:	bc0c      	pop	{r2, r3}
    9592:	4690      	mov	r8, r2
    9594:	4699      	mov	r9, r3
    9596:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9598:	2d00      	cmp	r5, #0
    959a:	d0f9      	beq.n	9590 <__ieee754_expf+0x13c>
    959c:	2000      	movs	r0, #0
    959e:	e7f7      	b.n	9590 <__ieee754_expf+0x13c>
    95a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
    95a4:	f2c3 127f 	movt	r2, #12671	; 0x317f
    95a8:	4293      	cmp	r3, r2
    95aa:	d819      	bhi.n	95e0 <__ieee754_expf+0x18c>
    95ac:	f24f 21ca 	movw	r1, #62154	; 0xf2ca
    95b0:	1c20      	adds	r0, r4, #0
    95b2:	f2c7 1149 	movt	r1, #29001	; 0x7149
    95b6:	f000 facd 	bl	9b54 <__aeabi_fadd>
    95ba:	21fe      	movs	r1, #254	; 0xfe
    95bc:	0589      	lsls	r1, r1, #22
    95be:	f000 f88d 	bl	96dc <__aeabi_fcmpgt>
    95c2:	b168      	cbz	r0, 95e0 <__ieee754_expf+0x18c>
    95c4:	21fe      	movs	r1, #254	; 0xfe
    95c6:	1c20      	adds	r0, r4, #0
    95c8:	0589      	lsls	r1, r1, #22
    95ca:	f000 fac3 	bl	9b54 <__aeabi_fadd>
    95ce:	e7df      	b.n	9590 <__ieee754_expf+0x13c>
    95d0:	f24f 12b5 	movw	r2, #61877	; 0xf1b5
    95d4:	f2c4 22cf 	movt	r2, #17103	; 0x42cf
    95d8:	4293      	cmp	r3, r2
    95da:	d800      	bhi.n	95de <__ieee754_expf+0x18a>
    95dc:	e754      	b.n	9488 <__ieee754_expf+0x34>
    95de:	e7dd      	b.n	959c <__ieee754_expf+0x148>
    95e0:	2500      	movs	r5, #0
    95e2:	e776      	b.n	94d2 <__ieee754_expf+0x7e>
    95e4:	f24f 21ca 	movw	r1, #62154	; 0xf2ca
    95e8:	f2c7 1149 	movt	r1, #29001	; 0x7149
    95ec:	1c08      	adds	r0, r1, #0
    95ee:	f000 fe25 	bl	a23c <__aeabi_fmul>
    95f2:	e7cd      	b.n	9590 <__ieee754_expf+0x13c>
    95f4:	f000 fe22 	bl	a23c <__aeabi_fmul>
    95f8:	2180      	movs	r1, #128	; 0x80
    95fa:	1c05      	adds	r5, r0, #0
    95fc:	05c9      	lsls	r1, r1, #23
    95fe:	4640      	mov	r0, r8
    9600:	f000 ff48 	bl	a494 <__aeabi_fsub>
    9604:	1c01      	adds	r1, r0, #0
    9606:	1c28      	adds	r0, r5, #0
    9608:	f000 fc30 	bl	9e6c <__aeabi_fdiv>
    960c:	1c21      	adds	r1, r4, #0
    960e:	f000 ff41 	bl	a494 <__aeabi_fsub>
    9612:	1c01      	adds	r1, r0, #0
    9614:	20fe      	movs	r0, #254	; 0xfe
    9616:	0580      	lsls	r0, r0, #22
    9618:	f000 ff3c 	bl	a494 <__aeabi_fsub>
    961c:	e7b8      	b.n	9590 <__ieee754_expf+0x13c>
    961e:	f64a 213b 	movw	r1, #43579	; 0xaa3b
    9622:	1c20      	adds	r0, r4, #0
    9624:	f6c3 71b8 	movt	r1, #16312	; 0x3fb8
    9628:	f000 fe08 	bl	a23c <__aeabi_fmul>
    962c:	f24b 73ec 	movw	r3, #47084	; 0xb7ec
    9630:	00ad      	lsls	r5, r5, #2
    9632:	f2c0 0300 	movt	r3, #0
    9636:	58e9      	ldr	r1, [r5, r3]
    9638:	f000 fa8c 	bl	9b54 <__aeabi_fadd>
    963c:	f001 f8ba 	bl	a7b4 <__aeabi_f2iz>
    9640:	0005      	movs	r5, r0
    9642:	f001 f8d5 	bl	a7f0 <__aeabi_i2f>
    9646:	f247 1180 	movw	r1, #29056	; 0x7180
    964a:	f6c3 7131 	movt	r1, #16177	; 0x3f31
    964e:	1c07      	adds	r7, r0, #0
    9650:	f000 fdf4 	bl	a23c <__aeabi_fmul>
    9654:	1c01      	adds	r1, r0, #0
    9656:	1c20      	adds	r0, r4, #0
    9658:	f000 ff1c 	bl	a494 <__aeabi_fsub>
    965c:	f24f 71d1 	movw	r1, #63441	; 0xf7d1
    9660:	4681      	mov	r9, r0
    9662:	f2c3 7117 	movt	r1, #14103	; 0x3717
    9666:	1c38      	adds	r0, r7, #0
    9668:	f000 fde8 	bl	a23c <__aeabi_fmul>
    966c:	1c07      	adds	r7, r0, #0
    966e:	e72b      	b.n	94c8 <__ieee754_expf+0x74>
    9670:	05ed      	lsls	r5, r5, #23
    9672:	1828      	adds	r0, r5, r0
    9674:	e78c      	b.n	9590 <__ieee754_expf+0x13c>
    9676:	46c0      	nop			; (mov r8, r8)

00009678 <matherr>:
    9678:	2000      	movs	r0, #0
    967a:	4770      	bx	lr

0000967c <finitef>:
    967c:	f64f 72ff 	movw	r2, #65535	; 0xffff
    9680:	0043      	lsls	r3, r0, #1
    9682:	2000      	movs	r0, #0
    9684:	085b      	lsrs	r3, r3, #1
    9686:	f6c7 727f 	movt	r2, #32639	; 0x7f7f
    968a:	429a      	cmp	r2, r3
    968c:	4140      	adcs	r0, r0
    968e:	4770      	bx	lr

00009690 <__aeabi_cfrcmple>:
    9690:	4684      	mov	ip, r0
    9692:	1c08      	adds	r0, r1, #0
    9694:	4661      	mov	r1, ip
    9696:	e7ff      	b.n	9698 <__aeabi_cfcmpeq>

00009698 <__aeabi_cfcmpeq>:
    9698:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    969a:	f000 fd91 	bl	a1c0 <__lesf2>
    969e:	2800      	cmp	r0, #0
    96a0:	d401      	bmi.n	96a6 <__aeabi_cfcmpeq+0xe>
    96a2:	2100      	movs	r1, #0
    96a4:	42c8      	cmn	r0, r1
    96a6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000096a8 <__aeabi_fcmpeq>:
    96a8:	b510      	push	{r4, lr}
    96aa:	f000 fd29 	bl	a100 <__eqsf2>
    96ae:	4240      	negs	r0, r0
    96b0:	3001      	adds	r0, #1
    96b2:	bd10      	pop	{r4, pc}

000096b4 <__aeabi_fcmplt>:
    96b4:	b510      	push	{r4, lr}
    96b6:	f000 fd83 	bl	a1c0 <__lesf2>
    96ba:	2800      	cmp	r0, #0
    96bc:	db01      	blt.n	96c2 <__aeabi_fcmplt+0xe>
    96be:	2000      	movs	r0, #0
    96c0:	bd10      	pop	{r4, pc}
    96c2:	2001      	movs	r0, #1
    96c4:	bd10      	pop	{r4, pc}
    96c6:	46c0      	nop			; (mov r8, r8)

000096c8 <__aeabi_fcmple>:
    96c8:	b510      	push	{r4, lr}
    96ca:	f000 fd79 	bl	a1c0 <__lesf2>
    96ce:	2800      	cmp	r0, #0
    96d0:	dd01      	ble.n	96d6 <__aeabi_fcmple+0xe>
    96d2:	2000      	movs	r0, #0
    96d4:	bd10      	pop	{r4, pc}
    96d6:	2001      	movs	r0, #1
    96d8:	bd10      	pop	{r4, pc}
    96da:	46c0      	nop			; (mov r8, r8)

000096dc <__aeabi_fcmpgt>:
    96dc:	b510      	push	{r4, lr}
    96de:	f000 fd35 	bl	a14c <__gesf2>
    96e2:	2800      	cmp	r0, #0
    96e4:	dc01      	bgt.n	96ea <__aeabi_fcmpgt+0xe>
    96e6:	2000      	movs	r0, #0
    96e8:	bd10      	pop	{r4, pc}
    96ea:	2001      	movs	r0, #1
    96ec:	bd10      	pop	{r4, pc}
    96ee:	46c0      	nop			; (mov r8, r8)

000096f0 <__aeabi_fcmpge>:
    96f0:	b510      	push	{r4, lr}
    96f2:	f000 fd2b 	bl	a14c <__gesf2>
    96f6:	2800      	cmp	r0, #0
    96f8:	da01      	bge.n	96fe <__aeabi_fcmpge+0xe>
    96fa:	2000      	movs	r0, #0
    96fc:	bd10      	pop	{r4, pc}
    96fe:	2001      	movs	r0, #1
    9700:	bd10      	pop	{r4, pc}
    9702:	46c0      	nop			; (mov r8, r8)

00009704 <__aeabi_uldivmod>:
    9704:	2b00      	cmp	r3, #0
    9706:	d111      	bne.n	972c <__aeabi_uldivmod+0x28>
    9708:	2a00      	cmp	r2, #0
    970a:	d10f      	bne.n	972c <__aeabi_uldivmod+0x28>
    970c:	2900      	cmp	r1, #0
    970e:	d100      	bne.n	9712 <__aeabi_uldivmod+0xe>
    9710:	2800      	cmp	r0, #0
    9712:	d002      	beq.n	971a <__aeabi_uldivmod+0x16>
    9714:	2100      	movs	r1, #0
    9716:	43c9      	mvns	r1, r1
    9718:	1c08      	adds	r0, r1, #0
    971a:	b407      	push	{r0, r1, r2}
    971c:	4802      	ldr	r0, [pc, #8]	; (9728 <__aeabi_uldivmod+0x24>)
    971e:	a102      	add	r1, pc, #8	; (adr r1, 9728 <__aeabi_uldivmod+0x24>)
    9720:	1840      	adds	r0, r0, r1
    9722:	9002      	str	r0, [sp, #8]
    9724:	bd03      	pop	{r0, r1, pc}
    9726:	46c0      	nop			; (mov r8, r8)
    9728:	000013b1 	.word	0x000013b1
    972c:	b403      	push	{r0, r1}
    972e:	4668      	mov	r0, sp
    9730:	b501      	push	{r0, lr}
    9732:	9802      	ldr	r0, [sp, #8]
    9734:	f000 f834 	bl	97a0 <__udivmoddi4>
    9738:	9b01      	ldr	r3, [sp, #4]
    973a:	469e      	mov	lr, r3
    973c:	b002      	add	sp, #8
    973e:	bc0c      	pop	{r2, r3}
    9740:	4770      	bx	lr
    9742:	46c0      	nop			; (mov r8, r8)

00009744 <__aeabi_lmul>:
    9744:	b5f0      	push	{r4, r5, r6, r7, lr}
    9746:	f64f 75ff 	movw	r5, #65535	; 0xffff
    974a:	46ce      	mov	lr, r9
    974c:	4647      	mov	r7, r8
    974e:	002c      	movs	r4, r5
    9750:	4015      	ands	r5, r2
    9752:	4699      	mov	r9, r3
    9754:	002b      	movs	r3, r5
    9756:	4004      	ands	r4, r0
    9758:	0c16      	lsrs	r6, r2, #16
    975a:	b580      	push	{r7, lr}
    975c:	0c07      	lsrs	r7, r0, #16
    975e:	4363      	muls	r3, r4
    9760:	437d      	muls	r5, r7
    9762:	4377      	muls	r7, r6
    9764:	4366      	muls	r6, r4
    9766:	0c1c      	lsrs	r4, r3, #16
    9768:	1976      	adds	r6, r6, r5
    976a:	19a4      	adds	r4, r4, r6
    976c:	469c      	mov	ip, r3
    976e:	42a5      	cmp	r5, r4
    9770:	d903      	bls.n	977a <__aeabi_lmul+0x36>
    9772:	2380      	movs	r3, #128	; 0x80
    9774:	025b      	lsls	r3, r3, #9
    9776:	4698      	mov	r8, r3
    9778:	4447      	add	r7, r8
    977a:	0c25      	lsrs	r5, r4, #16
    977c:	19ef      	adds	r7, r5, r7
    977e:	4663      	mov	r3, ip
    9780:	f64f 75ff 	movw	r5, #65535	; 0xffff
    9784:	401d      	ands	r5, r3
    9786:	464b      	mov	r3, r9
    9788:	4351      	muls	r1, r2
    978a:	4343      	muls	r3, r0
    978c:	0424      	lsls	r4, r4, #16
    978e:	1964      	adds	r4, r4, r5
    9790:	1859      	adds	r1, r3, r1
    9792:	19c9      	adds	r1, r1, r7
    9794:	0020      	movs	r0, r4
    9796:	bc0c      	pop	{r2, r3}
    9798:	4690      	mov	r8, r2
    979a:	4699      	mov	r9, r3
    979c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    979e:	46c0      	nop			; (mov r8, r8)

000097a0 <__udivmoddi4>:
    97a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    97a2:	4657      	mov	r7, sl
    97a4:	4645      	mov	r5, r8
    97a6:	46de      	mov	lr, fp
    97a8:	464e      	mov	r6, r9
    97aa:	4698      	mov	r8, r3
    97ac:	b5e0      	push	{r5, r6, r7, lr}
    97ae:	b083      	sub	sp, #12
    97b0:	0017      	movs	r7, r2
    97b2:	9201      	str	r2, [sp, #4]
    97b4:	0016      	movs	r6, r2
    97b6:	4642      	mov	r2, r8
    97b8:	0005      	movs	r5, r0
    97ba:	000c      	movs	r4, r1
    97bc:	4683      	mov	fp, r0
    97be:	468a      	mov	sl, r1
    97c0:	2a00      	cmp	r2, #0
    97c2:	d14c      	bne.n	985e <__udivmoddi4+0xbe>
    97c4:	428f      	cmp	r7, r1
    97c6:	d800      	bhi.n	97ca <__udivmoddi4+0x2a>
    97c8:	e078      	b.n	98bc <__udivmoddi4+0x11c>
    97ca:	0038      	movs	r0, r7
    97cc:	f001 f986 	bl	aadc <__clzsi2>
    97d0:	b150      	cbz	r0, 97e8 <__udivmoddi4+0x48>
    97d2:	2320      	movs	r3, #32
    97d4:	002a      	movs	r2, r5
    97d6:	1a1b      	subs	r3, r3, r0
    97d8:	40da      	lsrs	r2, r3
    97da:	4084      	lsls	r4, r0
    97dc:	0013      	movs	r3, r2
    97de:	4085      	lsls	r5, r0
    97e0:	4323      	orrs	r3, r4
    97e2:	4086      	lsls	r6, r0
    97e4:	469a      	mov	sl, r3
    97e6:	46ab      	mov	fp, r5
    97e8:	0c37      	lsrs	r7, r6, #16
    97ea:	fbba f2f7 	udiv	r2, sl, r7
    97ee:	0039      	movs	r1, r7
    97f0:	4653      	mov	r3, sl
    97f2:	f64f 74ff 	movw	r4, #65535	; 0xffff
    97f6:	4351      	muls	r1, r2
    97f8:	0015      	movs	r5, r2
    97fa:	1a59      	subs	r1, r3, r1
    97fc:	465b      	mov	r3, fp
    97fe:	4034      	ands	r4, r6
    9800:	4365      	muls	r5, r4
    9802:	0409      	lsls	r1, r1, #16
    9804:	0c1b      	lsrs	r3, r3, #16
    9806:	430b      	orrs	r3, r1
    9808:	429d      	cmp	r5, r3
    980a:	d909      	bls.n	9820 <__udivmoddi4+0x80>
    980c:	199b      	adds	r3, r3, r6
    980e:	1e51      	subs	r1, r2, #1
    9810:	429e      	cmp	r6, r3
    9812:	d900      	bls.n	9816 <__udivmoddi4+0x76>
    9814:	e17c      	b.n	9b10 <__udivmoddi4+0x370>
    9816:	429d      	cmp	r5, r3
    9818:	d800      	bhi.n	981c <__udivmoddi4+0x7c>
    981a:	e179      	b.n	9b10 <__udivmoddi4+0x370>
    981c:	3a02      	subs	r2, #2
    981e:	199b      	adds	r3, r3, r6
    9820:	1b59      	subs	r1, r3, r5
    9822:	fbb1 f3f7 	udiv	r3, r1, r7
    9826:	435c      	muls	r4, r3
    9828:	435f      	muls	r7, r3
    982a:	0025      	movs	r5, r4
    982c:	1bc9      	subs	r1, r1, r7
    982e:	f64f 74ff 	movw	r4, #65535	; 0xffff
    9832:	465f      	mov	r7, fp
    9834:	0409      	lsls	r1, r1, #16
    9836:	403c      	ands	r4, r7
    9838:	430c      	orrs	r4, r1
    983a:	42a5      	cmp	r5, r4
    983c:	d900      	bls.n	9840 <__udivmoddi4+0xa0>
    983e:	e15c      	b.n	9afa <__udivmoddi4+0x35a>
    9840:	0412      	lsls	r2, r2, #16
    9842:	4313      	orrs	r3, r2
    9844:	2200      	movs	r2, #0
    9846:	1b64      	subs	r4, r4, r5
    9848:	9201      	str	r2, [sp, #4]
    984a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    984c:	b12a      	cbz	r2, 985a <__udivmoddi4+0xba>
    984e:	40c4      	lsrs	r4, r0
    9850:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9852:	980c      	ldr	r0, [sp, #48]	; 0x30
    9854:	6014      	str	r4, [r2, #0]
    9856:	2200      	movs	r2, #0
    9858:	6042      	str	r2, [r0, #4]
    985a:	0018      	movs	r0, r3
    985c:	e00a      	b.n	9874 <__udivmoddi4+0xd4>
    985e:	4588      	cmp	r8, r1
    9860:	d910      	bls.n	9884 <__udivmoddi4+0xe4>
    9862:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9864:	2b00      	cmp	r3, #0
    9866:	d100      	bne.n	986a <__udivmoddi4+0xca>
    9868:	e170      	b.n	9b4c <__udivmoddi4+0x3ac>
    986a:	6018      	str	r0, [r3, #0]
    986c:	6059      	str	r1, [r3, #4]
    986e:	2300      	movs	r3, #0
    9870:	2000      	movs	r0, #0
    9872:	9301      	str	r3, [sp, #4]
    9874:	9901      	ldr	r1, [sp, #4]
    9876:	b003      	add	sp, #12
    9878:	bc3c      	pop	{r2, r3, r4, r5}
    987a:	4690      	mov	r8, r2
    987c:	4699      	mov	r9, r3
    987e:	46a2      	mov	sl, r4
    9880:	46ab      	mov	fp, r5
    9882:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9884:	4640      	mov	r0, r8
    9886:	f001 f929 	bl	aadc <__clzsi2>
    988a:	9001      	str	r0, [sp, #4]
    988c:	2800      	cmp	r0, #0
    988e:	d000      	beq.n	9892 <__udivmoddi4+0xf2>
    9890:	e0a3      	b.n	99da <__udivmoddi4+0x23a>
    9892:	45a0      	cmp	r8, r4
    9894:	d302      	bcc.n	989c <__udivmoddi4+0xfc>
    9896:	42af      	cmp	r7, r5
    9898:	d900      	bls.n	989c <__udivmoddi4+0xfc>
    989a:	e151      	b.n	9b40 <__udivmoddi4+0x3a0>
    989c:	1bef      	subs	r7, r5, r7
    989e:	4643      	mov	r3, r8
    98a0:	42bd      	cmp	r5, r7
    98a2:	41ad      	sbcs	r5, r5
    98a4:	1ae4      	subs	r4, r4, r3
    98a6:	426d      	negs	r5, r5
    98a8:	1b63      	subs	r3, r4, r5
    98aa:	469a      	mov	sl, r3
    98ac:	2001      	movs	r0, #1
    98ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    98b0:	2b00      	cmp	r3, #0
    98b2:	d0df      	beq.n	9874 <__udivmoddi4+0xd4>
    98b4:	4652      	mov	r2, sl
    98b6:	601f      	str	r7, [r3, #0]
    98b8:	605a      	str	r2, [r3, #4]
    98ba:	e7db      	b.n	9874 <__udivmoddi4+0xd4>
    98bc:	b917      	cbnz	r7, 98c4 <__udivmoddi4+0x124>
    98be:	3601      	adds	r6, #1
    98c0:	fbb6 f6f7 	udiv	r6, r6, r7
    98c4:	0030      	movs	r0, r6
    98c6:	f001 f909 	bl	aadc <__clzsi2>
    98ca:	bbb8      	cbnz	r0, 993c <__udivmoddi4+0x19c>
    98cc:	f64f 77ff 	movw	r7, #65535	; 0xffff
    98d0:	2301      	movs	r3, #1
    98d2:	1ba5      	subs	r5, r4, r6
    98d4:	4037      	ands	r7, r6
    98d6:	0c34      	lsrs	r4, r6, #16
    98d8:	9301      	str	r3, [sp, #4]
    98da:	fbb5 f3f4 	udiv	r3, r5, r4
    98de:	003a      	movs	r2, r7
    98e0:	435a      	muls	r2, r3
    98e2:	4694      	mov	ip, r2
    98e4:	0022      	movs	r2, r4
    98e6:	435a      	muls	r2, r3
    98e8:	1aaa      	subs	r2, r5, r2
    98ea:	465d      	mov	r5, fp
    98ec:	0412      	lsls	r2, r2, #16
    98ee:	0c2d      	lsrs	r5, r5, #16
    98f0:	432a      	orrs	r2, r5
    98f2:	4594      	cmp	ip, r2
    98f4:	d907      	bls.n	9906 <__udivmoddi4+0x166>
    98f6:	1992      	adds	r2, r2, r6
    98f8:	1e5d      	subs	r5, r3, #1
    98fa:	4296      	cmp	r6, r2
    98fc:	d802      	bhi.n	9904 <__udivmoddi4+0x164>
    98fe:	4594      	cmp	ip, r2
    9900:	d900      	bls.n	9904 <__udivmoddi4+0x164>
    9902:	e120      	b.n	9b46 <__udivmoddi4+0x3a6>
    9904:	002b      	movs	r3, r5
    9906:	4665      	mov	r5, ip
    9908:	1b52      	subs	r2, r2, r5
    990a:	fbb2 f5f4 	udiv	r5, r2, r4
    990e:	436c      	muls	r4, r5
    9910:	4659      	mov	r1, fp
    9912:	1b12      	subs	r2, r2, r4
    9914:	f64f 74ff 	movw	r4, #65535	; 0xffff
    9918:	436f      	muls	r7, r5
    991a:	0412      	lsls	r2, r2, #16
    991c:	400c      	ands	r4, r1
    991e:	4314      	orrs	r4, r2
    9920:	42a7      	cmp	r7, r4
    9922:	d907      	bls.n	9934 <__udivmoddi4+0x194>
    9924:	19a4      	adds	r4, r4, r6
    9926:	1e6a      	subs	r2, r5, #1
    9928:	42a6      	cmp	r6, r4
    992a:	d802      	bhi.n	9932 <__udivmoddi4+0x192>
    992c:	42a7      	cmp	r7, r4
    992e:	d900      	bls.n	9932 <__udivmoddi4+0x192>
    9930:	e103      	b.n	9b3a <__udivmoddi4+0x39a>
    9932:	0015      	movs	r5, r2
    9934:	041b      	lsls	r3, r3, #16
    9936:	1be4      	subs	r4, r4, r7
    9938:	432b      	orrs	r3, r5
    993a:	e786      	b.n	984a <__udivmoddi4+0xaa>
    993c:	2120      	movs	r1, #32
    993e:	002a      	movs	r2, r5
    9940:	0023      	movs	r3, r4
    9942:	1a09      	subs	r1, r1, r0
    9944:	4086      	lsls	r6, r0
    9946:	4084      	lsls	r4, r0
    9948:	40ca      	lsrs	r2, r1
    994a:	40cb      	lsrs	r3, r1
    994c:	4322      	orrs	r2, r4
    994e:	0c34      	lsrs	r4, r6, #16
    9950:	fbb3 f1f4 	udiv	r1, r3, r4
    9954:	4085      	lsls	r5, r0
    9956:	f64f 77ff 	movw	r7, #65535	; 0xffff
    995a:	46ab      	mov	fp, r5
    995c:	000d      	movs	r5, r1
    995e:	4037      	ands	r7, r6
    9960:	437d      	muls	r5, r7
    9962:	46ac      	mov	ip, r5
    9964:	0025      	movs	r5, r4
    9966:	434d      	muls	r5, r1
    9968:	1b5d      	subs	r5, r3, r5
    996a:	042d      	lsls	r5, r5, #16
    996c:	0c13      	lsrs	r3, r2, #16
    996e:	4691      	mov	r9, r2
    9970:	432b      	orrs	r3, r5
    9972:	459c      	cmp	ip, r3
    9974:	d909      	bls.n	998a <__udivmoddi4+0x1ea>
    9976:	199b      	adds	r3, r3, r6
    9978:	1e4d      	subs	r5, r1, #1
    997a:	429e      	cmp	r6, r3
    997c:	d900      	bls.n	9980 <__udivmoddi4+0x1e0>
    997e:	e0da      	b.n	9b36 <__udivmoddi4+0x396>
    9980:	459c      	cmp	ip, r3
    9982:	d800      	bhi.n	9986 <__udivmoddi4+0x1e6>
    9984:	e0d7      	b.n	9b36 <__udivmoddi4+0x396>
    9986:	3902      	subs	r1, #2
    9988:	199b      	adds	r3, r3, r6
    998a:	4662      	mov	r2, ip
    998c:	1a9b      	subs	r3, r3, r2
    998e:	fbb3 fcf4 	udiv	ip, r3, r4
    9992:	4662      	mov	r2, ip
    9994:	f64f 78ff 	movw	r8, #65535	; 0xffff
    9998:	4362      	muls	r2, r4
    999a:	1a9b      	subs	r3, r3, r2
    999c:	041b      	lsls	r3, r3, #16
    999e:	469a      	mov	sl, r3
    99a0:	4642      	mov	r2, r8
    99a2:	464b      	mov	r3, r9
    99a4:	4665      	mov	r5, ip
    99a6:	401a      	ands	r2, r3
    99a8:	4653      	mov	r3, sl
    99aa:	437d      	muls	r5, r7
    99ac:	4313      	orrs	r3, r2
    99ae:	429d      	cmp	r5, r3
    99b0:	d90d      	bls.n	99ce <__udivmoddi4+0x22e>
    99b2:	4662      	mov	r2, ip
    99b4:	199b      	adds	r3, r3, r6
    99b6:	3a01      	subs	r2, #1
    99b8:	429e      	cmp	r6, r3
    99ba:	d900      	bls.n	99be <__udivmoddi4+0x21e>
    99bc:	e0b7      	b.n	9b2e <__udivmoddi4+0x38e>
    99be:	429d      	cmp	r5, r3
    99c0:	d800      	bhi.n	99c4 <__udivmoddi4+0x224>
    99c2:	e0b4      	b.n	9b2e <__udivmoddi4+0x38e>
    99c4:	2202      	movs	r2, #2
    99c6:	4252      	negs	r2, r2
    99c8:	4690      	mov	r8, r2
    99ca:	199b      	adds	r3, r3, r6
    99cc:	44c4      	add	ip, r8
    99ce:	1b5d      	subs	r5, r3, r5
    99d0:	4663      	mov	r3, ip
    99d2:	0409      	lsls	r1, r1, #16
    99d4:	4319      	orrs	r1, r3
    99d6:	9101      	str	r1, [sp, #4]
    99d8:	e77f      	b.n	98da <__udivmoddi4+0x13a>
    99da:	2320      	movs	r3, #32
    99dc:	9801      	ldr	r0, [sp, #4]
    99de:	003a      	movs	r2, r7
    99e0:	1a1b      	subs	r3, r3, r0
    99e2:	469c      	mov	ip, r3
    99e4:	4643      	mov	r3, r8
    99e6:	4661      	mov	r1, ip
    99e8:	4083      	lsls	r3, r0
    99ea:	40ca      	lsrs	r2, r1
    99ec:	4313      	orrs	r3, r2
    99ee:	002a      	movs	r2, r5
    99f0:	0026      	movs	r6, r4
    99f2:	40ca      	lsrs	r2, r1
    99f4:	4084      	lsls	r4, r0
    99f6:	40ce      	lsrs	r6, r1
    99f8:	4322      	orrs	r2, r4
    99fa:	0c1c      	lsrs	r4, r3, #16
    99fc:	4087      	lsls	r7, r0
    99fe:	4085      	lsls	r5, r0
    9a00:	fbb6 f0f4 	udiv	r0, r6, r4
    9a04:	4691      	mov	r9, r2
    9a06:	f64f 72ff 	movw	r2, #65535	; 0xffff
    9a0a:	0001      	movs	r1, r0
    9a0c:	401a      	ands	r2, r3
    9a0e:	4351      	muls	r1, r2
    9a10:	4688      	mov	r8, r1
    9a12:	0021      	movs	r1, r4
    9a14:	4341      	muls	r1, r0
    9a16:	1a76      	subs	r6, r6, r1
    9a18:	4649      	mov	r1, r9
    9a1a:	0436      	lsls	r6, r6, #16
    9a1c:	0c09      	lsrs	r1, r1, #16
    9a1e:	430e      	orrs	r6, r1
    9a20:	45b0      	cmp	r8, r6
    9a22:	d909      	bls.n	9a38 <__udivmoddi4+0x298>
    9a24:	1e41      	subs	r1, r0, #1
    9a26:	18f6      	adds	r6, r6, r3
    9a28:	468a      	mov	sl, r1
    9a2a:	42b3      	cmp	r3, r6
    9a2c:	d900      	bls.n	9a30 <__udivmoddi4+0x290>
    9a2e:	e080      	b.n	9b32 <__udivmoddi4+0x392>
    9a30:	45b0      	cmp	r8, r6
    9a32:	d97e      	bls.n	9b32 <__udivmoddi4+0x392>
    9a34:	3802      	subs	r0, #2
    9a36:	18f6      	adds	r6, r6, r3
    9a38:	4641      	mov	r1, r8
    9a3a:	1a76      	subs	r6, r6, r1
    9a3c:	fbb6 f8f4 	udiv	r8, r6, r4
    9a40:	4641      	mov	r1, r8
    9a42:	434c      	muls	r4, r1
    9a44:	434a      	muls	r2, r1
    9a46:	1b36      	subs	r6, r6, r4
    9a48:	4649      	mov	r1, r9
    9a4a:	f64f 74ff 	movw	r4, #65535	; 0xffff
    9a4e:	0436      	lsls	r6, r6, #16
    9a50:	400c      	ands	r4, r1
    9a52:	4334      	orrs	r4, r6
    9a54:	42a2      	cmp	r2, r4
    9a56:	d90b      	bls.n	9a70 <__udivmoddi4+0x2d0>
    9a58:	4641      	mov	r1, r8
    9a5a:	18e4      	adds	r4, r4, r3
    9a5c:	1e4e      	subs	r6, r1, #1
    9a5e:	42a3      	cmp	r3, r4
    9a60:	d863      	bhi.n	9b2a <__udivmoddi4+0x38a>
    9a62:	42a2      	cmp	r2, r4
    9a64:	d961      	bls.n	9b2a <__udivmoddi4+0x38a>
    9a66:	2102      	movs	r1, #2
    9a68:	4249      	negs	r1, r1
    9a6a:	4689      	mov	r9, r1
    9a6c:	18e4      	adds	r4, r4, r3
    9a6e:	44c8      	add	r8, r9
    9a70:	4641      	mov	r1, r8
    9a72:	f64f 76ff 	movw	r6, #65535	; 0xffff
    9a76:	0400      	lsls	r0, r0, #16
    9a78:	4308      	orrs	r0, r1
    9a7a:	0031      	movs	r1, r6
    9a7c:	4001      	ands	r1, r0
    9a7e:	468a      	mov	sl, r1
    9a80:	0c01      	lsrs	r1, r0, #16
    9a82:	4688      	mov	r8, r1
    9a84:	4651      	mov	r1, sl
    9a86:	403e      	ands	r6, r7
    9a88:	4371      	muls	r1, r6
    9a8a:	4689      	mov	r9, r1
    9a8c:	4641      	mov	r1, r8
    9a8e:	1aa2      	subs	r2, r4, r2
    9a90:	0c3c      	lsrs	r4, r7, #16
    9a92:	434e      	muls	r6, r1
    9a94:	4361      	muls	r1, r4
    9a96:	4688      	mov	r8, r1
    9a98:	4651      	mov	r1, sl
    9a9a:	434c      	muls	r4, r1
    9a9c:	4649      	mov	r1, r9
    9a9e:	0c09      	lsrs	r1, r1, #16
    9aa0:	468a      	mov	sl, r1
    9aa2:	19a4      	adds	r4, r4, r6
    9aa4:	4454      	add	r4, sl
    9aa6:	42a6      	cmp	r6, r4
    9aa8:	d903      	bls.n	9ab2 <__udivmoddi4+0x312>
    9aaa:	2180      	movs	r1, #128	; 0x80
    9aac:	0249      	lsls	r1, r1, #9
    9aae:	468a      	mov	sl, r1
    9ab0:	44d0      	add	r8, sl
    9ab2:	0c26      	lsrs	r6, r4, #16
    9ab4:	4446      	add	r6, r8
    9ab6:	f64f 78ff 	movw	r8, #65535	; 0xffff
    9aba:	0421      	lsls	r1, r4, #16
    9abc:	468a      	mov	sl, r1
    9abe:	464c      	mov	r4, r9
    9ac0:	4641      	mov	r1, r8
    9ac2:	4021      	ands	r1, r4
    9ac4:	4689      	mov	r9, r1
    9ac6:	4654      	mov	r4, sl
    9ac8:	444c      	add	r4, r9
    9aca:	42b2      	cmp	r2, r6
    9acc:	d324      	bcc.n	9b18 <__udivmoddi4+0x378>
    9ace:	d021      	beq.n	9b14 <__udivmoddi4+0x374>
    9ad0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9ad2:	b183      	cbz	r3, 9af6 <__udivmoddi4+0x356>
    9ad4:	1b2c      	subs	r4, r5, r4
    9ad6:	42a5      	cmp	r5, r4
    9ad8:	41ad      	sbcs	r5, r5
    9ada:	1b92      	subs	r2, r2, r6
    9adc:	426d      	negs	r5, r5
    9ade:	1b52      	subs	r2, r2, r5
    9ae0:	0013      	movs	r3, r2
    9ae2:	4661      	mov	r1, ip
    9ae4:	408b      	lsls	r3, r1
    9ae6:	9901      	ldr	r1, [sp, #4]
    9ae8:	40cc      	lsrs	r4, r1
    9aea:	40ca      	lsrs	r2, r1
    9aec:	431c      	orrs	r4, r3
    9aee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9af0:	601c      	str	r4, [r3, #0]
    9af2:	605a      	str	r2, [r3, #4]
    9af4:	2300      	movs	r3, #0
    9af6:	9301      	str	r3, [sp, #4]
    9af8:	e6bc      	b.n	9874 <__udivmoddi4+0xd4>
    9afa:	19a4      	adds	r4, r4, r6
    9afc:	1e59      	subs	r1, r3, #1
    9afe:	42a6      	cmp	r6, r4
    9b00:	d804      	bhi.n	9b0c <__udivmoddi4+0x36c>
    9b02:	42a5      	cmp	r5, r4
    9b04:	d902      	bls.n	9b0c <__udivmoddi4+0x36c>
    9b06:	3b02      	subs	r3, #2
    9b08:	19a4      	adds	r4, r4, r6
    9b0a:	e699      	b.n	9840 <__udivmoddi4+0xa0>
    9b0c:	000b      	movs	r3, r1
    9b0e:	e697      	b.n	9840 <__udivmoddi4+0xa0>
    9b10:	000a      	movs	r2, r1
    9b12:	e685      	b.n	9820 <__udivmoddi4+0x80>
    9b14:	42a5      	cmp	r5, r4
    9b16:	d2db      	bcs.n	9ad0 <__udivmoddi4+0x330>
    9b18:	1be7      	subs	r7, r4, r7
    9b1a:	1af3      	subs	r3, r6, r3
    9b1c:	42bc      	cmp	r4, r7
    9b1e:	41b6      	sbcs	r6, r6
    9b20:	4276      	negs	r6, r6
    9b22:	3801      	subs	r0, #1
    9b24:	1b9e      	subs	r6, r3, r6
    9b26:	003c      	movs	r4, r7
    9b28:	e7d2      	b.n	9ad0 <__udivmoddi4+0x330>
    9b2a:	46b0      	mov	r8, r6
    9b2c:	e7a0      	b.n	9a70 <__udivmoddi4+0x2d0>
    9b2e:	4694      	mov	ip, r2
    9b30:	e74d      	b.n	99ce <__udivmoddi4+0x22e>
    9b32:	4650      	mov	r0, sl
    9b34:	e780      	b.n	9a38 <__udivmoddi4+0x298>
    9b36:	0029      	movs	r1, r5
    9b38:	e727      	b.n	998a <__udivmoddi4+0x1ea>
    9b3a:	3d02      	subs	r5, #2
    9b3c:	19a4      	adds	r4, r4, r6
    9b3e:	e6f9      	b.n	9934 <__udivmoddi4+0x194>
    9b40:	2000      	movs	r0, #0
    9b42:	002f      	movs	r7, r5
    9b44:	e6b3      	b.n	98ae <__udivmoddi4+0x10e>
    9b46:	3b02      	subs	r3, #2
    9b48:	1992      	adds	r2, r2, r6
    9b4a:	e6dc      	b.n	9906 <__udivmoddi4+0x166>
    9b4c:	2300      	movs	r3, #0
    9b4e:	2000      	movs	r0, #0
    9b50:	9301      	str	r3, [sp, #4]
    9b52:	e68f      	b.n	9874 <__udivmoddi4+0xd4>

00009b54 <__aeabi_fadd>:
    9b54:	b5f0      	push	{r4, r5, r6, r7, lr}
    9b56:	46c6      	mov	lr, r8
    9b58:	024e      	lsls	r6, r1, #9
    9b5a:	0247      	lsls	r7, r0, #9
    9b5c:	0a76      	lsrs	r6, r6, #9
    9b5e:	0a7b      	lsrs	r3, r7, #9
    9b60:	0044      	lsls	r4, r0, #1
    9b62:	0fc5      	lsrs	r5, r0, #31
    9b64:	00f7      	lsls	r7, r6, #3
    9b66:	0048      	lsls	r0, r1, #1
    9b68:	4698      	mov	r8, r3
    9b6a:	b500      	push	{lr}
    9b6c:	0e24      	lsrs	r4, r4, #24
    9b6e:	002a      	movs	r2, r5
    9b70:	00db      	lsls	r3, r3, #3
    9b72:	0e00      	lsrs	r0, r0, #24
    9b74:	0fc9      	lsrs	r1, r1, #31
    9b76:	46bc      	mov	ip, r7
    9b78:	428d      	cmp	r5, r1
    9b7a:	d067      	beq.n	9c4c <__aeabi_fadd+0xf8>
    9b7c:	1a22      	subs	r2, r4, r0
    9b7e:	2a00      	cmp	r2, #0
    9b80:	dc00      	bgt.n	9b84 <__aeabi_fadd+0x30>
    9b82:	e0a5      	b.n	9cd0 <__aeabi_fadd+0x17c>
    9b84:	2800      	cmp	r0, #0
    9b86:	d13a      	bne.n	9bfe <__aeabi_fadd+0xaa>
    9b88:	2f00      	cmp	r7, #0
    9b8a:	d100      	bne.n	9b8e <__aeabi_fadd+0x3a>
    9b8c:	e093      	b.n	9cb6 <__aeabi_fadd+0x162>
    9b8e:	1e51      	subs	r1, r2, #1
    9b90:	2900      	cmp	r1, #0
    9b92:	d000      	beq.n	9b96 <__aeabi_fadd+0x42>
    9b94:	e0bb      	b.n	9d0e <__aeabi_fadd+0x1ba>
    9b96:	2401      	movs	r4, #1
    9b98:	1bdb      	subs	r3, r3, r7
    9b9a:	015a      	lsls	r2, r3, #5
    9b9c:	d546      	bpl.n	9c2c <__aeabi_fadd+0xd8>
    9b9e:	019b      	lsls	r3, r3, #6
    9ba0:	099e      	lsrs	r6, r3, #6
    9ba2:	0030      	movs	r0, r6
    9ba4:	f000 ff9a 	bl	aadc <__clzsi2>
    9ba8:	3805      	subs	r0, #5
    9baa:	4086      	lsls	r6, r0
    9bac:	4284      	cmp	r4, r0
    9bae:	dd00      	ble.n	9bb2 <__aeabi_fadd+0x5e>
    9bb0:	e09c      	b.n	9cec <__aeabi_fadd+0x198>
    9bb2:	1b04      	subs	r4, r0, r4
    9bb4:	0032      	movs	r2, r6
    9bb6:	2020      	movs	r0, #32
    9bb8:	3401      	adds	r4, #1
    9bba:	40e2      	lsrs	r2, r4
    9bbc:	1b04      	subs	r4, r0, r4
    9bbe:	40a6      	lsls	r6, r4
    9bc0:	0033      	movs	r3, r6
    9bc2:	1e5e      	subs	r6, r3, #1
    9bc4:	41b3      	sbcs	r3, r6
    9bc6:	2400      	movs	r4, #0
    9bc8:	4313      	orrs	r3, r2
    9bca:	075a      	lsls	r2, r3, #29
    9bcc:	d004      	beq.n	9bd8 <__aeabi_fadd+0x84>
    9bce:	220f      	movs	r2, #15
    9bd0:	401a      	ands	r2, r3
    9bd2:	2a04      	cmp	r2, #4
    9bd4:	d000      	beq.n	9bd8 <__aeabi_fadd+0x84>
    9bd6:	3304      	adds	r3, #4
    9bd8:	015a      	lsls	r2, r3, #5
    9bda:	d529      	bpl.n	9c30 <__aeabi_fadd+0xdc>
    9bdc:	3401      	adds	r4, #1
    9bde:	2cff      	cmp	r4, #255	; 0xff
    9be0:	d100      	bne.n	9be4 <__aeabi_fadd+0x90>
    9be2:	e080      	b.n	9ce6 <__aeabi_fadd+0x192>
    9be4:	002a      	movs	r2, r5
    9be6:	019b      	lsls	r3, r3, #6
    9be8:	0a5b      	lsrs	r3, r3, #9
    9bea:	b2e4      	uxtb	r4, r4
    9bec:	025b      	lsls	r3, r3, #9
    9bee:	05e4      	lsls	r4, r4, #23
    9bf0:	0a58      	lsrs	r0, r3, #9
    9bf2:	07d2      	lsls	r2, r2, #31
    9bf4:	4320      	orrs	r0, r4
    9bf6:	4310      	orrs	r0, r2
    9bf8:	bc04      	pop	{r2}
    9bfa:	4690      	mov	r8, r2
    9bfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9bfe:	2cff      	cmp	r4, #255	; 0xff
    9c00:	d0e3      	beq.n	9bca <__aeabi_fadd+0x76>
    9c02:	2180      	movs	r1, #128	; 0x80
    9c04:	0038      	movs	r0, r7
    9c06:	04c9      	lsls	r1, r1, #19
    9c08:	4308      	orrs	r0, r1
    9c0a:	4684      	mov	ip, r0
    9c0c:	2a1b      	cmp	r2, #27
    9c0e:	dd00      	ble.n	9c12 <__aeabi_fadd+0xbe>
    9c10:	e081      	b.n	9d16 <__aeabi_fadd+0x1c2>
    9c12:	2020      	movs	r0, #32
    9c14:	4661      	mov	r1, ip
    9c16:	40d1      	lsrs	r1, r2
    9c18:	1a82      	subs	r2, r0, r2
    9c1a:	4660      	mov	r0, ip
    9c1c:	4090      	lsls	r0, r2
    9c1e:	0002      	movs	r2, r0
    9c20:	1e50      	subs	r0, r2, #1
    9c22:	4182      	sbcs	r2, r0
    9c24:	430a      	orrs	r2, r1
    9c26:	1a9b      	subs	r3, r3, r2
    9c28:	015a      	lsls	r2, r3, #5
    9c2a:	d4b8      	bmi.n	9b9e <__aeabi_fadd+0x4a>
    9c2c:	075a      	lsls	r2, r3, #29
    9c2e:	d1ce      	bne.n	9bce <__aeabi_fadd+0x7a>
    9c30:	08de      	lsrs	r6, r3, #3
    9c32:	002a      	movs	r2, r5
    9c34:	2cff      	cmp	r4, #255	; 0xff
    9c36:	d13a      	bne.n	9cae <__aeabi_fadd+0x15a>
    9c38:	2e00      	cmp	r6, #0
    9c3a:	d100      	bne.n	9c3e <__aeabi_fadd+0xea>
    9c3c:	e0ac      	b.n	9d98 <__aeabi_fadd+0x244>
    9c3e:	2380      	movs	r3, #128	; 0x80
    9c40:	03db      	lsls	r3, r3, #15
    9c42:	4333      	orrs	r3, r6
    9c44:	025b      	lsls	r3, r3, #9
    9c46:	0a5b      	lsrs	r3, r3, #9
    9c48:	24ff      	movs	r4, #255	; 0xff
    9c4a:	e7cf      	b.n	9bec <__aeabi_fadd+0x98>
    9c4c:	1a21      	subs	r1, r4, r0
    9c4e:	2900      	cmp	r1, #0
    9c50:	dd51      	ble.n	9cf6 <__aeabi_fadd+0x1a2>
    9c52:	b390      	cbz	r0, 9cba <__aeabi_fadd+0x166>
    9c54:	2cff      	cmp	r4, #255	; 0xff
    9c56:	d0b8      	beq.n	9bca <__aeabi_fadd+0x76>
    9c58:	2080      	movs	r0, #128	; 0x80
    9c5a:	003e      	movs	r6, r7
    9c5c:	04c0      	lsls	r0, r0, #19
    9c5e:	4306      	orrs	r6, r0
    9c60:	46b4      	mov	ip, r6
    9c62:	291b      	cmp	r1, #27
    9c64:	dd00      	ble.n	9c68 <__aeabi_fadd+0x114>
    9c66:	e0a9      	b.n	9dbc <__aeabi_fadd+0x268>
    9c68:	2620      	movs	r6, #32
    9c6a:	4660      	mov	r0, ip
    9c6c:	40c8      	lsrs	r0, r1
    9c6e:	1a71      	subs	r1, r6, r1
    9c70:	4666      	mov	r6, ip
    9c72:	408e      	lsls	r6, r1
    9c74:	0031      	movs	r1, r6
    9c76:	1e4e      	subs	r6, r1, #1
    9c78:	41b1      	sbcs	r1, r6
    9c7a:	4301      	orrs	r1, r0
    9c7c:	185b      	adds	r3, r3, r1
    9c7e:	0159      	lsls	r1, r3, #5
    9c80:	d5d4      	bpl.n	9c2c <__aeabi_fadd+0xd8>
    9c82:	3401      	adds	r4, #1
    9c84:	2cff      	cmp	r4, #255	; 0xff
    9c86:	d100      	bne.n	9c8a <__aeabi_fadd+0x136>
    9c88:	e086      	b.n	9d98 <__aeabi_fadd+0x244>
    9c8a:	2201      	movs	r2, #1
    9c8c:	4975      	ldr	r1, [pc, #468]	; (9e64 <__aeabi_fadd+0x310>)
    9c8e:	401a      	ands	r2, r3
    9c90:	085b      	lsrs	r3, r3, #1
    9c92:	400b      	ands	r3, r1
    9c94:	4313      	orrs	r3, r2
    9c96:	e798      	b.n	9bca <__aeabi_fadd+0x76>
    9c98:	2c00      	cmp	r4, #0
    9c9a:	d000      	beq.n	9c9e <__aeabi_fadd+0x14a>
    9c9c:	e0a3      	b.n	9de6 <__aeabi_fadd+0x292>
    9c9e:	2b00      	cmp	r3, #0
    9ca0:	d000      	beq.n	9ca4 <__aeabi_fadd+0x150>
    9ca2:	e0b1      	b.n	9e08 <__aeabi_fadd+0x2b4>
    9ca4:	003b      	movs	r3, r7
    9ca6:	2f00      	cmp	r7, #0
    9ca8:	d160      	bne.n	9d6c <__aeabi_fadd+0x218>
    9caa:	2600      	movs	r6, #0
    9cac:	2200      	movs	r2, #0
    9cae:	0273      	lsls	r3, r6, #9
    9cb0:	0a5b      	lsrs	r3, r3, #9
    9cb2:	b2e4      	uxtb	r4, r4
    9cb4:	e79a      	b.n	9bec <__aeabi_fadd+0x98>
    9cb6:	0014      	movs	r4, r2
    9cb8:	e787      	b.n	9bca <__aeabi_fadd+0x76>
    9cba:	2f00      	cmp	r7, #0
    9cbc:	d04b      	beq.n	9d56 <__aeabi_fadd+0x202>
    9cbe:	1e48      	subs	r0, r1, #1
    9cc0:	2800      	cmp	r0, #0
    9cc2:	d155      	bne.n	9d70 <__aeabi_fadd+0x21c>
    9cc4:	4463      	add	r3, ip
    9cc6:	2401      	movs	r4, #1
    9cc8:	015a      	lsls	r2, r3, #5
    9cca:	d5af      	bpl.n	9c2c <__aeabi_fadd+0xd8>
    9ccc:	2402      	movs	r4, #2
    9cce:	e7dc      	b.n	9c8a <__aeabi_fadd+0x136>
    9cd0:	bb22      	cbnz	r2, 9d1c <__aeabi_fadd+0x1c8>
    9cd2:	1c62      	adds	r2, r4, #1
    9cd4:	b2d2      	uxtb	r2, r2
    9cd6:	2a01      	cmp	r2, #1
    9cd8:	ddde      	ble.n	9c98 <__aeabi_fadd+0x144>
    9cda:	1bde      	subs	r6, r3, r7
    9cdc:	0172      	lsls	r2, r6, #5
    9cde:	d534      	bpl.n	9d4a <__aeabi_fadd+0x1f6>
    9ce0:	1afe      	subs	r6, r7, r3
    9ce2:	000d      	movs	r5, r1
    9ce4:	e75d      	b.n	9ba2 <__aeabi_fadd+0x4e>
    9ce6:	002a      	movs	r2, r5
    9ce8:	2300      	movs	r3, #0
    9cea:	e77f      	b.n	9bec <__aeabi_fadd+0x98>
    9cec:	0033      	movs	r3, r6
    9cee:	4a5e      	ldr	r2, [pc, #376]	; (9e68 <__aeabi_fadd+0x314>)
    9cf0:	1a24      	subs	r4, r4, r0
    9cf2:	4013      	ands	r3, r2
    9cf4:	e769      	b.n	9bca <__aeabi_fadd+0x76>
    9cf6:	2900      	cmp	r1, #0
    9cf8:	d162      	bne.n	9dc0 <__aeabi_fadd+0x26c>
    9cfa:	1c61      	adds	r1, r4, #1
    9cfc:	b2c8      	uxtb	r0, r1
    9cfe:	2801      	cmp	r0, #1
    9d00:	dd4d      	ble.n	9d9e <__aeabi_fadd+0x24a>
    9d02:	29ff      	cmp	r1, #255	; 0xff
    9d04:	d048      	beq.n	9d98 <__aeabi_fadd+0x244>
    9d06:	4463      	add	r3, ip
    9d08:	085b      	lsrs	r3, r3, #1
    9d0a:	000c      	movs	r4, r1
    9d0c:	e75d      	b.n	9bca <__aeabi_fadd+0x76>
    9d0e:	2aff      	cmp	r2, #255	; 0xff
    9d10:	d040      	beq.n	9d94 <__aeabi_fadd+0x240>
    9d12:	000a      	movs	r2, r1
    9d14:	e77a      	b.n	9c0c <__aeabi_fadd+0xb8>
    9d16:	2201      	movs	r2, #1
    9d18:	1a9b      	subs	r3, r3, r2
    9d1a:	e785      	b.n	9c28 <__aeabi_fadd+0xd4>
    9d1c:	b1ec      	cbz	r4, 9d5a <__aeabi_fadd+0x206>
    9d1e:	28ff      	cmp	r0, #255	; 0xff
    9d20:	d022      	beq.n	9d68 <__aeabi_fadd+0x214>
    9d22:	2480      	movs	r4, #128	; 0x80
    9d24:	04e4      	lsls	r4, r4, #19
    9d26:	4252      	negs	r2, r2
    9d28:	4323      	orrs	r3, r4
    9d2a:	2a1b      	cmp	r2, #27
    9d2c:	dd00      	ble.n	9d30 <__aeabi_fadd+0x1dc>
    9d2e:	e086      	b.n	9e3e <__aeabi_fadd+0x2ea>
    9d30:	001c      	movs	r4, r3
    9d32:	2520      	movs	r5, #32
    9d34:	40d4      	lsrs	r4, r2
    9d36:	1aaa      	subs	r2, r5, r2
    9d38:	4093      	lsls	r3, r2
    9d3a:	1e5a      	subs	r2, r3, #1
    9d3c:	4193      	sbcs	r3, r2
    9d3e:	4323      	orrs	r3, r4
    9d40:	4662      	mov	r2, ip
    9d42:	0004      	movs	r4, r0
    9d44:	1ad3      	subs	r3, r2, r3
    9d46:	000d      	movs	r5, r1
    9d48:	e727      	b.n	9b9a <__aeabi_fadd+0x46>
    9d4a:	2e00      	cmp	r6, #0
    9d4c:	d000      	beq.n	9d50 <__aeabi_fadd+0x1fc>
    9d4e:	e728      	b.n	9ba2 <__aeabi_fadd+0x4e>
    9d50:	2200      	movs	r2, #0
    9d52:	2400      	movs	r4, #0
    9d54:	e7ab      	b.n	9cae <__aeabi_fadd+0x15a>
    9d56:	000c      	movs	r4, r1
    9d58:	e737      	b.n	9bca <__aeabi_fadd+0x76>
    9d5a:	2b00      	cmp	r3, #0
    9d5c:	d049      	beq.n	9df2 <__aeabi_fadd+0x29e>
    9d5e:	43d2      	mvns	r2, r2
    9d60:	2a00      	cmp	r2, #0
    9d62:	d0ed      	beq.n	9d40 <__aeabi_fadd+0x1ec>
    9d64:	28ff      	cmp	r0, #255	; 0xff
    9d66:	d1e0      	bne.n	9d2a <__aeabi_fadd+0x1d6>
    9d68:	4663      	mov	r3, ip
    9d6a:	24ff      	movs	r4, #255	; 0xff
    9d6c:	000d      	movs	r5, r1
    9d6e:	e72c      	b.n	9bca <__aeabi_fadd+0x76>
    9d70:	29ff      	cmp	r1, #255	; 0xff
    9d72:	d00f      	beq.n	9d94 <__aeabi_fadd+0x240>
    9d74:	0001      	movs	r1, r0
    9d76:	e774      	b.n	9c62 <__aeabi_fadd+0x10e>
    9d78:	2b00      	cmp	r3, #0
    9d7a:	d05d      	beq.n	9e38 <__aeabi_fadd+0x2e4>
    9d7c:	24ff      	movs	r4, #255	; 0xff
    9d7e:	2f00      	cmp	r7, #0
    9d80:	d100      	bne.n	9d84 <__aeabi_fadd+0x230>
    9d82:	e722      	b.n	9bca <__aeabi_fadd+0x76>
    9d84:	2280      	movs	r2, #128	; 0x80
    9d86:	4641      	mov	r1, r8
    9d88:	03d2      	lsls	r2, r2, #15
    9d8a:	4211      	tst	r1, r2
    9d8c:	d002      	beq.n	9d94 <__aeabi_fadd+0x240>
    9d8e:	4216      	tst	r6, r2
    9d90:	d100      	bne.n	9d94 <__aeabi_fadd+0x240>
    9d92:	003b      	movs	r3, r7
    9d94:	24ff      	movs	r4, #255	; 0xff
    9d96:	e718      	b.n	9bca <__aeabi_fadd+0x76>
    9d98:	24ff      	movs	r4, #255	; 0xff
    9d9a:	2300      	movs	r3, #0
    9d9c:	e726      	b.n	9bec <__aeabi_fadd+0x98>
    9d9e:	2c00      	cmp	r4, #0
    9da0:	d1ea      	bne.n	9d78 <__aeabi_fadd+0x224>
    9da2:	2b00      	cmp	r3, #0
    9da4:	d054      	beq.n	9e50 <__aeabi_fadd+0x2fc>
    9da6:	2f00      	cmp	r7, #0
    9da8:	d100      	bne.n	9dac <__aeabi_fadd+0x258>
    9daa:	e70e      	b.n	9bca <__aeabi_fadd+0x76>
    9dac:	4463      	add	r3, ip
    9dae:	015a      	lsls	r2, r3, #5
    9db0:	d400      	bmi.n	9db4 <__aeabi_fadd+0x260>
    9db2:	e73b      	b.n	9c2c <__aeabi_fadd+0xd8>
    9db4:	4a2c      	ldr	r2, [pc, #176]	; (9e68 <__aeabi_fadd+0x314>)
    9db6:	000c      	movs	r4, r1
    9db8:	4013      	ands	r3, r2
    9dba:	e706      	b.n	9bca <__aeabi_fadd+0x76>
    9dbc:	2101      	movs	r1, #1
    9dbe:	e75d      	b.n	9c7c <__aeabi_fadd+0x128>
    9dc0:	b9dc      	cbnz	r4, 9dfa <__aeabi_fadd+0x2a6>
    9dc2:	b3f3      	cbz	r3, 9e42 <__aeabi_fadd+0x2ee>
    9dc4:	43c9      	mvns	r1, r1
    9dc6:	b159      	cbz	r1, 9de0 <__aeabi_fadd+0x28c>
    9dc8:	28ff      	cmp	r0, #255	; 0xff
    9dca:	d035      	beq.n	9e38 <__aeabi_fadd+0x2e4>
    9dcc:	291b      	cmp	r1, #27
    9dce:	dc47      	bgt.n	9e60 <__aeabi_fadd+0x30c>
    9dd0:	001c      	movs	r4, r3
    9dd2:	2620      	movs	r6, #32
    9dd4:	40cc      	lsrs	r4, r1
    9dd6:	1a71      	subs	r1, r6, r1
    9dd8:	408b      	lsls	r3, r1
    9dda:	1e59      	subs	r1, r3, #1
    9ddc:	418b      	sbcs	r3, r1
    9dde:	4323      	orrs	r3, r4
    9de0:	4463      	add	r3, ip
    9de2:	0004      	movs	r4, r0
    9de4:	e74b      	b.n	9c7e <__aeabi_fadd+0x12a>
    9de6:	b9c3      	cbnz	r3, 9e1a <__aeabi_fadd+0x2c6>
    9de8:	003b      	movs	r3, r7
    9dea:	b36f      	cbz	r7, 9e48 <__aeabi_fadd+0x2f4>
    9dec:	000d      	movs	r5, r1
    9dee:	24ff      	movs	r4, #255	; 0xff
    9df0:	e6eb      	b.n	9bca <__aeabi_fadd+0x76>
    9df2:	003b      	movs	r3, r7
    9df4:	0004      	movs	r4, r0
    9df6:	000d      	movs	r5, r1
    9df8:	e6e7      	b.n	9bca <__aeabi_fadd+0x76>
    9dfa:	28ff      	cmp	r0, #255	; 0xff
    9dfc:	d01c      	beq.n	9e38 <__aeabi_fadd+0x2e4>
    9dfe:	2480      	movs	r4, #128	; 0x80
    9e00:	04e4      	lsls	r4, r4, #19
    9e02:	4249      	negs	r1, r1
    9e04:	4323      	orrs	r3, r4
    9e06:	e7e1      	b.n	9dcc <__aeabi_fadd+0x278>
    9e08:	2f00      	cmp	r7, #0
    9e0a:	d100      	bne.n	9e0e <__aeabi_fadd+0x2ba>
    9e0c:	e6dd      	b.n	9bca <__aeabi_fadd+0x76>
    9e0e:	1bde      	subs	r6, r3, r7
    9e10:	0172      	lsls	r2, r6, #5
    9e12:	d51f      	bpl.n	9e54 <__aeabi_fadd+0x300>
    9e14:	1afb      	subs	r3, r7, r3
    9e16:	000d      	movs	r5, r1
    9e18:	e6d7      	b.n	9bca <__aeabi_fadd+0x76>
    9e1a:	24ff      	movs	r4, #255	; 0xff
    9e1c:	2f00      	cmp	r7, #0
    9e1e:	d100      	bne.n	9e22 <__aeabi_fadd+0x2ce>
    9e20:	e6d3      	b.n	9bca <__aeabi_fadd+0x76>
    9e22:	2280      	movs	r2, #128	; 0x80
    9e24:	4640      	mov	r0, r8
    9e26:	03d2      	lsls	r2, r2, #15
    9e28:	4210      	tst	r0, r2
    9e2a:	d0b3      	beq.n	9d94 <__aeabi_fadd+0x240>
    9e2c:	4216      	tst	r6, r2
    9e2e:	d1b1      	bne.n	9d94 <__aeabi_fadd+0x240>
    9e30:	003b      	movs	r3, r7
    9e32:	000d      	movs	r5, r1
    9e34:	24ff      	movs	r4, #255	; 0xff
    9e36:	e6c8      	b.n	9bca <__aeabi_fadd+0x76>
    9e38:	4663      	mov	r3, ip
    9e3a:	24ff      	movs	r4, #255	; 0xff
    9e3c:	e6c5      	b.n	9bca <__aeabi_fadd+0x76>
    9e3e:	2301      	movs	r3, #1
    9e40:	e77e      	b.n	9d40 <__aeabi_fadd+0x1ec>
    9e42:	003b      	movs	r3, r7
    9e44:	0004      	movs	r4, r0
    9e46:	e6c0      	b.n	9bca <__aeabi_fadd+0x76>
    9e48:	2680      	movs	r6, #128	; 0x80
    9e4a:	2200      	movs	r2, #0
    9e4c:	03f6      	lsls	r6, r6, #15
    9e4e:	e6f6      	b.n	9c3e <__aeabi_fadd+0xea>
    9e50:	003b      	movs	r3, r7
    9e52:	e6ba      	b.n	9bca <__aeabi_fadd+0x76>
    9e54:	0033      	movs	r3, r6
    9e56:	2e00      	cmp	r6, #0
    9e58:	d000      	beq.n	9e5c <__aeabi_fadd+0x308>
    9e5a:	e6e7      	b.n	9c2c <__aeabi_fadd+0xd8>
    9e5c:	2200      	movs	r2, #0
    9e5e:	e726      	b.n	9cae <__aeabi_fadd+0x15a>
    9e60:	2301      	movs	r3, #1
    9e62:	e7bd      	b.n	9de0 <__aeabi_fadd+0x28c>
    9e64:	7dffffff 	.word	0x7dffffff
    9e68:	fbffffff 	.word	0xfbffffff

00009e6c <__aeabi_fdiv>:
    9e6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    9e6e:	4657      	mov	r7, sl
    9e70:	464e      	mov	r6, r9
    9e72:	46de      	mov	lr, fp
    9e74:	4645      	mov	r5, r8
    9e76:	b5e0      	push	{r5, r6, r7, lr}
    9e78:	0043      	lsls	r3, r0, #1
    9e7a:	0244      	lsls	r4, r0, #9
    9e7c:	0fc6      	lsrs	r6, r0, #31
    9e7e:	0e1b      	lsrs	r3, r3, #24
    9e80:	b083      	sub	sp, #12
    9e82:	1c0f      	adds	r7, r1, #0
    9e84:	0a64      	lsrs	r4, r4, #9
    9e86:	46b2      	mov	sl, r6
    9e88:	2b00      	cmp	r3, #0
    9e8a:	d054      	beq.n	9f36 <__aeabi_fdiv+0xca>
    9e8c:	2bff      	cmp	r3, #255	; 0xff
    9e8e:	d028      	beq.n	9ee2 <__aeabi_fdiv+0x76>
    9e90:	2280      	movs	r2, #128	; 0x80
    9e92:	00e4      	lsls	r4, r4, #3
    9e94:	04d2      	lsls	r2, r2, #19
    9e96:	4314      	orrs	r4, r2
    9e98:	227f      	movs	r2, #127	; 0x7f
    9e9a:	4252      	negs	r2, r2
    9e9c:	4690      	mov	r8, r2
    9e9e:	f240 0900 	movw	r9, #0
    9ea2:	f240 0b00 	movw	fp, #0
    9ea6:	4498      	add	r8, r3
    9ea8:	0078      	lsls	r0, r7, #1
    9eaa:	027d      	lsls	r5, r7, #9
    9eac:	0ffb      	lsrs	r3, r7, #31
    9eae:	0e00      	lsrs	r0, r0, #24
    9eb0:	0a6d      	lsrs	r5, r5, #9
    9eb2:	9300      	str	r3, [sp, #0]
    9eb4:	b328      	cbz	r0, 9f02 <__aeabi_fdiv+0x96>
    9eb6:	28ff      	cmp	r0, #255	; 0xff
    9eb8:	d045      	beq.n	9f46 <__aeabi_fdiv+0xda>
    9eba:	2380      	movs	r3, #128	; 0x80
    9ebc:	2100      	movs	r1, #0
    9ebe:	00ed      	lsls	r5, r5, #3
    9ec0:	04db      	lsls	r3, r3, #19
    9ec2:	431d      	orrs	r5, r3
    9ec4:	387f      	subs	r0, #127	; 0x7f
    9ec6:	4647      	mov	r7, r8
    9ec8:	1a38      	subs	r0, r7, r0
    9eca:	464f      	mov	r7, r9
    9ecc:	430f      	orrs	r7, r1
    9ece:	00bf      	lsls	r7, r7, #2
    9ed0:	46b9      	mov	r9, r7
    9ed2:	0033      	movs	r3, r6
    9ed4:	9a00      	ldr	r2, [sp, #0]
    9ed6:	4f87      	ldr	r7, [pc, #540]	; (a0f4 <__aeabi_fdiv+0x288>)
    9ed8:	4053      	eors	r3, r2
    9eda:	464a      	mov	r2, r9
    9edc:	58ba      	ldr	r2, [r7, r2]
    9ede:	9301      	str	r3, [sp, #4]
    9ee0:	4697      	mov	pc, r2
    9ee2:	2c00      	cmp	r4, #0
    9ee4:	d14d      	bne.n	9f82 <__aeabi_fdiv+0x116>
    9ee6:	0078      	lsls	r0, r7, #1
    9ee8:	027d      	lsls	r5, r7, #9
    9eea:	0ffb      	lsrs	r3, r7, #31
    9eec:	0e00      	lsrs	r0, r0, #24
    9eee:	f240 0908 	movw	r9, #8
    9ef2:	f240 08ff 	movw	r8, #255	; 0xff
    9ef6:	f240 0b02 	movw	fp, #2
    9efa:	0a6d      	lsrs	r5, r5, #9
    9efc:	9300      	str	r3, [sp, #0]
    9efe:	2800      	cmp	r0, #0
    9f00:	d1d9      	bne.n	9eb6 <__aeabi_fdiv+0x4a>
    9f02:	bb25      	cbnz	r5, 9f4e <__aeabi_fdiv+0xe2>
    9f04:	2000      	movs	r0, #0
    9f06:	2101      	movs	r1, #1
    9f08:	0033      	movs	r3, r6
    9f0a:	9a00      	ldr	r2, [sp, #0]
    9f0c:	4f7a      	ldr	r7, [pc, #488]	; (a0f8 <__aeabi_fdiv+0x28c>)
    9f0e:	4053      	eors	r3, r2
    9f10:	4642      	mov	r2, r8
    9f12:	1a10      	subs	r0, r2, r0
    9f14:	464a      	mov	r2, r9
    9f16:	430a      	orrs	r2, r1
    9f18:	0092      	lsls	r2, r2, #2
    9f1a:	58ba      	ldr	r2, [r7, r2]
    9f1c:	001d      	movs	r5, r3
    9f1e:	4697      	mov	pc, r2
    9f20:	9b00      	ldr	r3, [sp, #0]
    9f22:	002c      	movs	r4, r5
    9f24:	469a      	mov	sl, r3
    9f26:	468b      	mov	fp, r1
    9f28:	465b      	mov	r3, fp
    9f2a:	2b02      	cmp	r3, #2
    9f2c:	d130      	bne.n	9f90 <__aeabi_fdiv+0x124>
    9f2e:	4653      	mov	r3, sl
    9f30:	21ff      	movs	r1, #255	; 0xff
    9f32:	2400      	movs	r4, #0
    9f34:	e037      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    9f36:	b9b4      	cbnz	r4, 9f66 <__aeabi_fdiv+0xfa>
    9f38:	f240 0904 	movw	r9, #4
    9f3c:	f240 0800 	movw	r8, #0
    9f40:	f240 0b01 	movw	fp, #1
    9f44:	e7b0      	b.n	9ea8 <__aeabi_fdiv+0x3c>
    9f46:	20ff      	movs	r0, #255	; 0xff
    9f48:	b95d      	cbnz	r5, 9f62 <__aeabi_fdiv+0xf6>
    9f4a:	2102      	movs	r1, #2
    9f4c:	e7dc      	b.n	9f08 <__aeabi_fdiv+0x9c>
    9f4e:	0028      	movs	r0, r5
    9f50:	f000 fdc4 	bl	aadc <__clzsi2>
    9f54:	1f43      	subs	r3, r0, #5
    9f56:	409d      	lsls	r5, r3
    9f58:	2376      	movs	r3, #118	; 0x76
    9f5a:	425b      	negs	r3, r3
    9f5c:	1a18      	subs	r0, r3, r0
    9f5e:	2100      	movs	r1, #0
    9f60:	e7b1      	b.n	9ec6 <__aeabi_fdiv+0x5a>
    9f62:	2103      	movs	r1, #3
    9f64:	e7af      	b.n	9ec6 <__aeabi_fdiv+0x5a>
    9f66:	0020      	movs	r0, r4
    9f68:	f000 fdb8 	bl	aadc <__clzsi2>
    9f6c:	1f43      	subs	r3, r0, #5
    9f6e:	409c      	lsls	r4, r3
    9f70:	2376      	movs	r3, #118	; 0x76
    9f72:	425b      	negs	r3, r3
    9f74:	1a1b      	subs	r3, r3, r0
    9f76:	4698      	mov	r8, r3
    9f78:	f240 0900 	movw	r9, #0
    9f7c:	f240 0b00 	movw	fp, #0
    9f80:	e792      	b.n	9ea8 <__aeabi_fdiv+0x3c>
    9f82:	f240 090c 	movw	r9, #12
    9f86:	f240 08ff 	movw	r8, #255	; 0xff
    9f8a:	f240 0b03 	movw	fp, #3
    9f8e:	e78b      	b.n	9ea8 <__aeabi_fdiv+0x3c>
    9f90:	2b03      	cmp	r3, #3
    9f92:	d100      	bne.n	9f96 <__aeabi_fdiv+0x12a>
    9f94:	e0a5      	b.n	a0e2 <__aeabi_fdiv+0x276>
    9f96:	4655      	mov	r5, sl
    9f98:	2b01      	cmp	r3, #1
    9f9a:	d000      	beq.n	9f9e <__aeabi_fdiv+0x132>
    9f9c:	e081      	b.n	a0a2 <__aeabi_fdiv+0x236>
    9f9e:	2301      	movs	r3, #1
    9fa0:	2100      	movs	r1, #0
    9fa2:	2400      	movs	r4, #0
    9fa4:	402b      	ands	r3, r5
    9fa6:	0264      	lsls	r4, r4, #9
    9fa8:	05c9      	lsls	r1, r1, #23
    9faa:	0a60      	lsrs	r0, r4, #9
    9fac:	07db      	lsls	r3, r3, #31
    9fae:	4308      	orrs	r0, r1
    9fb0:	4318      	orrs	r0, r3
    9fb2:	b003      	add	sp, #12
    9fb4:	bc3c      	pop	{r2, r3, r4, r5}
    9fb6:	4690      	mov	r8, r2
    9fb8:	4699      	mov	r9, r3
    9fba:	46a2      	mov	sl, r4
    9fbc:	46ab      	mov	fp, r5
    9fbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9fc0:	2480      	movs	r4, #128	; 0x80
    9fc2:	2300      	movs	r3, #0
    9fc4:	03e4      	lsls	r4, r4, #15
    9fc6:	21ff      	movs	r1, #255	; 0xff
    9fc8:	e7ed      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    9fca:	21ff      	movs	r1, #255	; 0xff
    9fcc:	2400      	movs	r4, #0
    9fce:	e7ea      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    9fd0:	2301      	movs	r3, #1
    9fd2:	1a59      	subs	r1, r3, r1
    9fd4:	291b      	cmp	r1, #27
    9fd6:	dd66      	ble.n	a0a6 <__aeabi_fdiv+0x23a>
    9fd8:	9a01      	ldr	r2, [sp, #4]
    9fda:	4013      	ands	r3, r2
    9fdc:	2100      	movs	r1, #0
    9fde:	2400      	movs	r4, #0
    9fe0:	e7e1      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    9fe2:	2380      	movs	r3, #128	; 0x80
    9fe4:	03db      	lsls	r3, r3, #15
    9fe6:	421c      	tst	r4, r3
    9fe8:	d038      	beq.n	a05c <__aeabi_fdiv+0x1f0>
    9fea:	421d      	tst	r5, r3
    9fec:	d051      	beq.n	a092 <__aeabi_fdiv+0x226>
    9fee:	431c      	orrs	r4, r3
    9ff0:	0264      	lsls	r4, r4, #9
    9ff2:	0a64      	lsrs	r4, r4, #9
    9ff4:	0033      	movs	r3, r6
    9ff6:	21ff      	movs	r1, #255	; 0xff
    9ff8:	e7d5      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    9ffa:	0163      	lsls	r3, r4, #5
    9ffc:	016c      	lsls	r4, r5, #5
    9ffe:	42a3      	cmp	r3, r4
    a000:	d23b      	bcs.n	a07a <__aeabi_fdiv+0x20e>
    a002:	261b      	movs	r6, #27
    a004:	2100      	movs	r1, #0
    a006:	3801      	subs	r0, #1
    a008:	2501      	movs	r5, #1
    a00a:	001f      	movs	r7, r3
    a00c:	0049      	lsls	r1, r1, #1
    a00e:	005b      	lsls	r3, r3, #1
    a010:	2f00      	cmp	r7, #0
    a012:	db01      	blt.n	a018 <__aeabi_fdiv+0x1ac>
    a014:	429c      	cmp	r4, r3
    a016:	d801      	bhi.n	a01c <__aeabi_fdiv+0x1b0>
    a018:	1b1b      	subs	r3, r3, r4
    a01a:	4329      	orrs	r1, r5
    a01c:	3e01      	subs	r6, #1
    a01e:	2e00      	cmp	r6, #0
    a020:	d1f3      	bne.n	a00a <__aeabi_fdiv+0x19e>
    a022:	001c      	movs	r4, r3
    a024:	1e63      	subs	r3, r4, #1
    a026:	419c      	sbcs	r4, r3
    a028:	430c      	orrs	r4, r1
    a02a:	0001      	movs	r1, r0
    a02c:	317f      	adds	r1, #127	; 0x7f
    a02e:	2900      	cmp	r1, #0
    a030:	ddce      	ble.n	9fd0 <__aeabi_fdiv+0x164>
    a032:	0763      	lsls	r3, r4, #29
    a034:	d004      	beq.n	a040 <__aeabi_fdiv+0x1d4>
    a036:	230f      	movs	r3, #15
    a038:	4023      	ands	r3, r4
    a03a:	2b04      	cmp	r3, #4
    a03c:	d000      	beq.n	a040 <__aeabi_fdiv+0x1d4>
    a03e:	3404      	adds	r4, #4
    a040:	0123      	lsls	r3, r4, #4
    a042:	d503      	bpl.n	a04c <__aeabi_fdiv+0x1e0>
    a044:	0001      	movs	r1, r0
    a046:	4b2d      	ldr	r3, [pc, #180]	; (a0fc <__aeabi_fdiv+0x290>)
    a048:	3180      	adds	r1, #128	; 0x80
    a04a:	401c      	ands	r4, r3
    a04c:	29fe      	cmp	r1, #254	; 0xfe
    a04e:	dd0d      	ble.n	a06c <__aeabi_fdiv+0x200>
    a050:	2301      	movs	r3, #1
    a052:	9a01      	ldr	r2, [sp, #4]
    a054:	21ff      	movs	r1, #255	; 0xff
    a056:	4013      	ands	r3, r2
    a058:	2400      	movs	r4, #0
    a05a:	e7a4      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    a05c:	2380      	movs	r3, #128	; 0x80
    a05e:	03db      	lsls	r3, r3, #15
    a060:	431c      	orrs	r4, r3
    a062:	0264      	lsls	r4, r4, #9
    a064:	0a64      	lsrs	r4, r4, #9
    a066:	0033      	movs	r3, r6
    a068:	21ff      	movs	r1, #255	; 0xff
    a06a:	e79c      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    a06c:	2301      	movs	r3, #1
    a06e:	9a01      	ldr	r2, [sp, #4]
    a070:	01a4      	lsls	r4, r4, #6
    a072:	0a64      	lsrs	r4, r4, #9
    a074:	b2c9      	uxtb	r1, r1
    a076:	4013      	ands	r3, r2
    a078:	e795      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    a07a:	1b1b      	subs	r3, r3, r4
    a07c:	261a      	movs	r6, #26
    a07e:	2101      	movs	r1, #1
    a080:	e7c2      	b.n	a008 <__aeabi_fdiv+0x19c>
    a082:	9b00      	ldr	r3, [sp, #0]
    a084:	468b      	mov	fp, r1
    a086:	469a      	mov	sl, r3
    a088:	2400      	movs	r4, #0
    a08a:	e74d      	b.n	9f28 <__aeabi_fdiv+0xbc>
    a08c:	0263      	lsls	r3, r4, #9
    a08e:	d5e5      	bpl.n	a05c <__aeabi_fdiv+0x1f0>
    a090:	2500      	movs	r5, #0
    a092:	2480      	movs	r4, #128	; 0x80
    a094:	03e4      	lsls	r4, r4, #15
    a096:	432c      	orrs	r4, r5
    a098:	0264      	lsls	r4, r4, #9
    a09a:	0a64      	lsrs	r4, r4, #9
    a09c:	9b00      	ldr	r3, [sp, #0]
    a09e:	21ff      	movs	r1, #255	; 0xff
    a0a0:	e781      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    a0a2:	9501      	str	r5, [sp, #4]
    a0a4:	e7c1      	b.n	a02a <__aeabi_fdiv+0x1be>
    a0a6:	0023      	movs	r3, r4
    a0a8:	2020      	movs	r0, #32
    a0aa:	40cb      	lsrs	r3, r1
    a0ac:	1a41      	subs	r1, r0, r1
    a0ae:	408c      	lsls	r4, r1
    a0b0:	1e61      	subs	r1, r4, #1
    a0b2:	418c      	sbcs	r4, r1
    a0b4:	431c      	orrs	r4, r3
    a0b6:	0763      	lsls	r3, r4, #29
    a0b8:	d004      	beq.n	a0c4 <__aeabi_fdiv+0x258>
    a0ba:	230f      	movs	r3, #15
    a0bc:	4023      	ands	r3, r4
    a0be:	2b04      	cmp	r3, #4
    a0c0:	d000      	beq.n	a0c4 <__aeabi_fdiv+0x258>
    a0c2:	3404      	adds	r4, #4
    a0c4:	0163      	lsls	r3, r4, #5
    a0c6:	d505      	bpl.n	a0d4 <__aeabi_fdiv+0x268>
    a0c8:	2301      	movs	r3, #1
    a0ca:	9a01      	ldr	r2, [sp, #4]
    a0cc:	2101      	movs	r1, #1
    a0ce:	4013      	ands	r3, r2
    a0d0:	2400      	movs	r4, #0
    a0d2:	e768      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    a0d4:	2301      	movs	r3, #1
    a0d6:	9a01      	ldr	r2, [sp, #4]
    a0d8:	01a4      	lsls	r4, r4, #6
    a0da:	0a64      	lsrs	r4, r4, #9
    a0dc:	4013      	ands	r3, r2
    a0de:	2100      	movs	r1, #0
    a0e0:	e761      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    a0e2:	2380      	movs	r3, #128	; 0x80
    a0e4:	03db      	lsls	r3, r3, #15
    a0e6:	431c      	orrs	r4, r3
    a0e8:	0264      	lsls	r4, r4, #9
    a0ea:	0a64      	lsrs	r4, r4, #9
    a0ec:	4653      	mov	r3, sl
    a0ee:	21ff      	movs	r1, #255	; 0xff
    a0f0:	e759      	b.n	9fa6 <__aeabi_fdiv+0x13a>
    a0f2:	46c0      	nop			; (mov r8, r8)
    a0f4:	0000b804 	.word	0x0000b804
    a0f8:	0000b844 	.word	0x0000b844
    a0fc:	f7ffffff 	.word	0xf7ffffff

0000a100 <__eqsf2>:
    a100:	b570      	push	{r4, r5, r6, lr}
    a102:	0042      	lsls	r2, r0, #1
    a104:	0245      	lsls	r5, r0, #9
    a106:	024e      	lsls	r6, r1, #9
    a108:	004c      	lsls	r4, r1, #1
    a10a:	0fc3      	lsrs	r3, r0, #31
    a10c:	0a6d      	lsrs	r5, r5, #9
    a10e:	0e12      	lsrs	r2, r2, #24
    a110:	0a76      	lsrs	r6, r6, #9
    a112:	0e24      	lsrs	r4, r4, #24
    a114:	0fc9      	lsrs	r1, r1, #31
    a116:	2001      	movs	r0, #1
    a118:	2aff      	cmp	r2, #255	; 0xff
    a11a:	d006      	beq.n	a12a <__eqsf2+0x2a>
    a11c:	2cff      	cmp	r4, #255	; 0xff
    a11e:	d003      	beq.n	a128 <__eqsf2+0x28>
    a120:	42a2      	cmp	r2, r4
    a122:	d101      	bne.n	a128 <__eqsf2+0x28>
    a124:	42b5      	cmp	r5, r6
    a126:	d006      	beq.n	a136 <__eqsf2+0x36>
    a128:	bd70      	pop	{r4, r5, r6, pc}
    a12a:	2d00      	cmp	r5, #0
    a12c:	d1fc      	bne.n	a128 <__eqsf2+0x28>
    a12e:	2cff      	cmp	r4, #255	; 0xff
    a130:	d1fa      	bne.n	a128 <__eqsf2+0x28>
    a132:	2e00      	cmp	r6, #0
    a134:	d1f8      	bne.n	a128 <__eqsf2+0x28>
    a136:	428b      	cmp	r3, r1
    a138:	d006      	beq.n	a148 <__eqsf2+0x48>
    a13a:	2001      	movs	r0, #1
    a13c:	2a00      	cmp	r2, #0
    a13e:	d1f3      	bne.n	a128 <__eqsf2+0x28>
    a140:	0028      	movs	r0, r5
    a142:	1e45      	subs	r5, r0, #1
    a144:	41a8      	sbcs	r0, r5
    a146:	e7ef      	b.n	a128 <__eqsf2+0x28>
    a148:	2000      	movs	r0, #0
    a14a:	e7ed      	b.n	a128 <__eqsf2+0x28>

0000a14c <__gesf2>:
    a14c:	b5f0      	push	{r4, r5, r6, r7, lr}
    a14e:	0042      	lsls	r2, r0, #1
    a150:	0245      	lsls	r5, r0, #9
    a152:	024c      	lsls	r4, r1, #9
    a154:	0fc3      	lsrs	r3, r0, #31
    a156:	0048      	lsls	r0, r1, #1
    a158:	0a6d      	lsrs	r5, r5, #9
    a15a:	0e12      	lsrs	r2, r2, #24
    a15c:	0a64      	lsrs	r4, r4, #9
    a15e:	0e00      	lsrs	r0, r0, #24
    a160:	0fc9      	lsrs	r1, r1, #31
    a162:	2aff      	cmp	r2, #255	; 0xff
    a164:	d01d      	beq.n	a1a2 <__gesf2+0x56>
    a166:	28ff      	cmp	r0, #255	; 0xff
    a168:	d010      	beq.n	a18c <__gesf2+0x40>
    a16a:	b93a      	cbnz	r2, a17c <__gesf2+0x30>
    a16c:	426e      	negs	r6, r5
    a16e:	416e      	adcs	r6, r5
    a170:	b2f6      	uxtb	r6, r6
    a172:	b980      	cbnz	r0, a196 <__gesf2+0x4a>
    a174:	b97c      	cbnz	r4, a196 <__gesf2+0x4a>
    a176:	2000      	movs	r0, #0
    a178:	b13d      	cbz	r5, a18a <__gesf2+0x3e>
    a17a:	e003      	b.n	a184 <__gesf2+0x38>
    a17c:	b900      	cbnz	r0, a180 <__gesf2+0x34>
    a17e:	b10c      	cbz	r4, a184 <__gesf2+0x38>
    a180:	428b      	cmp	r3, r1
    a182:	d011      	beq.n	a1a8 <__gesf2+0x5c>
    a184:	2101      	movs	r1, #1
    a186:	4258      	negs	r0, r3
    a188:	4308      	orrs	r0, r1
    a18a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a18c:	2c00      	cmp	r4, #0
    a18e:	d0ec      	beq.n	a16a <__gesf2+0x1e>
    a190:	2002      	movs	r0, #2
    a192:	4240      	negs	r0, r0
    a194:	e7f9      	b.n	a18a <__gesf2+0x3e>
    a196:	2e00      	cmp	r6, #0
    a198:	d0f2      	beq.n	a180 <__gesf2+0x34>
    a19a:	2001      	movs	r0, #1
    a19c:	3901      	subs	r1, #1
    a19e:	4308      	orrs	r0, r1
    a1a0:	e7f3      	b.n	a18a <__gesf2+0x3e>
    a1a2:	2d00      	cmp	r5, #0
    a1a4:	d0df      	beq.n	a166 <__gesf2+0x1a>
    a1a6:	e7f3      	b.n	a190 <__gesf2+0x44>
    a1a8:	4282      	cmp	r2, r0
    a1aa:	dceb      	bgt.n	a184 <__gesf2+0x38>
    a1ac:	db04      	blt.n	a1b8 <__gesf2+0x6c>
    a1ae:	42a5      	cmp	r5, r4
    a1b0:	d8e8      	bhi.n	a184 <__gesf2+0x38>
    a1b2:	2000      	movs	r0, #0
    a1b4:	42a5      	cmp	r5, r4
    a1b6:	d2e8      	bcs.n	a18a <__gesf2+0x3e>
    a1b8:	2101      	movs	r1, #1
    a1ba:	1e58      	subs	r0, r3, #1
    a1bc:	4308      	orrs	r0, r1
    a1be:	e7e4      	b.n	a18a <__gesf2+0x3e>

0000a1c0 <__lesf2>:
    a1c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    a1c2:	0042      	lsls	r2, r0, #1
    a1c4:	024d      	lsls	r5, r1, #9
    a1c6:	004c      	lsls	r4, r1, #1
    a1c8:	0246      	lsls	r6, r0, #9
    a1ca:	0a76      	lsrs	r6, r6, #9
    a1cc:	0e12      	lsrs	r2, r2, #24
    a1ce:	0fc3      	lsrs	r3, r0, #31
    a1d0:	0a6d      	lsrs	r5, r5, #9
    a1d2:	0e24      	lsrs	r4, r4, #24
    a1d4:	0fc9      	lsrs	r1, r1, #31
    a1d6:	2aff      	cmp	r2, #255	; 0xff
    a1d8:	d016      	beq.n	a208 <__lesf2+0x48>
    a1da:	2cff      	cmp	r4, #255	; 0xff
    a1dc:	d010      	beq.n	a200 <__lesf2+0x40>
    a1de:	b942      	cbnz	r2, a1f2 <__lesf2+0x32>
    a1e0:	4270      	negs	r0, r6
    a1e2:	4170      	adcs	r0, r6
    a1e4:	b2c0      	uxtb	r0, r0
    a1e6:	b19c      	cbz	r4, a210 <__lesf2+0x50>
    a1e8:	b120      	cbz	r0, a1f4 <__lesf2+0x34>
    a1ea:	2001      	movs	r0, #1
    a1ec:	3901      	subs	r1, #1
    a1ee:	4308      	orrs	r0, r1
    a1f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a1f2:	b19c      	cbz	r4, a21c <__lesf2+0x5c>
    a1f4:	4299      	cmp	r1, r3
    a1f6:	d014      	beq.n	a222 <__lesf2+0x62>
    a1f8:	2001      	movs	r0, #1
    a1fa:	425b      	negs	r3, r3
    a1fc:	4318      	orrs	r0, r3
    a1fe:	e7f7      	b.n	a1f0 <__lesf2+0x30>
    a200:	2002      	movs	r0, #2
    a202:	2d00      	cmp	r5, #0
    a204:	d1f4      	bne.n	a1f0 <__lesf2+0x30>
    a206:	e7ea      	b.n	a1de <__lesf2+0x1e>
    a208:	2002      	movs	r0, #2
    a20a:	2e00      	cmp	r6, #0
    a20c:	d1f0      	bne.n	a1f0 <__lesf2+0x30>
    a20e:	e7e4      	b.n	a1da <__lesf2+0x1a>
    a210:	2d00      	cmp	r5, #0
    a212:	d1e9      	bne.n	a1e8 <__lesf2+0x28>
    a214:	2000      	movs	r0, #0
    a216:	2e00      	cmp	r6, #0
    a218:	d0ea      	beq.n	a1f0 <__lesf2+0x30>
    a21a:	e7ed      	b.n	a1f8 <__lesf2+0x38>
    a21c:	2d00      	cmp	r5, #0
    a21e:	d1e9      	bne.n	a1f4 <__lesf2+0x34>
    a220:	e7ea      	b.n	a1f8 <__lesf2+0x38>
    a222:	42a2      	cmp	r2, r4
    a224:	dc06      	bgt.n	a234 <__lesf2+0x74>
    a226:	dbe0      	blt.n	a1ea <__lesf2+0x2a>
    a228:	42ae      	cmp	r6, r5
    a22a:	d803      	bhi.n	a234 <__lesf2+0x74>
    a22c:	2000      	movs	r0, #0
    a22e:	42ae      	cmp	r6, r5
    a230:	d3db      	bcc.n	a1ea <__lesf2+0x2a>
    a232:	e7dd      	b.n	a1f0 <__lesf2+0x30>
    a234:	2001      	movs	r0, #1
    a236:	4249      	negs	r1, r1
    a238:	4308      	orrs	r0, r1
    a23a:	e7d9      	b.n	a1f0 <__lesf2+0x30>

0000a23c <__aeabi_fmul>:
    a23c:	b5f0      	push	{r4, r5, r6, r7, lr}
    a23e:	4646      	mov	r6, r8
    a240:	464f      	mov	r7, r9
    a242:	46d6      	mov	lr, sl
    a244:	0243      	lsls	r3, r0, #9
    a246:	b5c0      	push	{r6, r7, lr}
    a248:	0046      	lsls	r6, r0, #1
    a24a:	0a5b      	lsrs	r3, r3, #9
    a24c:	0e36      	lsrs	r6, r6, #24
    a24e:	4688      	mov	r8, r1
    a250:	4699      	mov	r9, r3
    a252:	0fc4      	lsrs	r4, r0, #31
    a254:	2e00      	cmp	r6, #0
    a256:	d051      	beq.n	a2fc <__aeabi_fmul+0xc0>
    a258:	2eff      	cmp	r6, #255	; 0xff
    a25a:	d023      	beq.n	a2a4 <__aeabi_fmul+0x68>
    a25c:	2080      	movs	r0, #128	; 0x80
    a25e:	00db      	lsls	r3, r3, #3
    a260:	04c0      	lsls	r0, r0, #19
    a262:	4318      	orrs	r0, r3
    a264:	4681      	mov	r9, r0
    a266:	2700      	movs	r7, #0
    a268:	f240 0a00 	movw	sl, #0
    a26c:	3e7f      	subs	r6, #127	; 0x7f
    a26e:	4643      	mov	r3, r8
    a270:	0058      	lsls	r0, r3, #1
    a272:	025d      	lsls	r5, r3, #9
    a274:	0e00      	lsrs	r0, r0, #24
    a276:	0fdb      	lsrs	r3, r3, #31
    a278:	0a6d      	lsrs	r5, r5, #9
    a27a:	4698      	mov	r8, r3
    a27c:	b308      	cbz	r0, a2c2 <__aeabi_fmul+0x86>
    a27e:	28ff      	cmp	r0, #255	; 0xff
    a280:	d042      	beq.n	a308 <__aeabi_fmul+0xcc>
    a282:	00eb      	lsls	r3, r5, #3
    a284:	2580      	movs	r5, #128	; 0x80
    a286:	04ed      	lsls	r5, r5, #19
    a288:	431d      	orrs	r5, r3
    a28a:	2300      	movs	r3, #0
    a28c:	387f      	subs	r0, #127	; 0x7f
    a28e:	4641      	mov	r1, r8
    a290:	1836      	adds	r6, r6, r0
    a292:	4061      	eors	r1, r4
    a294:	1c70      	adds	r0, r6, #1
    a296:	431f      	orrs	r7, r3
    a298:	2f0f      	cmp	r7, #15
    a29a:	d869      	bhi.n	a370 <__aeabi_fmul+0x134>
    a29c:	4a7b      	ldr	r2, [pc, #492]	; (a48c <__aeabi_fmul+0x250>)
    a29e:	00bf      	lsls	r7, r7, #2
    a2a0:	59d2      	ldr	r2, [r2, r7]
    a2a2:	4697      	mov	pc, r2
    a2a4:	2b00      	cmp	r3, #0
    a2a6:	d148      	bne.n	a33a <__aeabi_fmul+0xfe>
    a2a8:	4643      	mov	r3, r8
    a2aa:	0058      	lsls	r0, r3, #1
    a2ac:	025d      	lsls	r5, r3, #9
    a2ae:	0e00      	lsrs	r0, r0, #24
    a2b0:	0fdb      	lsrs	r3, r3, #31
    a2b2:	2708      	movs	r7, #8
    a2b4:	26ff      	movs	r6, #255	; 0xff
    a2b6:	f240 0a02 	movw	sl, #2
    a2ba:	0a6d      	lsrs	r5, r5, #9
    a2bc:	4698      	mov	r8, r3
    a2be:	2800      	cmp	r0, #0
    a2c0:	d1dd      	bne.n	a27e <__aeabi_fmul+0x42>
    a2c2:	2d00      	cmp	r5, #0
    a2c4:	d13e      	bne.n	a344 <__aeabi_fmul+0x108>
    a2c6:	2000      	movs	r0, #0
    a2c8:	2301      	movs	r3, #1
    a2ca:	e7e0      	b.n	a28e <__aeabi_fmul+0x52>
    a2cc:	4641      	mov	r1, r8
    a2ce:	2b02      	cmp	r3, #2
    a2d0:	d020      	beq.n	a314 <__aeabi_fmul+0xd8>
    a2d2:	2b03      	cmp	r3, #3
    a2d4:	d100      	bne.n	a2d8 <__aeabi_fmul+0x9c>
    a2d6:	e0cf      	b.n	a478 <__aeabi_fmul+0x23c>
    a2d8:	2b01      	cmp	r3, #1
    a2da:	d000      	beq.n	a2de <__aeabi_fmul+0xa2>
    a2dc:	e0ad      	b.n	a43a <__aeabi_fmul+0x1fe>
    a2de:	2200      	movs	r2, #0
    a2e0:	2000      	movs	r0, #0
    a2e2:	4019      	ands	r1, r3
    a2e4:	b2cc      	uxtb	r4, r1
    a2e6:	0240      	lsls	r0, r0, #9
    a2e8:	05d2      	lsls	r2, r2, #23
    a2ea:	0a40      	lsrs	r0, r0, #9
    a2ec:	07e4      	lsls	r4, r4, #31
    a2ee:	4310      	orrs	r0, r2
    a2f0:	4320      	orrs	r0, r4
    a2f2:	bc1c      	pop	{r2, r3, r4}
    a2f4:	4690      	mov	r8, r2
    a2f6:	4699      	mov	r9, r3
    a2f8:	46a2      	mov	sl, r4
    a2fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a2fc:	b97b      	cbnz	r3, a31e <__aeabi_fmul+0xe2>
    a2fe:	2704      	movs	r7, #4
    a300:	2600      	movs	r6, #0
    a302:	f240 0a01 	movw	sl, #1
    a306:	e7b2      	b.n	a26e <__aeabi_fmul+0x32>
    a308:	20ff      	movs	r0, #255	; 0xff
    a30a:	2302      	movs	r3, #2
    a30c:	2d00      	cmp	r5, #0
    a30e:	d0be      	beq.n	a28e <__aeabi_fmul+0x52>
    a310:	2303      	movs	r3, #3
    a312:	e7bc      	b.n	a28e <__aeabi_fmul+0x52>
    a314:	2401      	movs	r4, #1
    a316:	22ff      	movs	r2, #255	; 0xff
    a318:	400c      	ands	r4, r1
    a31a:	2000      	movs	r0, #0
    a31c:	e7e3      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a31e:	0018      	movs	r0, r3
    a320:	f000 fbdc 	bl	aadc <__clzsi2>
    a324:	464a      	mov	r2, r9
    a326:	1f43      	subs	r3, r0, #5
    a328:	2676      	movs	r6, #118	; 0x76
    a32a:	409a      	lsls	r2, r3
    a32c:	4276      	negs	r6, r6
    a32e:	4691      	mov	r9, r2
    a330:	1a36      	subs	r6, r6, r0
    a332:	2700      	movs	r7, #0
    a334:	f240 0a00 	movw	sl, #0
    a338:	e799      	b.n	a26e <__aeabi_fmul+0x32>
    a33a:	270c      	movs	r7, #12
    a33c:	26ff      	movs	r6, #255	; 0xff
    a33e:	f240 0a03 	movw	sl, #3
    a342:	e794      	b.n	a26e <__aeabi_fmul+0x32>
    a344:	0028      	movs	r0, r5
    a346:	f000 fbc9 	bl	aadc <__clzsi2>
    a34a:	1f43      	subs	r3, r0, #5
    a34c:	409d      	lsls	r5, r3
    a34e:	2376      	movs	r3, #118	; 0x76
    a350:	425b      	negs	r3, r3
    a352:	1a18      	subs	r0, r3, r0
    a354:	2300      	movs	r3, #0
    a356:	e79a      	b.n	a28e <__aeabi_fmul+0x52>
    a358:	2080      	movs	r0, #128	; 0x80
    a35a:	2400      	movs	r4, #0
    a35c:	03c0      	lsls	r0, r0, #15
    a35e:	22ff      	movs	r2, #255	; 0xff
    a360:	e7c1      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a362:	464d      	mov	r5, r9
    a364:	4653      	mov	r3, sl
    a366:	e7b2      	b.n	a2ce <__aeabi_fmul+0x92>
    a368:	464d      	mov	r5, r9
    a36a:	0021      	movs	r1, r4
    a36c:	4653      	mov	r3, sl
    a36e:	e7ae      	b.n	a2ce <__aeabi_fmul+0x92>
    a370:	464b      	mov	r3, r9
    a372:	0c1b      	lsrs	r3, r3, #16
    a374:	4698      	mov	r8, r3
    a376:	464a      	mov	r2, r9
    a378:	f64f 73ff 	movw	r3, #65535	; 0xffff
    a37c:	401a      	ands	r2, r3
    a37e:	402b      	ands	r3, r5
    a380:	001c      	movs	r4, r3
    a382:	4354      	muls	r4, r2
    a384:	0c2f      	lsrs	r7, r5, #16
    a386:	46a4      	mov	ip, r4
    a388:	4645      	mov	r5, r8
    a38a:	4644      	mov	r4, r8
    a38c:	437d      	muls	r5, r7
    a38e:	4357      	muls	r7, r2
    a390:	4662      	mov	r2, ip
    a392:	4363      	muls	r3, r4
    a394:	0c12      	lsrs	r2, r2, #16
    a396:	18ff      	adds	r7, r7, r3
    a398:	19d2      	adds	r2, r2, r7
    a39a:	4293      	cmp	r3, r2
    a39c:	d903      	bls.n	a3a6 <__aeabi_fmul+0x16a>
    a39e:	2380      	movs	r3, #128	; 0x80
    a3a0:	025b      	lsls	r3, r3, #9
    a3a2:	4698      	mov	r8, r3
    a3a4:	4445      	add	r5, r8
    a3a6:	4667      	mov	r7, ip
    a3a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
    a3ac:	0414      	lsls	r4, r2, #16
    a3ae:	403b      	ands	r3, r7
    a3b0:	18e4      	adds	r4, r4, r3
    a3b2:	01a3      	lsls	r3, r4, #6
    a3b4:	1e5f      	subs	r7, r3, #1
    a3b6:	41bb      	sbcs	r3, r7
    a3b8:	0c12      	lsrs	r2, r2, #16
    a3ba:	0ea4      	lsrs	r4, r4, #26
    a3bc:	1955      	adds	r5, r2, r5
    a3be:	431c      	orrs	r4, r3
    a3c0:	01ad      	lsls	r5, r5, #6
    a3c2:	4325      	orrs	r5, r4
    a3c4:	012b      	lsls	r3, r5, #4
    a3c6:	d504      	bpl.n	a3d2 <__aeabi_fmul+0x196>
    a3c8:	2301      	movs	r3, #1
    a3ca:	0006      	movs	r6, r0
    a3cc:	086a      	lsrs	r2, r5, #1
    a3ce:	401d      	ands	r5, r3
    a3d0:	4315      	orrs	r5, r2
    a3d2:	0032      	movs	r2, r6
    a3d4:	327f      	adds	r2, #127	; 0x7f
    a3d6:	2a00      	cmp	r2, #0
    a3d8:	dd27      	ble.n	a42a <__aeabi_fmul+0x1ee>
    a3da:	076b      	lsls	r3, r5, #29
    a3dc:	d004      	beq.n	a3e8 <__aeabi_fmul+0x1ac>
    a3de:	230f      	movs	r3, #15
    a3e0:	402b      	ands	r3, r5
    a3e2:	2b04      	cmp	r3, #4
    a3e4:	d000      	beq.n	a3e8 <__aeabi_fmul+0x1ac>
    a3e6:	3504      	adds	r5, #4
    a3e8:	012b      	lsls	r3, r5, #4
    a3ea:	d503      	bpl.n	a3f4 <__aeabi_fmul+0x1b8>
    a3ec:	0032      	movs	r2, r6
    a3ee:	4b28      	ldr	r3, [pc, #160]	; (a490 <__aeabi_fmul+0x254>)
    a3f0:	3280      	adds	r2, #128	; 0x80
    a3f2:	401d      	ands	r5, r3
    a3f4:	2afe      	cmp	r2, #254	; 0xfe
    a3f6:	dc8d      	bgt.n	a314 <__aeabi_fmul+0xd8>
    a3f8:	2401      	movs	r4, #1
    a3fa:	01a8      	lsls	r0, r5, #6
    a3fc:	0a40      	lsrs	r0, r0, #9
    a3fe:	b2d2      	uxtb	r2, r2
    a400:	400c      	ands	r4, r1
    a402:	e770      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a404:	2080      	movs	r0, #128	; 0x80
    a406:	464b      	mov	r3, r9
    a408:	03c0      	lsls	r0, r0, #15
    a40a:	4203      	tst	r3, r0
    a40c:	d008      	beq.n	a420 <__aeabi_fmul+0x1e4>
    a40e:	4205      	tst	r5, r0
    a410:	d105      	bne.n	a41e <__aeabi_fmul+0x1e2>
    a412:	4328      	orrs	r0, r5
    a414:	0240      	lsls	r0, r0, #9
    a416:	0a40      	lsrs	r0, r0, #9
    a418:	4644      	mov	r4, r8
    a41a:	22ff      	movs	r2, #255	; 0xff
    a41c:	e763      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a41e:	464b      	mov	r3, r9
    a420:	4318      	orrs	r0, r3
    a422:	0240      	lsls	r0, r0, #9
    a424:	0a40      	lsrs	r0, r0, #9
    a426:	22ff      	movs	r2, #255	; 0xff
    a428:	e75d      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a42a:	2401      	movs	r4, #1
    a42c:	1aa3      	subs	r3, r4, r2
    a42e:	2b1b      	cmp	r3, #27
    a430:	dd05      	ble.n	a43e <__aeabi_fmul+0x202>
    a432:	400c      	ands	r4, r1
    a434:	2200      	movs	r2, #0
    a436:	2000      	movs	r0, #0
    a438:	e755      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a43a:	0006      	movs	r6, r0
    a43c:	e7c9      	b.n	a3d2 <__aeabi_fmul+0x196>
    a43e:	002a      	movs	r2, r5
    a440:	2020      	movs	r0, #32
    a442:	40da      	lsrs	r2, r3
    a444:	1ac3      	subs	r3, r0, r3
    a446:	409d      	lsls	r5, r3
    a448:	002b      	movs	r3, r5
    a44a:	1e5d      	subs	r5, r3, #1
    a44c:	41ab      	sbcs	r3, r5
    a44e:	4313      	orrs	r3, r2
    a450:	075a      	lsls	r2, r3, #29
    a452:	d004      	beq.n	a45e <__aeabi_fmul+0x222>
    a454:	220f      	movs	r2, #15
    a456:	401a      	ands	r2, r3
    a458:	2a04      	cmp	r2, #4
    a45a:	d000      	beq.n	a45e <__aeabi_fmul+0x222>
    a45c:	3304      	adds	r3, #4
    a45e:	015a      	lsls	r2, r3, #5
    a460:	d504      	bpl.n	a46c <__aeabi_fmul+0x230>
    a462:	2401      	movs	r4, #1
    a464:	2201      	movs	r2, #1
    a466:	400c      	ands	r4, r1
    a468:	2000      	movs	r0, #0
    a46a:	e73c      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a46c:	2401      	movs	r4, #1
    a46e:	019b      	lsls	r3, r3, #6
    a470:	0a58      	lsrs	r0, r3, #9
    a472:	400c      	ands	r4, r1
    a474:	2200      	movs	r2, #0
    a476:	e736      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a478:	2080      	movs	r0, #128	; 0x80
    a47a:	2401      	movs	r4, #1
    a47c:	03c0      	lsls	r0, r0, #15
    a47e:	4328      	orrs	r0, r5
    a480:	0240      	lsls	r0, r0, #9
    a482:	0a40      	lsrs	r0, r0, #9
    a484:	400c      	ands	r4, r1
    a486:	22ff      	movs	r2, #255	; 0xff
    a488:	e72d      	b.n	a2e6 <__aeabi_fmul+0xaa>
    a48a:	46c0      	nop			; (mov r8, r8)
    a48c:	0000b884 	.word	0x0000b884
    a490:	f7ffffff 	.word	0xf7ffffff

0000a494 <__aeabi_fsub>:
    a494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a496:	46ce      	mov	lr, r9
    a498:	4647      	mov	r7, r8
    a49a:	0044      	lsls	r4, r0, #1
    a49c:	0fc2      	lsrs	r2, r0, #31
    a49e:	b580      	push	{r7, lr}
    a4a0:	0247      	lsls	r7, r0, #9
    a4a2:	0248      	lsls	r0, r1, #9
    a4a4:	0a40      	lsrs	r0, r0, #9
    a4a6:	4684      	mov	ip, r0
    a4a8:	4666      	mov	r6, ip
    a4aa:	0a7b      	lsrs	r3, r7, #9
    a4ac:	0048      	lsls	r0, r1, #1
    a4ae:	4699      	mov	r9, r3
    a4b0:	0e24      	lsrs	r4, r4, #24
    a4b2:	0015      	movs	r5, r2
    a4b4:	00db      	lsls	r3, r3, #3
    a4b6:	0e00      	lsrs	r0, r0, #24
    a4b8:	0fc9      	lsrs	r1, r1, #31
    a4ba:	00f6      	lsls	r6, r6, #3
    a4bc:	28ff      	cmp	r0, #255	; 0xff
    a4be:	d100      	bne.n	a4c2 <__aeabi_fsub+0x2e>
    a4c0:	e08d      	b.n	a5de <__aeabi_fsub+0x14a>
    a4c2:	f240 0801 	movw	r8, #1
    a4c6:	4647      	mov	r7, r8
    a4c8:	4079      	eors	r1, r7
    a4ca:	4291      	cmp	r1, r2
    a4cc:	d065      	beq.n	a59a <__aeabi_fsub+0x106>
    a4ce:	1a22      	subs	r2, r4, r0
    a4d0:	2a00      	cmp	r2, #0
    a4d2:	dc00      	bgt.n	a4d6 <__aeabi_fsub+0x42>
    a4d4:	e09c      	b.n	a610 <__aeabi_fsub+0x17c>
    a4d6:	2800      	cmp	r0, #0
    a4d8:	d13c      	bne.n	a554 <__aeabi_fsub+0xc0>
    a4da:	2e00      	cmp	r6, #0
    a4dc:	d100      	bne.n	a4e0 <__aeabi_fsub+0x4c>
    a4de:	e08a      	b.n	a5f6 <__aeabi_fsub+0x162>
    a4e0:	1e51      	subs	r1, r2, #1
    a4e2:	2900      	cmp	r1, #0
    a4e4:	d000      	beq.n	a4e8 <__aeabi_fsub+0x54>
    a4e6:	e0b3      	b.n	a650 <__aeabi_fsub+0x1bc>
    a4e8:	2401      	movs	r4, #1
    a4ea:	1b9b      	subs	r3, r3, r6
    a4ec:	015a      	lsls	r2, r3, #5
    a4ee:	d543      	bpl.n	a578 <__aeabi_fsub+0xe4>
    a4f0:	019b      	lsls	r3, r3, #6
    a4f2:	099f      	lsrs	r7, r3, #6
    a4f4:	0038      	movs	r0, r7
    a4f6:	f000 faf1 	bl	aadc <__clzsi2>
    a4fa:	3805      	subs	r0, #5
    a4fc:	4087      	lsls	r7, r0
    a4fe:	4284      	cmp	r4, r0
    a500:	dd00      	ble.n	a504 <__aeabi_fsub+0x70>
    a502:	e094      	b.n	a62e <__aeabi_fsub+0x19a>
    a504:	1b04      	subs	r4, r0, r4
    a506:	003a      	movs	r2, r7
    a508:	2020      	movs	r0, #32
    a50a:	3401      	adds	r4, #1
    a50c:	40e2      	lsrs	r2, r4
    a50e:	1b04      	subs	r4, r0, r4
    a510:	40a7      	lsls	r7, r4
    a512:	003b      	movs	r3, r7
    a514:	1e5f      	subs	r7, r3, #1
    a516:	41bb      	sbcs	r3, r7
    a518:	2400      	movs	r4, #0
    a51a:	4313      	orrs	r3, r2
    a51c:	075a      	lsls	r2, r3, #29
    a51e:	d004      	beq.n	a52a <__aeabi_fsub+0x96>
    a520:	220f      	movs	r2, #15
    a522:	401a      	ands	r2, r3
    a524:	2a04      	cmp	r2, #4
    a526:	d000      	beq.n	a52a <__aeabi_fsub+0x96>
    a528:	3304      	adds	r3, #4
    a52a:	015a      	lsls	r2, r3, #5
    a52c:	d526      	bpl.n	a57c <__aeabi_fsub+0xe8>
    a52e:	3401      	adds	r4, #1
    a530:	2cff      	cmp	r4, #255	; 0xff
    a532:	d100      	bne.n	a536 <__aeabi_fsub+0xa2>
    a534:	e077      	b.n	a626 <__aeabi_fsub+0x192>
    a536:	2201      	movs	r2, #1
    a538:	019b      	lsls	r3, r3, #6
    a53a:	0a5b      	lsrs	r3, r3, #9
    a53c:	b2e4      	uxtb	r4, r4
    a53e:	402a      	ands	r2, r5
    a540:	025b      	lsls	r3, r3, #9
    a542:	05e4      	lsls	r4, r4, #23
    a544:	0a58      	lsrs	r0, r3, #9
    a546:	07d2      	lsls	r2, r2, #31
    a548:	4320      	orrs	r0, r4
    a54a:	4310      	orrs	r0, r2
    a54c:	bc0c      	pop	{r2, r3}
    a54e:	4690      	mov	r8, r2
    a550:	4699      	mov	r9, r3
    a552:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a554:	2cff      	cmp	r4, #255	; 0xff
    a556:	d0e1      	beq.n	a51c <__aeabi_fsub+0x88>
    a558:	2180      	movs	r1, #128	; 0x80
    a55a:	04c9      	lsls	r1, r1, #19
    a55c:	430e      	orrs	r6, r1
    a55e:	2a1b      	cmp	r2, #27
    a560:	dc7a      	bgt.n	a658 <__aeabi_fsub+0x1c4>
    a562:	0031      	movs	r1, r6
    a564:	2020      	movs	r0, #32
    a566:	40d1      	lsrs	r1, r2
    a568:	1a82      	subs	r2, r0, r2
    a56a:	4096      	lsls	r6, r2
    a56c:	1e72      	subs	r2, r6, #1
    a56e:	4196      	sbcs	r6, r2
    a570:	430e      	orrs	r6, r1
    a572:	1b9b      	subs	r3, r3, r6
    a574:	015a      	lsls	r2, r3, #5
    a576:	d4bb      	bmi.n	a4f0 <__aeabi_fsub+0x5c>
    a578:	075a      	lsls	r2, r3, #29
    a57a:	d1d1      	bne.n	a520 <__aeabi_fsub+0x8c>
    a57c:	2201      	movs	r2, #1
    a57e:	08df      	lsrs	r7, r3, #3
    a580:	402a      	ands	r2, r5
    a582:	2cff      	cmp	r4, #255	; 0xff
    a584:	d133      	bne.n	a5ee <__aeabi_fsub+0x15a>
    a586:	2f00      	cmp	r7, #0
    a588:	d100      	bne.n	a58c <__aeabi_fsub+0xf8>
    a58a:	e0a6      	b.n	a6da <__aeabi_fsub+0x246>
    a58c:	2380      	movs	r3, #128	; 0x80
    a58e:	03db      	lsls	r3, r3, #15
    a590:	433b      	orrs	r3, r7
    a592:	025b      	lsls	r3, r3, #9
    a594:	0a5b      	lsrs	r3, r3, #9
    a596:	24ff      	movs	r4, #255	; 0xff
    a598:	e7d2      	b.n	a540 <__aeabi_fsub+0xac>
    a59a:	1a21      	subs	r1, r4, r0
    a59c:	2900      	cmp	r1, #0
    a59e:	dd4b      	ble.n	a638 <__aeabi_fsub+0x1a4>
    a5a0:	b358      	cbz	r0, a5fa <__aeabi_fsub+0x166>
    a5a2:	2cff      	cmp	r4, #255	; 0xff
    a5a4:	d0ba      	beq.n	a51c <__aeabi_fsub+0x88>
    a5a6:	2080      	movs	r0, #128	; 0x80
    a5a8:	04c0      	lsls	r0, r0, #19
    a5aa:	4306      	orrs	r6, r0
    a5ac:	291b      	cmp	r1, #27
    a5ae:	dd00      	ble.n	a5b2 <__aeabi_fsub+0x11e>
    a5b0:	e0ac      	b.n	a70c <__aeabi_fsub+0x278>
    a5b2:	0030      	movs	r0, r6
    a5b4:	2720      	movs	r7, #32
    a5b6:	40c8      	lsrs	r0, r1
    a5b8:	1a79      	subs	r1, r7, r1
    a5ba:	408e      	lsls	r6, r1
    a5bc:	1e71      	subs	r1, r6, #1
    a5be:	418e      	sbcs	r6, r1
    a5c0:	4306      	orrs	r6, r0
    a5c2:	199b      	adds	r3, r3, r6
    a5c4:	0159      	lsls	r1, r3, #5
    a5c6:	d5d7      	bpl.n	a578 <__aeabi_fsub+0xe4>
    a5c8:	3401      	adds	r4, #1
    a5ca:	2cff      	cmp	r4, #255	; 0xff
    a5cc:	d100      	bne.n	a5d0 <__aeabi_fsub+0x13c>
    a5ce:	e084      	b.n	a6da <__aeabi_fsub+0x246>
    a5d0:	2201      	movs	r2, #1
    a5d2:	4976      	ldr	r1, [pc, #472]	; (a7ac <__aeabi_fsub+0x318>)
    a5d4:	401a      	ands	r2, r3
    a5d6:	085b      	lsrs	r3, r3, #1
    a5d8:	400b      	ands	r3, r1
    a5da:	4313      	orrs	r3, r2
    a5dc:	e79e      	b.n	a51c <__aeabi_fsub+0x88>
    a5de:	2e00      	cmp	r6, #0
    a5e0:	d000      	beq.n	a5e4 <__aeabi_fsub+0x150>
    a5e2:	e772      	b.n	a4ca <__aeabi_fsub+0x36>
    a5e4:	e76d      	b.n	a4c2 <__aeabi_fsub+0x2e>
    a5e6:	003b      	movs	r3, r7
    a5e8:	2f00      	cmp	r7, #0
    a5ea:	d1c5      	bne.n	a578 <__aeabi_fsub+0xe4>
    a5ec:	2200      	movs	r2, #0
    a5ee:	027b      	lsls	r3, r7, #9
    a5f0:	0a5b      	lsrs	r3, r3, #9
    a5f2:	b2e4      	uxtb	r4, r4
    a5f4:	e7a4      	b.n	a540 <__aeabi_fsub+0xac>
    a5f6:	0014      	movs	r4, r2
    a5f8:	e790      	b.n	a51c <__aeabi_fsub+0x88>
    a5fa:	2e00      	cmp	r6, #0
    a5fc:	d04b      	beq.n	a696 <__aeabi_fsub+0x202>
    a5fe:	1e48      	subs	r0, r1, #1
    a600:	2800      	cmp	r0, #0
    a602:	d155      	bne.n	a6b0 <__aeabi_fsub+0x21c>
    a604:	199b      	adds	r3, r3, r6
    a606:	2401      	movs	r4, #1
    a608:	015a      	lsls	r2, r3, #5
    a60a:	d5b5      	bpl.n	a578 <__aeabi_fsub+0xe4>
    a60c:	2402      	movs	r4, #2
    a60e:	e7df      	b.n	a5d0 <__aeabi_fsub+0x13c>
    a610:	bb2a      	cbnz	r2, a65e <__aeabi_fsub+0x1ca>
    a612:	1c62      	adds	r2, r4, #1
    a614:	b2d2      	uxtb	r2, r2
    a616:	2a01      	cmp	r2, #1
    a618:	dd71      	ble.n	a6fe <__aeabi_fsub+0x26a>
    a61a:	1b9f      	subs	r7, r3, r6
    a61c:	017a      	lsls	r2, r7, #5
    a61e:	d534      	bpl.n	a68a <__aeabi_fsub+0x1f6>
    a620:	1af7      	subs	r7, r6, r3
    a622:	000d      	movs	r5, r1
    a624:	e766      	b.n	a4f4 <__aeabi_fsub+0x60>
    a626:	2201      	movs	r2, #1
    a628:	2300      	movs	r3, #0
    a62a:	402a      	ands	r2, r5
    a62c:	e788      	b.n	a540 <__aeabi_fsub+0xac>
    a62e:	003b      	movs	r3, r7
    a630:	4a5f      	ldr	r2, [pc, #380]	; (a7b0 <__aeabi_fsub+0x31c>)
    a632:	1a24      	subs	r4, r4, r0
    a634:	4013      	ands	r3, r2
    a636:	e771      	b.n	a51c <__aeabi_fsub+0x88>
    a638:	2900      	cmp	r1, #0
    a63a:	d169      	bne.n	a710 <__aeabi_fsub+0x27c>
    a63c:	1c61      	adds	r1, r4, #1
    a63e:	b2c8      	uxtb	r0, r1
    a640:	2801      	cmp	r0, #1
    a642:	dd4d      	ble.n	a6e0 <__aeabi_fsub+0x24c>
    a644:	29ff      	cmp	r1, #255	; 0xff
    a646:	d048      	beq.n	a6da <__aeabi_fsub+0x246>
    a648:	199b      	adds	r3, r3, r6
    a64a:	085b      	lsrs	r3, r3, #1
    a64c:	000c      	movs	r4, r1
    a64e:	e765      	b.n	a51c <__aeabi_fsub+0x88>
    a650:	2aff      	cmp	r2, #255	; 0xff
    a652:	d040      	beq.n	a6d6 <__aeabi_fsub+0x242>
    a654:	000a      	movs	r2, r1
    a656:	e782      	b.n	a55e <__aeabi_fsub+0xca>
    a658:	2601      	movs	r6, #1
    a65a:	1b9b      	subs	r3, r3, r6
    a65c:	e78a      	b.n	a574 <__aeabi_fsub+0xe0>
    a65e:	b1e4      	cbz	r4, a69a <__aeabi_fsub+0x206>
    a660:	28ff      	cmp	r0, #255	; 0xff
    a662:	d021      	beq.n	a6a8 <__aeabi_fsub+0x214>
    a664:	2480      	movs	r4, #128	; 0x80
    a666:	04e4      	lsls	r4, r4, #19
    a668:	4252      	negs	r2, r2
    a66a:	4323      	orrs	r3, r4
    a66c:	2a1b      	cmp	r2, #27
    a66e:	dd00      	ble.n	a672 <__aeabi_fsub+0x1de>
    a670:	e090      	b.n	a794 <__aeabi_fsub+0x300>
    a672:	001c      	movs	r4, r3
    a674:	2520      	movs	r5, #32
    a676:	40d4      	lsrs	r4, r2
    a678:	1aaa      	subs	r2, r5, r2
    a67a:	4093      	lsls	r3, r2
    a67c:	1e5a      	subs	r2, r3, #1
    a67e:	4193      	sbcs	r3, r2
    a680:	4323      	orrs	r3, r4
    a682:	1af3      	subs	r3, r6, r3
    a684:	0004      	movs	r4, r0
    a686:	000d      	movs	r5, r1
    a688:	e730      	b.n	a4ec <__aeabi_fsub+0x58>
    a68a:	2f00      	cmp	r7, #0
    a68c:	d000      	beq.n	a690 <__aeabi_fsub+0x1fc>
    a68e:	e731      	b.n	a4f4 <__aeabi_fsub+0x60>
    a690:	2200      	movs	r2, #0
    a692:	2400      	movs	r4, #0
    a694:	e7ab      	b.n	a5ee <__aeabi_fsub+0x15a>
    a696:	000c      	movs	r4, r1
    a698:	e740      	b.n	a51c <__aeabi_fsub+0x88>
    a69a:	2b00      	cmp	r3, #0
    a69c:	d052      	beq.n	a744 <__aeabi_fsub+0x2b0>
    a69e:	43d2      	mvns	r2, r2
    a6a0:	2a00      	cmp	r2, #0
    a6a2:	d0ee      	beq.n	a682 <__aeabi_fsub+0x1ee>
    a6a4:	28ff      	cmp	r0, #255	; 0xff
    a6a6:	d1e1      	bne.n	a66c <__aeabi_fsub+0x1d8>
    a6a8:	0033      	movs	r3, r6
    a6aa:	24ff      	movs	r4, #255	; 0xff
    a6ac:	000d      	movs	r5, r1
    a6ae:	e735      	b.n	a51c <__aeabi_fsub+0x88>
    a6b0:	29ff      	cmp	r1, #255	; 0xff
    a6b2:	d010      	beq.n	a6d6 <__aeabi_fsub+0x242>
    a6b4:	0001      	movs	r1, r0
    a6b6:	e779      	b.n	a5ac <__aeabi_fsub+0x118>
    a6b8:	2b00      	cmp	r3, #0
    a6ba:	d068      	beq.n	a78e <__aeabi_fsub+0x2fa>
    a6bc:	24ff      	movs	r4, #255	; 0xff
    a6be:	2e00      	cmp	r6, #0
    a6c0:	d100      	bne.n	a6c4 <__aeabi_fsub+0x230>
    a6c2:	e72b      	b.n	a51c <__aeabi_fsub+0x88>
    a6c4:	2280      	movs	r2, #128	; 0x80
    a6c6:	4649      	mov	r1, r9
    a6c8:	03d2      	lsls	r2, r2, #15
    a6ca:	4211      	tst	r1, r2
    a6cc:	d003      	beq.n	a6d6 <__aeabi_fsub+0x242>
    a6ce:	4661      	mov	r1, ip
    a6d0:	4211      	tst	r1, r2
    a6d2:	d100      	bne.n	a6d6 <__aeabi_fsub+0x242>
    a6d4:	0033      	movs	r3, r6
    a6d6:	24ff      	movs	r4, #255	; 0xff
    a6d8:	e720      	b.n	a51c <__aeabi_fsub+0x88>
    a6da:	24ff      	movs	r4, #255	; 0xff
    a6dc:	2300      	movs	r3, #0
    a6de:	e72f      	b.n	a540 <__aeabi_fsub+0xac>
    a6e0:	2c00      	cmp	r4, #0
    a6e2:	d1e9      	bne.n	a6b8 <__aeabi_fsub+0x224>
    a6e4:	2b00      	cmp	r3, #0
    a6e6:	d05d      	beq.n	a7a4 <__aeabi_fsub+0x310>
    a6e8:	2e00      	cmp	r6, #0
    a6ea:	d100      	bne.n	a6ee <__aeabi_fsub+0x25a>
    a6ec:	e716      	b.n	a51c <__aeabi_fsub+0x88>
    a6ee:	199b      	adds	r3, r3, r6
    a6f0:	015a      	lsls	r2, r3, #5
    a6f2:	d400      	bmi.n	a6f6 <__aeabi_fsub+0x262>
    a6f4:	e740      	b.n	a578 <__aeabi_fsub+0xe4>
    a6f6:	4a2e      	ldr	r2, [pc, #184]	; (a7b0 <__aeabi_fsub+0x31c>)
    a6f8:	000c      	movs	r4, r1
    a6fa:	4013      	ands	r3, r2
    a6fc:	e70e      	b.n	a51c <__aeabi_fsub+0x88>
    a6fe:	b9dc      	cbnz	r4, a738 <__aeabi_fsub+0x2a4>
    a700:	bb5b      	cbnz	r3, a75a <__aeabi_fsub+0x2c6>
    a702:	2e00      	cmp	r6, #0
    a704:	d04b      	beq.n	a79e <__aeabi_fsub+0x30a>
    a706:	0033      	movs	r3, r6
    a708:	000d      	movs	r5, r1
    a70a:	e707      	b.n	a51c <__aeabi_fsub+0x88>
    a70c:	2601      	movs	r6, #1
    a70e:	e758      	b.n	a5c2 <__aeabi_fsub+0x12e>
    a710:	b9e4      	cbnz	r4, a74c <__aeabi_fsub+0x2b8>
    a712:	2b00      	cmp	r3, #0
    a714:	d040      	beq.n	a798 <__aeabi_fsub+0x304>
    a716:	43c9      	mvns	r1, r1
    a718:	b159      	cbz	r1, a732 <__aeabi_fsub+0x29e>
    a71a:	28ff      	cmp	r0, #255	; 0xff
    a71c:	d037      	beq.n	a78e <__aeabi_fsub+0x2fa>
    a71e:	291b      	cmp	r1, #27
    a720:	dc42      	bgt.n	a7a8 <__aeabi_fsub+0x314>
    a722:	001c      	movs	r4, r3
    a724:	2720      	movs	r7, #32
    a726:	40cc      	lsrs	r4, r1
    a728:	1a79      	subs	r1, r7, r1
    a72a:	408b      	lsls	r3, r1
    a72c:	1e59      	subs	r1, r3, #1
    a72e:	418b      	sbcs	r3, r1
    a730:	4323      	orrs	r3, r4
    a732:	199b      	adds	r3, r3, r6
    a734:	0004      	movs	r4, r0
    a736:	e745      	b.n	a5c4 <__aeabi_fsub+0x130>
    a738:	b9cb      	cbnz	r3, a76e <__aeabi_fsub+0x2da>
    a73a:	bb26      	cbnz	r6, a786 <__aeabi_fsub+0x2f2>
    a73c:	2780      	movs	r7, #128	; 0x80
    a73e:	2200      	movs	r2, #0
    a740:	03ff      	lsls	r7, r7, #15
    a742:	e723      	b.n	a58c <__aeabi_fsub+0xf8>
    a744:	0033      	movs	r3, r6
    a746:	0004      	movs	r4, r0
    a748:	000d      	movs	r5, r1
    a74a:	e6e7      	b.n	a51c <__aeabi_fsub+0x88>
    a74c:	28ff      	cmp	r0, #255	; 0xff
    a74e:	d01e      	beq.n	a78e <__aeabi_fsub+0x2fa>
    a750:	2480      	movs	r4, #128	; 0x80
    a752:	04e4      	lsls	r4, r4, #19
    a754:	4249      	negs	r1, r1
    a756:	4323      	orrs	r3, r4
    a758:	e7e1      	b.n	a71e <__aeabi_fsub+0x28a>
    a75a:	2e00      	cmp	r6, #0
    a75c:	d100      	bne.n	a760 <__aeabi_fsub+0x2cc>
    a75e:	e6dd      	b.n	a51c <__aeabi_fsub+0x88>
    a760:	1b9f      	subs	r7, r3, r6
    a762:	017a      	lsls	r2, r7, #5
    a764:	d400      	bmi.n	a768 <__aeabi_fsub+0x2d4>
    a766:	e73e      	b.n	a5e6 <__aeabi_fsub+0x152>
    a768:	1af3      	subs	r3, r6, r3
    a76a:	000d      	movs	r5, r1
    a76c:	e6d6      	b.n	a51c <__aeabi_fsub+0x88>
    a76e:	24ff      	movs	r4, #255	; 0xff
    a770:	2e00      	cmp	r6, #0
    a772:	d100      	bne.n	a776 <__aeabi_fsub+0x2e2>
    a774:	e6d2      	b.n	a51c <__aeabi_fsub+0x88>
    a776:	2280      	movs	r2, #128	; 0x80
    a778:	4648      	mov	r0, r9
    a77a:	03d2      	lsls	r2, r2, #15
    a77c:	4210      	tst	r0, r2
    a77e:	d0aa      	beq.n	a6d6 <__aeabi_fsub+0x242>
    a780:	4660      	mov	r0, ip
    a782:	4210      	tst	r0, r2
    a784:	d1a7      	bne.n	a6d6 <__aeabi_fsub+0x242>
    a786:	0033      	movs	r3, r6
    a788:	000d      	movs	r5, r1
    a78a:	24ff      	movs	r4, #255	; 0xff
    a78c:	e6c6      	b.n	a51c <__aeabi_fsub+0x88>
    a78e:	0033      	movs	r3, r6
    a790:	24ff      	movs	r4, #255	; 0xff
    a792:	e6c3      	b.n	a51c <__aeabi_fsub+0x88>
    a794:	2301      	movs	r3, #1
    a796:	e774      	b.n	a682 <__aeabi_fsub+0x1ee>
    a798:	0033      	movs	r3, r6
    a79a:	0004      	movs	r4, r0
    a79c:	e6be      	b.n	a51c <__aeabi_fsub+0x88>
    a79e:	2700      	movs	r7, #0
    a7a0:	2200      	movs	r2, #0
    a7a2:	e724      	b.n	a5ee <__aeabi_fsub+0x15a>
    a7a4:	0033      	movs	r3, r6
    a7a6:	e6b9      	b.n	a51c <__aeabi_fsub+0x88>
    a7a8:	2301      	movs	r3, #1
    a7aa:	e7c2      	b.n	a732 <__aeabi_fsub+0x29e>
    a7ac:	7dffffff 	.word	0x7dffffff
    a7b0:	fbffffff 	.word	0xfbffffff

0000a7b4 <__aeabi_f2iz>:
    a7b4:	0241      	lsls	r1, r0, #9
    a7b6:	0043      	lsls	r3, r0, #1
    a7b8:	0fc2      	lsrs	r2, r0, #31
    a7ba:	0a49      	lsrs	r1, r1, #9
    a7bc:	0e1b      	lsrs	r3, r3, #24
    a7be:	2000      	movs	r0, #0
    a7c0:	2b7e      	cmp	r3, #126	; 0x7e
    a7c2:	dd0c      	ble.n	a7de <__aeabi_f2iz+0x2a>
    a7c4:	2b9d      	cmp	r3, #157	; 0x9d
    a7c6:	dc0b      	bgt.n	a7e0 <__aeabi_f2iz+0x2c>
    a7c8:	2080      	movs	r0, #128	; 0x80
    a7ca:	0400      	lsls	r0, r0, #16
    a7cc:	4301      	orrs	r1, r0
    a7ce:	2b95      	cmp	r3, #149	; 0x95
    a7d0:	dc09      	bgt.n	a7e6 <__aeabi_f2iz+0x32>
    a7d2:	2096      	movs	r0, #150	; 0x96
    a7d4:	1ac3      	subs	r3, r0, r3
    a7d6:	40d9      	lsrs	r1, r3
    a7d8:	4248      	negs	r0, r1
    a7da:	b902      	cbnz	r2, a7de <__aeabi_f2iz+0x2a>
    a7dc:	0008      	movs	r0, r1
    a7de:	4770      	bx	lr
    a7e0:	4b02      	ldr	r3, [pc, #8]	; (a7ec <__aeabi_f2iz+0x38>)
    a7e2:	18d0      	adds	r0, r2, r3
    a7e4:	e7fb      	b.n	a7de <__aeabi_f2iz+0x2a>
    a7e6:	3b96      	subs	r3, #150	; 0x96
    a7e8:	4099      	lsls	r1, r3
    a7ea:	e7f5      	b.n	a7d8 <__aeabi_f2iz+0x24>
    a7ec:	7fffffff 	.word	0x7fffffff

0000a7f0 <__aeabi_i2f>:
    a7f0:	b570      	push	{r4, r5, r6, lr}
    a7f2:	2800      	cmp	r0, #0
    a7f4:	d030      	beq.n	a858 <__aeabi_i2f+0x68>
    a7f6:	17c3      	asrs	r3, r0, #31
    a7f8:	18c4      	adds	r4, r0, r3
    a7fa:	405c      	eors	r4, r3
    a7fc:	0fc5      	lsrs	r5, r0, #31
    a7fe:	0020      	movs	r0, r4
    a800:	f000 f96c 	bl	aadc <__clzsi2>
    a804:	239e      	movs	r3, #158	; 0x9e
    a806:	1a1b      	subs	r3, r3, r0
    a808:	2b96      	cmp	r3, #150	; 0x96
    a80a:	dc0d      	bgt.n	a828 <__aeabi_i2f+0x38>
    a80c:	2296      	movs	r2, #150	; 0x96
    a80e:	1ad2      	subs	r2, r2, r3
    a810:	4094      	lsls	r4, r2
    a812:	002a      	movs	r2, r5
    a814:	0264      	lsls	r4, r4, #9
    a816:	0a64      	lsrs	r4, r4, #9
    a818:	b2db      	uxtb	r3, r3
    a81a:	0264      	lsls	r4, r4, #9
    a81c:	05db      	lsls	r3, r3, #23
    a81e:	0a60      	lsrs	r0, r4, #9
    a820:	07d2      	lsls	r2, r2, #31
    a822:	4318      	orrs	r0, r3
    a824:	4310      	orrs	r0, r2
    a826:	bd70      	pop	{r4, r5, r6, pc}
    a828:	2b99      	cmp	r3, #153	; 0x99
    a82a:	dc19      	bgt.n	a860 <__aeabi_i2f+0x70>
    a82c:	2299      	movs	r2, #153	; 0x99
    a82e:	1ad2      	subs	r2, r2, r3
    a830:	2a00      	cmp	r2, #0
    a832:	dd29      	ble.n	a888 <__aeabi_i2f+0x98>
    a834:	4094      	lsls	r4, r2
    a836:	0022      	movs	r2, r4
    a838:	4c14      	ldr	r4, [pc, #80]	; (a88c <__aeabi_i2f+0x9c>)
    a83a:	4014      	ands	r4, r2
    a83c:	0751      	lsls	r1, r2, #29
    a83e:	d004      	beq.n	a84a <__aeabi_i2f+0x5a>
    a840:	210f      	movs	r1, #15
    a842:	400a      	ands	r2, r1
    a844:	2a04      	cmp	r2, #4
    a846:	d000      	beq.n	a84a <__aeabi_i2f+0x5a>
    a848:	3404      	adds	r4, #4
    a84a:	0162      	lsls	r2, r4, #5
    a84c:	d413      	bmi.n	a876 <__aeabi_i2f+0x86>
    a84e:	01a4      	lsls	r4, r4, #6
    a850:	0a64      	lsrs	r4, r4, #9
    a852:	b2db      	uxtb	r3, r3
    a854:	002a      	movs	r2, r5
    a856:	e7e0      	b.n	a81a <__aeabi_i2f+0x2a>
    a858:	2200      	movs	r2, #0
    a85a:	2300      	movs	r3, #0
    a85c:	2400      	movs	r4, #0
    a85e:	e7dc      	b.n	a81a <__aeabi_i2f+0x2a>
    a860:	2205      	movs	r2, #5
    a862:	0021      	movs	r1, r4
    a864:	1a12      	subs	r2, r2, r0
    a866:	40d1      	lsrs	r1, r2
    a868:	22b9      	movs	r2, #185	; 0xb9
    a86a:	1ad2      	subs	r2, r2, r3
    a86c:	4094      	lsls	r4, r2
    a86e:	1e62      	subs	r2, r4, #1
    a870:	4194      	sbcs	r4, r2
    a872:	430c      	orrs	r4, r1
    a874:	e7da      	b.n	a82c <__aeabi_i2f+0x3c>
    a876:	4b05      	ldr	r3, [pc, #20]	; (a88c <__aeabi_i2f+0x9c>)
    a878:	002a      	movs	r2, r5
    a87a:	401c      	ands	r4, r3
    a87c:	239f      	movs	r3, #159	; 0x9f
    a87e:	01a4      	lsls	r4, r4, #6
    a880:	1a1b      	subs	r3, r3, r0
    a882:	0a64      	lsrs	r4, r4, #9
    a884:	b2db      	uxtb	r3, r3
    a886:	e7c8      	b.n	a81a <__aeabi_i2f+0x2a>
    a888:	0022      	movs	r2, r4
    a88a:	e7d5      	b.n	a838 <__aeabi_i2f+0x48>
    a88c:	fbffffff 	.word	0xfbffffff

0000a890 <__aeabi_ui2f>:
    a890:	b510      	push	{r4, lr}
    a892:	0004      	movs	r4, r0
    a894:	b338      	cbz	r0, a8e6 <__aeabi_ui2f+0x56>
    a896:	f000 f921 	bl	aadc <__clzsi2>
    a89a:	239e      	movs	r3, #158	; 0x9e
    a89c:	1a1b      	subs	r3, r3, r0
    a89e:	2b96      	cmp	r3, #150	; 0x96
    a8a0:	dc0a      	bgt.n	a8b8 <__aeabi_ui2f+0x28>
    a8a2:	2296      	movs	r2, #150	; 0x96
    a8a4:	1ad2      	subs	r2, r2, r3
    a8a6:	4094      	lsls	r4, r2
    a8a8:	0264      	lsls	r4, r4, #9
    a8aa:	0a64      	lsrs	r4, r4, #9
    a8ac:	b2db      	uxtb	r3, r3
    a8ae:	0264      	lsls	r4, r4, #9
    a8b0:	05db      	lsls	r3, r3, #23
    a8b2:	0a60      	lsrs	r0, r4, #9
    a8b4:	4318      	orrs	r0, r3
    a8b6:	bd10      	pop	{r4, pc}
    a8b8:	2b99      	cmp	r3, #153	; 0x99
    a8ba:	dc17      	bgt.n	a8ec <__aeabi_ui2f+0x5c>
    a8bc:	2299      	movs	r2, #153	; 0x99
    a8be:	1ad2      	subs	r2, r2, r3
    a8c0:	2a00      	cmp	r2, #0
    a8c2:	dd27      	ble.n	a914 <__aeabi_ui2f+0x84>
    a8c4:	4094      	lsls	r4, r2
    a8c6:	0022      	movs	r2, r4
    a8c8:	4c13      	ldr	r4, [pc, #76]	; (a918 <__aeabi_ui2f+0x88>)
    a8ca:	4014      	ands	r4, r2
    a8cc:	0751      	lsls	r1, r2, #29
    a8ce:	d004      	beq.n	a8da <__aeabi_ui2f+0x4a>
    a8d0:	210f      	movs	r1, #15
    a8d2:	400a      	ands	r2, r1
    a8d4:	2a04      	cmp	r2, #4
    a8d6:	d000      	beq.n	a8da <__aeabi_ui2f+0x4a>
    a8d8:	3404      	adds	r4, #4
    a8da:	0162      	lsls	r2, r4, #5
    a8dc:	d412      	bmi.n	a904 <__aeabi_ui2f+0x74>
    a8de:	01a4      	lsls	r4, r4, #6
    a8e0:	0a64      	lsrs	r4, r4, #9
    a8e2:	b2db      	uxtb	r3, r3
    a8e4:	e7e3      	b.n	a8ae <__aeabi_ui2f+0x1e>
    a8e6:	2300      	movs	r3, #0
    a8e8:	2400      	movs	r4, #0
    a8ea:	e7e0      	b.n	a8ae <__aeabi_ui2f+0x1e>
    a8ec:	22b9      	movs	r2, #185	; 0xb9
    a8ee:	0021      	movs	r1, r4
    a8f0:	1ad2      	subs	r2, r2, r3
    a8f2:	4091      	lsls	r1, r2
    a8f4:	000a      	movs	r2, r1
    a8f6:	1e51      	subs	r1, r2, #1
    a8f8:	418a      	sbcs	r2, r1
    a8fa:	2105      	movs	r1, #5
    a8fc:	1a09      	subs	r1, r1, r0
    a8fe:	40cc      	lsrs	r4, r1
    a900:	4314      	orrs	r4, r2
    a902:	e7db      	b.n	a8bc <__aeabi_ui2f+0x2c>
    a904:	4b04      	ldr	r3, [pc, #16]	; (a918 <__aeabi_ui2f+0x88>)
    a906:	401c      	ands	r4, r3
    a908:	239f      	movs	r3, #159	; 0x9f
    a90a:	01a4      	lsls	r4, r4, #6
    a90c:	1a1b      	subs	r3, r3, r0
    a90e:	0a64      	lsrs	r4, r4, #9
    a910:	b2db      	uxtb	r3, r3
    a912:	e7cc      	b.n	a8ae <__aeabi_ui2f+0x1e>
    a914:	0022      	movs	r2, r4
    a916:	e7d7      	b.n	a8c8 <__aeabi_ui2f+0x38>
    a918:	fbffffff 	.word	0xfbffffff

0000a91c <__aeabi_f2d>:
    a91c:	0041      	lsls	r1, r0, #1
    a91e:	0e09      	lsrs	r1, r1, #24
    a920:	1c4b      	adds	r3, r1, #1
    a922:	0242      	lsls	r2, r0, #9
    a924:	b2db      	uxtb	r3, r3
    a926:	b570      	push	{r4, r5, r6, lr}
    a928:	0a56      	lsrs	r6, r2, #9
    a92a:	0fc4      	lsrs	r4, r0, #31
    a92c:	2b01      	cmp	r3, #1
    a92e:	dd19      	ble.n	a964 <__aeabi_f2d+0x48>
    a930:	0b13      	lsrs	r3, r2, #12
    a932:	f240 3280 	movw	r2, #896	; 0x380
    a936:	0776      	lsls	r6, r6, #29
    a938:	188d      	adds	r5, r1, r2
    a93a:	2100      	movs	r1, #0
    a93c:	0d0a      	lsrs	r2, r1, #20
    a93e:	0512      	lsls	r2, r2, #20
    a940:	431a      	orrs	r2, r3
    a942:	f240 73ff 	movw	r3, #2047	; 0x7ff
    a946:	402b      	ands	r3, r5
    a948:	f64f 75ff 	movw	r5, #65535	; 0xffff
    a94c:	f2c8 050f 	movt	r5, #32783	; 0x800f
    a950:	402a      	ands	r2, r5
    a952:	051b      	lsls	r3, r3, #20
    a954:	4313      	orrs	r3, r2
    a956:	005b      	lsls	r3, r3, #1
    a958:	07e4      	lsls	r4, r4, #31
    a95a:	085b      	lsrs	r3, r3, #1
    a95c:	4323      	orrs	r3, r4
    a95e:	0030      	movs	r0, r6
    a960:	0019      	movs	r1, r3
    a962:	bd70      	pop	{r4, r5, r6, pc}
    a964:	b9a9      	cbnz	r1, a992 <__aeabi_f2d+0x76>
    a966:	b30e      	cbz	r6, a9ac <__aeabi_f2d+0x90>
    a968:	0030      	movs	r0, r6
    a96a:	f000 f8b7 	bl	aadc <__clzsi2>
    a96e:	280a      	cmp	r0, #10
    a970:	dc1f      	bgt.n	a9b2 <__aeabi_f2d+0x96>
    a972:	230b      	movs	r3, #11
    a974:	0032      	movs	r2, r6
    a976:	1a1b      	subs	r3, r3, r0
    a978:	40da      	lsrs	r2, r3
    a97a:	0003      	movs	r3, r0
    a97c:	3315      	adds	r3, #21
    a97e:	409e      	lsls	r6, r3
    a980:	f240 3589 	movw	r5, #905	; 0x389
    a984:	f240 71ff 	movw	r1, #2047	; 0x7ff
    a988:	0312      	lsls	r2, r2, #12
    a98a:	1a2d      	subs	r5, r5, r0
    a98c:	0b13      	lsrs	r3, r2, #12
    a98e:	400d      	ands	r5, r1
    a990:	e7d3      	b.n	a93a <__aeabi_f2d+0x1e>
    a992:	b13e      	cbz	r6, a9a4 <__aeabi_f2d+0x88>
    a994:	2380      	movs	r3, #128	; 0x80
    a996:	0b12      	lsrs	r2, r2, #12
    a998:	031b      	lsls	r3, r3, #12
    a99a:	0776      	lsls	r6, r6, #29
    a99c:	4313      	orrs	r3, r2
    a99e:	f240 75ff 	movw	r5, #2047	; 0x7ff
    a9a2:	e7ca      	b.n	a93a <__aeabi_f2d+0x1e>
    a9a4:	f240 75ff 	movw	r5, #2047	; 0x7ff
    a9a8:	2300      	movs	r3, #0
    a9aa:	e7c6      	b.n	a93a <__aeabi_f2d+0x1e>
    a9ac:	2500      	movs	r5, #0
    a9ae:	2300      	movs	r3, #0
    a9b0:	e7c3      	b.n	a93a <__aeabi_f2d+0x1e>
    a9b2:	0003      	movs	r3, r0
    a9b4:	0032      	movs	r2, r6
    a9b6:	3b0b      	subs	r3, #11
    a9b8:	409a      	lsls	r2, r3
    a9ba:	2600      	movs	r6, #0
    a9bc:	e7e0      	b.n	a980 <__aeabi_f2d+0x64>
    a9be:	46c0      	nop			; (mov r8, r8)

0000a9c0 <__aeabi_d2f>:
    a9c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    a9c2:	f240 75ff 	movw	r5, #2047	; 0x7ff
    a9c6:	004c      	lsls	r4, r1, #1
    a9c8:	030b      	lsls	r3, r1, #12
    a9ca:	0d64      	lsrs	r4, r4, #21
    a9cc:	0f46      	lsrs	r6, r0, #29
    a9ce:	0a5b      	lsrs	r3, r3, #9
    a9d0:	1c67      	adds	r7, r4, #1
    a9d2:	4333      	orrs	r3, r6
    a9d4:	0fc9      	lsrs	r1, r1, #31
    a9d6:	00c6      	lsls	r6, r0, #3
    a9d8:	403d      	ands	r5, r7
    a9da:	2d01      	cmp	r5, #1
    a9dc:	dd29      	ble.n	aa32 <__aeabi_d2f+0x72>
    a9de:	4a3b      	ldr	r2, [pc, #236]	; (aacc <__aeabi_d2f+0x10c>)
    a9e0:	18a5      	adds	r5, r4, r2
    a9e2:	2dfe      	cmp	r5, #254	; 0xfe
    a9e4:	dc1c      	bgt.n	aa20 <__aeabi_d2f+0x60>
    a9e6:	2d00      	cmp	r5, #0
    a9e8:	dd3e      	ble.n	aa68 <__aeabi_d2f+0xa8>
    a9ea:	0180      	lsls	r0, r0, #6
    a9ec:	0002      	movs	r2, r0
    a9ee:	1e50      	subs	r0, r2, #1
    a9f0:	4182      	sbcs	r2, r0
    a9f2:	0f76      	lsrs	r6, r6, #29
    a9f4:	4332      	orrs	r2, r6
    a9f6:	00db      	lsls	r3, r3, #3
    a9f8:	4313      	orrs	r3, r2
    a9fa:	075a      	lsls	r2, r3, #29
    a9fc:	d004      	beq.n	aa08 <__aeabi_d2f+0x48>
    a9fe:	220f      	movs	r2, #15
    aa00:	401a      	ands	r2, r3
    aa02:	2a04      	cmp	r2, #4
    aa04:	d000      	beq.n	aa08 <__aeabi_d2f+0x48>
    aa06:	3304      	adds	r3, #4
    aa08:	2280      	movs	r2, #128	; 0x80
    aa0a:	04d2      	lsls	r2, r2, #19
    aa0c:	401a      	ands	r2, r3
    aa0e:	2a00      	cmp	r2, #0
    aa10:	d059      	beq.n	aac6 <__aeabi_d2f+0x106>
    aa12:	3501      	adds	r5, #1
    aa14:	2dff      	cmp	r5, #255	; 0xff
    aa16:	d003      	beq.n	aa20 <__aeabi_d2f+0x60>
    aa18:	019b      	lsls	r3, r3, #6
    aa1a:	0a5b      	lsrs	r3, r3, #9
    aa1c:	b2ec      	uxtb	r4, r5
    aa1e:	e001      	b.n	aa24 <__aeabi_d2f+0x64>
    aa20:	24ff      	movs	r4, #255	; 0xff
    aa22:	2300      	movs	r3, #0
    aa24:	0258      	lsls	r0, r3, #9
    aa26:	05e4      	lsls	r4, r4, #23
    aa28:	0a40      	lsrs	r0, r0, #9
    aa2a:	07c9      	lsls	r1, r1, #31
    aa2c:	4320      	orrs	r0, r4
    aa2e:	4308      	orrs	r0, r1
    aa30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    aa32:	b144      	cbz	r4, aa46 <__aeabi_d2f+0x86>
    aa34:	431e      	orrs	r6, r3
    aa36:	2e00      	cmp	r6, #0
    aa38:	d0f2      	beq.n	aa20 <__aeabi_d2f+0x60>
    aa3a:	2080      	movs	r0, #128	; 0x80
    aa3c:	00db      	lsls	r3, r3, #3
    aa3e:	0480      	lsls	r0, r0, #18
    aa40:	4303      	orrs	r3, r0
    aa42:	25ff      	movs	r5, #255	; 0xff
    aa44:	e7d9      	b.n	a9fa <__aeabi_d2f+0x3a>
    aa46:	4333      	orrs	r3, r6
    aa48:	b11b      	cbz	r3, aa52 <__aeabi_d2f+0x92>
    aa4a:	2305      	movs	r3, #5
    aa4c:	08db      	lsrs	r3, r3, #3
    aa4e:	2cff      	cmp	r4, #255	; 0xff
    aa50:	d003      	beq.n	aa5a <__aeabi_d2f+0x9a>
    aa52:	025b      	lsls	r3, r3, #9
    aa54:	0a5b      	lsrs	r3, r3, #9
    aa56:	b2e4      	uxtb	r4, r4
    aa58:	e7e4      	b.n	aa24 <__aeabi_d2f+0x64>
    aa5a:	b393      	cbz	r3, aac2 <__aeabi_d2f+0x102>
    aa5c:	2080      	movs	r0, #128	; 0x80
    aa5e:	03c0      	lsls	r0, r0, #15
    aa60:	4303      	orrs	r3, r0
    aa62:	025b      	lsls	r3, r3, #9
    aa64:	0a5b      	lsrs	r3, r3, #9
    aa66:	e7dd      	b.n	aa24 <__aeabi_d2f+0x64>
    aa68:	002a      	movs	r2, r5
    aa6a:	3217      	adds	r2, #23
    aa6c:	db14      	blt.n	aa98 <__aeabi_d2f+0xd8>
    aa6e:	2280      	movs	r2, #128	; 0x80
    aa70:	271e      	movs	r7, #30
    aa72:	0412      	lsls	r2, r2, #16
    aa74:	4313      	orrs	r3, r2
    aa76:	1b7f      	subs	r7, r7, r5
    aa78:	2f1f      	cmp	r7, #31
    aa7a:	dc0f      	bgt.n	aa9c <__aeabi_d2f+0xdc>
    aa7c:	4a14      	ldr	r2, [pc, #80]	; (aad0 <__aeabi_d2f+0x110>)
    aa7e:	4694      	mov	ip, r2
    aa80:	4464      	add	r4, ip
    aa82:	0032      	movs	r2, r6
    aa84:	40a6      	lsls	r6, r4
    aa86:	0035      	movs	r5, r6
    aa88:	40a3      	lsls	r3, r4
    aa8a:	1e6e      	subs	r6, r5, #1
    aa8c:	41b5      	sbcs	r5, r6
    aa8e:	40fa      	lsrs	r2, r7
    aa90:	432b      	orrs	r3, r5
    aa92:	4313      	orrs	r3, r2
    aa94:	2500      	movs	r5, #0
    aa96:	e7b0      	b.n	a9fa <__aeabi_d2f+0x3a>
    aa98:	2400      	movs	r4, #0
    aa9a:	e7d6      	b.n	aa4a <__aeabi_d2f+0x8a>
    aa9c:	2202      	movs	r2, #2
    aa9e:	4252      	negs	r2, r2
    aaa0:	1b55      	subs	r5, r2, r5
    aaa2:	001a      	movs	r2, r3
    aaa4:	40ea      	lsrs	r2, r5
    aaa6:	2f20      	cmp	r7, #32
    aaa8:	d009      	beq.n	aabe <__aeabi_d2f+0xfe>
    aaaa:	480a      	ldr	r0, [pc, #40]	; (aad4 <__aeabi_d2f+0x114>)
    aaac:	4684      	mov	ip, r0
    aaae:	4464      	add	r4, ip
    aab0:	40a3      	lsls	r3, r4
    aab2:	4333      	orrs	r3, r6
    aab4:	1e5e      	subs	r6, r3, #1
    aab6:	41b3      	sbcs	r3, r6
    aab8:	2500      	movs	r5, #0
    aaba:	4313      	orrs	r3, r2
    aabc:	e79d      	b.n	a9fa <__aeabi_d2f+0x3a>
    aabe:	2300      	movs	r3, #0
    aac0:	e7f7      	b.n	aab2 <__aeabi_d2f+0xf2>
    aac2:	2300      	movs	r3, #0
    aac4:	e7ae      	b.n	aa24 <__aeabi_d2f+0x64>
    aac6:	002c      	movs	r4, r5
    aac8:	e7c0      	b.n	aa4c <__aeabi_d2f+0x8c>
    aaca:	46c0      	nop			; (mov r8, r8)
    aacc:	fffffc80 	.word	0xfffffc80
    aad0:	fffffc82 	.word	0xfffffc82
    aad4:	fffffca2 	.word	0xfffffca2

0000aad8 <__aeabi_idiv0>:
    aad8:	4770      	bx	lr
    aada:	46c0      	nop			; (mov r8, r8)

0000aadc <__clzsi2>:
    aadc:	211c      	movs	r1, #28
    aade:	2301      	movs	r3, #1
    aae0:	041b      	lsls	r3, r3, #16
    aae2:	4298      	cmp	r0, r3
    aae4:	d301      	bcc.n	aaea <__clzsi2+0xe>
    aae6:	0c00      	lsrs	r0, r0, #16
    aae8:	3910      	subs	r1, #16
    aaea:	0a1b      	lsrs	r3, r3, #8
    aaec:	4298      	cmp	r0, r3
    aaee:	d301      	bcc.n	aaf4 <__clzsi2+0x18>
    aaf0:	0a00      	lsrs	r0, r0, #8
    aaf2:	3908      	subs	r1, #8
    aaf4:	091b      	lsrs	r3, r3, #4
    aaf6:	4298      	cmp	r0, r3
    aaf8:	d301      	bcc.n	aafe <__clzsi2+0x22>
    aafa:	0900      	lsrs	r0, r0, #4
    aafc:	3904      	subs	r1, #4
    aafe:	a202      	add	r2, pc, #8	; (adr r2, ab08 <__clzsi2+0x2c>)
    ab00:	5c10      	ldrb	r0, [r2, r0]
    ab02:	1840      	adds	r0, r0, r1
    ab04:	4770      	bx	lr
    ab06:	46c0      	nop			; (mov r8, r8)
    ab08:	02020304 	.word	0x02020304
    ab0c:	01010101 	.word	0x01010101
	...

0000ab18 <atoi>:
    ab18:	b510      	push	{r4, lr}
    ab1a:	220a      	movs	r2, #10
    ab1c:	2100      	movs	r1, #0
    ab1e:	f000 fb7f 	bl	b220 <strtol>
    ab22:	bd10      	pop	{r4, pc}

0000ab24 <calloc>:
    ab24:	b510      	push	{r4, lr}
    ab26:	4b03      	ldr	r3, [pc, #12]	; (ab34 <calloc+0x10>)
    ab28:	000a      	movs	r2, r1
    ab2a:	0001      	movs	r1, r0
    ab2c:	6818      	ldr	r0, [r3, #0]
    ab2e:	f000 f85b 	bl	abe8 <_calloc_r>
    ab32:	bd10      	pop	{r4, pc}
    ab34:	20002004 	.word	0x20002004

0000ab38 <__errno>:
    ab38:	4b01      	ldr	r3, [pc, #4]	; (ab40 <__errno+0x8>)
    ab3a:	6818      	ldr	r0, [r3, #0]
    ab3c:	4770      	bx	lr
    ab3e:	46c0      	nop			; (mov r8, r8)
    ab40:	20002004 	.word	0x20002004

0000ab44 <__libc_init_array>:
    ab44:	b570      	push	{r4, r5, r6, lr}
    ab46:	2500      	movs	r5, #0
    ab48:	4b0e      	ldr	r3, [pc, #56]	; (ab84 <__libc_init_array+0x40>)
    ab4a:	4c0f      	ldr	r4, [pc, #60]	; (ab88 <__libc_init_array+0x44>)
    ab4c:	1ae4      	subs	r4, r4, r3
    ab4e:	10a4      	asrs	r4, r4, #2
    ab50:	42a5      	cmp	r5, r4
    ab52:	d109      	bne.n	ab68 <__libc_init_array+0x24>
    ab54:	2500      	movs	r5, #0
    ab56:	f000 ff85 	bl	ba64 <_init>
    ab5a:	4c0c      	ldr	r4, [pc, #48]	; (ab8c <__libc_init_array+0x48>)
    ab5c:	4b0c      	ldr	r3, [pc, #48]	; (ab90 <__libc_init_array+0x4c>)
    ab5e:	1ae4      	subs	r4, r4, r3
    ab60:	10a4      	asrs	r4, r4, #2
    ab62:	42a5      	cmp	r5, r4
    ab64:	d107      	bne.n	ab76 <__libc_init_array+0x32>
    ab66:	bd70      	pop	{r4, r5, r6, pc}
    ab68:	4a06      	ldr	r2, [pc, #24]	; (ab84 <__libc_init_array+0x40>)
    ab6a:	00ab      	lsls	r3, r5, #2
    ab6c:	189b      	adds	r3, r3, r2
    ab6e:	681b      	ldr	r3, [r3, #0]
    ab70:	4798      	blx	r3
    ab72:	3501      	adds	r5, #1
    ab74:	e7ec      	b.n	ab50 <__libc_init_array+0xc>
    ab76:	4a06      	ldr	r2, [pc, #24]	; (ab90 <__libc_init_array+0x4c>)
    ab78:	00ab      	lsls	r3, r5, #2
    ab7a:	189b      	adds	r3, r3, r2
    ab7c:	681b      	ldr	r3, [r3, #0]
    ab7e:	4798      	blx	r3
    ab80:	3501      	adds	r5, #1
    ab82:	e7ee      	b.n	ab62 <__libc_init_array+0x1e>
    ab84:	0000ba70 	.word	0x0000ba70
    ab88:	0000ba70 	.word	0x0000ba70
    ab8c:	0000ba74 	.word	0x0000ba74
    ab90:	0000ba70 	.word	0x0000ba70

0000ab94 <malloc>:
    ab94:	b510      	push	{r4, lr}
    ab96:	4b03      	ldr	r3, [pc, #12]	; (aba4 <malloc+0x10>)
    ab98:	0001      	movs	r1, r0
    ab9a:	6818      	ldr	r0, [r3, #0]
    ab9c:	f000 f87c 	bl	ac98 <_malloc_r>
    aba0:	bd10      	pop	{r4, pc}
    aba2:	46c0      	nop			; (mov r8, r8)
    aba4:	20002004 	.word	0x20002004

0000aba8 <memcmp>:
    aba8:	b530      	push	{r4, r5, lr}
    abaa:	2400      	movs	r4, #0
    abac:	42a2      	cmp	r2, r4
    abae:	d101      	bne.n	abb4 <memcmp+0xc>
    abb0:	2000      	movs	r0, #0
    abb2:	e005      	b.n	abc0 <memcmp+0x18>
    abb4:	5d03      	ldrb	r3, [r0, r4]
    abb6:	1c65      	adds	r5, r4, #1
    abb8:	5d0c      	ldrb	r4, [r1, r4]
    abba:	42a3      	cmp	r3, r4
    abbc:	d001      	beq.n	abc2 <memcmp+0x1a>
    abbe:	1b18      	subs	r0, r3, r4
    abc0:	bd30      	pop	{r4, r5, pc}
    abc2:	002c      	movs	r4, r5
    abc4:	e7f2      	b.n	abac <memcmp+0x4>

0000abc6 <memcpy>:
    abc6:	2300      	movs	r3, #0
    abc8:	b510      	push	{r4, lr}
    abca:	429a      	cmp	r2, r3
    abcc:	d100      	bne.n	abd0 <memcpy+0xa>
    abce:	bd10      	pop	{r4, pc}
    abd0:	5ccc      	ldrb	r4, [r1, r3]
    abd2:	54c4      	strb	r4, [r0, r3]
    abd4:	3301      	adds	r3, #1
    abd6:	e7f8      	b.n	abca <memcpy+0x4>

0000abd8 <memset>:
    abd8:	0003      	movs	r3, r0
    abda:	1882      	adds	r2, r0, r2
    abdc:	4293      	cmp	r3, r2
    abde:	d100      	bne.n	abe2 <memset+0xa>
    abe0:	4770      	bx	lr
    abe2:	7019      	strb	r1, [r3, #0]
    abe4:	3301      	adds	r3, #1
    abe6:	e7f9      	b.n	abdc <memset+0x4>

0000abe8 <_calloc_r>:
    abe8:	434a      	muls	r2, r1
    abea:	b570      	push	{r4, r5, r6, lr}
    abec:	0011      	movs	r1, r2
    abee:	0014      	movs	r4, r2
    abf0:	f000 f852 	bl	ac98 <_malloc_r>
    abf4:	0005      	movs	r5, r0
    abf6:	b118      	cbz	r0, ac00 <_calloc_r+0x18>
    abf8:	0022      	movs	r2, r4
    abfa:	2100      	movs	r1, #0
    abfc:	f7ff ffec 	bl	abd8 <memset>
    ac00:	0028      	movs	r0, r5
    ac02:	bd70      	pop	{r4, r5, r6, pc}

0000ac04 <_free_r>:
    ac04:	b570      	push	{r4, r5, r6, lr}
    ac06:	0005      	movs	r5, r0
    ac08:	b181      	cbz	r1, ac2c <_free_r+0x28>
    ac0a:	1f0c      	subs	r4, r1, #4
    ac0c:	6823      	ldr	r3, [r4, #0]
    ac0e:	2b00      	cmp	r3, #0
    ac10:	da00      	bge.n	ac14 <_free_r+0x10>
    ac12:	18e4      	adds	r4, r4, r3
    ac14:	0028      	movs	r0, r5
    ac16:	f000 fb45 	bl	b2a4 <__malloc_lock>
    ac1a:	4a1e      	ldr	r2, [pc, #120]	; (ac94 <_free_r+0x90>)
    ac1c:	6813      	ldr	r3, [r2, #0]
    ac1e:	0011      	movs	r1, r2
    ac20:	b92b      	cbnz	r3, ac2e <_free_r+0x2a>
    ac22:	6063      	str	r3, [r4, #4]
    ac24:	6014      	str	r4, [r2, #0]
    ac26:	0028      	movs	r0, r5
    ac28:	f000 fb3d 	bl	b2a6 <__malloc_unlock>
    ac2c:	bd70      	pop	{r4, r5, r6, pc}
    ac2e:	42a3      	cmp	r3, r4
    ac30:	d90b      	bls.n	ac4a <_free_r+0x46>
    ac32:	6822      	ldr	r2, [r4, #0]
    ac34:	18a0      	adds	r0, r4, r2
    ac36:	4283      	cmp	r3, r0
    ac38:	d103      	bne.n	ac42 <_free_r+0x3e>
    ac3a:	6818      	ldr	r0, [r3, #0]
    ac3c:	685b      	ldr	r3, [r3, #4]
    ac3e:	1882      	adds	r2, r0, r2
    ac40:	6022      	str	r2, [r4, #0]
    ac42:	6063      	str	r3, [r4, #4]
    ac44:	600c      	str	r4, [r1, #0]
    ac46:	e7ee      	b.n	ac26 <_free_r+0x22>
    ac48:	0013      	movs	r3, r2
    ac4a:	685a      	ldr	r2, [r3, #4]
    ac4c:	b10a      	cbz	r2, ac52 <_free_r+0x4e>
    ac4e:	42a2      	cmp	r2, r4
    ac50:	d9fa      	bls.n	ac48 <_free_r+0x44>
    ac52:	6819      	ldr	r1, [r3, #0]
    ac54:	1858      	adds	r0, r3, r1
    ac56:	42a0      	cmp	r0, r4
    ac58:	d10b      	bne.n	ac72 <_free_r+0x6e>
    ac5a:	6820      	ldr	r0, [r4, #0]
    ac5c:	1809      	adds	r1, r1, r0
    ac5e:	1858      	adds	r0, r3, r1
    ac60:	6019      	str	r1, [r3, #0]
    ac62:	4282      	cmp	r2, r0
    ac64:	d1df      	bne.n	ac26 <_free_r+0x22>
    ac66:	6810      	ldr	r0, [r2, #0]
    ac68:	6852      	ldr	r2, [r2, #4]
    ac6a:	1841      	adds	r1, r0, r1
    ac6c:	6019      	str	r1, [r3, #0]
    ac6e:	605a      	str	r2, [r3, #4]
    ac70:	e7d9      	b.n	ac26 <_free_r+0x22>
    ac72:	42a0      	cmp	r0, r4
    ac74:	d902      	bls.n	ac7c <_free_r+0x78>
    ac76:	230c      	movs	r3, #12
    ac78:	602b      	str	r3, [r5, #0]
    ac7a:	e7d4      	b.n	ac26 <_free_r+0x22>
    ac7c:	6821      	ldr	r1, [r4, #0]
    ac7e:	1860      	adds	r0, r4, r1
    ac80:	4282      	cmp	r2, r0
    ac82:	d103      	bne.n	ac8c <_free_r+0x88>
    ac84:	6810      	ldr	r0, [r2, #0]
    ac86:	6852      	ldr	r2, [r2, #4]
    ac88:	1841      	adds	r1, r0, r1
    ac8a:	6021      	str	r1, [r4, #0]
    ac8c:	6062      	str	r2, [r4, #4]
    ac8e:	605c      	str	r4, [r3, #4]
    ac90:	e7c9      	b.n	ac26 <_free_r+0x22>
    ac92:	46c0      	nop			; (mov r8, r8)
    ac94:	20002234 	.word	0x20002234

0000ac98 <_malloc_r>:
    ac98:	2303      	movs	r3, #3
    ac9a:	b570      	push	{r4, r5, r6, lr}
    ac9c:	1ccd      	adds	r5, r1, #3
    ac9e:	439d      	bics	r5, r3
    aca0:	3508      	adds	r5, #8
    aca2:	0006      	movs	r6, r0
    aca4:	2d0c      	cmp	r5, #12
    aca6:	d21c      	bcs.n	ace2 <_malloc_r+0x4a>
    aca8:	250c      	movs	r5, #12
    acaa:	42a9      	cmp	r1, r5
    acac:	d81b      	bhi.n	ace6 <_malloc_r+0x4e>
    acae:	0030      	movs	r0, r6
    acb0:	f000 faf8 	bl	b2a4 <__malloc_lock>
    acb4:	4a25      	ldr	r2, [pc, #148]	; (ad4c <_malloc_r+0xb4>)
    acb6:	6814      	ldr	r4, [r2, #0]
    acb8:	0021      	movs	r1, r4
    acba:	b9c1      	cbnz	r1, acee <_malloc_r+0x56>
    acbc:	4c24      	ldr	r4, [pc, #144]	; (ad50 <_malloc_r+0xb8>)
    acbe:	6823      	ldr	r3, [r4, #0]
    acc0:	b91b      	cbnz	r3, acca <_malloc_r+0x32>
    acc2:	0030      	movs	r0, r6
    acc4:	f000 f9fc 	bl	b0c0 <_sbrk_r>
    acc8:	6020      	str	r0, [r4, #0]
    acca:	0029      	movs	r1, r5
    accc:	0030      	movs	r0, r6
    acce:	f000 f9f7 	bl	b0c0 <_sbrk_r>
    acd2:	1c43      	adds	r3, r0, #1
    acd4:	d12d      	bne.n	ad32 <_malloc_r+0x9a>
    acd6:	230c      	movs	r3, #12
    acd8:	0030      	movs	r0, r6
    acda:	6033      	str	r3, [r6, #0]
    acdc:	f000 fae3 	bl	b2a6 <__malloc_unlock>
    ace0:	e003      	b.n	acea <_malloc_r+0x52>
    ace2:	2d00      	cmp	r5, #0
    ace4:	dae1      	bge.n	acaa <_malloc_r+0x12>
    ace6:	230c      	movs	r3, #12
    ace8:	6033      	str	r3, [r6, #0]
    acea:	2000      	movs	r0, #0
    acec:	bd70      	pop	{r4, r5, r6, pc}
    acee:	680b      	ldr	r3, [r1, #0]
    acf0:	1b5b      	subs	r3, r3, r5
    acf2:	d41b      	bmi.n	ad2c <_malloc_r+0x94>
    acf4:	2b0b      	cmp	r3, #11
    acf6:	d903      	bls.n	ad00 <_malloc_r+0x68>
    acf8:	600b      	str	r3, [r1, #0]
    acfa:	18cc      	adds	r4, r1, r3
    acfc:	6025      	str	r5, [r4, #0]
    acfe:	e003      	b.n	ad08 <_malloc_r+0x70>
    ad00:	428c      	cmp	r4, r1
    ad02:	d10f      	bne.n	ad24 <_malloc_r+0x8c>
    ad04:	6863      	ldr	r3, [r4, #4]
    ad06:	6013      	str	r3, [r2, #0]
    ad08:	0030      	movs	r0, r6
    ad0a:	f000 facc 	bl	b2a6 <__malloc_unlock>
    ad0e:	0020      	movs	r0, r4
    ad10:	2207      	movs	r2, #7
    ad12:	300b      	adds	r0, #11
    ad14:	1d23      	adds	r3, r4, #4
    ad16:	4390      	bics	r0, r2
    ad18:	1ac3      	subs	r3, r0, r3
    ad1a:	2b00      	cmp	r3, #0
    ad1c:	d0e6      	beq.n	acec <_malloc_r+0x54>
    ad1e:	425a      	negs	r2, r3
    ad20:	50e2      	str	r2, [r4, r3]
    ad22:	e7e3      	b.n	acec <_malloc_r+0x54>
    ad24:	684b      	ldr	r3, [r1, #4]
    ad26:	6063      	str	r3, [r4, #4]
    ad28:	000c      	movs	r4, r1
    ad2a:	e7ed      	b.n	ad08 <_malloc_r+0x70>
    ad2c:	000c      	movs	r4, r1
    ad2e:	6849      	ldr	r1, [r1, #4]
    ad30:	e7c3      	b.n	acba <_malloc_r+0x22>
    ad32:	2303      	movs	r3, #3
    ad34:	1cc4      	adds	r4, r0, #3
    ad36:	439c      	bics	r4, r3
    ad38:	42a0      	cmp	r0, r4
    ad3a:	d0df      	beq.n	acfc <_malloc_r+0x64>
    ad3c:	1a21      	subs	r1, r4, r0
    ad3e:	0030      	movs	r0, r6
    ad40:	f000 f9be 	bl	b0c0 <_sbrk_r>
    ad44:	1c43      	adds	r3, r0, #1
    ad46:	d1d9      	bne.n	acfc <_malloc_r+0x64>
    ad48:	e7c5      	b.n	acd6 <_malloc_r+0x3e>
    ad4a:	46c0      	nop			; (mov r8, r8)
    ad4c:	20002234 	.word	0x20002234
    ad50:	20002238 	.word	0x20002238

0000ad54 <_printf_common>:
    ad54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ad56:	0015      	movs	r5, r2
    ad58:	9301      	str	r3, [sp, #4]
    ad5a:	688a      	ldr	r2, [r1, #8]
    ad5c:	690b      	ldr	r3, [r1, #16]
    ad5e:	9000      	str	r0, [sp, #0]
    ad60:	000c      	movs	r4, r1
    ad62:	4293      	cmp	r3, r2
    ad64:	da00      	bge.n	ad68 <_printf_common+0x14>
    ad66:	0013      	movs	r3, r2
    ad68:	0022      	movs	r2, r4
    ad6a:	602b      	str	r3, [r5, #0]
    ad6c:	3243      	adds	r2, #67	; 0x43
    ad6e:	7812      	ldrb	r2, [r2, #0]
    ad70:	b10a      	cbz	r2, ad76 <_printf_common+0x22>
    ad72:	3301      	adds	r3, #1
    ad74:	602b      	str	r3, [r5, #0]
    ad76:	6823      	ldr	r3, [r4, #0]
    ad78:	069b      	lsls	r3, r3, #26
    ad7a:	d502      	bpl.n	ad82 <_printf_common+0x2e>
    ad7c:	682b      	ldr	r3, [r5, #0]
    ad7e:	3302      	adds	r3, #2
    ad80:	602b      	str	r3, [r5, #0]
    ad82:	2706      	movs	r7, #6
    ad84:	6823      	ldr	r3, [r4, #0]
    ad86:	401f      	ands	r7, r3
    ad88:	b33f      	cbz	r7, adda <_printf_common+0x86>
    ad8a:	0023      	movs	r3, r4
    ad8c:	3343      	adds	r3, #67	; 0x43
    ad8e:	781b      	ldrb	r3, [r3, #0]
    ad90:	1e5a      	subs	r2, r3, #1
    ad92:	4193      	sbcs	r3, r2
    ad94:	6822      	ldr	r2, [r4, #0]
    ad96:	0692      	lsls	r2, r2, #26
    ad98:	d430      	bmi.n	adfc <_printf_common+0xa8>
    ad9a:	0022      	movs	r2, r4
    ad9c:	9901      	ldr	r1, [sp, #4]
    ad9e:	3243      	adds	r2, #67	; 0x43
    ada0:	9800      	ldr	r0, [sp, #0]
    ada2:	9e08      	ldr	r6, [sp, #32]
    ada4:	47b0      	blx	r6
    ada6:	1c43      	adds	r3, r0, #1
    ada8:	d025      	beq.n	adf6 <_printf_common+0xa2>
    adaa:	2306      	movs	r3, #6
    adac:	6820      	ldr	r0, [r4, #0]
    adae:	682a      	ldr	r2, [r5, #0]
    adb0:	68e1      	ldr	r1, [r4, #12]
    adb2:	4003      	ands	r3, r0
    adb4:	2500      	movs	r5, #0
    adb6:	2b04      	cmp	r3, #4
    adb8:	d103      	bne.n	adc2 <_printf_common+0x6e>
    adba:	1a8d      	subs	r5, r1, r2
    adbc:	43eb      	mvns	r3, r5
    adbe:	17db      	asrs	r3, r3, #31
    adc0:	401d      	ands	r5, r3
    adc2:	68a3      	ldr	r3, [r4, #8]
    adc4:	6922      	ldr	r2, [r4, #16]
    adc6:	4293      	cmp	r3, r2
    adc8:	dd01      	ble.n	adce <_printf_common+0x7a>
    adca:	1a9b      	subs	r3, r3, r2
    adcc:	18ed      	adds	r5, r5, r3
    adce:	2700      	movs	r7, #0
    add0:	42bd      	cmp	r5, r7
    add2:	d120      	bne.n	ae16 <_printf_common+0xc2>
    add4:	2000      	movs	r0, #0
    add6:	e010      	b.n	adfa <_printf_common+0xa6>
    add8:	3701      	adds	r7, #1
    adda:	68e3      	ldr	r3, [r4, #12]
    addc:	682a      	ldr	r2, [r5, #0]
    adde:	1a9b      	subs	r3, r3, r2
    ade0:	429f      	cmp	r7, r3
    ade2:	dad2      	bge.n	ad8a <_printf_common+0x36>
    ade4:	0022      	movs	r2, r4
    ade6:	2301      	movs	r3, #1
    ade8:	3219      	adds	r2, #25
    adea:	9901      	ldr	r1, [sp, #4]
    adec:	9800      	ldr	r0, [sp, #0]
    adee:	9e08      	ldr	r6, [sp, #32]
    adf0:	47b0      	blx	r6
    adf2:	1c43      	adds	r3, r0, #1
    adf4:	d1f0      	bne.n	add8 <_printf_common+0x84>
    adf6:	2001      	movs	r0, #1
    adf8:	4240      	negs	r0, r0
    adfa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    adfc:	2030      	movs	r0, #48	; 0x30
    adfe:	18e1      	adds	r1, r4, r3
    ae00:	3143      	adds	r1, #67	; 0x43
    ae02:	7008      	strb	r0, [r1, #0]
    ae04:	0021      	movs	r1, r4
    ae06:	1c5a      	adds	r2, r3, #1
    ae08:	3145      	adds	r1, #69	; 0x45
    ae0a:	7809      	ldrb	r1, [r1, #0]
    ae0c:	18a2      	adds	r2, r4, r2
    ae0e:	3243      	adds	r2, #67	; 0x43
    ae10:	3302      	adds	r3, #2
    ae12:	7011      	strb	r1, [r2, #0]
    ae14:	e7c1      	b.n	ad9a <_printf_common+0x46>
    ae16:	0022      	movs	r2, r4
    ae18:	2301      	movs	r3, #1
    ae1a:	321a      	adds	r2, #26
    ae1c:	9901      	ldr	r1, [sp, #4]
    ae1e:	9800      	ldr	r0, [sp, #0]
    ae20:	9e08      	ldr	r6, [sp, #32]
    ae22:	47b0      	blx	r6
    ae24:	1c43      	adds	r3, r0, #1
    ae26:	d0e6      	beq.n	adf6 <_printf_common+0xa2>
    ae28:	3701      	adds	r7, #1
    ae2a:	e7d1      	b.n	add0 <_printf_common+0x7c>

0000ae2c <_printf_i>:
    ae2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    ae2e:	000e      	movs	r6, r1
    ae30:	b089      	sub	sp, #36	; 0x24
    ae32:	9305      	str	r3, [sp, #20]
    ae34:	9003      	str	r0, [sp, #12]
    ae36:	9204      	str	r2, [sp, #16]
    ae38:	7e0a      	ldrb	r2, [r1, #24]
    ae3a:	000c      	movs	r4, r1
    ae3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ae3e:	3643      	adds	r6, #67	; 0x43
    ae40:	2a6e      	cmp	r2, #110	; 0x6e
    ae42:	d100      	bne.n	ae46 <_printf_i+0x1a>
    ae44:	e08b      	b.n	af5e <_printf_i+0x132>
    ae46:	d817      	bhi.n	ae78 <_printf_i+0x4c>
    ae48:	2a63      	cmp	r2, #99	; 0x63
    ae4a:	d02c      	beq.n	aea6 <_printf_i+0x7a>
    ae4c:	d808      	bhi.n	ae60 <_printf_i+0x34>
    ae4e:	2a00      	cmp	r2, #0
    ae50:	d100      	bne.n	ae54 <_printf_i+0x28>
    ae52:	e095      	b.n	af80 <_printf_i+0x154>
    ae54:	2a58      	cmp	r2, #88	; 0x58
    ae56:	d065      	beq.n	af24 <_printf_i+0xf8>
    ae58:	0025      	movs	r5, r4
    ae5a:	3542      	adds	r5, #66	; 0x42
    ae5c:	702a      	strb	r2, [r5, #0]
    ae5e:	e029      	b.n	aeb4 <_printf_i+0x88>
    ae60:	2a64      	cmp	r2, #100	; 0x64
    ae62:	d001      	beq.n	ae68 <_printf_i+0x3c>
    ae64:	2a69      	cmp	r2, #105	; 0x69
    ae66:	d1f7      	bne.n	ae58 <_printf_i+0x2c>
    ae68:	6821      	ldr	r1, [r4, #0]
    ae6a:	681a      	ldr	r2, [r3, #0]
    ae6c:	0608      	lsls	r0, r1, #24
    ae6e:	d523      	bpl.n	aeb8 <_printf_i+0x8c>
    ae70:	1d11      	adds	r1, r2, #4
    ae72:	6019      	str	r1, [r3, #0]
    ae74:	6813      	ldr	r3, [r2, #0]
    ae76:	e025      	b.n	aec4 <_printf_i+0x98>
    ae78:	2a73      	cmp	r2, #115	; 0x73
    ae7a:	d100      	bne.n	ae7e <_printf_i+0x52>
    ae7c:	e084      	b.n	af88 <_printf_i+0x15c>
    ae7e:	d808      	bhi.n	ae92 <_printf_i+0x66>
    ae80:	2a6f      	cmp	r2, #111	; 0x6f
    ae82:	d027      	beq.n	aed4 <_printf_i+0xa8>
    ae84:	2a70      	cmp	r2, #112	; 0x70
    ae86:	d1e7      	bne.n	ae58 <_printf_i+0x2c>
    ae88:	2220      	movs	r2, #32
    ae8a:	6809      	ldr	r1, [r1, #0]
    ae8c:	430a      	orrs	r2, r1
    ae8e:	6022      	str	r2, [r4, #0]
    ae90:	e003      	b.n	ae9a <_printf_i+0x6e>
    ae92:	2a75      	cmp	r2, #117	; 0x75
    ae94:	d01e      	beq.n	aed4 <_printf_i+0xa8>
    ae96:	2a78      	cmp	r2, #120	; 0x78
    ae98:	d1de      	bne.n	ae58 <_printf_i+0x2c>
    ae9a:	0022      	movs	r2, r4
    ae9c:	2178      	movs	r1, #120	; 0x78
    ae9e:	3245      	adds	r2, #69	; 0x45
    aea0:	7011      	strb	r1, [r2, #0]
    aea2:	4968      	ldr	r1, [pc, #416]	; (b044 <_printf_i+0x218>)
    aea4:	e041      	b.n	af2a <_printf_i+0xfe>
    aea6:	000d      	movs	r5, r1
    aea8:	681a      	ldr	r2, [r3, #0]
    aeaa:	3542      	adds	r5, #66	; 0x42
    aeac:	1d11      	adds	r1, r2, #4
    aeae:	6019      	str	r1, [r3, #0]
    aeb0:	6813      	ldr	r3, [r2, #0]
    aeb2:	702b      	strb	r3, [r5, #0]
    aeb4:	2301      	movs	r3, #1
    aeb6:	e074      	b.n	afa2 <_printf_i+0x176>
    aeb8:	0649      	lsls	r1, r1, #25
    aeba:	d5d9      	bpl.n	ae70 <_printf_i+0x44>
    aebc:	1d11      	adds	r1, r2, #4
    aebe:	6019      	str	r1, [r3, #0]
    aec0:	2300      	movs	r3, #0
    aec2:	5ed3      	ldrsh	r3, [r2, r3]
    aec4:	2b00      	cmp	r3, #0
    aec6:	da02      	bge.n	aece <_printf_i+0xa2>
    aec8:	222d      	movs	r2, #45	; 0x2d
    aeca:	425b      	negs	r3, r3
    aecc:	7032      	strb	r2, [r6, #0]
    aece:	495e      	ldr	r1, [pc, #376]	; (b048 <_printf_i+0x21c>)
    aed0:	220a      	movs	r2, #10
    aed2:	e015      	b.n	af00 <_printf_i+0xd4>
    aed4:	6820      	ldr	r0, [r4, #0]
    aed6:	6819      	ldr	r1, [r3, #0]
    aed8:	0605      	lsls	r5, r0, #24
    aeda:	d503      	bpl.n	aee4 <_printf_i+0xb8>
    aedc:	1d08      	adds	r0, r1, #4
    aede:	6018      	str	r0, [r3, #0]
    aee0:	680b      	ldr	r3, [r1, #0]
    aee2:	e005      	b.n	aef0 <_printf_i+0xc4>
    aee4:	0640      	lsls	r0, r0, #25
    aee6:	d5f9      	bpl.n	aedc <_printf_i+0xb0>
    aee8:	1d08      	adds	r0, r1, #4
    aeea:	6018      	str	r0, [r3, #0]
    aeec:	680b      	ldr	r3, [r1, #0]
    aeee:	b29b      	uxth	r3, r3
    aef0:	4955      	ldr	r1, [pc, #340]	; (b048 <_printf_i+0x21c>)
    aef2:	2a6f      	cmp	r2, #111	; 0x6f
    aef4:	d131      	bne.n	af5a <_printf_i+0x12e>
    aef6:	3a67      	subs	r2, #103	; 0x67
    aef8:	0020      	movs	r0, r4
    aefa:	2500      	movs	r5, #0
    aefc:	3043      	adds	r0, #67	; 0x43
    aefe:	7005      	strb	r5, [r0, #0]
    af00:	6860      	ldr	r0, [r4, #4]
    af02:	60a0      	str	r0, [r4, #8]
    af04:	2800      	cmp	r0, #0
    af06:	db72      	blt.n	afee <_printf_i+0x1c2>
    af08:	2504      	movs	r5, #4
    af0a:	6827      	ldr	r7, [r4, #0]
    af0c:	43af      	bics	r7, r5
    af0e:	6027      	str	r7, [r4, #0]
    af10:	2b00      	cmp	r3, #0
    af12:	d16e      	bne.n	aff2 <_printf_i+0x1c6>
    af14:	0035      	movs	r5, r6
    af16:	2800      	cmp	r0, #0
    af18:	d077      	beq.n	b00a <_printf_i+0x1de>
    af1a:	0025      	movs	r5, r4
    af1c:	780b      	ldrb	r3, [r1, #0]
    af1e:	3542      	adds	r5, #66	; 0x42
    af20:	702b      	strb	r3, [r5, #0]
    af22:	e072      	b.n	b00a <_printf_i+0x1de>
    af24:	3145      	adds	r1, #69	; 0x45
    af26:	700a      	strb	r2, [r1, #0]
    af28:	4947      	ldr	r1, [pc, #284]	; (b048 <_printf_i+0x21c>)
    af2a:	681a      	ldr	r2, [r3, #0]
    af2c:	6820      	ldr	r0, [r4, #0]
    af2e:	1d15      	adds	r5, r2, #4
    af30:	601d      	str	r5, [r3, #0]
    af32:	6813      	ldr	r3, [r2, #0]
    af34:	0605      	lsls	r5, r0, #24
    af36:	d50c      	bpl.n	af52 <_printf_i+0x126>
    af38:	07c2      	lsls	r2, r0, #31
    af3a:	d502      	bpl.n	af42 <_printf_i+0x116>
    af3c:	2220      	movs	r2, #32
    af3e:	4310      	orrs	r0, r2
    af40:	6020      	str	r0, [r4, #0]
    af42:	2210      	movs	r2, #16
    af44:	2b00      	cmp	r3, #0
    af46:	d1d7      	bne.n	aef8 <_printf_i+0xcc>
    af48:	2020      	movs	r0, #32
    af4a:	6825      	ldr	r5, [r4, #0]
    af4c:	4385      	bics	r5, r0
    af4e:	6025      	str	r5, [r4, #0]
    af50:	e7d2      	b.n	aef8 <_printf_i+0xcc>
    af52:	0645      	lsls	r5, r0, #25
    af54:	d5f0      	bpl.n	af38 <_printf_i+0x10c>
    af56:	b29b      	uxth	r3, r3
    af58:	e7ee      	b.n	af38 <_printf_i+0x10c>
    af5a:	220a      	movs	r2, #10
    af5c:	e7cc      	b.n	aef8 <_printf_i+0xcc>
    af5e:	6809      	ldr	r1, [r1, #0]
    af60:	681a      	ldr	r2, [r3, #0]
    af62:	0608      	lsls	r0, r1, #24
    af64:	d505      	bpl.n	af72 <_printf_i+0x146>
    af66:	1d11      	adds	r1, r2, #4
    af68:	6019      	str	r1, [r3, #0]
    af6a:	6813      	ldr	r3, [r2, #0]
    af6c:	6962      	ldr	r2, [r4, #20]
    af6e:	601a      	str	r2, [r3, #0]
    af70:	e006      	b.n	af80 <_printf_i+0x154>
    af72:	0649      	lsls	r1, r1, #25
    af74:	d5f7      	bpl.n	af66 <_printf_i+0x13a>
    af76:	1d11      	adds	r1, r2, #4
    af78:	6019      	str	r1, [r3, #0]
    af7a:	6813      	ldr	r3, [r2, #0]
    af7c:	8aa2      	ldrh	r2, [r4, #20]
    af7e:	801a      	strh	r2, [r3, #0]
    af80:	2300      	movs	r3, #0
    af82:	0035      	movs	r5, r6
    af84:	6123      	str	r3, [r4, #16]
    af86:	e04e      	b.n	b026 <_printf_i+0x1fa>
    af88:	681a      	ldr	r2, [r3, #0]
    af8a:	1d11      	adds	r1, r2, #4
    af8c:	6019      	str	r1, [r3, #0]
    af8e:	6815      	ldr	r5, [r2, #0]
    af90:	2100      	movs	r1, #0
    af92:	6862      	ldr	r2, [r4, #4]
    af94:	0028      	movs	r0, r5
    af96:	f000 f968 	bl	b26a <memchr>
    af9a:	b108      	cbz	r0, afa0 <_printf_i+0x174>
    af9c:	1b40      	subs	r0, r0, r5
    af9e:	6060      	str	r0, [r4, #4]
    afa0:	6863      	ldr	r3, [r4, #4]
    afa2:	6123      	str	r3, [r4, #16]
    afa4:	2300      	movs	r3, #0
    afa6:	7033      	strb	r3, [r6, #0]
    afa8:	e03d      	b.n	b026 <_printf_i+0x1fa>
    afaa:	6923      	ldr	r3, [r4, #16]
    afac:	002a      	movs	r2, r5
    afae:	9904      	ldr	r1, [sp, #16]
    afb0:	9803      	ldr	r0, [sp, #12]
    afb2:	9d05      	ldr	r5, [sp, #20]
    afb4:	47a8      	blx	r5
    afb6:	1c43      	adds	r3, r0, #1
    afb8:	d03f      	beq.n	b03a <_printf_i+0x20e>
    afba:	6823      	ldr	r3, [r4, #0]
    afbc:	2500      	movs	r5, #0
    afbe:	079b      	lsls	r3, r3, #30
    afc0:	d40f      	bmi.n	afe2 <_printf_i+0x1b6>
    afc2:	9b07      	ldr	r3, [sp, #28]
    afc4:	68e0      	ldr	r0, [r4, #12]
    afc6:	4298      	cmp	r0, r3
    afc8:	da39      	bge.n	b03e <_printf_i+0x212>
    afca:	0018      	movs	r0, r3
    afcc:	e037      	b.n	b03e <_printf_i+0x212>
    afce:	0022      	movs	r2, r4
    afd0:	2301      	movs	r3, #1
    afd2:	3219      	adds	r2, #25
    afd4:	9904      	ldr	r1, [sp, #16]
    afd6:	9803      	ldr	r0, [sp, #12]
    afd8:	9e05      	ldr	r6, [sp, #20]
    afda:	47b0      	blx	r6
    afdc:	1c43      	adds	r3, r0, #1
    afde:	d02c      	beq.n	b03a <_printf_i+0x20e>
    afe0:	3501      	adds	r5, #1
    afe2:	68e3      	ldr	r3, [r4, #12]
    afe4:	9a07      	ldr	r2, [sp, #28]
    afe6:	1a9b      	subs	r3, r3, r2
    afe8:	429d      	cmp	r5, r3
    afea:	dbf0      	blt.n	afce <_printf_i+0x1a2>
    afec:	e7e9      	b.n	afc2 <_printf_i+0x196>
    afee:	2b00      	cmp	r3, #0
    aff0:	d093      	beq.n	af1a <_printf_i+0xee>
    aff2:	0035      	movs	r5, r6
    aff4:	fbb3 f0f2 	udiv	r0, r3, r2
    aff8:	0017      	movs	r7, r2
    affa:	4347      	muls	r7, r0
    affc:	1bdb      	subs	r3, r3, r7
    affe:	5ccb      	ldrb	r3, [r1, r3]
    b000:	3d01      	subs	r5, #1
    b002:	702b      	strb	r3, [r5, #0]
    b004:	0003      	movs	r3, r0
    b006:	2800      	cmp	r0, #0
    b008:	d1f4      	bne.n	aff4 <_printf_i+0x1c8>
    b00a:	2a08      	cmp	r2, #8
    b00c:	d109      	bne.n	b022 <_printf_i+0x1f6>
    b00e:	6823      	ldr	r3, [r4, #0]
    b010:	07db      	lsls	r3, r3, #31
    b012:	d506      	bpl.n	b022 <_printf_i+0x1f6>
    b014:	6863      	ldr	r3, [r4, #4]
    b016:	6922      	ldr	r2, [r4, #16]
    b018:	4293      	cmp	r3, r2
    b01a:	dc02      	bgt.n	b022 <_printf_i+0x1f6>
    b01c:	2330      	movs	r3, #48	; 0x30
    b01e:	3d01      	subs	r5, #1
    b020:	702b      	strb	r3, [r5, #0]
    b022:	1b76      	subs	r6, r6, r5
    b024:	6126      	str	r6, [r4, #16]
    b026:	9b05      	ldr	r3, [sp, #20]
    b028:	aa07      	add	r2, sp, #28
    b02a:	9300      	str	r3, [sp, #0]
    b02c:	0021      	movs	r1, r4
    b02e:	9b04      	ldr	r3, [sp, #16]
    b030:	9803      	ldr	r0, [sp, #12]
    b032:	f7ff fe8f 	bl	ad54 <_printf_common>
    b036:	1c43      	adds	r3, r0, #1
    b038:	d1b7      	bne.n	afaa <_printf_i+0x17e>
    b03a:	2001      	movs	r0, #1
    b03c:	4240      	negs	r0, r0
    b03e:	b009      	add	sp, #36	; 0x24
    b040:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b042:	46c0      	nop			; (mov r8, r8)
    b044:	0000b935 	.word	0x0000b935
    b048:	0000b924 	.word	0x0000b924

0000b04c <rand>:
    b04c:	4b16      	ldr	r3, [pc, #88]	; (b0a8 <rand+0x5c>)
    b04e:	b510      	push	{r4, lr}
    b050:	681c      	ldr	r4, [r3, #0]
    b052:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    b054:	b9bb      	cbnz	r3, b086 <rand+0x3a>
    b056:	2018      	movs	r0, #24
    b058:	f7ff fd9c 	bl	ab94 <malloc>
    b05c:	f243 330e 	movw	r3, #13070	; 0x330e
    b060:	63a0      	str	r0, [r4, #56]	; 0x38
    b062:	8003      	strh	r3, [r0, #0]
    b064:	4b11      	ldr	r3, [pc, #68]	; (b0ac <rand+0x60>)
    b066:	2201      	movs	r2, #1
    b068:	8043      	strh	r3, [r0, #2]
    b06a:	f241 2334 	movw	r3, #4660	; 0x1234
    b06e:	8083      	strh	r3, [r0, #4]
    b070:	4b0f      	ldr	r3, [pc, #60]	; (b0b0 <rand+0x64>)
    b072:	80c3      	strh	r3, [r0, #6]
    b074:	4b0f      	ldr	r3, [pc, #60]	; (b0b4 <rand+0x68>)
    b076:	8103      	strh	r3, [r0, #8]
    b078:	2305      	movs	r3, #5
    b07a:	8143      	strh	r3, [r0, #10]
    b07c:	3306      	adds	r3, #6
    b07e:	8183      	strh	r3, [r0, #12]
    b080:	2300      	movs	r3, #0
    b082:	6102      	str	r2, [r0, #16]
    b084:	6143      	str	r3, [r0, #20]
    b086:	6ba4      	ldr	r4, [r4, #56]	; 0x38
    b088:	4a0b      	ldr	r2, [pc, #44]	; (b0b8 <rand+0x6c>)
    b08a:	6920      	ldr	r0, [r4, #16]
    b08c:	6961      	ldr	r1, [r4, #20]
    b08e:	4b0b      	ldr	r3, [pc, #44]	; (b0bc <rand+0x70>)
    b090:	f7fe fb58 	bl	9744 <__aeabi_lmul>
    b094:	2201      	movs	r2, #1
    b096:	2300      	movs	r3, #0
    b098:	1880      	adds	r0, r0, r2
    b09a:	4159      	adcs	r1, r3
    b09c:	6120      	str	r0, [r4, #16]
    b09e:	6161      	str	r1, [r4, #20]
    b0a0:	0048      	lsls	r0, r1, #1
    b0a2:	0840      	lsrs	r0, r0, #1
    b0a4:	bd10      	pop	{r4, pc}
    b0a6:	46c0      	nop			; (mov r8, r8)
    b0a8:	20002004 	.word	0x20002004
    b0ac:	ffffabcd 	.word	0xffffabcd
    b0b0:	ffffe66d 	.word	0xffffe66d
    b0b4:	ffffdeec 	.word	0xffffdeec
    b0b8:	4c957f2d 	.word	0x4c957f2d
    b0bc:	5851f42d 	.word	0x5851f42d

0000b0c0 <_sbrk_r>:
    b0c0:	2300      	movs	r3, #0
    b0c2:	b570      	push	{r4, r5, r6, lr}
    b0c4:	4c05      	ldr	r4, [pc, #20]	; (b0dc <_sbrk_r+0x1c>)
    b0c6:	0005      	movs	r5, r0
    b0c8:	0008      	movs	r0, r1
    b0ca:	6023      	str	r3, [r4, #0]
    b0cc:	f000 fa88 	bl	b5e0 <_sbrk>
    b0d0:	1c43      	adds	r3, r0, #1
    b0d2:	d102      	bne.n	b0da <_sbrk_r+0x1a>
    b0d4:	6823      	ldr	r3, [r4, #0]
    b0d6:	b103      	cbz	r3, b0da <_sbrk_r+0x1a>
    b0d8:	602b      	str	r3, [r5, #0]
    b0da:	bd70      	pop	{r4, r5, r6, pc}
    b0dc:	200028b8 	.word	0x200028b8

0000b0e0 <siprintf>:
    b0e0:	b40e      	push	{r1, r2, r3}
    b0e2:	b510      	push	{r4, lr}
    b0e4:	b09d      	sub	sp, #116	; 0x74
    b0e6:	a902      	add	r1, sp, #8
    b0e8:	9002      	str	r0, [sp, #8]
    b0ea:	6108      	str	r0, [r1, #16]
    b0ec:	480b      	ldr	r0, [pc, #44]	; (b11c <siprintf+0x3c>)
    b0ee:	f240 2408 	movw	r4, #520	; 0x208
    b0f2:	6088      	str	r0, [r1, #8]
    b0f4:	6148      	str	r0, [r1, #20]
    b0f6:	2001      	movs	r0, #1
    b0f8:	4240      	negs	r0, r0
    b0fa:	ab1f      	add	r3, sp, #124	; 0x7c
    b0fc:	81c8      	strh	r0, [r1, #14]
    b0fe:	4808      	ldr	r0, [pc, #32]	; (b120 <siprintf+0x40>)
    b100:	cb04      	ldmia	r3!, {r2}
    b102:	6800      	ldr	r0, [r0, #0]
    b104:	9301      	str	r3, [sp, #4]
    b106:	818c      	strh	r4, [r1, #12]
    b108:	f000 f956 	bl	b3b8 <_svfiprintf_r>
    b10c:	2300      	movs	r3, #0
    b10e:	9a02      	ldr	r2, [sp, #8]
    b110:	7013      	strb	r3, [r2, #0]
    b112:	b01d      	add	sp, #116	; 0x74
    b114:	bc10      	pop	{r4}
    b116:	bc08      	pop	{r3}
    b118:	b003      	add	sp, #12
    b11a:	4718      	bx	r3
    b11c:	7fffffff 	.word	0x7fffffff
    b120:	20002004 	.word	0x20002004

0000b124 <_strtol_l.isra.0>:
    b124:	b5f0      	push	{r4, r5, r6, r7, lr}
    b126:	001f      	movs	r7, r3
    b128:	000e      	movs	r6, r1
    b12a:	b087      	sub	sp, #28
    b12c:	9005      	str	r0, [sp, #20]
    b12e:	9103      	str	r1, [sp, #12]
    b130:	9202      	str	r2, [sp, #8]
    b132:	980c      	ldr	r0, [sp, #48]	; 0x30
    b134:	7834      	ldrb	r4, [r6, #0]
    b136:	f000 f885 	bl	b244 <__locale_ctype_ptr_l>
    b13a:	2208      	movs	r2, #8
    b13c:	1900      	adds	r0, r0, r4
    b13e:	7843      	ldrb	r3, [r0, #1]
    b140:	1c75      	adds	r5, r6, #1
    b142:	4013      	ands	r3, r2
    b144:	b95b      	cbnz	r3, b15e <_strtol_l.isra.0+0x3a>
    b146:	2c2d      	cmp	r4, #45	; 0x2d
    b148:	d10b      	bne.n	b162 <_strtol_l.isra.0+0x3e>
    b14a:	3301      	adds	r3, #1
    b14c:	782c      	ldrb	r4, [r5, #0]
    b14e:	9301      	str	r3, [sp, #4]
    b150:	1cb5      	adds	r5, r6, #2
    b152:	b167      	cbz	r7, b16e <_strtol_l.isra.0+0x4a>
    b154:	2f10      	cmp	r7, #16
    b156:	d114      	bne.n	b182 <_strtol_l.isra.0+0x5e>
    b158:	2c30      	cmp	r4, #48	; 0x30
    b15a:	d00a      	beq.n	b172 <_strtol_l.isra.0+0x4e>
    b15c:	e011      	b.n	b182 <_strtol_l.isra.0+0x5e>
    b15e:	002e      	movs	r6, r5
    b160:	e7e7      	b.n	b132 <_strtol_l.isra.0+0xe>
    b162:	9301      	str	r3, [sp, #4]
    b164:	2c2b      	cmp	r4, #43	; 0x2b
    b166:	d1f4      	bne.n	b152 <_strtol_l.isra.0+0x2e>
    b168:	782c      	ldrb	r4, [r5, #0]
    b16a:	1cb5      	adds	r5, r6, #2
    b16c:	e7f1      	b.n	b152 <_strtol_l.isra.0+0x2e>
    b16e:	2c30      	cmp	r4, #48	; 0x30
    b170:	d12b      	bne.n	b1ca <_strtol_l.isra.0+0xa6>
    b172:	2220      	movs	r2, #32
    b174:	782b      	ldrb	r3, [r5, #0]
    b176:	4393      	bics	r3, r2
    b178:	2b58      	cmp	r3, #88	; 0x58
    b17a:	d14a      	bne.n	b212 <_strtol_l.isra.0+0xee>
    b17c:	2710      	movs	r7, #16
    b17e:	786c      	ldrb	r4, [r5, #1]
    b180:	3502      	adds	r5, #2
    b182:	9b01      	ldr	r3, [sp, #4]
    b184:	4a25      	ldr	r2, [pc, #148]	; (b21c <_strtol_l.isra.0+0xf8>)
    b186:	1899      	adds	r1, r3, r2
    b188:	fbb1 f6f7 	udiv	r6, r1, r7
    b18c:	003b      	movs	r3, r7
    b18e:	4373      	muls	r3, r6
    b190:	1acb      	subs	r3, r1, r3
    b192:	9304      	str	r3, [sp, #16]
    b194:	2301      	movs	r3, #1
    b196:	2200      	movs	r2, #0
    b198:	425b      	negs	r3, r3
    b19a:	0010      	movs	r0, r2
    b19c:	469c      	mov	ip, r3
    b19e:	0023      	movs	r3, r4
    b1a0:	3b30      	subs	r3, #48	; 0x30
    b1a2:	2b09      	cmp	r3, #9
    b1a4:	d813      	bhi.n	b1ce <_strtol_l.isra.0+0xaa>
    b1a6:	001c      	movs	r4, r3
    b1a8:	42a7      	cmp	r7, r4
    b1aa:	dd1c      	ble.n	b1e6 <_strtol_l.isra.0+0xc2>
    b1ac:	1c53      	adds	r3, r2, #1
    b1ae:	d009      	beq.n	b1c4 <_strtol_l.isra.0+0xa0>
    b1b0:	4662      	mov	r2, ip
    b1b2:	4286      	cmp	r6, r0
    b1b4:	d306      	bcc.n	b1c4 <_strtol_l.isra.0+0xa0>
    b1b6:	d102      	bne.n	b1be <_strtol_l.isra.0+0x9a>
    b1b8:	9b04      	ldr	r3, [sp, #16]
    b1ba:	42a3      	cmp	r3, r4
    b1bc:	db02      	blt.n	b1c4 <_strtol_l.isra.0+0xa0>
    b1be:	2201      	movs	r2, #1
    b1c0:	4378      	muls	r0, r7
    b1c2:	1820      	adds	r0, r4, r0
    b1c4:	782c      	ldrb	r4, [r5, #0]
    b1c6:	3501      	adds	r5, #1
    b1c8:	e7e9      	b.n	b19e <_strtol_l.isra.0+0x7a>
    b1ca:	270a      	movs	r7, #10
    b1cc:	e7d9      	b.n	b182 <_strtol_l.isra.0+0x5e>
    b1ce:	0023      	movs	r3, r4
    b1d0:	3b41      	subs	r3, #65	; 0x41
    b1d2:	2b19      	cmp	r3, #25
    b1d4:	d801      	bhi.n	b1da <_strtol_l.isra.0+0xb6>
    b1d6:	3c37      	subs	r4, #55	; 0x37
    b1d8:	e7e6      	b.n	b1a8 <_strtol_l.isra.0+0x84>
    b1da:	0023      	movs	r3, r4
    b1dc:	3b61      	subs	r3, #97	; 0x61
    b1de:	2b19      	cmp	r3, #25
    b1e0:	d801      	bhi.n	b1e6 <_strtol_l.isra.0+0xc2>
    b1e2:	3c57      	subs	r4, #87	; 0x57
    b1e4:	e7e0      	b.n	b1a8 <_strtol_l.isra.0+0x84>
    b1e6:	1c53      	adds	r3, r2, #1
    b1e8:	d107      	bne.n	b1fa <_strtol_l.isra.0+0xd6>
    b1ea:	2322      	movs	r3, #34	; 0x22
    b1ec:	9a05      	ldr	r2, [sp, #20]
    b1ee:	0008      	movs	r0, r1
    b1f0:	6013      	str	r3, [r2, #0]
    b1f2:	9b02      	ldr	r3, [sp, #8]
    b1f4:	b94b      	cbnz	r3, b20a <_strtol_l.isra.0+0xe6>
    b1f6:	b007      	add	sp, #28
    b1f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b1fa:	9b01      	ldr	r3, [sp, #4]
    b1fc:	b103      	cbz	r3, b200 <_strtol_l.isra.0+0xdc>
    b1fe:	4240      	negs	r0, r0
    b200:	9b02      	ldr	r3, [sp, #8]
    b202:	2b00      	cmp	r3, #0
    b204:	d0f7      	beq.n	b1f6 <_strtol_l.isra.0+0xd2>
    b206:	9b03      	ldr	r3, [sp, #12]
    b208:	b102      	cbz	r2, b20c <_strtol_l.isra.0+0xe8>
    b20a:	1e6b      	subs	r3, r5, #1
    b20c:	9a02      	ldr	r2, [sp, #8]
    b20e:	6013      	str	r3, [r2, #0]
    b210:	e7f1      	b.n	b1f6 <_strtol_l.isra.0+0xd2>
    b212:	2430      	movs	r4, #48	; 0x30
    b214:	2f00      	cmp	r7, #0
    b216:	d1b4      	bne.n	b182 <_strtol_l.isra.0+0x5e>
    b218:	3708      	adds	r7, #8
    b21a:	e7b2      	b.n	b182 <_strtol_l.isra.0+0x5e>
    b21c:	7fffffff 	.word	0x7fffffff

0000b220 <strtol>:
    b220:	b537      	push	{r0, r1, r2, r4, r5, lr}
    b222:	0013      	movs	r3, r2
    b224:	4a05      	ldr	r2, [pc, #20]	; (b23c <strtol+0x1c>)
    b226:	0005      	movs	r5, r0
    b228:	6810      	ldr	r0, [r2, #0]
    b22a:	6a04      	ldr	r4, [r0, #32]
    b22c:	b904      	cbnz	r4, b230 <strtol+0x10>
    b22e:	4c04      	ldr	r4, [pc, #16]	; (b240 <strtol+0x20>)
    b230:	000a      	movs	r2, r1
    b232:	9400      	str	r4, [sp, #0]
    b234:	0029      	movs	r1, r5
    b236:	f7ff ff75 	bl	b124 <_strtol_l.isra.0>
    b23a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    b23c:	20002004 	.word	0x20002004
    b240:	20002068 	.word	0x20002068

0000b244 <__locale_ctype_ptr_l>:
    b244:	30ec      	adds	r0, #236	; 0xec
    b246:	6800      	ldr	r0, [r0, #0]
    b248:	4770      	bx	lr

0000b24a <__ascii_mbtowc>:
    b24a:	b082      	sub	sp, #8
    b24c:	b901      	cbnz	r1, b250 <__ascii_mbtowc+0x6>
    b24e:	a901      	add	r1, sp, #4
    b250:	0010      	movs	r0, r2
    b252:	b12a      	cbz	r2, b260 <__ascii_mbtowc+0x16>
    b254:	b133      	cbz	r3, b264 <__ascii_mbtowc+0x1a>
    b256:	7813      	ldrb	r3, [r2, #0]
    b258:	600b      	str	r3, [r1, #0]
    b25a:	7810      	ldrb	r0, [r2, #0]
    b25c:	1e43      	subs	r3, r0, #1
    b25e:	4198      	sbcs	r0, r3
    b260:	b002      	add	sp, #8
    b262:	4770      	bx	lr
    b264:	2002      	movs	r0, #2
    b266:	4240      	negs	r0, r0
    b268:	e7fa      	b.n	b260 <__ascii_mbtowc+0x16>

0000b26a <memchr>:
    b26a:	b2c9      	uxtb	r1, r1
    b26c:	1882      	adds	r2, r0, r2
    b26e:	4290      	cmp	r0, r2
    b270:	d101      	bne.n	b276 <memchr+0xc>
    b272:	2000      	movs	r0, #0
    b274:	4770      	bx	lr
    b276:	7803      	ldrb	r3, [r0, #0]
    b278:	428b      	cmp	r3, r1
    b27a:	d0fb      	beq.n	b274 <memchr+0xa>
    b27c:	3001      	adds	r0, #1
    b27e:	e7f6      	b.n	b26e <memchr+0x4>

0000b280 <memmove>:
    b280:	b510      	push	{r4, lr}
    b282:	4288      	cmp	r0, r1
    b284:	d902      	bls.n	b28c <memmove+0xc>
    b286:	188b      	adds	r3, r1, r2
    b288:	4298      	cmp	r0, r3
    b28a:	d308      	bcc.n	b29e <memmove+0x1e>
    b28c:	2300      	movs	r3, #0
    b28e:	429a      	cmp	r2, r3
    b290:	d007      	beq.n	b2a2 <memmove+0x22>
    b292:	5ccc      	ldrb	r4, [r1, r3]
    b294:	54c4      	strb	r4, [r0, r3]
    b296:	3301      	adds	r3, #1
    b298:	e7f9      	b.n	b28e <memmove+0xe>
    b29a:	5c8b      	ldrb	r3, [r1, r2]
    b29c:	5483      	strb	r3, [r0, r2]
    b29e:	3a01      	subs	r2, #1
    b2a0:	d2fb      	bcs.n	b29a <memmove+0x1a>
    b2a2:	bd10      	pop	{r4, pc}

0000b2a4 <__malloc_lock>:
    b2a4:	4770      	bx	lr

0000b2a6 <__malloc_unlock>:
    b2a6:	4770      	bx	lr

0000b2a8 <_realloc_r>:
    b2a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b2aa:	0007      	movs	r7, r0
    b2ac:	000d      	movs	r5, r1
    b2ae:	0016      	movs	r6, r2
    b2b0:	b929      	cbnz	r1, b2be <_realloc_r+0x16>
    b2b2:	0011      	movs	r1, r2
    b2b4:	f7ff fcf0 	bl	ac98 <_malloc_r>
    b2b8:	0004      	movs	r4, r0
    b2ba:	0020      	movs	r0, r4
    b2bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    b2be:	b91a      	cbnz	r2, b2c8 <_realloc_r+0x20>
    b2c0:	f7ff fca0 	bl	ac04 <_free_r>
    b2c4:	0034      	movs	r4, r6
    b2c6:	e7f8      	b.n	b2ba <_realloc_r+0x12>
    b2c8:	f000 f982 	bl	b5d0 <_malloc_usable_size_r>
    b2cc:	002c      	movs	r4, r5
    b2ce:	4286      	cmp	r6, r0
    b2d0:	d9f3      	bls.n	b2ba <_realloc_r+0x12>
    b2d2:	0031      	movs	r1, r6
    b2d4:	0038      	movs	r0, r7
    b2d6:	f7ff fcdf 	bl	ac98 <_malloc_r>
    b2da:	0004      	movs	r4, r0
    b2dc:	2800      	cmp	r0, #0
    b2de:	d0ec      	beq.n	b2ba <_realloc_r+0x12>
    b2e0:	0029      	movs	r1, r5
    b2e2:	0032      	movs	r2, r6
    b2e4:	f7ff fc6f 	bl	abc6 <memcpy>
    b2e8:	0029      	movs	r1, r5
    b2ea:	0038      	movs	r0, r7
    b2ec:	f7ff fc8a 	bl	ac04 <_free_r>
    b2f0:	e7e3      	b.n	b2ba <_realloc_r+0x12>
	...

0000b2f4 <__ssputs_r>:
    b2f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    b2f6:	688e      	ldr	r6, [r1, #8]
    b2f8:	b085      	sub	sp, #20
    b2fa:	0007      	movs	r7, r0
    b2fc:	000c      	movs	r4, r1
    b2fe:	9203      	str	r2, [sp, #12]
    b300:	9301      	str	r3, [sp, #4]
    b302:	429e      	cmp	r6, r3
    b304:	d839      	bhi.n	b37a <__ssputs_r+0x86>
    b306:	f240 4380 	movw	r3, #1152	; 0x480
    b30a:	898a      	ldrh	r2, [r1, #12]
    b30c:	421a      	tst	r2, r3
    b30e:	d034      	beq.n	b37a <__ssputs_r+0x86>
    b310:	2503      	movs	r5, #3
    b312:	6909      	ldr	r1, [r1, #16]
    b314:	6823      	ldr	r3, [r4, #0]
    b316:	1a5b      	subs	r3, r3, r1
    b318:	9302      	str	r3, [sp, #8]
    b31a:	6963      	ldr	r3, [r4, #20]
    b31c:	9802      	ldr	r0, [sp, #8]
    b31e:	435d      	muls	r5, r3
    b320:	0feb      	lsrs	r3, r5, #31
    b322:	195d      	adds	r5, r3, r5
    b324:	9b01      	ldr	r3, [sp, #4]
    b326:	106d      	asrs	r5, r5, #1
    b328:	3301      	adds	r3, #1
    b32a:	181b      	adds	r3, r3, r0
    b32c:	42ab      	cmp	r3, r5
    b32e:	d900      	bls.n	b332 <__ssputs_r+0x3e>
    b330:	001d      	movs	r5, r3
    b332:	0553      	lsls	r3, r2, #21
    b334:	d532      	bpl.n	b39c <__ssputs_r+0xa8>
    b336:	0029      	movs	r1, r5
    b338:	0038      	movs	r0, r7
    b33a:	f7ff fcad 	bl	ac98 <_malloc_r>
    b33e:	0006      	movs	r6, r0
    b340:	b948      	cbnz	r0, b356 <__ssputs_r+0x62>
    b342:	230c      	movs	r3, #12
    b344:	603b      	str	r3, [r7, #0]
    b346:	2340      	movs	r3, #64	; 0x40
    b348:	2001      	movs	r0, #1
    b34a:	89a2      	ldrh	r2, [r4, #12]
    b34c:	4240      	negs	r0, r0
    b34e:	4313      	orrs	r3, r2
    b350:	81a3      	strh	r3, [r4, #12]
    b352:	b005      	add	sp, #20
    b354:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b356:	9a02      	ldr	r2, [sp, #8]
    b358:	6921      	ldr	r1, [r4, #16]
    b35a:	f7ff fc34 	bl	abc6 <memcpy>
    b35e:	89a3      	ldrh	r3, [r4, #12]
    b360:	4a14      	ldr	r2, [pc, #80]	; (b3b4 <__ssputs_r+0xc0>)
    b362:	401a      	ands	r2, r3
    b364:	2380      	movs	r3, #128	; 0x80
    b366:	4313      	orrs	r3, r2
    b368:	81a3      	strh	r3, [r4, #12]
    b36a:	9b02      	ldr	r3, [sp, #8]
    b36c:	6126      	str	r6, [r4, #16]
    b36e:	18f6      	adds	r6, r6, r3
    b370:	6026      	str	r6, [r4, #0]
    b372:	6165      	str	r5, [r4, #20]
    b374:	9e01      	ldr	r6, [sp, #4]
    b376:	1aed      	subs	r5, r5, r3
    b378:	60a5      	str	r5, [r4, #8]
    b37a:	9b01      	ldr	r3, [sp, #4]
    b37c:	42b3      	cmp	r3, r6
    b37e:	d200      	bcs.n	b382 <__ssputs_r+0x8e>
    b380:	001e      	movs	r6, r3
    b382:	0032      	movs	r2, r6
    b384:	9903      	ldr	r1, [sp, #12]
    b386:	6820      	ldr	r0, [r4, #0]
    b388:	f7ff ff7a 	bl	b280 <memmove>
    b38c:	68a3      	ldr	r3, [r4, #8]
    b38e:	2000      	movs	r0, #0
    b390:	1b9b      	subs	r3, r3, r6
    b392:	60a3      	str	r3, [r4, #8]
    b394:	6823      	ldr	r3, [r4, #0]
    b396:	199e      	adds	r6, r3, r6
    b398:	6026      	str	r6, [r4, #0]
    b39a:	e7da      	b.n	b352 <__ssputs_r+0x5e>
    b39c:	002a      	movs	r2, r5
    b39e:	0038      	movs	r0, r7
    b3a0:	f7ff ff82 	bl	b2a8 <_realloc_r>
    b3a4:	0006      	movs	r6, r0
    b3a6:	2800      	cmp	r0, #0
    b3a8:	d1df      	bne.n	b36a <__ssputs_r+0x76>
    b3aa:	6921      	ldr	r1, [r4, #16]
    b3ac:	0038      	movs	r0, r7
    b3ae:	f7ff fc29 	bl	ac04 <_free_r>
    b3b2:	e7c6      	b.n	b342 <__ssputs_r+0x4e>
    b3b4:	fffffb7f 	.word	0xfffffb7f

0000b3b8 <_svfiprintf_r>:
    b3b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    b3ba:	b09f      	sub	sp, #124	; 0x7c
    b3bc:	9002      	str	r0, [sp, #8]
    b3be:	9305      	str	r3, [sp, #20]
    b3c0:	898b      	ldrh	r3, [r1, #12]
    b3c2:	000f      	movs	r7, r1
    b3c4:	0016      	movs	r6, r2
    b3c6:	061b      	lsls	r3, r3, #24
    b3c8:	d50f      	bpl.n	b3ea <_svfiprintf_r+0x32>
    b3ca:	690b      	ldr	r3, [r1, #16]
    b3cc:	b96b      	cbnz	r3, b3ea <_svfiprintf_r+0x32>
    b3ce:	2140      	movs	r1, #64	; 0x40
    b3d0:	f7ff fc62 	bl	ac98 <_malloc_r>
    b3d4:	6038      	str	r0, [r7, #0]
    b3d6:	6138      	str	r0, [r7, #16]
    b3d8:	b928      	cbnz	r0, b3e6 <_svfiprintf_r+0x2e>
    b3da:	230c      	movs	r3, #12
    b3dc:	9a02      	ldr	r2, [sp, #8]
    b3de:	3801      	subs	r0, #1
    b3e0:	6013      	str	r3, [r2, #0]
    b3e2:	b01f      	add	sp, #124	; 0x7c
    b3e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b3e6:	2340      	movs	r3, #64	; 0x40
    b3e8:	617b      	str	r3, [r7, #20]
    b3ea:	2300      	movs	r3, #0
    b3ec:	ad06      	add	r5, sp, #24
    b3ee:	616b      	str	r3, [r5, #20]
    b3f0:	3320      	adds	r3, #32
    b3f2:	766b      	strb	r3, [r5, #25]
    b3f4:	3310      	adds	r3, #16
    b3f6:	76ab      	strb	r3, [r5, #26]
    b3f8:	0034      	movs	r4, r6
    b3fa:	7823      	ldrb	r3, [r4, #0]
    b3fc:	2b00      	cmp	r3, #0
    b3fe:	d146      	bne.n	b48e <_svfiprintf_r+0xd6>
    b400:	1ba3      	subs	r3, r4, r6
    b402:	9304      	str	r3, [sp, #16]
    b404:	b16b      	cbz	r3, b422 <_svfiprintf_r+0x6a>
    b406:	1ba3      	subs	r3, r4, r6
    b408:	0032      	movs	r2, r6
    b40a:	0039      	movs	r1, r7
    b40c:	9802      	ldr	r0, [sp, #8]
    b40e:	f7ff ff71 	bl	b2f4 <__ssputs_r>
    b412:	1c43      	adds	r3, r0, #1
    b414:	d100      	bne.n	b418 <_svfiprintf_r+0x60>
    b416:	e0b3      	b.n	b580 <_svfiprintf_r+0x1c8>
    b418:	696a      	ldr	r2, [r5, #20]
    b41a:	9b04      	ldr	r3, [sp, #16]
    b41c:	4694      	mov	ip, r2
    b41e:	4463      	add	r3, ip
    b420:	616b      	str	r3, [r5, #20]
    b422:	7823      	ldrb	r3, [r4, #0]
    b424:	2b00      	cmp	r3, #0
    b426:	d100      	bne.n	b42a <_svfiprintf_r+0x72>
    b428:	e0aa      	b.n	b580 <_svfiprintf_r+0x1c8>
    b42a:	2201      	movs	r2, #1
    b42c:	2300      	movs	r3, #0
    b42e:	4252      	negs	r2, r2
    b430:	606a      	str	r2, [r5, #4]
    b432:	a902      	add	r1, sp, #8
    b434:	3254      	adds	r2, #84	; 0x54
    b436:	1852      	adds	r2, r2, r1
    b438:	3401      	adds	r4, #1
    b43a:	602b      	str	r3, [r5, #0]
    b43c:	60eb      	str	r3, [r5, #12]
    b43e:	60ab      	str	r3, [r5, #8]
    b440:	7013      	strb	r3, [r2, #0]
    b442:	65ab      	str	r3, [r5, #88]	; 0x58
    b444:	4e57      	ldr	r6, [pc, #348]	; (b5a4 <_svfiprintf_r+0x1ec>)
    b446:	2205      	movs	r2, #5
    b448:	7821      	ldrb	r1, [r4, #0]
    b44a:	0030      	movs	r0, r6
    b44c:	f7ff ff0d 	bl	b26a <memchr>
    b450:	1c62      	adds	r2, r4, #1
    b452:	bb00      	cbnz	r0, b496 <_svfiprintf_r+0xde>
    b454:	6829      	ldr	r1, [r5, #0]
    b456:	06cb      	lsls	r3, r1, #27
    b458:	d504      	bpl.n	b464 <_svfiprintf_r+0xac>
    b45a:	2353      	movs	r3, #83	; 0x53
    b45c:	ae02      	add	r6, sp, #8
    b45e:	3020      	adds	r0, #32
    b460:	199b      	adds	r3, r3, r6
    b462:	7018      	strb	r0, [r3, #0]
    b464:	070b      	lsls	r3, r1, #28
    b466:	d504      	bpl.n	b472 <_svfiprintf_r+0xba>
    b468:	2353      	movs	r3, #83	; 0x53
    b46a:	202b      	movs	r0, #43	; 0x2b
    b46c:	ae02      	add	r6, sp, #8
    b46e:	199b      	adds	r3, r3, r6
    b470:	7018      	strb	r0, [r3, #0]
    b472:	7823      	ldrb	r3, [r4, #0]
    b474:	2b2a      	cmp	r3, #42	; 0x2a
    b476:	d016      	beq.n	b4a6 <_svfiprintf_r+0xee>
    b478:	2100      	movs	r1, #0
    b47a:	200a      	movs	r0, #10
    b47c:	2601      	movs	r6, #1
    b47e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b480:	7822      	ldrb	r2, [r4, #0]
    b482:	3a30      	subs	r2, #48	; 0x30
    b484:	2a09      	cmp	r2, #9
    b486:	d952      	bls.n	b52e <_svfiprintf_r+0x176>
    b488:	b1a9      	cbz	r1, b4b6 <_svfiprintf_r+0xfe>
    b48a:	9309      	str	r3, [sp, #36]	; 0x24
    b48c:	e013      	b.n	b4b6 <_svfiprintf_r+0xfe>
    b48e:	2b25      	cmp	r3, #37	; 0x25
    b490:	d0b6      	beq.n	b400 <_svfiprintf_r+0x48>
    b492:	3401      	adds	r4, #1
    b494:	e7b1      	b.n	b3fa <_svfiprintf_r+0x42>
    b496:	2301      	movs	r3, #1
    b498:	1b80      	subs	r0, r0, r6
    b49a:	4083      	lsls	r3, r0
    b49c:	6829      	ldr	r1, [r5, #0]
    b49e:	0014      	movs	r4, r2
    b4a0:	430b      	orrs	r3, r1
    b4a2:	602b      	str	r3, [r5, #0]
    b4a4:	e7ce      	b.n	b444 <_svfiprintf_r+0x8c>
    b4a6:	9b05      	ldr	r3, [sp, #20]
    b4a8:	1d18      	adds	r0, r3, #4
    b4aa:	681b      	ldr	r3, [r3, #0]
    b4ac:	9005      	str	r0, [sp, #20]
    b4ae:	2b00      	cmp	r3, #0
    b4b0:	db37      	blt.n	b522 <_svfiprintf_r+0x16a>
    b4b2:	9309      	str	r3, [sp, #36]	; 0x24
    b4b4:	0014      	movs	r4, r2
    b4b6:	7823      	ldrb	r3, [r4, #0]
    b4b8:	2b2e      	cmp	r3, #46	; 0x2e
    b4ba:	d10b      	bne.n	b4d4 <_svfiprintf_r+0x11c>
    b4bc:	7863      	ldrb	r3, [r4, #1]
    b4be:	1c62      	adds	r2, r4, #1
    b4c0:	2b2a      	cmp	r3, #42	; 0x2a
    b4c2:	d13c      	bne.n	b53e <_svfiprintf_r+0x186>
    b4c4:	9b05      	ldr	r3, [sp, #20]
    b4c6:	3402      	adds	r4, #2
    b4c8:	1d1a      	adds	r2, r3, #4
    b4ca:	681b      	ldr	r3, [r3, #0]
    b4cc:	9205      	str	r2, [sp, #20]
    b4ce:	2b00      	cmp	r3, #0
    b4d0:	db32      	blt.n	b538 <_svfiprintf_r+0x180>
    b4d2:	9307      	str	r3, [sp, #28]
    b4d4:	4e34      	ldr	r6, [pc, #208]	; (b5a8 <_svfiprintf_r+0x1f0>)
    b4d6:	7821      	ldrb	r1, [r4, #0]
    b4d8:	2203      	movs	r2, #3
    b4da:	0030      	movs	r0, r6
    b4dc:	f7ff fec5 	bl	b26a <memchr>
    b4e0:	b130      	cbz	r0, b4f0 <_svfiprintf_r+0x138>
    b4e2:	2340      	movs	r3, #64	; 0x40
    b4e4:	1b80      	subs	r0, r0, r6
    b4e6:	4083      	lsls	r3, r0
    b4e8:	682a      	ldr	r2, [r5, #0]
    b4ea:	3401      	adds	r4, #1
    b4ec:	4313      	orrs	r3, r2
    b4ee:	602b      	str	r3, [r5, #0]
    b4f0:	7821      	ldrb	r1, [r4, #0]
    b4f2:	2206      	movs	r2, #6
    b4f4:	482d      	ldr	r0, [pc, #180]	; (b5ac <_svfiprintf_r+0x1f4>)
    b4f6:	1c66      	adds	r6, r4, #1
    b4f8:	7629      	strb	r1, [r5, #24]
    b4fa:	f7ff feb6 	bl	b26a <memchr>
    b4fe:	2800      	cmp	r0, #0
    b500:	d046      	beq.n	b590 <_svfiprintf_r+0x1d8>
    b502:	4b2b      	ldr	r3, [pc, #172]	; (b5b0 <_svfiprintf_r+0x1f8>)
    b504:	bb83      	cbnz	r3, b568 <_svfiprintf_r+0x1b0>
    b506:	6829      	ldr	r1, [r5, #0]
    b508:	9b05      	ldr	r3, [sp, #20]
    b50a:	2207      	movs	r2, #7
    b50c:	05c9      	lsls	r1, r1, #23
    b50e:	d529      	bpl.n	b564 <_svfiprintf_r+0x1ac>
    b510:	189b      	adds	r3, r3, r2
    b512:	4393      	bics	r3, r2
    b514:	3308      	adds	r3, #8
    b516:	9305      	str	r3, [sp, #20]
    b518:	696b      	ldr	r3, [r5, #20]
    b51a:	9a03      	ldr	r2, [sp, #12]
    b51c:	189b      	adds	r3, r3, r2
    b51e:	616b      	str	r3, [r5, #20]
    b520:	e76a      	b.n	b3f8 <_svfiprintf_r+0x40>
    b522:	425b      	negs	r3, r3
    b524:	60eb      	str	r3, [r5, #12]
    b526:	2302      	movs	r3, #2
    b528:	430b      	orrs	r3, r1
    b52a:	602b      	str	r3, [r5, #0]
    b52c:	e7c2      	b.n	b4b4 <_svfiprintf_r+0xfc>
    b52e:	4343      	muls	r3, r0
    b530:	3401      	adds	r4, #1
    b532:	189b      	adds	r3, r3, r2
    b534:	0031      	movs	r1, r6
    b536:	e7a3      	b.n	b480 <_svfiprintf_r+0xc8>
    b538:	2301      	movs	r3, #1
    b53a:	425b      	negs	r3, r3
    b53c:	e7c9      	b.n	b4d2 <_svfiprintf_r+0x11a>
    b53e:	2300      	movs	r3, #0
    b540:	0014      	movs	r4, r2
    b542:	200a      	movs	r0, #10
    b544:	001a      	movs	r2, r3
    b546:	2601      	movs	r6, #1
    b548:	606b      	str	r3, [r5, #4]
    b54a:	7821      	ldrb	r1, [r4, #0]
    b54c:	3930      	subs	r1, #48	; 0x30
    b54e:	2909      	cmp	r1, #9
    b550:	d903      	bls.n	b55a <_svfiprintf_r+0x1a2>
    b552:	2b00      	cmp	r3, #0
    b554:	d0be      	beq.n	b4d4 <_svfiprintf_r+0x11c>
    b556:	9207      	str	r2, [sp, #28]
    b558:	e7bc      	b.n	b4d4 <_svfiprintf_r+0x11c>
    b55a:	4342      	muls	r2, r0
    b55c:	3401      	adds	r4, #1
    b55e:	1852      	adds	r2, r2, r1
    b560:	0033      	movs	r3, r6
    b562:	e7f2      	b.n	b54a <_svfiprintf_r+0x192>
    b564:	3307      	adds	r3, #7
    b566:	e7d4      	b.n	b512 <_svfiprintf_r+0x15a>
    b568:	ab05      	add	r3, sp, #20
    b56a:	9300      	str	r3, [sp, #0]
    b56c:	003a      	movs	r2, r7
    b56e:	4b11      	ldr	r3, [pc, #68]	; (b5b4 <_svfiprintf_r+0x1fc>)
    b570:	0029      	movs	r1, r5
    b572:	9802      	ldr	r0, [sp, #8]
    b574:	e000      	b.n	b578 <_svfiprintf_r+0x1c0>
    b576:	bf00      	nop
    b578:	9003      	str	r0, [sp, #12]
    b57a:	9b03      	ldr	r3, [sp, #12]
    b57c:	3301      	adds	r3, #1
    b57e:	d1cb      	bne.n	b518 <_svfiprintf_r+0x160>
    b580:	89bb      	ldrh	r3, [r7, #12]
    b582:	980b      	ldr	r0, [sp, #44]	; 0x2c
    b584:	065b      	lsls	r3, r3, #25
    b586:	d400      	bmi.n	b58a <_svfiprintf_r+0x1d2>
    b588:	e72b      	b.n	b3e2 <_svfiprintf_r+0x2a>
    b58a:	2001      	movs	r0, #1
    b58c:	4240      	negs	r0, r0
    b58e:	e728      	b.n	b3e2 <_svfiprintf_r+0x2a>
    b590:	ab05      	add	r3, sp, #20
    b592:	9300      	str	r3, [sp, #0]
    b594:	003a      	movs	r2, r7
    b596:	4b07      	ldr	r3, [pc, #28]	; (b5b4 <_svfiprintf_r+0x1fc>)
    b598:	0029      	movs	r1, r5
    b59a:	9802      	ldr	r0, [sp, #8]
    b59c:	f7ff fc46 	bl	ae2c <_printf_i>
    b5a0:	e7ea      	b.n	b578 <_svfiprintf_r+0x1c0>
    b5a2:	46c0      	nop			; (mov r8, r8)
    b5a4:	0000b950 	.word	0x0000b950
    b5a8:	0000b956 	.word	0x0000b956
    b5ac:	0000b95a 	.word	0x0000b95a
    b5b0:	00000000 	.word	0x00000000
    b5b4:	0000b2f5 	.word	0x0000b2f5

0000b5b8 <__ascii_wctomb>:
    b5b8:	000b      	movs	r3, r1
    b5ba:	b121      	cbz	r1, b5c6 <__ascii_wctomb+0xe>
    b5bc:	2aff      	cmp	r2, #255	; 0xff
    b5be:	d904      	bls.n	b5ca <__ascii_wctomb+0x12>
    b5c0:	238a      	movs	r3, #138	; 0x8a
    b5c2:	6003      	str	r3, [r0, #0]
    b5c4:	3b8b      	subs	r3, #139	; 0x8b
    b5c6:	0018      	movs	r0, r3
    b5c8:	4770      	bx	lr
    b5ca:	700a      	strb	r2, [r1, #0]
    b5cc:	2301      	movs	r3, #1
    b5ce:	e7fa      	b.n	b5c6 <__ascii_wctomb+0xe>

0000b5d0 <_malloc_usable_size_r>:
    b5d0:	1f0b      	subs	r3, r1, #4
    b5d2:	681b      	ldr	r3, [r3, #0]
    b5d4:	1f18      	subs	r0, r3, #4
    b5d6:	2b00      	cmp	r3, #0
    b5d8:	da01      	bge.n	b5de <_malloc_usable_size_r+0xe>
    b5da:	580b      	ldr	r3, [r1, r0]
    b5dc:	18c0      	adds	r0, r0, r3
    b5de:	4770      	bx	lr

0000b5e0 <_sbrk>:
    b5e0:	f242 233c 	movw	r3, #8764	; 0x223c
    b5e4:	f2c2 0300 	movt	r3, #8192	; 0x2000
    b5e8:	681a      	ldr	r2, [r3, #0]
    b5ea:	b11a      	cbz	r2, b5f4 <_sbrk+0x14>
    b5ec:	1810      	adds	r0, r2, r0
    b5ee:	6018      	str	r0, [r3, #0]
    b5f0:	0010      	movs	r0, r2
    b5f2:	4770      	bx	lr
    b5f4:	f642 02c0 	movw	r2, #10432	; 0x28c0
    b5f8:	f2c2 0200 	movt	r2, #8192	; 0x2000
    b5fc:	e7f6      	b.n	b5ec <_sbrk+0xc>
    b5fe:	46c0      	nop			; (mov r8, r8)
    b600:	415d535b 	.word	0x415d535b
    b604:	5d455b41 	.word	0x5d455b41
    b608:	0000000a 	.word	0x0000000a
    b60c:	425d535b 	.word	0x425d535b
    b610:	5d455b42 	.word	0x5d455b42
    b614:	0000000a 	.word	0x0000000a
    b618:	005d535b 	.word	0x005d535b
    b61c:	0a5d455b 	.word	0x0a5d455b
    b620:	00000000 	.word	0x00000000
    b624:	00007830 	.word	0x00007830
    b628:	78322e25 	.word	0x78322e25
    b62c:	00000000 	.word	0x00000000
    b630:	6f727265 	.word	0x6f727265
    b634:	64252072 	.word	0x64252072
    b638:	203a3a20 	.word	0x203a3a20
    b63c:	7261656c 	.word	0x7261656c
    b640:	676e696e 	.word	0x676e696e
    b644:	74617220 	.word	0x74617220
    b648:	64252065 	.word	0x64252065
    b64c:	0000000a 	.word	0x0000000a
    b650:	75706e49 	.word	0x75706e49
    b654:	000a3a74 	.word	0x000a3a74
    b658:	3a44500a 	.word	0x3a44500a
    b65c:	00000000 	.word	0x00000000
    b660:	3a54470a 	.word	0x3a54470a
    b664:	00000000 	.word	0x00000000
    b668:	6e697270 	.word	0x6e697270
    b66c:	676e6974 	.word	0x676e6974
    b670:	696e6920 	.word	0x696e6920
    b674:	74732074 	.word	0x74732074
    b678:	0a657461 	.word	0x0a657461
    b67c:	00000000 	.word	0x00000000
    b680:	656e6f64 	.word	0x656e6f64
    b684:	696e6920 	.word	0x696e6920
    b688:	74732074 	.word	0x74732074
    b68c:	0a657461 	.word	0x0a657461
    b690:	00000000 	.word	0x00000000
    b694:	7074735b 	.word	0x7074735b
    b698:	0000005d 	.word	0x0000005d
    b69c:	746c635b 	.word	0x746c635b
    b6a0:	0000005d 	.word	0x0000005d
    b6a4:	7365545b 	.word	0x7365545b
    b6a8:	53205d74 	.word	0x53205d74
    b6ac:	70757465 	.word	0x70757465
    b6b0:	6c6f632f 	.word	0x6c6f632f
    b6b4:	7463656c 	.word	0x7463656c
    b6b8:	0000203a 	.word	0x0000203a
    b6bc:	75746572 	.word	0x75746572
    b6c0:	6e696e72 	.word	0x6e696e72
    b6c4:	00002067 	.word	0x00002067
    b6c8:	6f63202c 	.word	0x6f63202c
    b6cc:	65746e75 	.word	0x65746e75
    b6d0:	00003d72 	.word	0x00003d72
    b6d4:	7566202c 	.word	0x7566202c
    b6d8:	003d636e 	.word	0x003d636e
    b6dc:	64203d20 	.word	0x64203d20
    b6e0:	20656e6f 	.word	0x20656e6f
    b6e4:	542f5b20 	.word	0x542f5b20
    b6e8:	5d747365 	.word	0x5d747365
    b6ec:	00000a20 	.word	0x00000a20
    b6f0:	5d534f5b 	.word	0x5d534f5b
    b6f4:	00000000 	.word	0x00000000
    b6f8:	5d454f5b 	.word	0x5d454f5b
    b6fc:	0000000a 	.word	0x0000000a
    b700:	65764f5b 	.word	0x65764f5b
    b704:	000a5d72 	.word	0x000a5d72
    b708:	6e72745b 	.word	0x6e72745b
    b70c:	0000005d 	.word	0x0000005d
    b710:	7365545b 	.word	0x7365545b
    b714:	54205d74 	.word	0x54205d74
    b718:	6e696172 	.word	0x6e696172
    b71c:	3a676e69 	.word	0x3a676e69
    b720:	00000020 	.word	0x00000020
    b724:	75746552 	.word	0x75746552
    b728:	6e696e72 	.word	0x6e696e72
    b72c:	00002067 	.word	0x00002067
    b730:	726c202c 	.word	0x726c202c
    b734:	0000003d 	.word	0x0000003d
    b738:	7065202c 	.word	0x7065202c
    b73c:	3d68636f 	.word	0x3d68636f
    b740:	00000000 	.word	0x00000000
    b744:	6e69202c 	.word	0x6e69202c
    b748:	765f7469 	.word	0x765f7469
    b74c:	003d6c61 	.word	0x003d6c61
    b750:	756f202c 	.word	0x756f202c
    b754:	74757074 	.word	0x74757074
    b758:	7a697320 	.word	0x7a697320
    b75c:	00003d65 	.word	0x00003d65
    b760:	6c696166 	.word	0x6c696166
    b764:	74206465 	.word	0x74206465
    b768:	6170206f 	.word	0x6170206f
    b76c:	20657372 	.word	0x20657372
    b770:	6d6d6f63 	.word	0x6d6d6f63
    b774:	3a646e61 	.word	0x3a646e61
    b778:	00000020 	.word	0x00000020
    b77c:	6c204120 	.word	0x6c204120
    b780:	6f20746f 	.word	0x6f20746f
    b784:	65682066 	.word	0x65682066
    b788:	6f6f6c6c 	.word	0x6f6f6c6c
    b78c:	006f6f6f 	.word	0x006f6f6f
    b790:	61727720 	.word	0x61727720
    b794:	72657070 	.word	0x72657070
    b798:	696e695f 	.word	0x696e695f
    b79c:	74612074 	.word	0x74612074
    b7a0:	0000203a 	.word	0x0000203a
    b7a4:	61727720 	.word	0x61727720
    b7a8:	72657070 	.word	0x72657070
    b7ac:	6c6f635f 	.word	0x6c6f635f
    b7b0:	7463656c 	.word	0x7463656c
    b7b4:	3a746120 	.word	0x3a746120
    b7b8:	00000020 	.word	0x00000020
    b7bc:	61727720 	.word	0x61727720
    b7c0:	72657070 	.word	0x72657070
    b7c4:	6172745f 	.word	0x6172745f
    b7c8:	61206e69 	.word	0x61206e69
    b7cc:	00203a74 	.word	0x00203a74
    b7d0:	6174535b 	.word	0x6174535b
    b7d4:	205d7472 	.word	0x205d7472
    b7d8:	0000000a 	.word	0x0000000a
    b7dc:	78654e5b 	.word	0x78654e5b
    b7e0:	000a5d74 	.word	0x000a5d74
    b7e4:	66707865 	.word	0x66707865
    b7e8:	00000000 	.word	0x00000000

0000b7ec <halF>:
    b7ec:	3f000000 bf000000                       ...?....

0000b7f4 <ln2HI>:
    b7f4:	3f317180 bf317180                       .q1?.q1.

0000b7fc <ln2LO>:
    b7fc:	3717f7d1 b717f7d1 00009ffa 00009fca     ...7............
    b80c:	00009fdc 00009f20 00009fdc 00009fc0     .... ...........
    b81c:	00009fdc 00009f20 00009fca 00009fca     .... ...........
    b82c:	00009fc0 00009f20 00009f28 00009f28     .... ...(...(...
    b83c:	00009f28 00009fe2 00009fca 00009fca     (...............
    b84c:	00009f9e 0000a082 00009f9e 00009fc0     ................
    b85c:	00009f9e 0000a082 00009fca 00009fca     ................
    b86c:	00009fc0 0000a082 00009f28 00009f28     ........(...(...
    b87c:	00009f28 0000a08c 0000a370 0000a2ce     (.......p.......
    b88c:	0000a2ce 0000a2cc 0000a362 0000a362     ........b...b...
    b89c:	0000a358 0000a2cc 0000a362 0000a358     X.......b...X...
    b8ac:	0000a362 0000a2cc 0000a368 0000a368     b.......h...h...
    b8bc:	0000a368 0000a404                       h.......

0000b8c4 <__sf_fake_stderr>:
	...

0000b8e4 <__sf_fake_stdin>:
	...

0000b904 <__sf_fake_stdout>:
	...
    b924:	33323130 37363534 42413938 46454443     0123456789ABCDEF
    b934:	32313000 36353433 61393837 65646362     .0123456789abcde
    b944:	00430066 49534f50 002e0058 2b302d23     f.C.POSIX...#-0+
    b954:	6c680020 6665004c 47464567 20200000               .hlL.efgEFG.

0000b961 <_ctype_>:
    b961:	20202000 20202020 28282020 20282828     .         ((((( 
    b971:	20202020 20202020 20202020 20202020                     
    b981:	10108820 10101010 10101010 10101010      ...............
    b991:	04040410 04040404 10040404 10101010     ................
    b9a1:	41411010 41414141 01010101 01010101     ..AAAAAA........
    b9b1:	01010101 01010101 01010101 10101010     ................
    b9c1:	42421010 42424242 02020202 02020202     ..BBBBBB........
    b9d1:	02020202 02020202 02020202 10101010     ................
    b9e1:	00000020 00000000 00000000 00000000      ...............
	...

0000ba64 <_init>:
    ba64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ba66:	46c0      	nop			; (mov r8, r8)
    ba68:	bcf8      	pop	{r3, r4, r5, r6, r7}
    ba6a:	bc08      	pop	{r3}
    ba6c:	469e      	mov	lr, r3
    ba6e:	4770      	bx	lr

0000ba70 <__init_array_start>:
    ba70:	00008121 	.word	0x00008121

0000ba74 <_fini>:
    ba74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ba76:	46c0      	nop			; (mov r8, r8)
    ba78:	bcf8      	pop	{r3, r4, r5, r6, r7}
    ba7a:	bc08      	pop	{r3}
    ba7c:	469e      	mov	lr, r3
    ba7e:	4770      	bx	lr

0000ba80 <__fini_array_start>:
    ba80:	000080f5 	.word	0x000080f5
