
NonSecureApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003c00  00008000  00008000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000bc00  0000bc00  0000bc00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000001d4  20002000  0000bc08  00012000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006ec  200021d8  0000bde0  000121d4  2**3
                  ALLOC
  4 .heap         00000204  200028c4  0000c4cc  000121d4  2**0
                  ALLOC
  5 .stack        00001400  20002ac8  0000c6d0  000121d4  2**0
                  ALLOC
  6 .ARM.attributes 0000002c  00000000  00000000  000121d4  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00012200  2**0
                  CONTENTS, READONLY
  8 .debug_info   00009837  00000000  00000000  00012259  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000010b3  00000000  00000000  0001ba90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002316  00000000  00000000  0001cb43  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000001e0  00000000  00000000  0001ee59  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000648  00000000  00000000  0001f039  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00014501  00000000  00000000  0001f681  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000292e  00000000  00000000  00033b82  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00085e75  00000000  00000000  000364b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001060  00000000  00000000  000bc328  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      00000231  00000000  00000000  000bd388  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00008000 <exception_table>:
    8000:	c8 3e 00 20 65 81 00 00 61 81 00 00 61 81 00 00     .>. e...a...a...
	...
    802c:	61 81 00 00 00 00 00 00 00 00 00 00 61 81 00 00     a...........a...
    803c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    804c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    805c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    806c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    807c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    808c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    809c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80ac:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80bc:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80cc:	f1 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     ....a...a...a...
    80dc:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80ec:	61 81 00 00 61 81 00 00                             a...a...

000080f4 <__do_global_dtors_aux>:
    80f4:	b510      	push	{r4, lr}
    80f6:	f242 14d8 	movw	r4, #8664	; 0x21d8
    80fa:	f2c2 0400 	movt	r4, #8192	; 0x2000
    80fe:	7823      	ldrb	r3, [r4, #0]
    8100:	b963      	cbnz	r3, 811c <__do_global_dtors_aux+0x28>
    8102:	f240 0300 	movw	r3, #0
    8106:	f2c0 0300 	movt	r3, #0
    810a:	b12b      	cbz	r3, 8118 <__do_global_dtors_aux+0x24>
    810c:	f64b 4008 	movw	r0, #48136	; 0xbc08
    8110:	f2c0 0000 	movt	r0, #0
    8114:	e000      	b.n	8118 <__do_global_dtors_aux+0x24>
    8116:	bf00      	nop
    8118:	2301      	movs	r3, #1
    811a:	7023      	strb	r3, [r4, #0]
    811c:	bd10      	pop	{r4, pc}
    811e:	46c0      	nop			; (mov r8, r8)

00008120 <frame_dummy>:
    8120:	f240 0300 	movw	r3, #0
    8124:	f2c0 0300 	movt	r3, #0
    8128:	b510      	push	{r4, lr}
    812a:	b14b      	cbz	r3, 8140 <frame_dummy+0x20>
    812c:	f242 11dc 	movw	r1, #8668	; 0x21dc
    8130:	f64b 4008 	movw	r0, #48136	; 0xbc08
    8134:	f2c2 0100 	movt	r1, #8192	; 0x2000
    8138:	f2c0 0000 	movt	r0, #0
    813c:	e000      	b.n	8140 <frame_dummy+0x20>
    813e:	bf00      	nop
    8140:	f64b 4008 	movw	r0, #48136	; 0xbc08
    8144:	f2c0 0000 	movt	r0, #0
    8148:	6803      	ldr	r3, [r0, #0]
    814a:	b903      	cbnz	r3, 814e <frame_dummy+0x2e>
    814c:	bd10      	pop	{r4, pc}
    814e:	f240 0300 	movw	r3, #0
    8152:	f2c0 0300 	movt	r3, #0
    8156:	2b00      	cmp	r3, #0
    8158:	d0f8      	beq.n	814c <frame_dummy+0x2c>
    815a:	4798      	blx	r3
    815c:	e7f6      	b.n	814c <frame_dummy+0x2c>
    815e:	46c0      	nop			; (mov r8, r8)

00008160 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    8160:	e7fe      	b.n	8160 <Dummy_Handler>
    8162:	46c0      	nop			; (mov r8, r8)

00008164 <Reset_Handler>:
        if (pSrc != pDest) {
    8164:	f64b 4108 	movw	r1, #48136	; 0xbc08
    8168:	f242 0000 	movw	r0, #8192	; 0x2000
    816c:	f2c0 0100 	movt	r1, #0
    8170:	f2c2 0000 	movt	r0, #8192	; 0x2000
{
    8174:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
    8176:	4281      	cmp	r1, r0
    8178:	d00f      	beq.n	819a <Reset_Handler+0x36>
                for (; pDest < &_erelocate;) {
    817a:	f242 13d4 	movw	r3, #8660	; 0x21d4
    817e:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8182:	4298      	cmp	r0, r3
    8184:	d209      	bcs.n	819a <Reset_Handler+0x36>
                        *pDest++ = *pSrc++;
    8186:	43c2      	mvns	r2, r0
    8188:	18d2      	adds	r2, r2, r3
    818a:	f64a 532f 	movw	r3, #44335	; 0xad2f
    818e:	0892      	lsrs	r2, r2, #2
    8190:	3201      	adds	r2, #1
    8192:	0092      	lsls	r2, r2, #2
    8194:	f2c0 0300 	movt	r3, #0
    8198:	4798      	blx	r3
        for (pDest = &_szero; pDest < &_ezero;) {
    819a:	f242 10d8 	movw	r0, #8664	; 0x21d8
    819e:	f642 03c4 	movw	r3, #10436	; 0x28c4
    81a2:	f2c2 0000 	movt	r0, #8192	; 0x2000
    81a6:	f2c2 0300 	movt	r3, #8192	; 0x2000
    81aa:	4298      	cmp	r0, r3
    81ac:	d20a      	bcs.n	81c4 <Reset_Handler+0x60>
                *pDest++ = 0;
    81ae:	43c2      	mvns	r2, r0
    81b0:	18d2      	adds	r2, r2, r3
    81b2:	f64a 5341 	movw	r3, #44353	; 0xad41
    81b6:	0892      	lsrs	r2, r2, #2
    81b8:	3201      	adds	r2, #1
    81ba:	0092      	lsls	r2, r2, #2
    81bc:	2100      	movs	r1, #0
    81be:	f2c0 0300 	movt	r3, #0
    81c2:	4798      	blx	r3
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    81c4:	f248 0300 	movw	r3, #32768	; 0x8000
    81c8:	227f      	movs	r2, #127	; 0x7f
    81ca:	f2c0 0300 	movt	r3, #0
    81ce:	4393      	bics	r3, r2
    81d0:	f64e 5200 	movw	r2, #60672	; 0xed00
    81d4:	f2ce 0200 	movt	r2, #57344	; 0xe000
    81d8:	6093      	str	r3, [r2, #8]
        __libc_init_array();
    81da:	f64a 43ad 	movw	r3, #44205	; 0xacad
    81de:	f2c0 0300 	movt	r3, #0
    81e2:	4798      	blx	r3
        main();
    81e4:	f648 63e5 	movw	r3, #36581	; 0x8ee5
    81e8:	f2c0 0300 	movt	r3, #0
    81ec:	4798      	blx	r3
    81ee:	e7fe      	b.n	81ee <Reset_Handler+0x8a>

000081f0 <TC1_Handler>:
	num_overflows = 0;
}

void TC1_Handler(void)
{
	num_overflows++;
    81f0:	f242 13f8 	movw	r3, #8696	; 0x21f8
    81f4:	2001      	movs	r0, #1
    81f6:	2100      	movs	r1, #0
    81f8:	f2c2 0300 	movt	r3, #8192	; 0x2000
{
    81fc:	b530      	push	{r4, r5, lr}
	num_overflows++;
    81fe:	689c      	ldr	r4, [r3, #8]
    8200:	68dd      	ldr	r5, [r3, #12]
    8202:	1900      	adds	r0, r0, r4
    8204:	4169      	adcs	r1, r5
    8206:	6098      	str	r0, [r3, #8]
    8208:	60d9      	str	r1, [r3, #12]
	if (TC1->COUNT16.INTFLAG.reg & TC_INTFLAG_MC(1))
    820a:	f241 4300 	movw	r3, #5120	; 0x1400
    820e:	2210      	movs	r2, #16
    8210:	f2c4 2300 	movt	r3, #16896	; 0x4200
    8214:	7a99      	ldrb	r1, [r3, #10]
    8216:	420a      	tst	r2, r1
    8218:	d000      	beq.n	821c <TC1_Handler+0x2c>
	{
		//HAL_GPIO_LED_toggle();
		TC1->COUNT16.INTFLAG.reg = TC_INTFLAG_MC(1);
    821a:	729a      	strb	r2, [r3, #10]
	}
}
    821c:	bd30      	pop	{r4, r5, pc}
    821e:	46c0      	nop			; (mov r8, r8)

00008220 <uart_init>:
Sercom *ser;
uint32_t mask;
uint32_t clk_id;

void uart_init(uint32_t baud)
{
    8220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	ser = SERCOM0;
    8222:	f240 4200 	movw	r2, #1024	; 0x400
    8226:	f242 2350 	movw	r3, #8784	; 0x2250
    822a:	f2c4 2200 	movt	r2, #16896	; 0x4200
    822e:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8232:	601a      	str	r2, [r3, #0]
	clk_id = SERCOM0_GCLK_ID_CORE;
    8234:	f242 234c 	movw	r3, #8780	; 0x224c
    8238:	220b      	movs	r2, #11
    823a:	f2c2 0300 	movt	r3, #8192	; 0x2000
    823e:	601a      	str	r2, [r3, #0]
	mask = MCLK_APBCMASK_SERCOM0;
    8240:	f242 2348 	movw	r3, #8776	; 0x2248
    8244:	2402      	movs	r4, #2
    8246:	f2c2 0300 	movt	r3, #8192	; 0x2000
    824a:	601c      	str	r4, [r3, #0]
	
	uint64_t br = (uint64_t)65536 * (F_CPU - 16 * baud) / F_CPU;
    824c:	f242 4300 	movw	r3, #9216	; 0x2400
    8250:	f2c0 03f4 	movt	r3, #244	; 0xf4
    8254:	469c      	mov	ip, r3
    8256:	f649 056d 	movw	r5, #39021	; 0x986d
    825a:	f242 4200 	movw	r2, #9216	; 0x2400
    PORT->Group[HAL_GPIO_PORT##port].PINCFG[pin].reg &= ~PORT_PINCFG_PMUXEN;\
    (void)HAL_GPIO_##name##_pmuxdis;						\
  }										\

  // SERCOM0: RX=25, TX=24
  HAL_GPIO_PIN(UART_TX,  A, 24)
    825e:	2601      	movs	r6, #1
    8260:	0100      	lsls	r0, r0, #4
    8262:	4240      	negs	r0, r0
    8264:	4460      	add	r0, ip
    8266:	0c01      	lsrs	r1, r0, #16
    8268:	f2c0 0500 	movt	r5, #0
    826c:	f2c0 02f4 	movt	r2, #244	; 0xf4
    8270:	2300      	movs	r3, #0
    8272:	0400      	lsls	r0, r0, #16
    8274:	47a8      	blx	r5
    8276:	46b4      	mov	ip, r6
    8278:	f243 0300 	movw	r3, #12288	; 0x3000
    827c:	2280      	movs	r2, #128	; 0x80
    827e:	2158      	movs	r1, #88	; 0x58
    8280:	2502      	movs	r5, #2
    8282:	4666      	mov	r6, ip
    8284:	f2c4 0300 	movt	r3, #16384	; 0x4000
    8288:	0452      	lsls	r2, r2, #17
    828a:	609a      	str	r2, [r3, #8]
    828c:	5c5a      	ldrb	r2, [r3, r1]
    828e:	273c      	movs	r7, #60	; 0x3c
    8290:	432a      	orrs	r2, r5
    8292:	b2d2      	uxtb	r2, r2
    8294:	545a      	strb	r2, [r3, r1]
    8296:	5c5a      	ldrb	r2, [r3, r1]
    8298:	4332      	orrs	r2, r6
    829a:	b2d2      	uxtb	r2, r2
    829c:	545a      	strb	r2, [r3, r1]
    829e:	220f      	movs	r2, #15
    82a0:	5dd9      	ldrb	r1, [r3, r7]
    82a2:	4391      	bics	r1, r2
    82a4:	4329      	orrs	r1, r5
    82a6:	55d9      	strb	r1, [r3, r7]
  HAL_GPIO_PIN(UART_RX,  A, 25)
    82a8:	2180      	movs	r1, #128	; 0x80
    82aa:	0489      	lsls	r1, r1, #18
    82ac:	6059      	str	r1, [r3, #4]
    82ae:	2159      	movs	r1, #89	; 0x59
    82b0:	5c5e      	ldrb	r6, [r3, r1]
    82b2:	432e      	orrs	r6, r5
    82b4:	b2f6      	uxtb	r6, r6
    82b6:	545e      	strb	r6, [r3, r1]
    82b8:	2604      	movs	r6, #4
    82ba:	5c5d      	ldrb	r5, [r3, r1]
    82bc:	43b5      	bics	r5, r6
    82be:	4666      	mov	r6, ip
    82c0:	545d      	strb	r5, [r3, r1]
    82c2:	5c5d      	ldrb	r5, [r3, r1]
    82c4:	4335      	orrs	r5, r6
    82c6:	b2ed      	uxtb	r5, r5
    82c8:	545d      	strb	r5, [r3, r1]
    82ca:	5dd9      	ldrb	r1, [r3, r7]
    82cc:	400a      	ands	r2, r1
    82ce:	2120      	movs	r1, #32
    82d0:	430a      	orrs	r2, r1
    82d2:	55da      	strb	r2, [r3, r7]
	HAL_GPIO_UART_TX_out();
	HAL_GPIO_UART_TX_pmuxen(HAL_GPIO_PMUX_C);
	HAL_GPIO_UART_RX_in();
	HAL_GPIO_UART_RX_pmuxen(HAL_GPIO_PMUX_C);

	MCLK->APBCMASK.reg |= mask;
    82d4:	f640 0300 	movw	r3, #2048	; 0x800
    82d8:	f2c4 0300 	movt	r3, #16384	; 0x4000
    82dc:	69da      	ldr	r2, [r3, #28]

	GCLK->PCHCTRL[clk_id].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    82de:	2140      	movs	r1, #64	; 0x40
	MCLK->APBCMASK.reg |= mask;
    82e0:	4314      	orrs	r4, r2
	GCLK->PCHCTRL[clk_id].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    82e2:	f641 4200 	movw	r2, #7168	; 0x1c00
	MCLK->APBCMASK.reg |= mask;
    82e6:	61dc      	str	r4, [r3, #28]
	GCLK->PCHCTRL[clk_id].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    82e8:	23ac      	movs	r3, #172	; 0xac
	while (0 == (GCLK->PCHCTRL[clk_id].reg & GCLK_PCHCTRL_CHEN));
    82ea:	24ac      	movs	r4, #172	; 0xac
	GCLK->PCHCTRL[clk_id].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    82ec:	f2c4 0200 	movt	r2, #16384	; 0x4000
    82f0:	50d1      	str	r1, [r2, r3]
	while (0 == (GCLK->PCHCTRL[clk_id].reg & GCLK_PCHCTRL_CHEN));
    82f2:	5913      	ldr	r3, [r2, r4]
    82f4:	4219      	tst	r1, r3
    82f6:	d0fc      	beq.n	82f2 <uart_init+0xd2>

	ser->USART.CTRLA.reg =
    82f8:	f240 4200 	movw	r2, #1024	; 0x400
    82fc:	2304      	movs	r3, #4
    82fe:	f2c4 2200 	movt	r2, #16896	; 0x4200
    8302:	f2c4 0331 	movt	r3, #16433	; 0x4031
    8306:	6013      	str	r3, [r2, #0]
	SERCOM_USART_CTRLA_DORD | SERCOM_USART_CTRLA_MODE(1/*USART_INT_CLK*/) |
	SERCOM_USART_CTRLA_RXPO(3/*PAD3*/) | SERCOM_USART_CTRLA_TXPO(1/*PAD2*/);

	ser->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    8308:	23c0      	movs	r3, #192	; 0xc0
	SERCOM_USART_CTRLB_CHSIZE(0/*8 bits*/);

	ser->USART.BAUD.reg = (uint16_t)br;

	ser->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    830a:	2102      	movs	r1, #2
	ser->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    830c:	029b      	lsls	r3, r3, #10
	ser->USART.BAUD.reg = (uint16_t)br;
    830e:	b280      	uxth	r0, r0
	ser->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    8310:	6053      	str	r3, [r2, #4]
	ser->USART.BAUD.reg = (uint16_t)br;
    8312:	8190      	strh	r0, [r2, #12]
	ser->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    8314:	6813      	ldr	r3, [r2, #0]
    8316:	430b      	orrs	r3, r1
    8318:	6013      	str	r3, [r2, #0]
	
	while (ser->USART.SYNCBUSY.reg & SERCOM_USART_SYNCBUSY_ENABLE);
    831a:	69d3      	ldr	r3, [r2, #28]
    831c:	4219      	tst	r1, r3
    831e:	d1fc      	bne.n	831a <uart_init+0xfa>
}
    8320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8322:	46c0      	nop			; (mov r8, r8)

00008324 <uart_puts>:
	ser->USART.DATA.reg = c;
}

//-----------------------------------------------------------------------------
void uart_puts(char *s)
{
    8324:	b510      	push	{r4, lr}
	while (*s)
    8326:	7804      	ldrb	r4, [r0, #0]
    8328:	b174      	cbz	r4, 8348 <uart_puts+0x24>
    832a:	f242 2350 	movw	r3, #8784	; 0x2250
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    832e:	2101      	movs	r1, #1
    8330:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8334:	681a      	ldr	r2, [r3, #0]
	uart_putc(*s++);
    8336:	3001      	adds	r0, #1
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    8338:	7e13      	ldrb	r3, [r2, #24]
    833a:	4219      	tst	r1, r3
    833c:	d0fc      	beq.n	8338 <uart_puts+0x14>
	ser->USART.DATA.reg = c;
    833e:	b2a4      	uxth	r4, r4
    8340:	8514      	strh	r4, [r2, #40]	; 0x28
	while (*s)
    8342:	7804      	ldrb	r4, [r0, #0]
    8344:	2c00      	cmp	r4, #0
    8346:	d1f6      	bne.n	8336 <uart_puts+0x12>
}
    8348:	bd10      	pop	{r4, pc}
    834a:	46c0      	nop			; (mov r8, r8)

0000834c <uart_puti>:
void uart_puti(int i)
{
	char s[11];
	int last = 0;
	do {
		s[last] = i%10 + '0';
    834c:	220a      	movs	r2, #10
    834e:	fb90 f1f2 	sdiv	r1, r0, r2
{
    8352:	b530      	push	{r4, r5, lr}
		s[last] = i%10 + '0';
    8354:	008c      	lsls	r4, r1, #2
    8356:	1864      	adds	r4, r4, r1
    8358:	0064      	lsls	r4, r4, #1
{
    835a:	b085      	sub	sp, #20
		s[last] = i%10 + '0';
    835c:	1b04      	subs	r4, r0, r4
    835e:	ab01      	add	r3, sp, #4
    8360:	3430      	adds	r4, #48	; 0x30
    8362:	701c      	strb	r4, [r3, #0]
		i = i/10;
		last++;
	} while(i > 0);
    8364:	2900      	cmp	r1, #0
    8366:	dc00      	bgt.n	836a <uart_puti+0x1e>
    8368:	e091      	b.n	848e <uart_puti+0x142>
		s[last] = i%10 + '0';
    836a:	fb91 f5f2 	sdiv	r5, r1, r2
    836e:	00ac      	lsls	r4, r5, #2
    8370:	1964      	adds	r4, r4, r5
    8372:	0064      	lsls	r4, r4, #1
    8374:	1b09      	subs	r1, r1, r4
    8376:	3130      	adds	r1, #48	; 0x30
    8378:	7059      	strb	r1, [r3, #1]
		i = i/10;
    837a:	2164      	movs	r1, #100	; 0x64
    837c:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    8380:	2900      	cmp	r1, #0
    8382:	d100      	bne.n	8386 <uart_puti+0x3a>
    8384:	e085      	b.n	8492 <uart_puti+0x146>
		s[last] = i%10 + '0';
    8386:	fb91 f5f2 	sdiv	r5, r1, r2
    838a:	00ac      	lsls	r4, r5, #2
    838c:	1964      	adds	r4, r4, r5
    838e:	0064      	lsls	r4, r4, #1
    8390:	1b09      	subs	r1, r1, r4
    8392:	3130      	adds	r1, #48	; 0x30
    8394:	7099      	strb	r1, [r3, #2]
		i = i/10;
    8396:	f240 31e8 	movw	r1, #1000	; 0x3e8
    839a:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    839e:	2900      	cmp	r1, #0
    83a0:	d100      	bne.n	83a4 <uart_puti+0x58>
    83a2:	e078      	b.n	8496 <uart_puti+0x14a>
		s[last] = i%10 + '0';
    83a4:	fb91 f5f2 	sdiv	r5, r1, r2
    83a8:	00ac      	lsls	r4, r5, #2
    83aa:	1964      	adds	r4, r4, r5
    83ac:	0064      	lsls	r4, r4, #1
    83ae:	1b09      	subs	r1, r1, r4
    83b0:	3130      	adds	r1, #48	; 0x30
    83b2:	70d9      	strb	r1, [r3, #3]
		i = i/10;
    83b4:	f242 7110 	movw	r1, #10000	; 0x2710
    83b8:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    83bc:	2900      	cmp	r1, #0
    83be:	d100      	bne.n	83c2 <uart_puti+0x76>
    83c0:	e06b      	b.n	849a <uart_puti+0x14e>
		s[last] = i%10 + '0';
    83c2:	fb91 f5f2 	sdiv	r5, r1, r2
    83c6:	00ac      	lsls	r4, r5, #2
    83c8:	1964      	adds	r4, r4, r5
    83ca:	0064      	lsls	r4, r4, #1
    83cc:	1b09      	subs	r1, r1, r4
    83ce:	3130      	adds	r1, #48	; 0x30
    83d0:	7119      	strb	r1, [r3, #4]
		i = i/10;
    83d2:	f248 61a0 	movw	r1, #34464	; 0x86a0
    83d6:	f2c0 0101 	movt	r1, #1
    83da:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    83de:	2900      	cmp	r1, #0
    83e0:	d05d      	beq.n	849e <uart_puti+0x152>
		s[last] = i%10 + '0';
    83e2:	fb91 f5f2 	sdiv	r5, r1, r2
    83e6:	00ac      	lsls	r4, r5, #2
    83e8:	1964      	adds	r4, r4, r5
    83ea:	0064      	lsls	r4, r4, #1
    83ec:	1b09      	subs	r1, r1, r4
    83ee:	3130      	adds	r1, #48	; 0x30
    83f0:	7159      	strb	r1, [r3, #5]
		i = i/10;
    83f2:	f244 2140 	movw	r1, #16960	; 0x4240
    83f6:	f2c0 010f 	movt	r1, #15
    83fa:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    83fe:	2900      	cmp	r1, #0
    8400:	d04f      	beq.n	84a2 <uart_puti+0x156>
		s[last] = i%10 + '0';
    8402:	fb91 f5f2 	sdiv	r5, r1, r2
    8406:	00ac      	lsls	r4, r5, #2
    8408:	1964      	adds	r4, r4, r5
    840a:	0064      	lsls	r4, r4, #1
    840c:	1b09      	subs	r1, r1, r4
    840e:	3130      	adds	r1, #48	; 0x30
    8410:	7199      	strb	r1, [r3, #6]
		i = i/10;
    8412:	f249 6180 	movw	r1, #38528	; 0x9680
    8416:	f2c0 0198 	movt	r1, #152	; 0x98
    841a:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    841e:	2900      	cmp	r1, #0
    8420:	d041      	beq.n	84a6 <uart_puti+0x15a>
		s[last] = i%10 + '0';
    8422:	fb91 f5f2 	sdiv	r5, r1, r2
    8426:	00ac      	lsls	r4, r5, #2
    8428:	1964      	adds	r4, r4, r5
    842a:	0064      	lsls	r4, r4, #1
    842c:	1b09      	subs	r1, r1, r4
    842e:	3130      	adds	r1, #48	; 0x30
    8430:	71d9      	strb	r1, [r3, #7]
		i = i/10;
    8432:	f24e 1100 	movw	r1, #57600	; 0xe100
    8436:	f2c0 51f5 	movt	r1, #1525	; 0x5f5
    843a:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    843e:	2900      	cmp	r1, #0
    8440:	d033      	beq.n	84aa <uart_puti+0x15e>
		s[last] = i%10 + '0';
    8442:	fb91 f2f2 	sdiv	r2, r1, r2
    8446:	0094      	lsls	r4, r2, #2
    8448:	18a2      	adds	r2, r4, r2
    844a:	0052      	lsls	r2, r2, #1
    844c:	1a89      	subs	r1, r1, r2
		i = i/10;
    844e:	f64c 2200 	movw	r2, #51712	; 0xca00
    8452:	f6c3 329a 	movt	r2, #15258	; 0x3b9a
    8456:	fb90 f0f2 	sdiv	r0, r0, r2
		s[last] = i%10 + '0';
    845a:	3130      	adds	r1, #48	; 0x30
    845c:	7219      	strb	r1, [r3, #8]
	} while(i > 0);
    845e:	b330      	cbz	r0, 84ae <uart_puti+0x162>
		s[last] = i%10 + '0';
    8460:	3030      	adds	r0, #48	; 0x30
    8462:	7258      	strb	r0, [r3, #9]
		last++;
    8464:	2009      	movs	r0, #9
    8466:	f242 2250 	movw	r2, #8784	; 0x2250
    846a:	1818      	adds	r0, r3, r0
    846c:	466b      	mov	r3, sp
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    846e:	2101      	movs	r1, #1
    8470:	f2c2 0200 	movt	r2, #8192	; 0x2000
    8474:	6812      	ldr	r2, [r2, #0]
    8476:	1cdd      	adds	r5, r3, #3
	
	for(int j=last-1; j>=0; j--) {
		uart_putc(s[j]);
    8478:	7804      	ldrb	r4, [r0, #0]
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    847a:	7e13      	ldrb	r3, [r2, #24]
    847c:	4219      	tst	r1, r3
    847e:	d0fc      	beq.n	847a <uart_puti+0x12e>
	ser->USART.DATA.reg = c;
    8480:	b2a4      	uxth	r4, r4
    8482:	3801      	subs	r0, #1
    8484:	8514      	strh	r4, [r2, #40]	; 0x28
	for(int j=last-1; j>=0; j--) {
    8486:	42a8      	cmp	r0, r5
    8488:	d1f6      	bne.n	8478 <uart_puti+0x12c>
	}
}
    848a:	b005      	add	sp, #20
    848c:	bd30      	pop	{r4, r5, pc}
	int last = 0;
    848e:	2000      	movs	r0, #0
    8490:	e7e9      	b.n	8466 <uart_puti+0x11a>
		last++;
    8492:	2001      	movs	r0, #1
    8494:	e7e7      	b.n	8466 <uart_puti+0x11a>
    8496:	2002      	movs	r0, #2
    8498:	e7e5      	b.n	8466 <uart_puti+0x11a>
    849a:	2003      	movs	r0, #3
    849c:	e7e3      	b.n	8466 <uart_puti+0x11a>
    849e:	2004      	movs	r0, #4
    84a0:	e7e1      	b.n	8466 <uart_puti+0x11a>
    84a2:	2005      	movs	r0, #5
    84a4:	e7df      	b.n	8466 <uart_puti+0x11a>
    84a6:	2006      	movs	r0, #6
    84a8:	e7dd      	b.n	8466 <uart_puti+0x11a>
    84aa:	2007      	movs	r0, #7
    84ac:	e7db      	b.n	8466 <uart_puti+0x11a>
    84ae:	2008      	movs	r0, #8
    84b0:	e7d9      	b.n	8466 <uart_puti+0x11a>
    84b2:	46c0      	nop			; (mov r8, r8)

000084b4 <uart_getc>:
	}
}


char uart_getc()
{
    84b4:	f242 2350 	movw	r3, #8784	; 0x2250
    84b8:	f2c2 0300 	movt	r3, #8192	; 0x2000
    84bc:	681a      	ldr	r2, [r3, #0]
	char rx;
	//volatile uint32_t i=0, MAX_TIME_OUT = 1000000;
	
	while(!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    84be:	2104      	movs	r1, #4
    84c0:	e003      	b.n	84ca <uart_getc+0x16>
	{
		if(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR)
    84c2:	7e13      	ldrb	r3, [r2, #24]
    84c4:	b25b      	sxtb	r3, r3
    84c6:	2b00      	cmp	r3, #0
    84c8:	db05      	blt.n	84d6 <uart_getc+0x22>
	while(!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    84ca:	7e13      	ldrb	r3, [r2, #24]
    84cc:	4219      	tst	r1, r3
    84ce:	d0f8      	beq.n	84c2 <uart_getc+0xe>
			break;
		}
		//i++;
		//if(i >= MAX_TIME_OUT) return 'O';
	}
	rx = (uint8_t)ser->USART.DATA.reg;
    84d0:	8d10      	ldrh	r0, [r2, #40]	; 0x28
	return rx;
    84d2:	b2c0      	uxtb	r0, r0
}
    84d4:	4770      	bx	lr
			ser->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    84d6:	2180      	movs	r1, #128	; 0x80
    84d8:	7e13      	ldrb	r3, [r2, #24]
    84da:	430b      	orrs	r3, r1
    84dc:	7613      	strb	r3, [r2, #24]
			break;
    84de:	e7f7      	b.n	84d0 <uart_getc+0x1c>

000084e0 <uart_get_bytes>:
		s[idx] = c;
		idx++;
	}
}

void uart_get_bytes(uint8_t* output, int size){
    84e0:	b570      	push	{r4, r5, r6, lr}
	for (int i = 0; i < size; i++)
    84e2:	2900      	cmp	r1, #0
    84e4:	dd15      	ble.n	8512 <uart_get_bytes+0x32>
    84e6:	f242 2550 	movw	r5, #8784	; 0x2250
			ser->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    84ea:	2680      	movs	r6, #128	; 0x80
	while(!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    84ec:	2404      	movs	r4, #4
    84ee:	1841      	adds	r1, r0, r1
    84f0:	f2c2 0500 	movt	r5, #8192	; 0x2000
			ser->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    84f4:	4276      	negs	r6, r6
    84f6:	682a      	ldr	r2, [r5, #0]
    84f8:	e003      	b.n	8502 <uart_get_bytes+0x22>
		if(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR)
    84fa:	7e13      	ldrb	r3, [r2, #24]
    84fc:	b25b      	sxtb	r3, r3
    84fe:	2b00      	cmp	r3, #0
    8500:	db08      	blt.n	8514 <uart_get_bytes+0x34>
	while(!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    8502:	7e13      	ldrb	r3, [r2, #24]
    8504:	421c      	tst	r4, r3
    8506:	d0f8      	beq.n	84fa <uart_get_bytes+0x1a>
	rx = (uint8_t)ser->USART.DATA.reg;
    8508:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    850a:	7003      	strb	r3, [r0, #0]
    850c:	3001      	adds	r0, #1
	for (int i = 0; i < size; i++)
    850e:	4288      	cmp	r0, r1
    8510:	d1f1      	bne.n	84f6 <uart_get_bytes+0x16>
	{
		output[i] = uart_getc();
	}
}
    8512:	bd70      	pop	{r4, r5, r6, pc}
			ser->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    8514:	7e13      	ldrb	r3, [r2, #24]
    8516:	4333      	orrs	r3, r6
    8518:	b2db      	uxtb	r3, r3
    851a:	7613      	strb	r3, [r2, #24]
	rx = (uint8_t)ser->USART.DATA.reg;
    851c:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    851e:	7003      	strb	r3, [r0, #0]
    8520:	3001      	adds	r0, #1
	for (int i = 0; i < size; i++)
    8522:	4288      	cmp	r0, r1
    8524:	d1e7      	bne.n	84f6 <uart_get_bytes+0x16>
    8526:	e7f4      	b.n	8512 <uart_get_bytes+0x32>

00008528 <uart_put_bytes>:

void uart_put_bytes(uint8_t* output, int size){
    8528:	b530      	push	{r4, r5, lr}
	for (int i = 0; i < size; i++)
    852a:	2900      	cmp	r1, #0
    852c:	dd0f      	ble.n	854e <uart_put_bytes+0x26>
    852e:	f242 2350 	movw	r3, #8784	; 0x2250
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    8532:	2401      	movs	r4, #1
    8534:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8538:	681a      	ldr	r2, [r3, #0]
    853a:	1841      	adds	r1, r0, r1
	{
		uart_putc(output[i]);
    853c:	7805      	ldrb	r5, [r0, #0]
	while (!(ser->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    853e:	7e13      	ldrb	r3, [r2, #24]
    8540:	421c      	tst	r4, r3
    8542:	d0fc      	beq.n	853e <uart_put_bytes+0x16>
	ser->USART.DATA.reg = c;
    8544:	b2ad      	uxth	r5, r5
    8546:	3001      	adds	r0, #1
    8548:	8515      	strh	r5, [r2, #40]	; 0x28
	for (int i = 0; i < size; i++)
    854a:	4288      	cmp	r0, r1
    854c:	d1f6      	bne.n	853c <uart_put_bytes+0x14>
	}
}
    854e:	bd30      	pop	{r4, r5, pc}

00008550 <wrapper_init>:
	float init_val = *(float*)(pox_input+4*2);
	train(init_val, numEpochs, lr);
	secure_setState(&s, sizeof(State));
}

void wrapper_init() {
    8550:	b5f0      	push	{r4, r5, r6, r7, lr}
    8552:	46de      	mov	lr, fp
    8554:	464e      	mov	r6, r9
    8556:	4657      	mov	r7, sl
    8558:	4645      	mov	r5, r8
	secure_checkState(&s, sizeof(State));
    855a:	f242 207c 	movw	r0, #8828	; 0x227c
    855e:	f647 4309 	movw	r3, #31753	; 0x7c09
void wrapper_init() {
    8562:	b5e0      	push	{r5, r6, r7, lr}
	secure_checkState(&s, sizeof(State));
    8564:	f2c0 0300 	movt	r3, #0
void wrapper_init() {
    8568:	b083      	sub	sp, #12
	secure_checkState(&s, sizeof(State));
    856a:	f240 6144 	movw	r1, #1604	; 0x644
    856e:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8572:	4798      	blx	r3
    8574:	f242 237c 	movw	r3, #8828	; 0x227c
    8578:	f2c2 0300 	movt	r3, #8192	; 0x2000
    857c:	9301      	str	r3, [sp, #4]
    857e:	4698      	mov	r8, r3
			if(j%4 == 0 && i==j%FEATURE_SIZE) s.input[j][i] = 100000.0f;
    8580:	f245 0300 	movw	r3, #20480	; 0x5000
    8584:	f64a 1959 	movw	r9, #43353	; 0xa959
    8588:	f2c4 73c3 	movt	r3, #18371	; 0x47c3
	int idx = 0;
    858c:	2400      	movs	r4, #0
	for(int j=0; j<INPUT_SIZE; j++) {
    858e:	f240 0a00 	movw	sl, #0
			idx = (idx+1)%26;
    8592:	261a      	movs	r6, #26
			if(j%4 == 0 && i==j%FEATURE_SIZE) s.input[j][i] = 100000.0f;
    8594:	469b      	mov	fp, r3
    8596:	f2c0 0900 	movt	r9, #0
    859a:	2303      	movs	r3, #3
    859c:	4652      	mov	r2, sl
    859e:	4213      	tst	r3, r2
    85a0:	d038      	beq.n	8614 <wrapper_init+0xc4>
    85a2:	4645      	mov	r5, r8
	for(int j=0; j<INPUT_SIZE; j++) {
    85a4:	4647      	mov	r7, r8
    85a6:	3560      	adds	r5, #96	; 0x60
			s.input[j][i] = (float)(c+idx);
    85a8:	0020      	movs	r0, r4
			idx = (idx+1)%26;
    85aa:	3401      	adds	r4, #1
			s.input[j][i] = (float)(c+idx);
    85ac:	3061      	adds	r0, #97	; 0x61
    85ae:	47c8      	blx	r9
			idx = (idx+1)%26;
    85b0:	fb94 f3f6 	sdiv	r3, r4, r6
    85b4:	4373      	muls	r3, r6
			s.input[j][i] = (float)(c+idx);
    85b6:	c701      	stmia	r7!, {r0}
			idx = (idx+1)%26;
    85b8:	1ae4      	subs	r4, r4, r3
		for(int i=0; i<FEATURE_SIZE; i++) {
    85ba:	42af      	cmp	r7, r5
    85bc:	d1f4      	bne.n	85a8 <wrapper_init+0x58>
		else s.target[j][0] = 0.0f;
    85be:	2200      	movs	r2, #0
    85c0:	4653      	mov	r3, sl
    85c2:	f242 217c 	movw	r1, #8828	; 0x227c
    85c6:	f240 6c00 	movw	ip, #1536	; 0x600
    85ca:	009b      	lsls	r3, r3, #2
    85cc:	f2c2 0100 	movt	r1, #8192	; 0x2000
    85d0:	4463      	add	r3, ip
    85d2:	468c      	mov	ip, r1
    85d4:	4463      	add	r3, ip
	for(int j=0; j<INPUT_SIZE; j++) {
    85d6:	f240 0c01 	movw	ip, #1
    85da:	44e2      	add	sl, ip
    85dc:	601a      	str	r2, [r3, #0]
    85de:	4653      	mov	r3, sl
    85e0:	46a8      	mov	r8, r5
    85e2:	2b10      	cmp	r3, #16
    85e4:	d1d9      	bne.n	859a <wrapper_init+0x4a>
	s.curIdx = INPUT_SIZE-2;
    85e6:	220e      	movs	r2, #14
    85e8:	f240 6340 	movw	r3, #1600	; 0x640
    85ec:	9901      	ldr	r1, [sp, #4]
	initialize();
	secure_setState(&s, sizeof(State));
    85ee:	f242 207c 	movw	r0, #8828	; 0x227c
	s.curIdx = INPUT_SIZE-2;
    85f2:	50ca      	str	r2, [r1, r3]
	secure_setState(&s, sizeof(State));
    85f4:	f647 4311 	movw	r3, #31761	; 0x7c11
    85f8:	f240 6144 	movw	r1, #1604	; 0x644
    85fc:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8600:	f2c0 0300 	movt	r3, #0
    8604:	4798      	blx	r3
}
    8606:	b003      	add	sp, #12
    8608:	bc3c      	pop	{r2, r3, r4, r5}
    860a:	4690      	mov	r8, r2
    860c:	4699      	mov	r9, r3
    860e:	46a2      	mov	sl, r4
    8610:	46ab      	mov	fp, r5
    8612:	bdf0      	pop	{r4, r5, r6, r7, pc}
void wrapper_init() {
    8614:	4647      	mov	r7, r8
    8616:	2500      	movs	r5, #0
    8618:	e003      	b.n	8622 <wrapper_init+0xd2>
		for(int i=0; i<FEATURE_SIZE; i++) {
    861a:	3501      	adds	r5, #1
    861c:	3704      	adds	r7, #4
    861e:	2d18      	cmp	r5, #24
    8620:	d010      	beq.n	8644 <wrapper_init+0xf4>
			s.input[j][i] = (float)(c+idx);
    8622:	0020      	movs	r0, r4
			idx = (idx+1)%26;
    8624:	3401      	adds	r4, #1
			s.input[j][i] = (float)(c+idx);
    8626:	3061      	adds	r0, #97	; 0x61
    8628:	47c8      	blx	r9
			idx = (idx+1)%26;
    862a:	fb94 f3f6 	sdiv	r3, r4, r6
    862e:	4373      	muls	r3, r6
			s.input[j][i] = (float)(c+idx);
    8630:	6038      	str	r0, [r7, #0]
			idx = (idx+1)%26;
    8632:	1ae4      	subs	r4, r4, r3
			if(j%4 == 0 && i==j%FEATURE_SIZE) s.input[j][i] = 100000.0f;
    8634:	4555      	cmp	r5, sl
    8636:	d1f0      	bne.n	861a <wrapper_init+0xca>
    8638:	465b      	mov	r3, fp
		for(int i=0; i<FEATURE_SIZE; i++) {
    863a:	3501      	adds	r5, #1
			if(j%4 == 0 && i==j%FEATURE_SIZE) s.input[j][i] = 100000.0f;
    863c:	603b      	str	r3, [r7, #0]
    863e:	3704      	adds	r7, #4
		for(int i=0; i<FEATURE_SIZE; i++) {
    8640:	2d18      	cmp	r5, #24
    8642:	d1ee      	bne.n	8622 <wrapper_init+0xd2>
		if(j%4==0) s.target[j][0] = 1.0f;
    8644:	22fe      	movs	r2, #254	; 0xfe
    8646:	4645      	mov	r5, r8
    8648:	0592      	lsls	r2, r2, #22
    864a:	3560      	adds	r5, #96	; 0x60
    864c:	e7b8      	b.n	85c0 <wrapper_init+0x70>
    864e:	46c0      	nop			; (mov r8, r8)

00008650 <wrapper_collect>:

void wrapper_collect() {
	secure_checkState(&s, sizeof(State));
    8650:	f242 207c 	movw	r0, #8828	; 0x227c
    8654:	f647 4309 	movw	r3, #31753	; 0x7c09
void wrapper_collect() {
    8658:	b570      	push	{r4, r5, r6, lr}
	secure_checkState(&s, sizeof(State));
    865a:	f240 6144 	movw	r1, #1604	; 0x644
void wrapper_collect() {
    865e:	b09a      	sub	sp, #104	; 0x68
	secure_checkState(&s, sizeof(State));
    8660:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8664:	f2c0 0300 	movt	r3, #0
    8668:	4798      	blx	r3
	uart_puts("[S]AA[E]\n");
    866a:	f248 3525 	movw	r5, #33573	; 0x8325
    866e:	f24b 7068 	movw	r0, #46952	; 0xb768
    8672:	f2c0 0500 	movt	r5, #0
    8676:	f2c0 0000 	movt	r0, #0
    867a:	f248 44b5 	movw	r4, #33973	; 0x84b5
    867e:	47a8      	blx	r5
    8680:	f2c0 0400 	movt	r4, #0
	uint8_t c1 = uart_getc();
    8684:	47a0      	blx	r4
	if(c1 != '<') return 0;
    8686:	283c      	cmp	r0, #60	; 0x3c
    8688:	d1fc      	bne.n	8684 <wrapper_collect+0x34>
	c1 = uart_getc();
    868a:	47a0      	blx	r4
	if(c1 != 'p') return 0;
    868c:	2870      	cmp	r0, #112	; 0x70
    868e:	d1f9      	bne.n	8684 <wrapper_collect+0x34>
	c1 = uart_getc();
    8690:	47a0      	blx	r4
	if(c1 != '>') return 0;
    8692:	283e      	cmp	r0, #62	; 0x3e
    8694:	d1f6      	bne.n	8684 <wrapper_collect+0x34>
	while(!is_pzem_online());
	uart_puts("[S]BB[E]\n");
    8696:	f24b 7074 	movw	r0, #46964	; 0xb774
    869a:	f2c0 0000 	movt	r0, #0
    869e:	47a8      	blx	r5
		uint8_t c1 = uart_getc();
    86a0:	47a0      	blx	r4
		if(c1 != '<') continue;
    86a2:	283c      	cmp	r0, #60	; 0x3c
    86a4:	d1fc      	bne.n	86a0 <wrapper_collect+0x50>
		c1 = uart_getc();
    86a6:	47a0      	blx	r4
		if(c1 != 'p') continue;
    86a8:	2870      	cmp	r0, #112	; 0x70
    86aa:	d1f9      	bne.n	86a0 <wrapper_collect+0x50>
		c1 = uart_getc();
    86ac:	47a0      	blx	r4
		if(c1 != '>') continue;
    86ae:	283e      	cmp	r0, #62	; 0x3e
    86b0:	d1f6      	bne.n	86a0 <wrapper_collect+0x50>
		uart_get_bytes(arr,3);
    86b2:	f248 43e1 	movw	r3, #34017	; 0x84e1
    86b6:	2103      	movs	r1, #3
    86b8:	4668      	mov	r0, sp
    86ba:	f2c0 0300 	movt	r3, #0
    86be:	4798      	blx	r3
		uart_puts("[S]");
    86c0:	f24b 7080 	movw	r0, #46976	; 0xb780
    86c4:	f2c0 0000 	movt	r0, #0
    86c8:	47a8      	blx	r5
		arr[3] = '\0';
    86ca:	466a      	mov	r2, sp
    86cc:	2300      	movs	r3, #0
    86ce:	70d3      	strb	r3, [r2, #3]
		uint8_t energy = (uint8_t) atoi(arr);
    86d0:	f64a 4381 	movw	r3, #44161	; 0xac81
    86d4:	4668      	mov	r0, sp
    86d6:	f2c0 0300 	movt	r3, #0
    86da:	4798      	blx	r3
		uart_puti(energy);
    86dc:	f248 334d 	movw	r3, #33613	; 0x834d
		uint8_t energy = (uint8_t) atoi(arr);
    86e0:	0006      	movs	r6, r0
		uart_puti(energy);
    86e2:	20ff      	movs	r0, #255	; 0xff
    86e4:	f2c0 0300 	movt	r3, #0
    86e8:	4030      	ands	r0, r6
    86ea:	4798      	blx	r3
		uart_puts("[E]\n");
    86ec:	f24b 7084 	movw	r0, #46980	; 0xb784
    86f0:	f2c0 0000 	movt	r0, #0
    86f4:	47a8      	blx	r5
		energyList[idx] = (float) (energy);
    86f6:	f64a 13f9 	movw	r3, #43513	; 0xa9f9
    86fa:	b2f0      	uxtb	r0, r6
    86fc:	f2c0 0300 	movt	r3, #0
    8700:	4798      	blx	r3
    8702:	9002      	str	r0, [sp, #8]
	memcpy(s.input[s.curIdx], energyList, FEATURE_SIZE);
    8704:	f242 207c 	movw	r0, #8828	; 0x227c
    8708:	f240 6140 	movw	r1, #1600	; 0x640
    870c:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8710:	5843      	ldr	r3, [r0, r1]
		energyList[idx] = (float) (energy);
    8712:	ac02      	add	r4, sp, #8
	memcpy(s.input[s.curIdx], energyList, FEATURE_SIZE);
    8714:	4684      	mov	ip, r0
    8716:	005a      	lsls	r2, r3, #1
    8718:	18d2      	adds	r2, r2, r3
    871a:	0023      	movs	r3, r4
    871c:	0152      	lsls	r2, r2, #5
    871e:	4462      	add	r2, ip
    8720:	cb70      	ldmia	r3!, {r4, r5, r6}
    8722:	c270      	stmia	r2!, {r4, r5, r6}
    8724:	0014      	movs	r4, r2
    8726:	cb64      	ldmia	r3!, {r2, r5, r6}
    8728:	c464      	stmia	r4!, {r2, r5, r6}
	s.target[s.curIdx][0] = 0.0f; // assuming no anomaly
    872a:	5843      	ldr	r3, [r0, r1]
    872c:	2400      	movs	r4, #0
    872e:	001a      	movs	r2, r3
    8730:	3281      	adds	r2, #129	; 0x81
    8732:	32ff      	adds	r2, #255	; 0xff
    8734:	0092      	lsls	r2, r2, #2
    8736:	5014      	str	r4, [r2, r0]
	s.curIdx = (s.curIdx+1)%INPUT_SIZE;
    8738:	220f      	movs	r2, #15
    873a:	3301      	adds	r3, #1
    873c:	17dc      	asrs	r4, r3, #31
    873e:	0f24      	lsrs	r4, r4, #28
    8740:	191b      	adds	r3, r3, r4
    8742:	4013      	ands	r3, r2
    8744:	1b1b      	subs	r3, r3, r4
    8746:	5043      	str	r3, [r0, r1]
	collect();
	secure_setState(&s, sizeof(State));
    8748:	f647 4311 	movw	r3, #31761	; 0x7c11
    874c:	3104      	adds	r1, #4
    874e:	f2c0 0300 	movt	r3, #0
    8752:	4798      	blx	r3
}
    8754:	b01a      	add	sp, #104	; 0x68
    8756:	bd70      	pop	{r4, r5, r6, pc}

00008758 <train>:
void train(float init_val, int epochs, float rate) {
    8758:	b5f0      	push	{r4, r5, r6, r7, lr}
    875a:	464e      	mov	r6, r9
    875c:	4645      	mov	r5, r8
    875e:	4657      	mov	r7, sl
    8760:	46de      	mov	lr, fp
    8762:	b5e0      	push	{r5, r6, r7, lr}
	setWeight(tinn, init_val);
    8764:	f242 2554 	movw	r5, #8788	; 0x2254
    8768:	f2c2 0500 	movt	r5, #8192	; 0x2000
void train(float init_val, int epochs, float rate) {
    876c:	b0a3      	sub	sp, #140	; 0x8c
	setWeight(tinn, init_val);
    876e:	002b      	movs	r3, r5
void train(float init_val, int epochs, float rate) {
    8770:	4690      	mov	r8, r2
	setWeight(tinn, init_val);
    8772:	466a      	mov	r2, sp
    8774:	9006      	str	r0, [sp, #24]
void train(float init_val, int epochs, float rate) {
    8776:	9110      	str	r1, [sp, #64]	; 0x40
	setWeight(tinn, init_val);
    8778:	3310      	adds	r3, #16
    877a:	cb51      	ldmia	r3!, {r0, r4, r6}
    877c:	c251      	stmia	r2!, {r0, r4, r6}
    877e:	cb51      	ldmia	r3!, {r0, r4, r6}
    8780:	c251      	stmia	r2!, {r0, r4, r6}
    8782:	f249 146d 	movw	r4, #37229	; 0x916d
void train(float init_val, int epochs, float rate) {
    8786:	000f      	movs	r7, r1
	setWeight(tinn, init_val);
    8788:	6828      	ldr	r0, [r5, #0]
    878a:	6869      	ldr	r1, [r5, #4]
    878c:	68aa      	ldr	r2, [r5, #8]
    878e:	68eb      	ldr	r3, [r5, #12]
    8790:	f2c0 0400 	movt	r4, #0
    8794:	47a0      	blx	r4
	 for(int i = 0; i < epochs; i++)
    8796:	2f00      	cmp	r7, #0
    8798:	dc00      	bgt.n	879c <train+0x44>
    879a:	e0f7      	b.n	898c <train+0x234>
    879c:	f24a 33a5 	movw	r3, #41893	; 0xa3a5
    87a0:	2100      	movs	r1, #0
    87a2:	f64a 1a1d 	movw	sl, #43293	; 0xa91d
    87a6:	f2c0 0300 	movt	r3, #0
    87aa:	930b      	str	r3, [sp, #44]	; 0x2c
    87ac:	f2c4 21c8 	movt	r1, #17096	; 0x42c8
    87b0:	4640      	mov	r0, r8
    87b2:	4798      	blx	r3
    87b4:	f2c0 0a00 	movt	sl, #0
    87b8:	47d0      	blx	sl
    87ba:	2300      	movs	r3, #0
    87bc:	930c      	str	r3, [sp, #48]	; 0x30
    87be:	f242 237c 	movw	r3, #8828	; 0x227c
    87c2:	f64a 5141 	movw	r1, #44353	; 0xad41
    87c6:	f2c2 0300 	movt	r3, #8192	; 0x2000
    87ca:	f248 3b25 	movw	fp, #33573	; 0x8325
    87ce:	469c      	mov	ip, r3
    87d0:	9313      	str	r3, [sp, #76]	; 0x4c
    87d2:	f649 42bd 	movw	r2, #40125	; 0x9cbd
    87d6:	4653      	mov	r3, sl
    87d8:	4644      	mov	r4, r8
    87da:	f2c0 0100 	movt	r1, #0
    87de:	f2c0 0b00 	movt	fp, #0
    87e2:	9112      	str	r1, [sp, #72]	; 0x48
    87e4:	f24b 2149 	movw	r1, #45641	; 0xb249
    87e8:	f249 2975 	movw	r9, #37493	; 0x9275
    87ec:	f2c0 0200 	movt	r2, #0
    87f0:	f240 6800 	movw	r8, #1536	; 0x600
    87f4:	930d      	str	r3, [sp, #52]	; 0x34
    87f6:	465b      	mov	r3, fp
    87f8:	46a2      	mov	sl, r4
    87fa:	4693      	mov	fp, r2
    87fc:	f2c0 0100 	movt	r1, #0
    8800:	900f      	str	r0, [sp, #60]	; 0x3c
    8802:	f2c0 0900 	movt	r9, #0
    8806:	9111      	str	r1, [sp, #68]	; 0x44
    8808:	44e0      	add	r8, ip
    880a:	930e      	str	r3, [sp, #56]	; 0x38
    880c:	f242 247c 	movw	r4, #8828	; 0x227c
    8810:	4646      	mov	r6, r8
    8812:	2700      	movs	r7, #0
    8814:	f2c2 0400 	movt	r4, #8192	; 0x2000
    8818:	960a      	str	r6, [sp, #40]	; 0x28
			 error += xttrain(tinn, s.input[j], s.target[j], rate);
    881a:	4653      	mov	r3, sl
    881c:	9308      	str	r3, [sp, #32]
    881e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8820:	466a      	mov	r2, sp
    8822:	9307      	str	r3, [sp, #28]
    8824:	002b      	movs	r3, r5
    8826:	9406      	str	r4, [sp, #24]
    8828:	3310      	adds	r3, #16
    882a:	cb43      	ldmia	r3!, {r0, r1, r6}
    882c:	c243      	stmia	r2!, {r0, r1, r6}
    882e:	cb43      	ldmia	r3!, {r0, r1, r6}
    8830:	c243      	stmia	r2!, {r0, r1, r6}
    8832:	68eb      	ldr	r3, [r5, #12]
    8834:	6869      	ldr	r1, [r5, #4]
    8836:	68aa      	ldr	r2, [r5, #8]
    8838:	6828      	ldr	r0, [r5, #0]
    883a:	47c8      	blx	r9
    883c:	1c01      	adds	r1, r0, #0
    883e:	1c38      	adds	r0, r7, #0
    8840:	47d8      	blx	fp
    8842:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8844:	3460      	adds	r4, #96	; 0x60
    8846:	3304      	adds	r3, #4
    8848:	1c07      	adds	r7, r0, #0
    884a:	930a      	str	r3, [sp, #40]	; 0x28
		 for(int j = 0; j < INPUT_SIZE; j++)
    884c:	4544      	cmp	r4, r8
    884e:	d1e4      	bne.n	881a <train+0xc2>
		 char buffer[50] = {0};
    8850:	2232      	movs	r2, #50	; 0x32
    8852:	2100      	movs	r1, #0
    8854:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8856:	a815      	add	r0, sp, #84	; 0x54
    8858:	4798      	blx	r3
		 sprintf(buffer, "error %d :: learning rate %d\n", (int) (100*error / INPUT_SIZE), (int) (rate*100));
    885a:	2100      	movs	r1, #0
    885c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    885e:	f2c4 01c8 	movt	r1, #16584	; 0x40c8
    8862:	1c38      	adds	r0, r7, #0
    8864:	4798      	blx	r3
    8866:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8868:	4798      	blx	r3
    886a:	f24b 7198 	movw	r1, #47000	; 0xb798
    886e:	0002      	movs	r2, r0
    8870:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8872:	f2c0 0100 	movt	r1, #0
    8876:	a815      	add	r0, sp, #84	; 0x54
    8878:	9c11      	ldr	r4, [sp, #68]	; 0x44
    887a:	47a0      	blx	r4
		 uart_puts(buffer);
    887c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    887e:	a815      	add	r0, sp, #84	; 0x54
    8880:	4798      	blx	r3
	 for(int i = 0; i < epochs; i++)
    8882:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8884:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8886:	3301      	adds	r3, #1
    8888:	930c      	str	r3, [sp, #48]	; 0x30
    888a:	429a      	cmp	r2, r3
    888c:	d1be      	bne.n	880c <train+0xb4>
    888e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8890:	469a      	mov	sl, r3
    8892:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8894:	469b      	mov	fp, r3
    8896:	f240 6c00 	movw	ip, #1536	; 0x600
    889a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    889c:	4652      	mov	r2, sl
    889e:	4463      	add	r3, ip
    88a0:	930c      	str	r3, [sp, #48]	; 0x30
    88a2:	4698      	mov	r8, r3
    88a4:	f249 2331 	movw	r3, #37425	; 0x9231
    88a8:	f242 247c 	movw	r4, #8828	; 0x227c
    88ac:	f248 364d 	movw	r6, #33613	; 0x834d
    88b0:	465f      	mov	r7, fp
    88b2:	46aa      	mov	sl, r5
    88b4:	f2c0 0300 	movt	r3, #0
    88b8:	f2c2 0400 	movt	r4, #8192	; 0x2000
    88bc:	930d      	str	r3, [sp, #52]	; 0x34
    88be:	f2c0 0600 	movt	r6, #0
    88c2:	920a      	str	r2, [sp, #40]	; 0x28
		 float* pd = xtpredict(tinn, s.input[j]);
    88c4:	4653      	mov	r3, sl
    88c6:	466a      	mov	r2, sp
    88c8:	9406      	str	r4, [sp, #24]
    88ca:	3310      	adds	r3, #16
    88cc:	cb23      	ldmia	r3!, {r0, r1, r5}
    88ce:	c223      	stmia	r2!, {r0, r1, r5}
    88d0:	cb23      	ldmia	r3!, {r0, r1, r5}
    88d2:	c223      	stmia	r2!, {r0, r1, r5}
    88d4:	4653      	mov	r3, sl
    88d6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    88d8:	6859      	ldr	r1, [r3, #4]
    88da:	689a      	ldr	r2, [r3, #8]
    88dc:	6818      	ldr	r0, [r3, #0]
    88de:	68db      	ldr	r3, [r3, #12]
    88e0:	47a8      	blx	r5
    88e2:	4683      	mov	fp, r0
		 uart_puts("Input:\n");
    88e4:	f24b 70b8 	movw	r0, #47032	; 0xb7b8
    88e8:	f240 0960 	movw	r9, #96	; 0x60
    88ec:	f2c0 0000 	movt	r0, #0
    88f0:	47b8      	blx	r7
    88f2:	003b      	movs	r3, r7
    88f4:	44a1      	add	r9, r4
    88f6:	464d      	mov	r5, r9
    88f8:	4699      	mov	r9, r3
    88fa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
			 uart_puti((int) s.input[j][i]);
    88fc:	cc01      	ldmia	r4!, {r0}
    88fe:	47b8      	blx	r7
    8900:	47b0      	blx	r6
			 uart_puts(" ");
    8902:	f64b 00f4 	movw	r0, #47348	; 0xb8f4
    8906:	f2c0 0000 	movt	r0, #0
    890a:	47c8      	blx	r9
		 for(i=0; i<FEATURE_SIZE; i++) {
    890c:	42ac      	cmp	r4, r5
    890e:	d1f5      	bne.n	88fc <train+0x1a4>
		 uart_puts("\nPD:");
    8910:	f24b 70c0 	movw	r0, #47040	; 0xb7c0
    8914:	f2c0 0000 	movt	r0, #0
    8918:	970a      	str	r7, [sp, #40]	; 0x28
    891a:	47c8      	blx	r9
			 uart_puti((int) (pd[0]*100));
    891c:	465b      	mov	r3, fp
    891e:	2100      	movs	r1, #0
    8920:	6818      	ldr	r0, [r3, #0]
    8922:	f2c4 21c8 	movt	r1, #17096	; 0x42c8
    8926:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    8928:	47a8      	blx	r5
    892a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    892c:	4790      	blx	r2
    892e:	47b0      	blx	r6
			 uart_puts(" ");
    8930:	f64b 00f4 	movw	r0, #47348	; 0xb8f4
    8934:	f2c0 0000 	movt	r0, #0
    8938:	47c8      	blx	r9
		 uart_puts("\nGT:");
    893a:	f24b 70c8 	movw	r0, #47048	; 0xb7c8
    893e:	f2c0 0000 	movt	r0, #0
    8942:	47c8      	blx	r9
			 uart_puti(tg[i]*100);
    8944:	4642      	mov	r2, r8
    8946:	2100      	movs	r1, #0
    8948:	ca01      	ldmia	r2!, {r0}
    894a:	f2c4 21c8 	movt	r1, #17096	; 0x42c8
    894e:	4690      	mov	r8, r2
    8950:	47a8      	blx	r5
    8952:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8954:	4798      	blx	r3
    8956:	47b0      	blx	r6
			 uart_puts(" ");
    8958:	f64b 00f4 	movw	r0, #47348	; 0xb8f4
    895c:	f2c0 0000 	movt	r0, #0
    8960:	47c8      	blx	r9
		 uart_puts("\n");
    8962:	f64b 1054 	movw	r0, #47444	; 0xb954
    8966:	f2c0 0000 	movt	r0, #0
    896a:	47c8      	blx	r9
	 for(int j = 0; j<INPUT_SIZE; j++) {
    896c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    896e:	464f      	mov	r7, r9
    8970:	429c      	cmp	r4, r3
    8972:	d1a7      	bne.n	88c4 <train+0x16c>
	 uart_puts("\n");
    8974:	f64b 1054 	movw	r0, #47444	; 0xb954
    8978:	f2c0 0000 	movt	r0, #0
    897c:	47c8      	blx	r9
}
    897e:	b023      	add	sp, #140	; 0x8c
    8980:	bc3c      	pop	{r2, r3, r4, r5}
    8982:	4690      	mov	r8, r2
    8984:	4699      	mov	r9, r3
    8986:	46a2      	mov	sl, r4
    8988:	46ab      	mov	fp, r5
    898a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    898c:	f242 237c 	movw	r3, #8828	; 0x227c
    8990:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8994:	9313      	str	r3, [sp, #76]	; 0x4c
    8996:	f24a 33a5 	movw	r3, #41893	; 0xa3a5
    899a:	f64a 1a1d 	movw	sl, #43293	; 0xa91d
    899e:	f248 3b25 	movw	fp, #33573	; 0x8325
    89a2:	f2c0 0300 	movt	r3, #0
    89a6:	930b      	str	r3, [sp, #44]	; 0x2c
    89a8:	f2c0 0a00 	movt	sl, #0
    89ac:	f2c0 0b00 	movt	fp, #0
    89b0:	e771      	b.n	8896 <train+0x13e>
    89b2:	46c0      	nop			; (mov r8, r8)

000089b4 <wrapper_train>:
void wrapper_train() {
    89b4:	b570      	push	{r4, r5, r6, lr}
	secure_checkState(&s, sizeof(State));
    89b6:	f242 257c 	movw	r5, #8828	; 0x227c
    89ba:	f647 4309 	movw	r3, #31753	; 0x7c09
    89be:	f2c2 0500 	movt	r5, #8192	; 0x2000
    89c2:	0028      	movs	r0, r5
    89c4:	f240 6144 	movw	r1, #1604	; 0x644
    89c8:	f2c0 0300 	movt	r3, #0
	float lr = *(float*)(pox_input);
    89cc:	f242 2408 	movw	r4, #8712	; 0x2208
	secure_checkState(&s, sizeof(State));
    89d0:	4798      	blx	r3
	int numEpochs = (int) (*(float*)(pox_input+4));
    89d2:	f64a 131d 	movw	r3, #43293	; 0xa91d
	float lr = *(float*)(pox_input);
    89d6:	f2c2 0400 	movt	r4, #8192	; 0x2000
	int numEpochs = (int) (*(float*)(pox_input+4));
    89da:	6860      	ldr	r0, [r4, #4]
    89dc:	f2c0 0300 	movt	r3, #0
    89e0:	4798      	blx	r3
	train(init_val, numEpochs, lr);
    89e2:	f248 7359 	movw	r3, #34649	; 0x8759
    89e6:	6826      	ldr	r6, [r4, #0]
	int numEpochs = (int) (*(float*)(pox_input+4));
    89e8:	0001      	movs	r1, r0
	train(init_val, numEpochs, lr);
    89ea:	1c32      	adds	r2, r6, #0
    89ec:	68a0      	ldr	r0, [r4, #8]
    89ee:	f2c0 0300 	movt	r3, #0
    89f2:	4798      	blx	r3
	secure_setState(&s, sizeof(State));
    89f4:	f647 4311 	movw	r3, #31761	; 0x7c11
    89f8:	0028      	movs	r0, r5
    89fa:	f240 6144 	movw	r1, #1604	; 0x644
    89fe:	f2c0 0300 	movt	r3, #0
    8a02:	4798      	blx	r3
}
    8a04:	bd70      	pop	{r4, r5, r6, pc}
    8a06:	46c0      	nop			; (mov r8, r8)

00008a08 <single>:
	}
	return (STACK_BASE+STACK_SIZE) - i;
}
#endif

void single() {
    8a08:	b5f0      	push	{r4, r5, r6, r7, lr}
    8a0a:	46de      	mov	lr, fp
    8a0c:	4657      	mov	r7, sl
    8a0e:	464e      	mov	r6, r9
    8a10:	4645      	mov	r5, r8
	for(volatile int i=0; i<10000; i++);
    8a12:	2300      	movs	r3, #0
void single() {
    8a14:	b5e0      	push	{r5, r6, r7, lr}
    8a16:	b0a7      	sub	sp, #156	; 0x9c
	for(volatile int i=0; i<10000; i++);
    8a18:	9304      	str	r3, [sp, #16]
    8a1a:	f242 730f 	movw	r3, #9999	; 0x270f
    8a1e:	9904      	ldr	r1, [sp, #16]
    8a20:	f242 720f 	movw	r2, #9999	; 0x270f
    8a24:	4299      	cmp	r1, r3
    8a26:	dc05      	bgt.n	8a34 <single+0x2c>
    8a28:	9b04      	ldr	r3, [sp, #16]
    8a2a:	3301      	adds	r3, #1
    8a2c:	9304      	str	r3, [sp, #16]
    8a2e:	9b04      	ldr	r3, [sp, #16]
    8a30:	4293      	cmp	r3, r2
    8a32:	ddf9      	ble.n	8a28 <single+0x20>
	uint8_t req[100]={};
    8a34:	f64a 5341 	movw	r3, #44353	; 0xad41
    8a38:	ad0d      	add	r5, sp, #52	; 0x34
    8a3a:	2264      	movs	r2, #100	; 0x64
    8a3c:	2100      	movs	r1, #0
    8a3e:	f2c0 0300 	movt	r3, #0
    8a42:	0028      	movs	r0, r5
    8a44:	4798      	blx	r3
	uart_get_bytes(req, REQUEST_SIZE);
	
	pox_call_t pc;
	pc.input = pox_input;
    8a46:	f242 2708 	movw	r7, #8712	; 0x2208
	uart_get_bytes(req, REQUEST_SIZE);
    8a4a:	f248 43e1 	movw	r3, #34017	; 0x84e1
    8a4e:	2139      	movs	r1, #57	; 0x39
    8a50:	0028      	movs	r0, r5
    8a52:	f2c0 0300 	movt	r3, #0
	pc.input = pox_input;
    8a56:	f2c2 0700 	movt	r7, #8192	; 0x2000
	uart_get_bytes(req, REQUEST_SIZE);
    8a5a:	4798      	blx	r3
	pc.output = pox_output;
    8a5c:	003b      	movs	r3, r7
	pc.input = pox_input;
    8a5e:	ae05      	add	r6, sp, #20
	pc.output = pox_output;
    8a60:	3310      	adds	r3, #16
	pc.command_size = 5; // assume to be fixed
	pc.command = req; // either [stp] or [clt]
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a62:	f24b 71d0 	movw	r1, #47056	; 0xb7d0
    8a66:	f64a 5411 	movw	r4, #44305	; 0xad11
	pc.output = pox_output;
    8a6a:	60f3      	str	r3, [r6, #12]
	pc.command_size = 5; // assume to be fixed
    8a6c:	2305      	movs	r3, #5
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a6e:	2205      	movs	r2, #5
    8a70:	f2c0 0100 	movt	r1, #0
    8a74:	0028      	movs	r0, r5
    8a76:	f2c0 0400 	movt	r4, #0
	pc.input = pox_input;
    8a7a:	6077      	str	r7, [r6, #4]
	pc.command_size = 5; // assume to be fixed
    8a7c:	7733      	strb	r3, [r6, #28]
	pc.command = req; // either [stp] or [clt]
    8a7e:	61b5      	str	r5, [r6, #24]
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a80:	47a0      	blx	r4
    8a82:	b148      	cbz	r0, 8a98 <single+0x90>
	memcmp(pc.command, "[clt]", pc.command_size) == 0) {
    8a84:	f24b 71d8 	movw	r1, #47064	; 0xb7d8
    8a88:	2205      	movs	r2, #5
    8a8a:	f2c0 0100 	movt	r1, #0
    8a8e:	0028      	movs	r0, r5
    8a90:	47a0      	blx	r4
	if(memcmp(pc.command, "[stp]", pc.command_size) == 0 ||
    8a92:	2800      	cmp	r0, #0
    8a94:	d000      	beq.n	8a98 <single+0x90>
    8a96:	e0c8      	b.n	8c2a <single+0x222>
		uart_puts("[Test] Setup/collect: ");
    8a98:	f24b 70e0 	movw	r0, #47072	; 0xb7e0
    8a9c:	f248 3425 	movw	r4, #33573	; 0x8325
    8aa0:	f2c0 0000 	movt	r0, #0
    8aa4:	f2c0 0400 	movt	r4, #0
    8aa8:	47a0      	blx	r4
		uint32_t counter = *((uint32_t*)(req+5));
    8aaa:	ab04      	add	r3, sp, #16
    8aac:	469c      	mov	ip, r3
    8aae:	2229      	movs	r2, #41	; 0x29
    8ab0:	4462      	add	r2, ip
    8ab2:	7853      	ldrb	r3, [r2, #1]
    8ab4:	7811      	ldrb	r1, [r2, #0]
    8ab6:	021b      	lsls	r3, r3, #8
    8ab8:	4319      	orrs	r1, r3
    8aba:	7893      	ldrb	r3, [r2, #2]
    8abc:	78d2      	ldrb	r2, [r2, #3]
    8abe:	041b      	lsls	r3, r3, #16
    8ac0:	430b      	orrs	r3, r1
    8ac2:	0612      	lsls	r2, r2, #24
    8ac4:	431a      	orrs	r2, r3
		uint32_t func = *((uint32_t*)(req+5+4));
    8ac6:	232d      	movs	r3, #45	; 0x2d
		uart_puts("returning ");
    8ac8:	f24b 70f8 	movw	r0, #47096	; 0xb7f8
		uint32_t func = *((uint32_t*)(req+5+4));
    8acc:	4463      	add	r3, ip
		uint32_t counter = *((uint32_t*)(req+5));
    8ace:	4692      	mov	sl, r2
		uint32_t func = *((uint32_t*)(req+5+4));
    8ad0:	785a      	ldrb	r2, [r3, #1]
    8ad2:	7819      	ldrb	r1, [r3, #0]
    8ad4:	0212      	lsls	r2, r2, #8
    8ad6:	4311      	orrs	r1, r2
    8ad8:	789a      	ldrb	r2, [r3, #2]
    8ada:	78db      	ldrb	r3, [r3, #3]
    8adc:	0412      	lsls	r2, r2, #16
    8ade:	430a      	orrs	r2, r1
    8ae0:	061b      	lsls	r3, r3, #24
    8ae2:	4313      	orrs	r3, r2
		uart_puts("returning ");
    8ae4:	f2c0 0000 	movt	r0, #0
		uint32_t func = *((uint32_t*)(req+5+4));
    8ae8:	4699      	mov	r9, r3
		uart_puts("returning ");
    8aea:	47a0      	blx	r4
		uart_put_bytes(req, REQUEST_SIZE);
    8aec:	0028      	movs	r0, r5
    8aee:	f248 5529 	movw	r5, #34089	; 0x8529
    8af2:	2139      	movs	r1, #57	; 0x39
    8af4:	f2c0 0500 	movt	r5, #0
    8af8:	47a8      	blx	r5
		uart_puts(", counter=");
    8afa:	f64b 0004 	movw	r0, #47108	; 0xb804
		uart_puti(counter);
    8afe:	f248 384d 	movw	r8, #33613	; 0x834d
		uart_puts(", counter=");
    8b02:	f2c0 0000 	movt	r0, #0
    8b06:	47a0      	blx	r4
		uart_puti(counter);
    8b08:	f2c0 0800 	movt	r8, #0
    8b0c:	4650      	mov	r0, sl
    8b0e:	47c0      	blx	r8
		uart_puts(", func=");
    8b10:	f64b 0010 	movw	r0, #47120	; 0xb810
    8b14:	f2c0 0000 	movt	r0, #0
    8b18:	47a0      	blx	r4
		uart_puti(func);
    8b1a:	4648      	mov	r0, r9
    8b1c:	47c0      	blx	r8
		uart_puts(" = done  [/Test] \n");
    8b1e:	f64b 0018 	movw	r0, #47128	; 0xb818
    8b22:	f2c0 0000 	movt	r0, #0
    8b26:	47a0      	blx	r4
		
		uint8_t *token = (uint8_t*) (req+PLAINTEXT_SIZE);
		
		pc.counter = counter;
    8b28:	4653      	mov	r3, sl
    8b2a:	6173      	str	r3, [r6, #20]
		pc.addr = func;
    8b2c:	464b      	mov	r3, r9
    8b2e:	9305      	str	r3, [sp, #20]
		pc.input_size = 12;
    8b30:	230c      	movs	r3, #12
    8b32:	60b3      	str	r3, [r6, #8]
		pc.output_size = 32;
    8b34:	3314      	adds	r3, #20
    8b36:	6133      	str	r3, [r6, #16]
		// pox_input = b'\x00'*12
		memcpy(pox_input, req+5+4*2, 12);
    8b38:	ab04      	add	r3, sp, #16
    8b3a:	469c      	mov	ip, r3
    8b3c:	2131      	movs	r1, #49	; 0x31
    8b3e:	f242 2008 	movw	r0, #8712	; 0x2208
    8b42:	f64a 532f 	movw	r3, #44335	; 0xad2f
    8b46:	4461      	add	r1, ip
    8b48:	220c      	movs	r2, #12
    8b4a:	f2c0 0300 	movt	r3, #0
    8b4e:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8b52:	4798      	blx	r3
		
		secure_pox(&pc, token);
    8b54:	aa04      	add	r2, sp, #16
    8b56:	4694      	mov	ip, r2
    8b58:	233d      	movs	r3, #61	; 0x3d
    8b5a:	4463      	add	r3, ip
    8b5c:	0019      	movs	r1, r3
    8b5e:	4699      	mov	r9, r3
    8b60:	f647 4301 	movw	r3, #31745	; 0x7c01
    8b64:	0030      	movs	r0, r6
    8b66:	f2c0 0300 	movt	r3, #0
    8b6a:	4798      	blx	r3
		
		uart_puts("[SStack] ");
    8b6c:	f64b 002c 	movw	r0, #47148	; 0xb82c
    8b70:	f2c0 0000 	movt	r0, #0
    8b74:	47a0      	blx	r4
		uart_puti(*(uint32_t*)(pc.output));
    8b76:	68f3      	ldr	r3, [r6, #12]
    8b78:	6818      	ldr	r0, [r3, #0]
    8b7a:	47c0      	blx	r8
		uart_puts("[\SStack]\n");
    8b7c:	f64b 0038 	movw	r0, #47160	; 0xb838
    8b80:	f2c0 0000 	movt	r0, #0
    8b84:	47a0      	blx	r4
	for(i=start; i<stack_pointer-0x10; i++) {
    8b86:	f642 4350 	movw	r3, #11344	; 0x2c50
    8b8a:	68fe      	ldr	r6, [r7, #12]
    8b8c:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8b90:	3e10      	subs	r6, #16
    8b92:	429e      	cmp	r6, r3
    8b94:	d800      	bhi.n	8b98 <single+0x190>
    8b96:	e19e      	b.n	8ed6 <single+0x4ce>
		if(mem[0] != MAGIC && mem[1] != MAGIC && mem[2] != MAGIC && mem[3] != MAGIC)
    8b98:	781a      	ldrb	r2, [r3, #0]
    8b9a:	2ad9      	cmp	r2, #217	; 0xd9
    8b9c:	d009      	beq.n	8bb2 <single+0x1aa>
    8b9e:	785a      	ldrb	r2, [r3, #1]
    8ba0:	2ad9      	cmp	r2, #217	; 0xd9
    8ba2:	d006      	beq.n	8bb2 <single+0x1aa>
    8ba4:	789a      	ldrb	r2, [r3, #2]
    8ba6:	2ad9      	cmp	r2, #217	; 0xd9
    8ba8:	d003      	beq.n	8bb2 <single+0x1aa>
    8baa:	78da      	ldrb	r2, [r3, #3]
    8bac:	2ad9      	cmp	r2, #217	; 0xd9
    8bae:	d000      	beq.n	8bb2 <single+0x1aa>
    8bb0:	e18b      	b.n	8eca <single+0x4c2>
	for(i=start; i<stack_pointer-0x10; i++) {
    8bb2:	3301      	adds	r3, #1
    8bb4:	429e      	cmp	r6, r3
    8bb6:	d1ef      	bne.n	8b98 <single+0x190>
    8bb8:	f643 63c8 	movw	r3, #16072	; 0x3ec8
    8bbc:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8bc0:	1b9e      	subs	r6, r3, r6
		
		#ifdef BENCHMARK_STACK
		uint32_t stack_usage = stack_used();
		uart_puts("[NSStack] =");
    8bc2:	f64b 0044 	movw	r0, #47172	; 0xb844
    8bc6:	f2c0 0000 	movt	r0, #0
    8bca:	47a0      	blx	r4
		uart_puti(stack_usage);
    8bcc:	0030      	movs	r0, r6
    8bce:	47c0      	blx	r8
		uart_puts("[\NSStack]\n");
    8bd0:	f64b 0050 	movw	r0, #47184	; 0xb850
    8bd4:	f2c0 0000 	movt	r0, #0
    8bd8:	46b8      	mov	r8, r7
    8bda:	47a0      	blx	r4
    8bdc:	260a      	movs	r6, #10
    8bde:	464f      	mov	r7, r9
		#endif
		
		// fault tolerance
		for(int i=0; i<10; i++) {
			uart_puts("[OS]");
    8be0:	f64b 005c 	movw	r0, #47196	; 0xb85c
    8be4:	f2c0 0000 	movt	r0, #0
    8be8:	47a0      	blx	r4
			uart_put_bytes(pox_output, 32);
    8bea:	4640      	mov	r0, r8
    8bec:	2120      	movs	r1, #32
    8bee:	3010      	adds	r0, #16
    8bf0:	47a8      	blx	r5
			uart_puts(" ");
    8bf2:	f64b 00f4 	movw	r0, #47348	; 0xb8f4
    8bf6:	f2c0 0000 	movt	r0, #0
    8bfa:	47a0      	blx	r4
			uart_put_bytes(token, 32);
    8bfc:	2120      	movs	r1, #32
    8bfe:	0038      	movs	r0, r7
    8c00:	47a8      	blx	r5
			uart_puts("[OE]\n");
    8c02:	f64b 0064 	movw	r0, #47204	; 0xb864
    8c06:	3e01      	subs	r6, #1
    8c08:	f2c0 0000 	movt	r0, #0
    8c0c:	47a0      	blx	r4
		for(int i=0; i<10; i++) {
    8c0e:	2e00      	cmp	r6, #0
    8c10:	d1e6      	bne.n	8be0 <single+0x1d8>
		}
		uart_puts("[Over]\n");
    8c12:	f64b 006c 	movw	r0, #47212	; 0xb86c
    8c16:	f2c0 0000 	movt	r0, #0
    8c1a:	47a0      	blx	r4
		uart_puts("failed to parse command: ");
		uart_puts(req);
		uart_puts("\n");
	}
	
}
    8c1c:	b027      	add	sp, #156	; 0x9c
    8c1e:	bc3c      	pop	{r2, r3, r4, r5}
    8c20:	4690      	mov	r8, r2
    8c22:	4699      	mov	r9, r3
    8c24:	46a2      	mov	sl, r4
    8c26:	46ab      	mov	fp, r5
    8c28:	bdf0      	pop	{r4, r5, r6, r7, pc}
	} else if(memcmp(pc.command, "[trn]", pc.command_size) == 0) {
    8c2a:	f64b 0174 	movw	r1, #47220	; 0xb874
    8c2e:	2205      	movs	r2, #5
    8c30:	f2c0 0100 	movt	r1, #0
    8c34:	0028      	movs	r0, r5
    8c36:	47a0      	blx	r4
    8c38:	2800      	cmp	r0, #0
    8c3a:	d000      	beq.n	8c3e <single+0x236>
    8c3c:	e134      	b.n	8ea8 <single+0x4a0>
		uart_puts("[Test] Training: ");
    8c3e:	f64b 007c 	movw	r0, #47228	; 0xb87c
    8c42:	f248 3425 	movw	r4, #33573	; 0x8325
    8c46:	f2c0 0000 	movt	r0, #0
    8c4a:	f2c0 0400 	movt	r4, #0
    8c4e:	47a0      	blx	r4
		uint32_t counter = *((uint32_t*)(req+5));
    8c50:	ab04      	add	r3, sp, #16
    8c52:	469c      	mov	ip, r3
    8c54:	2229      	movs	r2, #41	; 0x29
    8c56:	4462      	add	r2, ip
    8c58:	7853      	ldrb	r3, [r2, #1]
    8c5a:	7811      	ldrb	r1, [r2, #0]
    8c5c:	021b      	lsls	r3, r3, #8
    8c5e:	4319      	orrs	r1, r3
    8c60:	7893      	ldrb	r3, [r2, #2]
    8c62:	78d2      	ldrb	r2, [r2, #3]
    8c64:	041b      	lsls	r3, r3, #16
    8c66:	430b      	orrs	r3, r1
    8c68:	0612      	lsls	r2, r2, #24
    8c6a:	431a      	orrs	r2, r3
    8c6c:	4693      	mov	fp, r2
		uint32_t func = *((uint32_t*)(req+5+4));
    8c6e:	222d      	movs	r2, #45	; 0x2d
    8c70:	4462      	add	r2, ip
    8c72:	7853      	ldrb	r3, [r2, #1]
    8c74:	7811      	ldrb	r1, [r2, #0]
    8c76:	021b      	lsls	r3, r3, #8
    8c78:	4319      	orrs	r1, r3
    8c7a:	7893      	ldrb	r3, [r2, #2]
    8c7c:	78d2      	ldrb	r2, [r2, #3]
    8c7e:	041b      	lsls	r3, r3, #16
    8c80:	430b      	orrs	r3, r1
    8c82:	0612      	lsls	r2, r2, #24
    8c84:	431a      	orrs	r2, r3
		pc.counter = counter;
    8c86:	465b      	mov	r3, fp
		pc.output = tinn.w;
    8c88:	f242 2854 	movw	r8, #8788	; 0x2254
		pc.counter = counter;
    8c8c:	6173      	str	r3, [r6, #20]
		pc.input_size = 12;
    8c8e:	230c      	movs	r3, #12
		pc.output = tinn.w;
    8c90:	f2c2 0800 	movt	r8, #8192	; 0x2000
		pc.input_size = 12;
    8c94:	60b3      	str	r3, [r6, #8]
		pc.output = tinn.w;
    8c96:	4643      	mov	r3, r8
    8c98:	681b      	ldr	r3, [r3, #0]
		float lr = *((float*)(req+5+4*2));
    8c9a:	2131      	movs	r1, #49	; 0x31
		pc.output = tinn.w;
    8c9c:	60f3      	str	r3, [r6, #12]
		pc.output_size = tinn.nw*sizeof(float);
    8c9e:	4643      	mov	r3, r8
    8ca0:	699b      	ldr	r3, [r3, #24]
		pc.addr = func;
    8ca2:	9202      	str	r2, [sp, #8]
		pc.output_size = tinn.nw*sizeof(float);
    8ca4:	4699      	mov	r9, r3
    8ca6:	009b      	lsls	r3, r3, #2
    8ca8:	6133      	str	r3, [r6, #16]
		float lr = *((float*)(req+5+4*2));
    8caa:	4663      	mov	r3, ip
    8cac:	185b      	adds	r3, r3, r1
		pc.addr = func;
    8cae:	6032      	str	r2, [r6, #0]
		float lr = *((float*)(req+5+4*2));
    8cb0:	781a      	ldrb	r2, [r3, #0]
    8cb2:	4663      	mov	r3, ip
    8cb4:	3101      	adds	r1, #1
    8cb6:	185b      	adds	r3, r3, r1
    8cb8:	781b      	ldrb	r3, [r3, #0]
    8cba:	3101      	adds	r1, #1
    8cbc:	021b      	lsls	r3, r3, #8
    8cbe:	431a      	orrs	r2, r3
    8cc0:	4663      	mov	r3, ip
    8cc2:	2034      	movs	r0, #52	; 0x34
    8cc4:	185b      	adds	r3, r3, r1
    8cc6:	4661      	mov	r1, ip
    8cc8:	781b      	ldrb	r3, [r3, #0]
    8cca:	1809      	adds	r1, r1, r0
    8ccc:	041b      	lsls	r3, r3, #16
    8cce:	4313      	orrs	r3, r2
    8cd0:	780a      	ldrb	r2, [r1, #0]
		int numEpochs = *((float*)(req+5+4*3));
    8cd2:	f64a 1a1d 	movw	sl, #43293	; 0xa91d
		float lr = *((float*)(req+5+4*2));
    8cd6:	0612      	lsls	r2, r2, #24
    8cd8:	0011      	movs	r1, r2
    8cda:	4319      	orrs	r1, r3
		int numEpochs = *((float*)(req+5+4*3));
    8cdc:	2335      	movs	r3, #53	; 0x35
    8cde:	4463      	add	r3, ip
    8ce0:	001a      	movs	r2, r3
    8ce2:	7818      	ldrb	r0, [r3, #0]
    8ce4:	785b      	ldrb	r3, [r3, #1]
    8ce6:	f2c0 0a00 	movt	sl, #0
    8cea:	021b      	lsls	r3, r3, #8
    8cec:	4303      	orrs	r3, r0
    8cee:	7890      	ldrb	r0, [r2, #2]
		float lr = *((float*)(req+5+4*2));
    8cf0:	9100      	str	r1, [sp, #0]
		int numEpochs = *((float*)(req+5+4*3));
    8cf2:	0400      	lsls	r0, r0, #16
    8cf4:	4303      	orrs	r3, r0
    8cf6:	78d0      	ldrb	r0, [r2, #3]
    8cf8:	0600      	lsls	r0, r0, #24
    8cfa:	4318      	orrs	r0, r3
    8cfc:	47d0      	blx	sl
		float init_val = *((float*)(req+5+4*4));
    8cfe:	aa04      	add	r2, sp, #16
    8d00:	4694      	mov	ip, r2
    8d02:	2339      	movs	r3, #57	; 0x39
    8d04:	4463      	add	r3, ip
    8d06:	001a      	movs	r2, r3
    8d08:	7819      	ldrb	r1, [r3, #0]
    8d0a:	785b      	ldrb	r3, [r3, #1]
		int numEpochs = *((float*)(req+5+4*3));
    8d0c:	9003      	str	r0, [sp, #12]
		float init_val = *((float*)(req+5+4*4));
    8d0e:	021b      	lsls	r3, r3, #8
    8d10:	4319      	orrs	r1, r3
    8d12:	7893      	ldrb	r3, [r2, #2]
    8d14:	78d2      	ldrb	r2, [r2, #3]
    8d16:	041b      	lsls	r3, r3, #16
    8d18:	0612      	lsls	r2, r2, #24
    8d1a:	430b      	orrs	r3, r1
    8d1c:	0011      	movs	r1, r2
    8d1e:	4319      	orrs	r1, r3
		int numAlloc = tinn.nw*4+tinn.nb*4+HIDDEN_SIZE*4+OUTPUT_SIZE*4;
    8d20:	4643      	mov	r3, r8
		uart_puts("Returning ");
    8d22:	f64b 0090 	movw	r0, #47248	; 0xb890
		int numAlloc = tinn.nw*4+tinn.nb*4+HIDDEN_SIZE*4+OUTPUT_SIZE*4;
    8d26:	695b      	ldr	r3, [r3, #20]
		uart_puts("Returning ");
    8d28:	f2c0 0000 	movt	r0, #0
		int numAlloc = tinn.nw*4+tinn.nb*4+HIDDEN_SIZE*4+OUTPUT_SIZE*4;
    8d2c:	444b      	add	r3, r9
    8d2e:	3309      	adds	r3, #9
    8d30:	009b      	lsls	r3, r3, #2
    8d32:	4699      	mov	r9, r3
		float init_val = *((float*)(req+5+4*4));
    8d34:	9101      	str	r1, [sp, #4]
		uart_puts("Returning ");
    8d36:	47a0      	blx	r4
		uart_put_bytes(req, REQUEST_SIZE);
    8d38:	0028      	movs	r0, r5
    8d3a:	f248 5529 	movw	r5, #34089	; 0x8529
    8d3e:	2139      	movs	r1, #57	; 0x39
    8d40:	f2c0 0500 	movt	r5, #0
    8d44:	47a8      	blx	r5
		uart_puts(", counter=");
    8d46:	f64b 0004 	movw	r0, #47108	; 0xb804
		uart_puti(counter);
    8d4a:	f248 384d 	movw	r8, #33613	; 0x834d
		uart_puts(", counter=");
    8d4e:	f2c0 0000 	movt	r0, #0
		uart_puti(counter);
    8d52:	f2c0 0800 	movt	r8, #0
		uart_puts(", counter=");
    8d56:	47a0      	blx	r4
		uart_puti(counter);
    8d58:	4658      	mov	r0, fp
    8d5a:	47c0      	blx	r8
		uart_puts(", func=");
    8d5c:	f64b 0010 	movw	r0, #47120	; 0xb810
    8d60:	f2c0 0000 	movt	r0, #0
    8d64:	47a0      	blx	r4
		uart_puti(func);
    8d66:	9802      	ldr	r0, [sp, #8]
    8d68:	47c0      	blx	r8
		uart_puts(", lr=");
    8d6a:	f64b 009c 	movw	r0, #47260	; 0xb89c
    8d6e:	f2c0 0000 	movt	r0, #0
    8d72:	47a0      	blx	r4
		uart_puti((int) (lr*10000));
    8d74:	f24a 3ba5 	movw	fp, #41893	; 0xa3a5
    8d78:	f244 0100 	movw	r1, #16384	; 0x4000
    8d7c:	f2c0 0b00 	movt	fp, #0
    8d80:	f2c4 611c 	movt	r1, #17948	; 0x461c
    8d84:	9800      	ldr	r0, [sp, #0]
    8d86:	47d8      	blx	fp
    8d88:	47d0      	blx	sl
    8d8a:	47c0      	blx	r8
		uart_puts(", epoch=");
    8d8c:	f64b 00a4 	movw	r0, #47268	; 0xb8a4
    8d90:	f2c0 0000 	movt	r0, #0
    8d94:	47a0      	blx	r4
		uart_puti(numEpochs);
    8d96:	9803      	ldr	r0, [sp, #12]
    8d98:	47c0      	blx	r8
		uart_puts(", init_val=");
    8d9a:	f64b 00b0 	movw	r0, #47280	; 0xb8b0
    8d9e:	f2c0 0000 	movt	r0, #0
    8da2:	47a0      	blx	r4
		uart_puti((int) (init_val*10000));
    8da4:	f244 0100 	movw	r1, #16384	; 0x4000
    8da8:	9801      	ldr	r0, [sp, #4]
    8daa:	f2c4 611c 	movt	r1, #17948	; 0x461c
    8dae:	47d8      	blx	fp
    8db0:	47d0      	blx	sl
    8db2:	47c0      	blx	r8
		uart_puts(", output size=");
    8db4:	f64b 00bc 	movw	r0, #47292	; 0xb8bc
    8db8:	f2c0 0000 	movt	r0, #0
    8dbc:	47a0      	blx	r4
		uart_puti(pc.output_size);
    8dbe:	6930      	ldr	r0, [r6, #16]
    8dc0:	47c0      	blx	r8
		uart_puts(", alloc size=");
    8dc2:	f64b 00cc 	movw	r0, #47308	; 0xb8cc
    8dc6:	f2c0 0000 	movt	r0, #0
    8dca:	47a0      	blx	r4
		uart_puti(numAlloc);
    8dcc:	4648      	mov	r0, r9
    8dce:	47c0      	blx	r8
		uart_puts(" = done  [/Test] \n");
    8dd0:	f64b 0018 	movw	r0, #47128	; 0xb818
    8dd4:	f2c0 0000 	movt	r0, #0
    8dd8:	47a0      	blx	r4
		memcpy(pox_input, req+5+4*2, 12);
    8dda:	a904      	add	r1, sp, #16
    8ddc:	468c      	mov	ip, r1
    8dde:	2331      	movs	r3, #49	; 0x31
    8de0:	4463      	add	r3, ip
    8de2:	0019      	movs	r1, r3
    8de4:	f64a 532f 	movw	r3, #44335	; 0xad2f
    8de8:	220c      	movs	r2, #12
    8dea:	f2c0 0300 	movt	r3, #0
    8dee:	0038      	movs	r0, r7
    8df0:	4798      	blx	r3
		secure_pox(&pc, token);
    8df2:	aa04      	add	r2, sp, #16
    8df4:	4694      	mov	ip, r2
    8df6:	233d      	movs	r3, #61	; 0x3d
    8df8:	4463      	add	r3, ip
    8dfa:	0019      	movs	r1, r3
    8dfc:	4699      	mov	r9, r3
    8dfe:	f647 4301 	movw	r3, #31745	; 0x7c01
    8e02:	0030      	movs	r0, r6
    8e04:	f2c0 0300 	movt	r3, #0
    8e08:	4798      	blx	r3
		uart_puts("[SStack] ");
    8e0a:	f64b 002c 	movw	r0, #47148	; 0xb82c
    8e0e:	f2c0 0000 	movt	r0, #0
    8e12:	47a0      	blx	r4
		uart_puti(*(uint32_t*)(pc.output));
    8e14:	68f3      	ldr	r3, [r6, #12]
    8e16:	6818      	ldr	r0, [r3, #0]
    8e18:	47c0      	blx	r8
		uart_puts("[\SStack]\n");
    8e1a:	f64b 0038 	movw	r0, #47160	; 0xb838
    8e1e:	f2c0 0000 	movt	r0, #0
    8e22:	47a0      	blx	r4
	for(i=start; i<stack_pointer-0x10; i++) {
    8e24:	f642 4350 	movw	r3, #11344	; 0x2c50
    8e28:	68f9      	ldr	r1, [r7, #12]
    8e2a:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8e2e:	3910      	subs	r1, #16
    8e30:	4299      	cmp	r1, r3
    8e32:	d953      	bls.n	8edc <single+0x4d4>
		if(mem[0] != MAGIC && mem[1] != MAGIC && mem[2] != MAGIC && mem[3] != MAGIC)
    8e34:	781a      	ldrb	r2, [r3, #0]
    8e36:	2ad9      	cmp	r2, #217	; 0xd9
    8e38:	d008      	beq.n	8e4c <single+0x444>
    8e3a:	785a      	ldrb	r2, [r3, #1]
    8e3c:	2ad9      	cmp	r2, #217	; 0xd9
    8e3e:	d005      	beq.n	8e4c <single+0x444>
    8e40:	789a      	ldrb	r2, [r3, #2]
    8e42:	2ad9      	cmp	r2, #217	; 0xd9
    8e44:	d002      	beq.n	8e4c <single+0x444>
    8e46:	78da      	ldrb	r2, [r3, #3]
    8e48:	2ad9      	cmp	r2, #217	; 0xd9
    8e4a:	d102      	bne.n	8e52 <single+0x44a>
	for(i=start; i<stack_pointer-0x10; i++) {
    8e4c:	3301      	adds	r3, #1
    8e4e:	428b      	cmp	r3, r1
    8e50:	d1f0      	bne.n	8e34 <single+0x42c>
    8e52:	f643 67c8 	movw	r7, #16072	; 0x3ec8
    8e56:	f2c2 0700 	movt	r7, #8192	; 0x2000
    8e5a:	1aff      	subs	r7, r7, r3
		uart_puts("[NSStack] =");
    8e5c:	f64b 0044 	movw	r0, #47172	; 0xb844
    8e60:	f2c0 0000 	movt	r0, #0
    8e64:	47a0      	blx	r4
		uart_puti(stack_usage);
    8e66:	0038      	movs	r0, r7
    8e68:	47c0      	blx	r8
		uart_puts("[\NSStack]\n");
    8e6a:	f64b 0050 	movw	r0, #47184	; 0xb850
    8e6e:	f2c0 0000 	movt	r0, #0
    8e72:	47a0      	blx	r4
    8e74:	270a      	movs	r7, #10
			uart_puts("[OS]");
    8e76:	f64b 005c 	movw	r0, #47196	; 0xb85c
    8e7a:	f2c0 0000 	movt	r0, #0
    8e7e:	47a0      	blx	r4
			uart_put_bytes(pc.output, pc.output_size);
    8e80:	6931      	ldr	r1, [r6, #16]
    8e82:	68f0      	ldr	r0, [r6, #12]
    8e84:	47a8      	blx	r5
			uart_puts(" ");
    8e86:	f64b 00f4 	movw	r0, #47348	; 0xb8f4
    8e8a:	f2c0 0000 	movt	r0, #0
    8e8e:	47a0      	blx	r4
			uart_put_bytes(token, 32);
    8e90:	2120      	movs	r1, #32
    8e92:	4648      	mov	r0, r9
    8e94:	47a8      	blx	r5
			uart_puts("[OE]\n");
    8e96:	f64b 0064 	movw	r0, #47204	; 0xb864
    8e9a:	3f01      	subs	r7, #1
    8e9c:	f2c0 0000 	movt	r0, #0
    8ea0:	47a0      	blx	r4
		for(int i=0; i<10; i++) {
    8ea2:	2f00      	cmp	r7, #0
    8ea4:	d1e7      	bne.n	8e76 <single+0x46e>
    8ea6:	e6b4      	b.n	8c12 <single+0x20a>
		uart_puts("failed to parse command: ");
    8ea8:	f64b 00dc 	movw	r0, #47324	; 0xb8dc
    8eac:	f248 3425 	movw	r4, #33573	; 0x8325
    8eb0:	f2c0 0000 	movt	r0, #0
    8eb4:	f2c0 0400 	movt	r4, #0
    8eb8:	47a0      	blx	r4
		uart_puts(req);
    8eba:	0028      	movs	r0, r5
    8ebc:	47a0      	blx	r4
		uart_puts("\n");
    8ebe:	f64b 1054 	movw	r0, #47444	; 0xb954
    8ec2:	f2c0 0000 	movt	r0, #0
    8ec6:	47a0      	blx	r4
}
    8ec8:	e6a8      	b.n	8c1c <single+0x214>
    8eca:	f643 66c8 	movw	r6, #16072	; 0x3ec8
    8ece:	f2c2 0600 	movt	r6, #8192	; 0x2000
    8ed2:	1af6      	subs	r6, r6, r3
    8ed4:	e675      	b.n	8bc2 <single+0x1ba>
	for(i=start; i<stack_pointer-0x10; i++) {
    8ed6:	f241 2678 	movw	r6, #4728	; 0x1278
    8eda:	e672      	b.n	8bc2 <single+0x1ba>
    8edc:	f241 2778 	movw	r7, #4728	; 0x1278
    8ee0:	e7bc      	b.n	8e5c <single+0x454>
    8ee2:	46c0      	nop			; (mov r8, r8)

00008ee4 <main>:


/* Non-Secure main() */
int main(void)
{
    8ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
    8ee6:	b08b      	sub	sp, #44	; 0x2c
	asm volatile ("mov %0, sp\n\t"
    8ee8:	466b      	mov	r3, sp
    8eea:	f242 2208 	movw	r2, #8712	; 0x2208
    8eee:	f2c2 0200 	movt	r2, #8192	; 0x2000
    8ef2:	60d3      	str	r3, [r2, #12]
	for(uint32_t i=stack_pointer-0x10; i>=STACK_BASE; i--) {
    8ef4:	0019      	movs	r1, r3
    8ef6:	f642 22c7 	movw	r2, #10951	; 0x2ac7
    8efa:	3910      	subs	r1, #16
    8efc:	f2c2 0200 	movt	r2, #8192	; 0x2000
    8f00:	4291      	cmp	r1, r2
    8f02:	d97a      	bls.n	8ffa <main+0x116>
		mem[0] = MAGIC;
    8f04:	f24d 5229 	movw	r2, #54569	; 0xd529
    8f08:	f64a 5441 	movw	r4, #44353	; 0xad41
    8f0c:	f6cd 72ff 	movt	r2, #57343	; 0xdfff
    8f10:	189a      	adds	r2, r3, r2
    8f12:	3b0f      	subs	r3, #15
    8f14:	1a98      	subs	r0, r3, r2
    8f16:	21d9      	movs	r1, #217	; 0xd9
    8f18:	f2c0 0400 	movt	r4, #0
    8f1c:	47a0      	blx	r4
	fill_stack();
	#endif
	//__disable_irq();
	//timer_init(PERIOD_1S);
	
	uart_init(115200);
    8f1e:	20e1      	movs	r0, #225	; 0xe1
    8f20:	f248 2321 	movw	r3, #33313	; 0x8221
    8f24:	0240      	lsls	r0, r0, #9
    8f26:	f2c0 0300 	movt	r3, #0
    8f2a:	4798      	blx	r3
	uart_puts(" A lot of hellooooo");
    8f2c:	f248 3525 	movw	r5, #33573	; 0x8325
    8f30:	f64b 00f8 	movw	r0, #47352	; 0xb8f8
    8f34:	f2c0 0500 	movt	r5, #0
    8f38:	f2c0 0000 	movt	r0, #0
    8f3c:	47a8      	blx	r5
	uart_puts(" wrapper_init at: ");
    8f3e:	f64b 100c 	movw	r0, #47372	; 0xb90c
    8f42:	f2c0 0000 	movt	r0, #0
    8f46:	47a8      	blx	r5
	uart_puti(&wrapper_init);
    8f48:	f248 364d 	movw	r6, #33613	; 0x834d
    8f4c:	f248 5051 	movw	r0, #34129	; 0x8551
    8f50:	f2c0 0600 	movt	r6, #0
    8f54:	f2c0 0000 	movt	r0, #0
    8f58:	47b0      	blx	r6
	uart_puts(" wrapper_collect at: ");
    8f5a:	f64b 1020 	movw	r0, #47392	; 0xb920
    8f5e:	f2c0 0000 	movt	r0, #0
    8f62:	47a8      	blx	r5
	uart_puti(&wrapper_collect);
    8f64:	f248 6051 	movw	r0, #34385	; 0x8651
    8f68:	f2c0 0000 	movt	r0, #0
    8f6c:	47b0      	blx	r6
	uart_puts(" wrapper_train at: ");
    8f6e:	f64b 1038 	movw	r0, #47416	; 0xb938
    8f72:	f2c0 0000 	movt	r0, #0
    8f76:	47a8      	blx	r5
	uart_puti(&wrapper_train);
    8f78:	f648 10b5 	movw	r0, #35253	; 0x89b5
    8f7c:	f2c0 0000 	movt	r0, #0
    8f80:	47b0      	blx	r6
	uart_puts("[Start] \n");
    8f82:	f64b 104c 	movw	r0, #47436	; 0xb94c
    8f86:	f2c0 0000 	movt	r0, #0
    8f8a:	47a8      	blx	r5
	
	//h();
	
	memset(&s, 0, sizeof(State));
    8f8c:	f242 207c 	movw	r0, #8828	; 0x227c

	
	tinn = xtbuild(FEATURE_SIZE, HIDDEN_SIZE, OUTPUT_SIZE);
    8f90:	f242 2654 	movw	r6, #8788	; 0x2254
    8f94:	f249 474d 	movw	r7, #37965	; 0x944d
	memset(&s, 0, sizeof(State));
    8f98:	f240 6244 	movw	r2, #1604	; 0x644
    8f9c:	2100      	movs	r1, #0
    8f9e:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8fa2:	47a0      	blx	r4
	tinn = xtbuild(FEATURE_SIZE, HIDDEN_SIZE, OUTPUT_SIZE);
    8fa4:	f2c2 0600 	movt	r6, #8192	; 0x2000
    8fa8:	2301      	movs	r3, #1
    8faa:	2118      	movs	r1, #24
    8fac:	4668      	mov	r0, sp
    8fae:	2208      	movs	r2, #8
    8fb0:	f2c0 0700 	movt	r7, #0
    8fb4:	47b8      	blx	r7
    8fb6:	466c      	mov	r4, sp
    8fb8:	0032      	movs	r2, r6
    8fba:	cc0b      	ldmia	r4!, {r0, r1, r3}
    8fbc:	c20b      	stmia	r2!, {r0, r1, r3}
    8fbe:	cc0b      	ldmia	r4!, {r0, r1, r3}
    8fc0:	c20b      	stmia	r2!, {r0, r1, r3}
    8fc2:	cc0b      	ldmia	r4!, {r0, r1, r3}
    8fc4:	c20b      	stmia	r2!, {r0, r1, r3}
    8fc6:	f648 2609 	movw	r6, #35337	; 0x8a09
    8fca:	6823      	ldr	r3, [r4, #0]
    8fcc:	f248 44b5 	movw	r4, #33973	; 0x84b5
    8fd0:	6013      	str	r3, [r2, #0]
    8fd2:	f2c0 0600 	movt	r6, #0
    8fd6:	f2c0 0400 	movt	r4, #0
	execute(0.1f, iterations, rate);
	uart_puti(sizeof(State));
	return;*/
	
	for(;;) {
		single();
    8fda:	47b0      	blx	r6
		char r = uart_getc();
    8fdc:	47a0      	blx	r4
		if(r!=c1) continue;
    8fde:	284f      	cmp	r0, #79	; 0x4f
    8fe0:	d1fc      	bne.n	8fdc <main+0xf8>
		r = uart_getc();
    8fe2:	47a0      	blx	r4
		if(r!=c2) continue;
    8fe4:	2841      	cmp	r0, #65	; 0x41
    8fe6:	d1f9      	bne.n	8fdc <main+0xf8>
		r = uart_getc();
    8fe8:	47a0      	blx	r4
		if(r!=c3) continue;
    8fea:	284b      	cmp	r0, #75	; 0x4b
    8fec:	d1f6      	bne.n	8fdc <main+0xf8>
		
		read_until('O', 'A', 'K');
		uart_puts("[Next]\n");
    8fee:	f64b 1058 	movw	r0, #47448	; 0xb958
    8ff2:	f2c0 0000 	movt	r0, #0
    8ff6:	47a8      	blx	r5
		single();
    8ff8:	e7ef      	b.n	8fda <main+0xf6>
    8ffa:	f64a 5441 	movw	r4, #44353	; 0xad41
    8ffe:	f2c0 0400 	movt	r4, #0
    9002:	e78c      	b.n	8f1e <main+0x3a>

00009004 <fprop.isra.1>:
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    }
}

// Performs forward propagation.
static void fprop(Tinn t, const float* const in)
    9004:	b5f0      	push	{r4, r5, r6, r7, lr}
    9006:	46de      	mov	lr, fp
    9008:	4657      	mov	r7, sl
    900a:	464e      	mov	r6, r9
    900c:	4645      	mov	r5, r8
    900e:	b5e0      	push	{r5, r6, r7, lr}
    9010:	b087      	sub	sp, #28
    9012:	469a      	mov	sl, r3
    9014:	9b14      	ldr	r3, [sp, #80]	; 0x50
    9016:	9104      	str	r1, [sp, #16]
    9018:	469b      	mov	fp, r3
{
    // Calculate hidden layer neuron values.
    for(int i = 0; i < t.nhid; i++)
    901a:	9b12      	ldr	r3, [sp, #72]	; 0x48
static void fprop(Tinn t, const float* const in)
    901c:	9202      	str	r2, [sp, #8]
    for(int i = 0; i < t.nhid; i++)
    901e:	2b00      	cmp	r3, #0
    9020:	dd4d      	ble.n	90be <fprop.isra.1+0xba>
    9022:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9024:	f649 45bd 	movw	r5, #40125	; 0x9cbd
    9028:	009b      	lsls	r3, r3, #2
    902a:	4698      	mov	r8, r3
    902c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    902e:	f24a 39a5 	movw	r9, #41893	; 0xa3a5
    9032:	009b      	lsls	r3, r3, #2
    9034:	4453      	add	r3, sl
    9036:	9303      	str	r3, [sp, #12]
    9038:	f249 43c9 	movw	r3, #38089	; 0x94c9
    903c:	f2c0 0300 	movt	r3, #0
    9040:	9300      	str	r3, [sp, #0]
    9042:	f649 73d5 	movw	r3, #40917	; 0x9fd5
    9046:	f2c0 0300 	movt	r3, #0
    904a:	9301      	str	r3, [sp, #4]
    904c:	4653      	mov	r3, sl
    904e:	0007      	movs	r7, r0
    9050:	f2c0 0500 	movt	r5, #0
    9054:	f2c0 0900 	movt	r9, #0
    9058:	9305      	str	r3, [sp, #20]
    {
        float sum = 0.0f;
        for(int j = 0; j < t.nips; j++)
    905a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    905c:	2600      	movs	r6, #0
    905e:	2b00      	cmp	r3, #0
    9060:	dd12      	ble.n	9088 <fprop.isra.1+0x84>
    9062:	002b      	movs	r3, r5
    9064:	2400      	movs	r4, #0
    9066:	4645      	mov	r5, r8
    9068:	2600      	movs	r6, #0
    906a:	4698      	mov	r8, r3
            sum += in[j] * t.w[i * t.nips + j];
    906c:	465b      	mov	r3, fp
    906e:	5939      	ldr	r1, [r7, r4]
    9070:	5918      	ldr	r0, [r3, r4]
    9072:	47c8      	blx	r9
    9074:	1c01      	adds	r1, r0, #0
    9076:	1c30      	adds	r0, r6, #0
    9078:	47c0      	blx	r8
    907a:	3404      	adds	r4, #4
    907c:	1c06      	adds	r6, r0, #0
        for(int j = 0; j < t.nips; j++)
    907e:	42a5      	cmp	r5, r4
    9080:	d1f4      	bne.n	906c <fprop.isra.1+0x68>
    9082:	4643      	mov	r3, r8
    9084:	46a8      	mov	r8, r5
    9086:	001d      	movs	r5, r3
        t.h[i] = act(sum + t.b[0]);
    9088:	9b02      	ldr	r3, [sp, #8]
    908a:	1c30      	adds	r0, r6, #0
    908c:	6819      	ldr	r1, [r3, #0]
    908e:	47a8      	blx	r5
    return 1.0f / (1.0f + expf(-a));
    9090:	2380      	movs	r3, #128	; 0x80
    9092:	061b      	lsls	r3, r3, #24
    9094:	469c      	mov	ip, r3
    9096:	9b00      	ldr	r3, [sp, #0]
    9098:	4460      	add	r0, ip
    909a:	4798      	blx	r3
    909c:	21fe      	movs	r1, #254	; 0xfe
    909e:	0589      	lsls	r1, r1, #22
    90a0:	47a8      	blx	r5
    90a2:	1c01      	adds	r1, r0, #0
    90a4:	20fe      	movs	r0, #254	; 0xfe
    90a6:	9b01      	ldr	r3, [sp, #4]
    90a8:	0580      	lsls	r0, r0, #22
    90aa:	4798      	blx	r3
        t.h[i] = act(sum + t.b[0]);
    90ac:	4653      	mov	r3, sl
    90ae:	c301      	stmia	r3!, {r0}
    90b0:	469a      	mov	sl, r3
    for(int i = 0; i < t.nhid; i++)
    90b2:	9b03      	ldr	r3, [sp, #12]
    90b4:	4447      	add	r7, r8
    90b6:	4553      	cmp	r3, sl
    90b8:	d1cf      	bne.n	905a <fprop.isra.1+0x56>
    90ba:	9b05      	ldr	r3, [sp, #20]
    90bc:	469a      	mov	sl, r3
    }
    // Calculate output layer neuron values.
    for(int i = 0; i < t.nops; i++)
    90be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    90c0:	2b00      	cmp	r3, #0
    90c2:	dd4b      	ble.n	915c <fprop.isra.1+0x158>
    90c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    90c6:	f649 45bd 	movw	r5, #40125	; 0x9cbd
    90ca:	469b      	mov	fp, r3
    90cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    90ce:	f24a 39a5 	movw	r9, #41893	; 0xa3a5
    90d2:	009b      	lsls	r3, r3, #2
    90d4:	4698      	mov	r8, r3
    90d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    90d8:	9f04      	ldr	r7, [sp, #16]
    90da:	009b      	lsls	r3, r3, #2
    90dc:	445b      	add	r3, fp
    90de:	9303      	str	r3, [sp, #12]
    90e0:	f249 43c9 	movw	r3, #38089	; 0x94c9
    90e4:	f2c0 0300 	movt	r3, #0
    90e8:	9300      	str	r3, [sp, #0]
    90ea:	f649 73d5 	movw	r3, #40917	; 0x9fd5
    90ee:	f2c0 0300 	movt	r3, #0
    90f2:	f2c0 0500 	movt	r5, #0
    90f6:	9301      	str	r3, [sp, #4]
    90f8:	f2c0 0900 	movt	r9, #0
    {
        float sum = 0.0f;
        for(int j = 0; j < t.nhid; j++)
    90fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    90fe:	2600      	movs	r6, #0
    9100:	2b00      	cmp	r3, #0
    9102:	dd12      	ble.n	912a <fprop.isra.1+0x126>
    9104:	002b      	movs	r3, r5
    9106:	2400      	movs	r4, #0
    9108:	4645      	mov	r5, r8
    910a:	2600      	movs	r6, #0
    910c:	4698      	mov	r8, r3
            sum += t.h[j] * t.x[i * t.nhid + j];
    910e:	4653      	mov	r3, sl
    9110:	5939      	ldr	r1, [r7, r4]
    9112:	5918      	ldr	r0, [r3, r4]
    9114:	47c8      	blx	r9
    9116:	1c01      	adds	r1, r0, #0
    9118:	1c30      	adds	r0, r6, #0
    911a:	47c0      	blx	r8
    911c:	3404      	adds	r4, #4
    911e:	1c06      	adds	r6, r0, #0
        for(int j = 0; j < t.nhid; j++)
    9120:	42a5      	cmp	r5, r4
    9122:	d1f4      	bne.n	910e <fprop.isra.1+0x10a>
    9124:	4643      	mov	r3, r8
    9126:	46a8      	mov	r8, r5
    9128:	001d      	movs	r5, r3
        t.o[i] = act(sum + t.b[1]);
    912a:	9b02      	ldr	r3, [sp, #8]
    912c:	1c30      	adds	r0, r6, #0
    912e:	6859      	ldr	r1, [r3, #4]
    9130:	47a8      	blx	r5
    return 1.0f / (1.0f + expf(-a));
    9132:	2380      	movs	r3, #128	; 0x80
    9134:	061b      	lsls	r3, r3, #24
    9136:	469c      	mov	ip, r3
    9138:	9b00      	ldr	r3, [sp, #0]
    913a:	4460      	add	r0, ip
    913c:	4798      	blx	r3
    913e:	21fe      	movs	r1, #254	; 0xfe
    9140:	0589      	lsls	r1, r1, #22
    9142:	47a8      	blx	r5
    9144:	1c01      	adds	r1, r0, #0
    9146:	20fe      	movs	r0, #254	; 0xfe
    9148:	9b01      	ldr	r3, [sp, #4]
    914a:	0580      	lsls	r0, r0, #22
    914c:	4798      	blx	r3
        t.o[i] = act(sum + t.b[1]);
    914e:	465b      	mov	r3, fp
    9150:	c301      	stmia	r3!, {r0}
    9152:	469b      	mov	fp, r3
    for(int i = 0; i < t.nops; i++)
    9154:	9b03      	ldr	r3, [sp, #12]
    9156:	4447      	add	r7, r8
    9158:	455b      	cmp	r3, fp
    915a:	d1cf      	bne.n	90fc <fprop.isra.1+0xf8>
    }
}
    915c:	b007      	add	sp, #28
    915e:	bc3c      	pop	{r2, r3, r4, r5}
    9160:	4690      	mov	r8, r2
    9162:	4699      	mov	r9, r3
    9164:	46a2      	mov	sl, r4
    9166:	46ab      	mov	fp, r5
    9168:	bdf0      	pop	{r4, r5, r6, r7, pc}
    916a:	46c0      	nop			; (mov r8, r8)

0000916c <setWeight>:
    for(int i = 0; i < t.nb; i++) t.b[i] = frand() - 0.5f;
}


void setWeight(Tinn t, float init_val)
{
    916c:	b084      	sub	sp, #16
    916e:	b5f0      	push	{r4, r5, r6, r7, lr}
    9170:	46de      	mov	lr, fp
    9172:	464e      	mov	r6, r9
    9174:	4657      	mov	r7, sl
    9176:	4645      	mov	r5, r8
    9178:	b5e0      	push	{r5, r6, r7, lr}
    917a:	b083      	sub	sp, #12
    917c:	930f      	str	r3, [sp, #60]	; 0x3c
    917e:	9b16      	ldr	r3, [sp, #88]	; 0x58
    9180:	900c      	str	r0, [sp, #48]	; 0x30
    9182:	4699      	mov	r9, r3
    9184:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9186:	910d      	str	r1, [sp, #52]	; 0x34
    9188:	9301      	str	r3, [sp, #4]
    918a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    918c:	920e      	str	r2, [sp, #56]	; 0x38
    918e:	469b      	mov	fp, r3
	for(int i = 0; i < t.nw; i++) t.w[i] = frand() - init_val;
    9190:	2b00      	cmp	r3, #0
    9192:	dd1f      	ble.n	91d4 <setWeight+0x68>
    9194:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9196:	f24b 18b5 	movw	r8, #45493	; 0xb1b5
    919a:	f64a 1759 	movw	r7, #43353	; 0xa959
    919e:	f24a 36a5 	movw	r6, #41893	; 0xa3a5
    91a2:	f24a 55fd 	movw	r5, #42493	; 0xa5fd
    91a6:	469a      	mov	sl, r3
    91a8:	2400      	movs	r4, #0
    91aa:	f2c0 0800 	movt	r8, #0
    91ae:	f2c0 0700 	movt	r7, #0
    91b2:	f2c0 0600 	movt	r6, #0
    91b6:	f2c0 0500 	movt	r5, #0
    return rand() / (float) RAND_MAX;
    91ba:	47c0      	blx	r8
    91bc:	47b8      	blx	r7
    91be:	21c0      	movs	r1, #192	; 0xc0
    91c0:	0589      	lsls	r1, r1, #22
    91c2:	47b0      	blx	r6
	for(int i = 0; i < t.nw; i++) t.w[i] = frand() - init_val;
    91c4:	4649      	mov	r1, r9
    91c6:	47a8      	blx	r5
    91c8:	4653      	mov	r3, sl
    91ca:	3401      	adds	r4, #1
    91cc:	c301      	stmia	r3!, {r0}
    91ce:	469a      	mov	sl, r3
    91d0:	455c      	cmp	r4, fp
    91d2:	d1f2      	bne.n	91ba <setWeight+0x4e>
	for(int i = 0; i < t.nb; i++) t.b[i] = frand() - init_val;
    91d4:	9b01      	ldr	r3, [sp, #4]
    91d6:	2b00      	cmp	r3, #0
    91d8:	dd20      	ble.n	921c <setWeight+0xb0>
    91da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    91dc:	f24b 18b5 	movw	r8, #45493	; 0xb1b5
    91e0:	f64a 1759 	movw	r7, #43353	; 0xa959
    91e4:	f24a 36a5 	movw	r6, #41893	; 0xa3a5
    91e8:	f24a 55fd 	movw	r5, #42493	; 0xa5fd
    91ec:	469a      	mov	sl, r3
    91ee:	2400      	movs	r4, #0
    91f0:	f2c0 0800 	movt	r8, #0
    91f4:	f2c0 0700 	movt	r7, #0
    91f8:	f2c0 0600 	movt	r6, #0
    91fc:	f2c0 0500 	movt	r5, #0
    return rand() / (float) RAND_MAX;
    9200:	47c0      	blx	r8
    9202:	47b8      	blx	r7
    9204:	21c0      	movs	r1, #192	; 0xc0
    9206:	0589      	lsls	r1, r1, #22
    9208:	47b0      	blx	r6
	for(int i = 0; i < t.nb; i++) t.b[i] = frand() - init_val;
    920a:	4649      	mov	r1, r9
    920c:	47a8      	blx	r5
    920e:	4653      	mov	r3, sl
    9210:	c301      	stmia	r3!, {r0}
    9212:	469a      	mov	sl, r3
    9214:	9b01      	ldr	r3, [sp, #4]
    9216:	3401      	adds	r4, #1
    9218:	429c      	cmp	r4, r3
    921a:	d1f1      	bne.n	9200 <setWeight+0x94>
}
    921c:	b003      	add	sp, #12
    921e:	bc3c      	pop	{r2, r3, r4, r5}
    9220:	4690      	mov	r8, r2
    9222:	4699      	mov	r9, r3
    9224:	46a2      	mov	sl, r4
    9226:	46ab      	mov	fp, r5
    9228:	bcf0      	pop	{r4, r5, r6, r7}
    922a:	bc08      	pop	{r3}
    922c:	b004      	add	sp, #16
    922e:	4718      	bx	r3

00009230 <xtpredict>:

// Returns an output prediction given an input.
float* xtpredict(Tinn t, const float* const in)
{
    9230:	b084      	sub	sp, #16
    9232:	b530      	push	{r4, r5, lr}
    9234:	b087      	sub	sp, #28
    9236:	0004      	movs	r4, r0
    9238:	900a      	str	r0, [sp, #40]	; 0x28
    923a:	910b      	str	r1, [sp, #44]	; 0x2c
    923c:	0008      	movs	r0, r1
    923e:	0011      	movs	r1, r2
    9240:	920c      	str	r2, [sp, #48]	; 0x30
    fprop(t, in);
    9242:	000a      	movs	r2, r1
    9244:	0001      	movs	r1, r0
    9246:	0020      	movs	r0, r4
    9248:	9c14      	ldr	r4, [sp, #80]	; 0x50
    924a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
    924c:	9404      	str	r4, [sp, #16]
    924e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    9250:	9500      	str	r5, [sp, #0]
    9252:	9403      	str	r4, [sp, #12]
    9254:	9c12      	ldr	r4, [sp, #72]	; 0x48
{
    9256:	930d      	str	r3, [sp, #52]	; 0x34
    fprop(t, in);
    9258:	9402      	str	r4, [sp, #8]
    925a:	9c11      	ldr	r4, [sp, #68]	; 0x44
    925c:	9401      	str	r4, [sp, #4]
    925e:	f249 0405 	movw	r4, #36869	; 0x9005
    9262:	f2c0 0400 	movt	r4, #0
    9266:	47a0      	blx	r4
    return t.o;
}
    9268:	0028      	movs	r0, r5
    926a:	b007      	add	sp, #28
    926c:	bc30      	pop	{r4, r5}
    926e:	bc08      	pop	{r3}
    9270:	b004      	add	sp, #16
    9272:	4718      	bx	r3

00009274 <xttrain>:

// Trains a tinn with an input and target output with a learning rate. Returns target to output error.
float xttrain(Tinn t, const float* const in, const float* const tg, float rate)
{
    9274:	b084      	sub	sp, #16
    9276:	b5f0      	push	{r4, r5, r6, r7, lr}
    9278:	46de      	mov	lr, fp
    927a:	4657      	mov	r7, sl
    927c:	464e      	mov	r6, r9
    927e:	4645      	mov	r5, r8
    9280:	b5e0      	push	{r5, r6, r7, lr}
    9282:	b093      	sub	sp, #76	; 0x4c
    9284:	001e      	movs	r6, r3
    9286:	931f      	str	r3, [sp, #124]	; 0x7c
    9288:	9b20      	ldr	r3, [sp, #128]	; 0x80
    928a:	0005      	movs	r5, r0
    928c:	901c      	str	r0, [sp, #112]	; 0x70
    928e:	9308      	str	r3, [sp, #32]
    9290:	0018      	movs	r0, r3
    9292:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    9294:	000c      	movs	r4, r1
    9296:	001f      	movs	r7, r3
    9298:	911d      	str	r1, [sp, #116]	; 0x74
    929a:	0011      	movs	r1, r2
    fprop(t, in);
    929c:	9701      	str	r7, [sp, #4]
    929e:	f249 0705 	movw	r7, #36869	; 0x9005
{
    92a2:	921e      	str	r2, [sp, #120]	; 0x78
    92a4:	9a25      	ldr	r2, [sp, #148]	; 0x94
    92a6:	9311      	str	r3, [sp, #68]	; 0x44
    92a8:	920f      	str	r2, [sp, #60]	; 0x3c
    fprop(t, in);
    92aa:	000a      	movs	r2, r1
    92ac:	9926      	ldr	r1, [sp, #152]	; 0x98
    92ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
    92b0:	9104      	str	r1, [sp, #16]
    92b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
    92b4:	9310      	str	r3, [sp, #64]	; 0x40
    92b6:	9103      	str	r1, [sp, #12]
    92b8:	9302      	str	r3, [sp, #8]
    92ba:	9000      	str	r0, [sp, #0]
    92bc:	0033      	movs	r3, r6
    92be:	0021      	movs	r1, r4
    92c0:	0028      	movs	r0, r5
    92c2:	f2c0 0700 	movt	r7, #0
    92c6:	47b8      	blx	r7
    for(int i = 0; i < t.nhid; i++)
    92c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    92ca:	2b00      	cmp	r3, #0
    92cc:	dc00      	bgt.n	92d0 <xttrain+0x5c>
    92ce:	e086      	b.n	93de <xttrain+0x16a>
    92d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    92d2:	46b2      	mov	sl, r6
    92d4:	009b      	lsls	r3, r3, #2
    92d6:	9307      	str	r3, [sp, #28]
    92d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    92da:	940c      	str	r4, [sp, #48]	; 0x30
    92dc:	009b      	lsls	r3, r3, #2
    92de:	930a      	str	r3, [sp, #40]	; 0x28
    92e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    92e2:	f24a 56fd 	movw	r6, #42493	; 0xa5fd
    92e6:	009b      	lsls	r3, r3, #2
    92e8:	9309      	str	r3, [sp, #36]	; 0x24
    92ea:	2300      	movs	r3, #0
    92ec:	930e      	str	r3, [sp, #56]	; 0x38
    92ee:	f649 43bd 	movw	r3, #40125	; 0x9cbd
    92f2:	f24a 34a5 	movw	r4, #41893	; 0xa3a5
    92f6:	f2c0 0300 	movt	r3, #0
    92fa:	950d      	str	r5, [sp, #52]	; 0x34
    92fc:	f2c0 0600 	movt	r6, #0
    9300:	f2c0 0400 	movt	r4, #0
    9304:	930b      	str	r3, [sp, #44]	; 0x2c
        for(int j = 0; j < t.nops; j++)
    9306:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9308:	2b00      	cmp	r3, #0
    930a:	dc00      	bgt.n	930e <xttrain+0x9a>
    930c:	e099      	b.n	9442 <xttrain+0x1ce>
    930e:	2300      	movs	r3, #0
    9310:	2500      	movs	r5, #0
    9312:	46d1      	mov	r9, sl
    9314:	9f0c      	ldr	r7, [sp, #48]	; 0x30
    9316:	9306      	str	r3, [sp, #24]
            const float a = pderr(t.o[j], tg[j]);
    9318:	9b08      	ldr	r3, [sp, #32]
    931a:	595b      	ldr	r3, [r3, r5]
    931c:	4698      	mov	r8, r3
    return a - b;
    931e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
    9320:	4640      	mov	r0, r8
    9322:	5959      	ldr	r1, [r3, r5]
    9324:	47b0      	blx	r6
    9326:	4683      	mov	fp, r0
    return a * (1.0f - a);
    9328:	20fe      	movs	r0, #254	; 0xfe
    932a:	4641      	mov	r1, r8
    932c:	0580      	lsls	r0, r0, #22
    932e:	47b0      	blx	r6
    9330:	4641      	mov	r1, r8
    9332:	47a0      	blx	r4
    9334:	4682      	mov	sl, r0
            sum += a * b * t.x[j * t.nhid + i];
    9336:	683b      	ldr	r3, [r7, #0]
    9338:	4658      	mov	r0, fp
    933a:	1c19      	adds	r1, r3, #0
    933c:	4698      	mov	r8, r3
    933e:	47a0      	blx	r4
    9340:	4651      	mov	r1, sl
    9342:	47a0      	blx	r4
    9344:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9346:	1c01      	adds	r1, r0, #0
    9348:	9806      	ldr	r0, [sp, #24]
    934a:	4798      	blx	r3
            t.x[j * t.nhid + i] -= rate * a * b * t.h[i];
    934c:	464b      	mov	r3, r9
            sum += a * b * t.x[j * t.nhid + i];
    934e:	9006      	str	r0, [sp, #24]
            t.x[j * t.nhid + i] -= rate * a * b * t.h[i];
    9350:	6819      	ldr	r1, [r3, #0]
    9352:	9828      	ldr	r0, [sp, #160]	; 0xa0
    9354:	47a0      	blx	r4
    9356:	4659      	mov	r1, fp
    9358:	47a0      	blx	r4
    935a:	4651      	mov	r1, sl
    935c:	47a0      	blx	r4
    935e:	1c01      	adds	r1, r0, #0
    9360:	4640      	mov	r0, r8
    9362:	47b0      	blx	r6
    9364:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9366:	3504      	adds	r5, #4
    9368:	469c      	mov	ip, r3
        for(int j = 0; j < t.nops; j++)
    936a:	9b09      	ldr	r3, [sp, #36]	; 0x24
            t.x[j * t.nhid + i] -= rate * a * b * t.h[i];
    936c:	6038      	str	r0, [r7, #0]
    936e:	4467      	add	r7, ip
        for(int j = 0; j < t.nops; j++)
    9370:	42ab      	cmp	r3, r5
    9372:	d1d1      	bne.n	9318 <xttrain+0xa4>
    9374:	9b06      	ldr	r3, [sp, #24]
    9376:	46ca      	mov	sl, r9
    9378:	4699      	mov	r9, r3
        for(int j = 0; j < t.nips; j++)
    937a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    937c:	2500      	movs	r5, #0
    937e:	2b00      	cmp	r3, #0
    9380:	dd1c      	ble.n	93bc <xttrain+0x148>
    9382:	46b0      	mov	r8, r6
    9384:	9e0d      	ldr	r6, [sp, #52]	; 0x34
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    9386:	4653      	mov	r3, sl
    return a * (1.0f - a);
    9388:	20fe      	movs	r0, #254	; 0xfe
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    938a:	681f      	ldr	r7, [r3, #0]
    return a * (1.0f - a);
    938c:	0580      	lsls	r0, r0, #22
    938e:	1c39      	adds	r1, r7, #0
    9390:	47c0      	blx	r8
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    9392:	1c39      	adds	r1, r7, #0
    return a * (1.0f - a);
    9394:	4683      	mov	fp, r0
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    9396:	9828      	ldr	r0, [sp, #160]	; 0xa0
    9398:	47a0      	blx	r4
    939a:	1c01      	adds	r1, r0, #0
    939c:	4658      	mov	r0, fp
    939e:	47a0      	blx	r4
    93a0:	4649      	mov	r1, r9
    93a2:	47a0      	blx	r4
    93a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
    93a6:	5959      	ldr	r1, [r3, r5]
    93a8:	47a0      	blx	r4
    93aa:	1c01      	adds	r1, r0, #0
    93ac:	5970      	ldr	r0, [r6, r5]
    93ae:	47c0      	blx	r8
        for(int j = 0; j < t.nips; j++)
    93b0:	9b07      	ldr	r3, [sp, #28]
            t.w[i * t.nips + j] -= rate * sum * pdact(t.h[i]) * in[j];
    93b2:	5170      	str	r0, [r6, r5]
    93b4:	3504      	adds	r5, #4
        for(int j = 0; j < t.nips; j++)
    93b6:	42ab      	cmp	r3, r5
    93b8:	d1e5      	bne.n	9386 <xttrain+0x112>
    93ba:	4646      	mov	r6, r8
    93bc:	f240 0c04 	movw	ip, #4
    93c0:	9907      	ldr	r1, [sp, #28]
    93c2:	44e2      	add	sl, ip
    93c4:	468c      	mov	ip, r1
    93c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    for(int i = 0; i < t.nhid; i++)
    93c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    93ca:	4462      	add	r2, ip
    93cc:	920d      	str	r2, [sp, #52]	; 0x34
    93ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    93d0:	3301      	adds	r3, #1
    93d2:	3204      	adds	r2, #4
    93d4:	920c      	str	r2, [sp, #48]	; 0x30
    93d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
    93d8:	930e      	str	r3, [sp, #56]	; 0x38
    93da:	429a      	cmp	r2, r3
    93dc:	d193      	bne.n	9306 <xttrain+0x92>
    for(int i = 0; i < size; i++)
    93de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    93e0:	2b00      	cmp	r3, #0
    93e2:	dd31      	ble.n	9448 <xttrain+0x1d4>
    93e4:	009b      	lsls	r3, r3, #2
    93e6:	f649 47bd 	movw	r7, #40125	; 0x9cbd
    93ea:	4699      	mov	r9, r3
    93ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
    93ee:	f24a 58fd 	movw	r8, #42493	; 0xa5fd
    93f2:	f24a 35a5 	movw	r5, #41893	; 0xa3a5
    93f6:	2400      	movs	r4, #0
    93f8:	2600      	movs	r6, #0
    93fa:	469a      	mov	sl, r3
    93fc:	f2c0 0700 	movt	r7, #0
    9400:	46bb      	mov	fp, r7
    9402:	9f08      	ldr	r7, [sp, #32]
    9404:	f2c0 0800 	movt	r8, #0
    9408:	f2c0 0500 	movt	r5, #0
    return 0.5f * (a - b) * (a - b);
    940c:	4653      	mov	r3, sl
    940e:	5939      	ldr	r1, [r7, r4]
    9410:	5918      	ldr	r0, [r3, r4]
    9412:	47c0      	blx	r8
    9414:	1c01      	adds	r1, r0, #0
    9416:	47a8      	blx	r5
    9418:	21fc      	movs	r1, #252	; 0xfc
    941a:	0589      	lsls	r1, r1, #22
    941c:	47a8      	blx	r5
    941e:	1c01      	adds	r1, r0, #0
        sum += err(tg[i], o[i]);
    9420:	1c30      	adds	r0, r6, #0
    9422:	47d8      	blx	fp
    9424:	3404      	adds	r4, #4
    9426:	1c06      	adds	r6, r0, #0
    for(int i = 0; i < size; i++)
    9428:	45a1      	cmp	r9, r4
    942a:	d1ef      	bne.n	940c <xttrain+0x198>
    bprop(t, in, tg, rate);
    return toterr(tg, t.o, t.nops);
}
    942c:	1c30      	adds	r0, r6, #0
    942e:	b013      	add	sp, #76	; 0x4c
    9430:	bc3c      	pop	{r2, r3, r4, r5}
    9432:	4690      	mov	r8, r2
    9434:	4699      	mov	r9, r3
    9436:	46a2      	mov	sl, r4
    9438:	46ab      	mov	fp, r5
    943a:	bcf0      	pop	{r4, r5, r6, r7}
    943c:	bc08      	pop	{r3}
    943e:	b004      	add	sp, #16
    9440:	4718      	bx	r3
        for(int j = 0; j < t.nops; j++)
    9442:	2300      	movs	r3, #0
    9444:	4699      	mov	r9, r3
    9446:	e798      	b.n	937a <xttrain+0x106>
    for(int i = 0; i < size; i++)
    9448:	2600      	movs	r6, #0
    return toterr(tg, t.o, t.nops);
    944a:	e7ef      	b.n	942c <xttrain+0x1b8>

0000944c <xtbuild>:

// Constructs a tinn with number of inputs, number of hidden neurons, and number of outputs
Tinn xtbuild(const int nips, const int nhid, const int nops)
{
    944c:	b5f0      	push	{r4, r5, r6, r7, lr}
    944e:	46de      	mov	lr, fp
    9450:	4657      	mov	r7, sl
    9452:	464e      	mov	r6, r9
    9454:	4645      	mov	r5, r8
    9456:	4698      	mov	r8, r3
    Tinn t;
    // Tinn only supports one hidden layer so there are two biases.
    t.nb = 2;
    t.nw = nhid * (nips + nops);
    9458:	000b      	movs	r3, r1
{
    945a:	b5e0      	push	{r5, r6, r7, lr}
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    945c:	f64a 458d 	movw	r5, #44173	; 0xac8d
    t.nw = nhid * (nips + nops);
    9460:	4443      	add	r3, r8
    9462:	4353      	muls	r3, r2
{
    9464:	0004      	movs	r4, r0
    9466:	b083      	sub	sp, #12
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    9468:	0018      	movs	r0, r3
    946a:	f2c0 0500 	movt	r5, #0
{
    946e:	4689      	mov	r9, r1
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    9470:	2104      	movs	r1, #4
{
    9472:	0016      	movs	r6, r2
    t.nw = nhid * (nips + nops);
    9474:	469a      	mov	sl, r3
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    9476:	47a8      	blx	r5
    t.x = t.w + nhid * nips;
    t.b = (float*) calloc(t.nb, sizeof(*t.b));
    9478:	2104      	movs	r1, #4
    t.w = (float*) calloc(t.nw, sizeof(*t.w));
    947a:	0007      	movs	r7, r0
    t.b = (float*) calloc(t.nb, sizeof(*t.b));
    947c:	2002      	movs	r0, #2
    947e:	47a8      	blx	r5
    t.h = (float*) calloc(nhid, sizeof(*t.h));
    9480:	2104      	movs	r1, #4
    t.b = (float*) calloc(t.nb, sizeof(*t.b));
    9482:	4683      	mov	fp, r0
    t.h = (float*) calloc(nhid, sizeof(*t.h));
    9484:	0030      	movs	r0, r6
    9486:	47a8      	blx	r5
    t.o = (float*) calloc(nops, sizeof(*t.o));
    9488:	2104      	movs	r1, #4
    t.h = (float*) calloc(nhid, sizeof(*t.h));
    948a:	9001      	str	r0, [sp, #4]
    t.o = (float*) calloc(nops, sizeof(*t.o));
    948c:	4640      	mov	r0, r8
    948e:	47a8      	blx	r5
    t.x = t.w + nhid * nips;
    9490:	464b      	mov	r3, r9
    9492:	4373      	muls	r3, r6
    9494:	009b      	lsls	r3, r3, #2
    t.nips = nips;
    t.nhid = nhid;
    t.nops = nops;
    //wbrand(t);
    return t;
    9496:	6027      	str	r7, [r4, #0]
    t.x = t.w + nhid * nips;
    9498:	18ff      	adds	r7, r7, r3
    return t;
    949a:	465b      	mov	r3, fp
    949c:	60a3      	str	r3, [r4, #8]
    949e:	9b01      	ldr	r3, [sp, #4]
    94a0:	6120      	str	r0, [r4, #16]
    94a2:	60e3      	str	r3, [r4, #12]
    94a4:	2302      	movs	r3, #2
    94a6:	6163      	str	r3, [r4, #20]
    94a8:	4653      	mov	r3, sl
    94aa:	61a3      	str	r3, [r4, #24]
    94ac:	464b      	mov	r3, r9
}
    94ae:	0020      	movs	r0, r4
    return t;
    94b0:	61e3      	str	r3, [r4, #28]
    94b2:	4643      	mov	r3, r8
    94b4:	6067      	str	r7, [r4, #4]
    94b6:	6226      	str	r6, [r4, #32]
    94b8:	6263      	str	r3, [r4, #36]	; 0x24
}
    94ba:	b003      	add	sp, #12
    94bc:	bc3c      	pop	{r2, r3, r4, r5}
    94be:	4690      	mov	r8, r2
    94c0:	4699      	mov	r9, r3
    94c2:	46a2      	mov	sl, r4
    94c4:	46ab      	mov	fp, r5
    94c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

000094c8 <expf>:
    94c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    94ca:	f242 0400 	movw	r4, #8192	; 0x2000
    94ce:	b08b      	sub	sp, #44	; 0x2c
    94d0:	1c05      	adds	r5, r0, #0
    94d2:	f000 f873 	bl	95bc <__ieee754_expf>
    94d6:	2300      	movs	r3, #0
    94d8:	f2c2 0400 	movt	r4, #8192	; 0x2000
    94dc:	56e3      	ldrsb	r3, [r4, r3]
    94de:	1c06      	adds	r6, r0, #0
    94e0:	3301      	adds	r3, #1
    94e2:	d03d      	beq.n	9560 <expf+0x98>
    94e4:	1c28      	adds	r0, r5, #0
    94e6:	f000 f97d 	bl	97e4 <finitef>
    94ea:	b3c8      	cbz	r0, 9560 <expf+0x98>
    94ec:	f247 1180 	movw	r1, #29056	; 0x7180
    94f0:	1c28      	adds	r0, r5, #0
    94f2:	f2c4 21b1 	movt	r1, #17073	; 0x42b1
    94f6:	f000 f9a5 	bl	9844 <__aeabi_fcmpgt>
    94fa:	0007      	movs	r7, r0
    94fc:	2800      	cmp	r0, #0
    94fe:	d132      	bne.n	9566 <expf+0x9e>
    9500:	f24f 11b5 	movw	r1, #61877	; 0xf1b5
    9504:	1c28      	adds	r0, r5, #0
    9506:	f2cc 21cf 	movt	r1, #49871	; 0xc2cf
    950a:	f000 f987 	bl	981c <__aeabi_fcmplt>
    950e:	b338      	cbz	r0, 9560 <expf+0x98>
    9510:	2304      	movs	r3, #4
    9512:	9300      	str	r3, [sp, #0]
    9514:	f64b 1360 	movw	r3, #47456	; 0xb960
    9518:	1c28      	adds	r0, r5, #0
    951a:	f2c0 0300 	movt	r3, #0
    951e:	9301      	str	r3, [sp, #4]
    9520:	9708      	str	r7, [sp, #32]
    9522:	f001 faaf 	bl	aa84 <__aeabi_f2d>
    9526:	2300      	movs	r3, #0
    9528:	2200      	movs	r2, #0
    952a:	9206      	str	r2, [sp, #24]
    952c:	9307      	str	r3, [sp, #28]
    952e:	2300      	movs	r3, #0
    9530:	56e3      	ldrsb	r3, [r4, r3]
    9532:	466e      	mov	r6, sp
    9534:	9004      	str	r0, [sp, #16]
    9536:	9105      	str	r1, [sp, #20]
    9538:	9002      	str	r0, [sp, #8]
    953a:	9103      	str	r1, [sp, #12]
    953c:	2b02      	cmp	r3, #2
    953e:	d037      	beq.n	95b0 <expf+0xe8>
    9540:	0030      	movs	r0, r6
    9542:	f000 f94d 	bl	97e0 <matherr>
    9546:	2800      	cmp	r0, #0
    9548:	d032      	beq.n	95b0 <expf+0xe8>
    954a:	6a33      	ldr	r3, [r6, #32]
    954c:	b11b      	cbz	r3, 9556 <expf+0x8e>
    954e:	f001 fba7 	bl	aca0 <__errno>
    9552:	6a33      	ldr	r3, [r6, #32]
    9554:	6003      	str	r3, [r0, #0]
    9556:	69b0      	ldr	r0, [r6, #24]
    9558:	69f1      	ldr	r1, [r6, #28]
    955a:	f001 fae5 	bl	ab28 <__aeabi_d2f>
    955e:	1c06      	adds	r6, r0, #0
    9560:	1c30      	adds	r0, r6, #0
    9562:	b00b      	add	sp, #44	; 0x2c
    9564:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9566:	2303      	movs	r3, #3
    9568:	9300      	str	r3, [sp, #0]
    956a:	f64b 1360 	movw	r3, #47456	; 0xb960
    956e:	f2c0 0300 	movt	r3, #0
    9572:	9301      	str	r3, [sp, #4]
    9574:	2300      	movs	r3, #0
    9576:	1c28      	adds	r0, r5, #0
    9578:	9308      	str	r3, [sp, #32]
    957a:	f001 fa83 	bl	aa84 <__aeabi_f2d>
    957e:	2300      	movs	r3, #0
    9580:	56e3      	ldrsb	r3, [r4, r3]
    9582:	466e      	mov	r6, sp
    9584:	9004      	str	r0, [sp, #16]
    9586:	9105      	str	r1, [sp, #20]
    9588:	9002      	str	r0, [sp, #8]
    958a:	9103      	str	r1, [sp, #12]
    958c:	b943      	cbnz	r3, 95a0 <expf+0xd8>
    958e:	22e0      	movs	r2, #224	; 0xe0
    9590:	f64f 73ff 	movw	r3, #65535	; 0xffff
    9594:	0612      	lsls	r2, r2, #24
    9596:	f2c4 73ef 	movt	r3, #18415	; 0x47ef
    959a:	9206      	str	r2, [sp, #24]
    959c:	9307      	str	r3, [sp, #28]
    959e:	e7cf      	b.n	9540 <expf+0x78>
    95a0:	2100      	movs	r1, #0
    95a2:	2000      	movs	r0, #0
    95a4:	f6c7 71f0 	movt	r1, #32752	; 0x7ff0
    95a8:	9006      	str	r0, [sp, #24]
    95aa:	9107      	str	r1, [sp, #28]
    95ac:	2b02      	cmp	r3, #2
    95ae:	d1c7      	bne.n	9540 <expf+0x78>
    95b0:	f001 fb76 	bl	aca0 <__errno>
    95b4:	2322      	movs	r3, #34	; 0x22
    95b6:	6003      	str	r3, [r0, #0]
    95b8:	e7c7      	b.n	954a <expf+0x82>
    95ba:	46c0      	nop			; (mov r8, r8)

000095bc <__ieee754_expf>:
    95bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    95be:	22ff      	movs	r2, #255	; 0xff
    95c0:	46ce      	mov	lr, r9
    95c2:	4647      	mov	r7, r8
    95c4:	0043      	lsls	r3, r0, #1
    95c6:	b580      	push	{r7, lr}
    95c8:	1c04      	adds	r4, r0, #0
    95ca:	085b      	lsrs	r3, r3, #1
    95cc:	05d2      	lsls	r2, r2, #23
    95ce:	4293      	cmp	r3, r2
    95d0:	d900      	bls.n	95d4 <__ieee754_expf+0x18>
    95d2:	e08e      	b.n	96f2 <__ieee754_expf+0x136>
    95d4:	0fc5      	lsrs	r5, r0, #31
    95d6:	4293      	cmp	r3, r2
    95d8:	d100      	bne.n	95dc <__ieee754_expf+0x20>
    95da:	e091      	b.n	9700 <__ieee754_expf+0x144>
    95dc:	f247 2217 	movw	r2, #29207	; 0x7217
    95e0:	f2c4 22b1 	movt	r2, #17073	; 0x42b1
    95e4:	4290      	cmp	r0, r2
    95e6:	dd00      	ble.n	95ea <__ieee754_expf+0x2e>
    95e8:	e0b0      	b.n	974c <__ieee754_expf+0x190>
    95ea:	2800      	cmp	r0, #0
    95ec:	da00      	bge.n	95f0 <__ieee754_expf+0x34>
    95ee:	e0a3      	b.n	9738 <__ieee754_expf+0x17c>
    95f0:	f247 2218 	movw	r2, #29208	; 0x7218
    95f4:	f6c3 62b1 	movt	r2, #16049	; 0x3eb1
    95f8:	4293      	cmp	r3, r2
    95fa:	d800      	bhi.n	95fe <__ieee754_expf+0x42>
    95fc:	e084      	b.n	9708 <__ieee754_expf+0x14c>
    95fe:	f241 5291 	movw	r2, #5521	; 0x1591
    9602:	f6c3 7285 	movt	r2, #16261	; 0x3f85
    9606:	4293      	cmp	r3, r2
    9608:	d900      	bls.n	960c <__ieee754_expf+0x50>
    960a:	e0bc      	b.n	9786 <__ieee754_expf+0x1ca>
    960c:	f64b 1370 	movw	r3, #47472	; 0xb970
    9610:	00af      	lsls	r7, r5, #2
    9612:	f2c0 0300 	movt	r3, #0
    9616:	58f9      	ldr	r1, [r7, r3]
    9618:	1c20      	adds	r0, r4, #0
    961a:	f000 ffef 	bl	a5fc <__aeabi_fsub>
    961e:	f64b 1378 	movw	r3, #47480	; 0xb978
    9622:	2401      	movs	r4, #1
    9624:	4681      	mov	r9, r0
    9626:	f2c0 0300 	movt	r3, #0
    962a:	1b64      	subs	r4, r4, r5
    962c:	58ff      	ldr	r7, [r7, r3]
    962e:	1b65      	subs	r5, r4, r5
    9630:	1c39      	adds	r1, r7, #0
    9632:	4648      	mov	r0, r9
    9634:	f000 ffe2 	bl	a5fc <__aeabi_fsub>
    9638:	1c04      	adds	r4, r0, #0
    963a:	1c21      	adds	r1, r4, #0
    963c:	1c20      	adds	r0, r4, #0
    963e:	f000 feb1 	bl	a3a4 <__aeabi_fmul>
    9642:	f64b 314c 	movw	r1, #47948	; 0xbb4c
    9646:	f2c3 3131 	movt	r1, #13105	; 0x3331
    964a:	1c06      	adds	r6, r0, #0
    964c:	f000 feaa 	bl	a3a4 <__aeabi_fmul>
    9650:	f64e 210e 	movw	r1, #59918	; 0xea0e
    9654:	f2c3 51dd 	movt	r1, #13789	; 0x35dd
    9658:	f000 ffd0 	bl	a5fc <__aeabi_fsub>
    965c:	1c31      	adds	r1, r6, #0
    965e:	f000 fea1 	bl	a3a4 <__aeabi_fmul>
    9662:	f24b 3155 	movw	r1, #45909	; 0xb355
    9666:	f6c3 018a 	movt	r1, #14474	; 0x388a
    966a:	f000 fb27 	bl	9cbc <__aeabi_fadd>
    966e:	1c31      	adds	r1, r6, #0
    9670:	f000 fe98 	bl	a3a4 <__aeabi_fmul>
    9674:	f640 3161 	movw	r1, #2913	; 0xb61
    9678:	f6c3 3136 	movt	r1, #15158	; 0x3b36
    967c:	f000 ffbe 	bl	a5fc <__aeabi_fsub>
    9680:	1c31      	adds	r1, r6, #0
    9682:	f000 fe8f 	bl	a3a4 <__aeabi_fmul>
    9686:	f64a 21ab 	movw	r1, #43691	; 0xaaab
    968a:	f6c3 612a 	movt	r1, #15914	; 0x3e2a
    968e:	f000 fb15 	bl	9cbc <__aeabi_fadd>
    9692:	1c31      	adds	r1, r6, #0
    9694:	f000 fe86 	bl	a3a4 <__aeabi_fmul>
    9698:	1c01      	adds	r1, r0, #0
    969a:	1c20      	adds	r0, r4, #0
    969c:	f000 ffae 	bl	a5fc <__aeabi_fsub>
    96a0:	4680      	mov	r8, r0
    96a2:	1c01      	adds	r1, r0, #0
    96a4:	1c20      	adds	r0, r4, #0
    96a6:	2d00      	cmp	r5, #0
    96a8:	d058      	beq.n	975c <__ieee754_expf+0x1a0>
    96aa:	f000 fe7b 	bl	a3a4 <__aeabi_fmul>
    96ae:	1c04      	adds	r4, r0, #0
    96b0:	2080      	movs	r0, #128	; 0x80
    96b2:	4641      	mov	r1, r8
    96b4:	05c0      	lsls	r0, r0, #23
    96b6:	f000 ffa1 	bl	a5fc <__aeabi_fsub>
    96ba:	1c01      	adds	r1, r0, #0
    96bc:	1c20      	adds	r0, r4, #0
    96be:	f000 fc89 	bl	9fd4 <__aeabi_fdiv>
    96c2:	1c01      	adds	r1, r0, #0
    96c4:	1c38      	adds	r0, r7, #0
    96c6:	f000 ff99 	bl	a5fc <__aeabi_fsub>
    96ca:	4649      	mov	r1, r9
    96cc:	f000 ff96 	bl	a5fc <__aeabi_fsub>
    96d0:	1c01      	adds	r1, r0, #0
    96d2:	20fe      	movs	r0, #254	; 0xfe
    96d4:	0580      	lsls	r0, r0, #22
    96d6:	f000 ff91 	bl	a5fc <__aeabi_fsub>
    96da:	002b      	movs	r3, r5
    96dc:	337d      	adds	r3, #125	; 0x7d
    96de:	db00      	blt.n	96e2 <__ieee754_expf+0x126>
    96e0:	e07a      	b.n	97d8 <__ieee754_expf+0x21c>
    96e2:	21d8      	movs	r1, #216	; 0xd8
    96e4:	3564      	adds	r5, #100	; 0x64
    96e6:	05ed      	lsls	r5, r5, #23
    96e8:	1828      	adds	r0, r5, r0
    96ea:	0509      	lsls	r1, r1, #20
    96ec:	f000 fe5a 	bl	a3a4 <__aeabi_fmul>
    96f0:	e002      	b.n	96f8 <__ieee754_expf+0x13c>
    96f2:	1c01      	adds	r1, r0, #0
    96f4:	f000 fae2 	bl	9cbc <__aeabi_fadd>
    96f8:	bc0c      	pop	{r2, r3}
    96fa:	4690      	mov	r8, r2
    96fc:	4699      	mov	r9, r3
    96fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9700:	2d00      	cmp	r5, #0
    9702:	d0f9      	beq.n	96f8 <__ieee754_expf+0x13c>
    9704:	2000      	movs	r0, #0
    9706:	e7f7      	b.n	96f8 <__ieee754_expf+0x13c>
    9708:	f64f 72ff 	movw	r2, #65535	; 0xffff
    970c:	f2c3 127f 	movt	r2, #12671	; 0x317f
    9710:	4293      	cmp	r3, r2
    9712:	d819      	bhi.n	9748 <__ieee754_expf+0x18c>
    9714:	f24f 21ca 	movw	r1, #62154	; 0xf2ca
    9718:	1c20      	adds	r0, r4, #0
    971a:	f2c7 1149 	movt	r1, #29001	; 0x7149
    971e:	f000 facd 	bl	9cbc <__aeabi_fadd>
    9722:	21fe      	movs	r1, #254	; 0xfe
    9724:	0589      	lsls	r1, r1, #22
    9726:	f000 f88d 	bl	9844 <__aeabi_fcmpgt>
    972a:	b168      	cbz	r0, 9748 <__ieee754_expf+0x18c>
    972c:	21fe      	movs	r1, #254	; 0xfe
    972e:	1c20      	adds	r0, r4, #0
    9730:	0589      	lsls	r1, r1, #22
    9732:	f000 fac3 	bl	9cbc <__aeabi_fadd>
    9736:	e7df      	b.n	96f8 <__ieee754_expf+0x13c>
    9738:	f24f 12b5 	movw	r2, #61877	; 0xf1b5
    973c:	f2c4 22cf 	movt	r2, #17103	; 0x42cf
    9740:	4293      	cmp	r3, r2
    9742:	d800      	bhi.n	9746 <__ieee754_expf+0x18a>
    9744:	e754      	b.n	95f0 <__ieee754_expf+0x34>
    9746:	e7dd      	b.n	9704 <__ieee754_expf+0x148>
    9748:	2500      	movs	r5, #0
    974a:	e776      	b.n	963a <__ieee754_expf+0x7e>
    974c:	f24f 21ca 	movw	r1, #62154	; 0xf2ca
    9750:	f2c7 1149 	movt	r1, #29001	; 0x7149
    9754:	1c08      	adds	r0, r1, #0
    9756:	f000 fe25 	bl	a3a4 <__aeabi_fmul>
    975a:	e7cd      	b.n	96f8 <__ieee754_expf+0x13c>
    975c:	f000 fe22 	bl	a3a4 <__aeabi_fmul>
    9760:	2180      	movs	r1, #128	; 0x80
    9762:	1c05      	adds	r5, r0, #0
    9764:	05c9      	lsls	r1, r1, #23
    9766:	4640      	mov	r0, r8
    9768:	f000 ff48 	bl	a5fc <__aeabi_fsub>
    976c:	1c01      	adds	r1, r0, #0
    976e:	1c28      	adds	r0, r5, #0
    9770:	f000 fc30 	bl	9fd4 <__aeabi_fdiv>
    9774:	1c21      	adds	r1, r4, #0
    9776:	f000 ff41 	bl	a5fc <__aeabi_fsub>
    977a:	1c01      	adds	r1, r0, #0
    977c:	20fe      	movs	r0, #254	; 0xfe
    977e:	0580      	lsls	r0, r0, #22
    9780:	f000 ff3c 	bl	a5fc <__aeabi_fsub>
    9784:	e7b8      	b.n	96f8 <__ieee754_expf+0x13c>
    9786:	f64a 213b 	movw	r1, #43579	; 0xaa3b
    978a:	1c20      	adds	r0, r4, #0
    978c:	f6c3 71b8 	movt	r1, #16312	; 0x3fb8
    9790:	f000 fe08 	bl	a3a4 <__aeabi_fmul>
    9794:	f64b 1368 	movw	r3, #47464	; 0xb968
    9798:	00ad      	lsls	r5, r5, #2
    979a:	f2c0 0300 	movt	r3, #0
    979e:	58e9      	ldr	r1, [r5, r3]
    97a0:	f000 fa8c 	bl	9cbc <__aeabi_fadd>
    97a4:	f001 f8ba 	bl	a91c <__aeabi_f2iz>
    97a8:	0005      	movs	r5, r0
    97aa:	f001 f8d5 	bl	a958 <__aeabi_i2f>
    97ae:	f247 1180 	movw	r1, #29056	; 0x7180
    97b2:	f6c3 7131 	movt	r1, #16177	; 0x3f31
    97b6:	1c07      	adds	r7, r0, #0
    97b8:	f000 fdf4 	bl	a3a4 <__aeabi_fmul>
    97bc:	1c01      	adds	r1, r0, #0
    97be:	1c20      	adds	r0, r4, #0
    97c0:	f000 ff1c 	bl	a5fc <__aeabi_fsub>
    97c4:	f24f 71d1 	movw	r1, #63441	; 0xf7d1
    97c8:	4681      	mov	r9, r0
    97ca:	f2c3 7117 	movt	r1, #14103	; 0x3717
    97ce:	1c38      	adds	r0, r7, #0
    97d0:	f000 fde8 	bl	a3a4 <__aeabi_fmul>
    97d4:	1c07      	adds	r7, r0, #0
    97d6:	e72b      	b.n	9630 <__ieee754_expf+0x74>
    97d8:	05ed      	lsls	r5, r5, #23
    97da:	1828      	adds	r0, r5, r0
    97dc:	e78c      	b.n	96f8 <__ieee754_expf+0x13c>
    97de:	46c0      	nop			; (mov r8, r8)

000097e0 <matherr>:
    97e0:	2000      	movs	r0, #0
    97e2:	4770      	bx	lr

000097e4 <finitef>:
    97e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
    97e8:	0043      	lsls	r3, r0, #1
    97ea:	2000      	movs	r0, #0
    97ec:	085b      	lsrs	r3, r3, #1
    97ee:	f6c7 727f 	movt	r2, #32639	; 0x7f7f
    97f2:	429a      	cmp	r2, r3
    97f4:	4140      	adcs	r0, r0
    97f6:	4770      	bx	lr

000097f8 <__aeabi_cfrcmple>:
    97f8:	4684      	mov	ip, r0
    97fa:	1c08      	adds	r0, r1, #0
    97fc:	4661      	mov	r1, ip
    97fe:	e7ff      	b.n	9800 <__aeabi_cfcmpeq>

00009800 <__aeabi_cfcmpeq>:
    9800:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    9802:	f000 fd91 	bl	a328 <__lesf2>
    9806:	2800      	cmp	r0, #0
    9808:	d401      	bmi.n	980e <__aeabi_cfcmpeq+0xe>
    980a:	2100      	movs	r1, #0
    980c:	42c8      	cmn	r0, r1
    980e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00009810 <__aeabi_fcmpeq>:
    9810:	b510      	push	{r4, lr}
    9812:	f000 fd29 	bl	a268 <__eqsf2>
    9816:	4240      	negs	r0, r0
    9818:	3001      	adds	r0, #1
    981a:	bd10      	pop	{r4, pc}

0000981c <__aeabi_fcmplt>:
    981c:	b510      	push	{r4, lr}
    981e:	f000 fd83 	bl	a328 <__lesf2>
    9822:	2800      	cmp	r0, #0
    9824:	db01      	blt.n	982a <__aeabi_fcmplt+0xe>
    9826:	2000      	movs	r0, #0
    9828:	bd10      	pop	{r4, pc}
    982a:	2001      	movs	r0, #1
    982c:	bd10      	pop	{r4, pc}
    982e:	46c0      	nop			; (mov r8, r8)

00009830 <__aeabi_fcmple>:
    9830:	b510      	push	{r4, lr}
    9832:	f000 fd79 	bl	a328 <__lesf2>
    9836:	2800      	cmp	r0, #0
    9838:	dd01      	ble.n	983e <__aeabi_fcmple+0xe>
    983a:	2000      	movs	r0, #0
    983c:	bd10      	pop	{r4, pc}
    983e:	2001      	movs	r0, #1
    9840:	bd10      	pop	{r4, pc}
    9842:	46c0      	nop			; (mov r8, r8)

00009844 <__aeabi_fcmpgt>:
    9844:	b510      	push	{r4, lr}
    9846:	f000 fd35 	bl	a2b4 <__gesf2>
    984a:	2800      	cmp	r0, #0
    984c:	dc01      	bgt.n	9852 <__aeabi_fcmpgt+0xe>
    984e:	2000      	movs	r0, #0
    9850:	bd10      	pop	{r4, pc}
    9852:	2001      	movs	r0, #1
    9854:	bd10      	pop	{r4, pc}
    9856:	46c0      	nop			; (mov r8, r8)

00009858 <__aeabi_fcmpge>:
    9858:	b510      	push	{r4, lr}
    985a:	f000 fd2b 	bl	a2b4 <__gesf2>
    985e:	2800      	cmp	r0, #0
    9860:	da01      	bge.n	9866 <__aeabi_fcmpge+0xe>
    9862:	2000      	movs	r0, #0
    9864:	bd10      	pop	{r4, pc}
    9866:	2001      	movs	r0, #1
    9868:	bd10      	pop	{r4, pc}
    986a:	46c0      	nop			; (mov r8, r8)

0000986c <__aeabi_uldivmod>:
    986c:	2b00      	cmp	r3, #0
    986e:	d111      	bne.n	9894 <__aeabi_uldivmod+0x28>
    9870:	2a00      	cmp	r2, #0
    9872:	d10f      	bne.n	9894 <__aeabi_uldivmod+0x28>
    9874:	2900      	cmp	r1, #0
    9876:	d100      	bne.n	987a <__aeabi_uldivmod+0xe>
    9878:	2800      	cmp	r0, #0
    987a:	d002      	beq.n	9882 <__aeabi_uldivmod+0x16>
    987c:	2100      	movs	r1, #0
    987e:	43c9      	mvns	r1, r1
    9880:	1c08      	adds	r0, r1, #0
    9882:	b407      	push	{r0, r1, r2}
    9884:	4802      	ldr	r0, [pc, #8]	; (9890 <__aeabi_uldivmod+0x24>)
    9886:	a102      	add	r1, pc, #8	; (adr r1, 9890 <__aeabi_uldivmod+0x24>)
    9888:	1840      	adds	r0, r0, r1
    988a:	9002      	str	r0, [sp, #8]
    988c:	bd03      	pop	{r0, r1, pc}
    988e:	46c0      	nop			; (mov r8, r8)
    9890:	000013b1 	.word	0x000013b1
    9894:	b403      	push	{r0, r1}
    9896:	4668      	mov	r0, sp
    9898:	b501      	push	{r0, lr}
    989a:	9802      	ldr	r0, [sp, #8]
    989c:	f000 f834 	bl	9908 <__udivmoddi4>
    98a0:	9b01      	ldr	r3, [sp, #4]
    98a2:	469e      	mov	lr, r3
    98a4:	b002      	add	sp, #8
    98a6:	bc0c      	pop	{r2, r3}
    98a8:	4770      	bx	lr
    98aa:	46c0      	nop			; (mov r8, r8)

000098ac <__aeabi_lmul>:
    98ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    98ae:	f64f 75ff 	movw	r5, #65535	; 0xffff
    98b2:	46ce      	mov	lr, r9
    98b4:	4647      	mov	r7, r8
    98b6:	002c      	movs	r4, r5
    98b8:	4015      	ands	r5, r2
    98ba:	4699      	mov	r9, r3
    98bc:	002b      	movs	r3, r5
    98be:	4004      	ands	r4, r0
    98c0:	0c16      	lsrs	r6, r2, #16
    98c2:	b580      	push	{r7, lr}
    98c4:	0c07      	lsrs	r7, r0, #16
    98c6:	4363      	muls	r3, r4
    98c8:	437d      	muls	r5, r7
    98ca:	4377      	muls	r7, r6
    98cc:	4366      	muls	r6, r4
    98ce:	0c1c      	lsrs	r4, r3, #16
    98d0:	1976      	adds	r6, r6, r5
    98d2:	19a4      	adds	r4, r4, r6
    98d4:	469c      	mov	ip, r3
    98d6:	42a5      	cmp	r5, r4
    98d8:	d903      	bls.n	98e2 <__aeabi_lmul+0x36>
    98da:	2380      	movs	r3, #128	; 0x80
    98dc:	025b      	lsls	r3, r3, #9
    98de:	4698      	mov	r8, r3
    98e0:	4447      	add	r7, r8
    98e2:	0c25      	lsrs	r5, r4, #16
    98e4:	19ef      	adds	r7, r5, r7
    98e6:	4663      	mov	r3, ip
    98e8:	f64f 75ff 	movw	r5, #65535	; 0xffff
    98ec:	401d      	ands	r5, r3
    98ee:	464b      	mov	r3, r9
    98f0:	4351      	muls	r1, r2
    98f2:	4343      	muls	r3, r0
    98f4:	0424      	lsls	r4, r4, #16
    98f6:	1964      	adds	r4, r4, r5
    98f8:	1859      	adds	r1, r3, r1
    98fa:	19c9      	adds	r1, r1, r7
    98fc:	0020      	movs	r0, r4
    98fe:	bc0c      	pop	{r2, r3}
    9900:	4690      	mov	r8, r2
    9902:	4699      	mov	r9, r3
    9904:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9906:	46c0      	nop			; (mov r8, r8)

00009908 <__udivmoddi4>:
    9908:	b5f0      	push	{r4, r5, r6, r7, lr}
    990a:	4657      	mov	r7, sl
    990c:	4645      	mov	r5, r8
    990e:	46de      	mov	lr, fp
    9910:	464e      	mov	r6, r9
    9912:	4698      	mov	r8, r3
    9914:	b5e0      	push	{r5, r6, r7, lr}
    9916:	b083      	sub	sp, #12
    9918:	0017      	movs	r7, r2
    991a:	9201      	str	r2, [sp, #4]
    991c:	0016      	movs	r6, r2
    991e:	4642      	mov	r2, r8
    9920:	0005      	movs	r5, r0
    9922:	000c      	movs	r4, r1
    9924:	4683      	mov	fp, r0
    9926:	468a      	mov	sl, r1
    9928:	2a00      	cmp	r2, #0
    992a:	d14c      	bne.n	99c6 <__udivmoddi4+0xbe>
    992c:	428f      	cmp	r7, r1
    992e:	d800      	bhi.n	9932 <__udivmoddi4+0x2a>
    9930:	e078      	b.n	9a24 <__udivmoddi4+0x11c>
    9932:	0038      	movs	r0, r7
    9934:	f001 f986 	bl	ac44 <__clzsi2>
    9938:	b150      	cbz	r0, 9950 <__udivmoddi4+0x48>
    993a:	2320      	movs	r3, #32
    993c:	002a      	movs	r2, r5
    993e:	1a1b      	subs	r3, r3, r0
    9940:	40da      	lsrs	r2, r3
    9942:	4084      	lsls	r4, r0
    9944:	0013      	movs	r3, r2
    9946:	4085      	lsls	r5, r0
    9948:	4323      	orrs	r3, r4
    994a:	4086      	lsls	r6, r0
    994c:	469a      	mov	sl, r3
    994e:	46ab      	mov	fp, r5
    9950:	0c37      	lsrs	r7, r6, #16
    9952:	fbba f2f7 	udiv	r2, sl, r7
    9956:	0039      	movs	r1, r7
    9958:	4653      	mov	r3, sl
    995a:	f64f 74ff 	movw	r4, #65535	; 0xffff
    995e:	4351      	muls	r1, r2
    9960:	0015      	movs	r5, r2
    9962:	1a59      	subs	r1, r3, r1
    9964:	465b      	mov	r3, fp
    9966:	4034      	ands	r4, r6
    9968:	4365      	muls	r5, r4
    996a:	0409      	lsls	r1, r1, #16
    996c:	0c1b      	lsrs	r3, r3, #16
    996e:	430b      	orrs	r3, r1
    9970:	429d      	cmp	r5, r3
    9972:	d909      	bls.n	9988 <__udivmoddi4+0x80>
    9974:	199b      	adds	r3, r3, r6
    9976:	1e51      	subs	r1, r2, #1
    9978:	429e      	cmp	r6, r3
    997a:	d900      	bls.n	997e <__udivmoddi4+0x76>
    997c:	e17c      	b.n	9c78 <__udivmoddi4+0x370>
    997e:	429d      	cmp	r5, r3
    9980:	d800      	bhi.n	9984 <__udivmoddi4+0x7c>
    9982:	e179      	b.n	9c78 <__udivmoddi4+0x370>
    9984:	3a02      	subs	r2, #2
    9986:	199b      	adds	r3, r3, r6
    9988:	1b59      	subs	r1, r3, r5
    998a:	fbb1 f3f7 	udiv	r3, r1, r7
    998e:	435c      	muls	r4, r3
    9990:	435f      	muls	r7, r3
    9992:	0025      	movs	r5, r4
    9994:	1bc9      	subs	r1, r1, r7
    9996:	f64f 74ff 	movw	r4, #65535	; 0xffff
    999a:	465f      	mov	r7, fp
    999c:	0409      	lsls	r1, r1, #16
    999e:	403c      	ands	r4, r7
    99a0:	430c      	orrs	r4, r1
    99a2:	42a5      	cmp	r5, r4
    99a4:	d900      	bls.n	99a8 <__udivmoddi4+0xa0>
    99a6:	e15c      	b.n	9c62 <__udivmoddi4+0x35a>
    99a8:	0412      	lsls	r2, r2, #16
    99aa:	4313      	orrs	r3, r2
    99ac:	2200      	movs	r2, #0
    99ae:	1b64      	subs	r4, r4, r5
    99b0:	9201      	str	r2, [sp, #4]
    99b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    99b4:	b12a      	cbz	r2, 99c2 <__udivmoddi4+0xba>
    99b6:	40c4      	lsrs	r4, r0
    99b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    99ba:	980c      	ldr	r0, [sp, #48]	; 0x30
    99bc:	6014      	str	r4, [r2, #0]
    99be:	2200      	movs	r2, #0
    99c0:	6042      	str	r2, [r0, #4]
    99c2:	0018      	movs	r0, r3
    99c4:	e00a      	b.n	99dc <__udivmoddi4+0xd4>
    99c6:	4588      	cmp	r8, r1
    99c8:	d910      	bls.n	99ec <__udivmoddi4+0xe4>
    99ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    99cc:	2b00      	cmp	r3, #0
    99ce:	d100      	bne.n	99d2 <__udivmoddi4+0xca>
    99d0:	e170      	b.n	9cb4 <__udivmoddi4+0x3ac>
    99d2:	6018      	str	r0, [r3, #0]
    99d4:	6059      	str	r1, [r3, #4]
    99d6:	2300      	movs	r3, #0
    99d8:	2000      	movs	r0, #0
    99da:	9301      	str	r3, [sp, #4]
    99dc:	9901      	ldr	r1, [sp, #4]
    99de:	b003      	add	sp, #12
    99e0:	bc3c      	pop	{r2, r3, r4, r5}
    99e2:	4690      	mov	r8, r2
    99e4:	4699      	mov	r9, r3
    99e6:	46a2      	mov	sl, r4
    99e8:	46ab      	mov	fp, r5
    99ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    99ec:	4640      	mov	r0, r8
    99ee:	f001 f929 	bl	ac44 <__clzsi2>
    99f2:	9001      	str	r0, [sp, #4]
    99f4:	2800      	cmp	r0, #0
    99f6:	d000      	beq.n	99fa <__udivmoddi4+0xf2>
    99f8:	e0a3      	b.n	9b42 <__udivmoddi4+0x23a>
    99fa:	45a0      	cmp	r8, r4
    99fc:	d302      	bcc.n	9a04 <__udivmoddi4+0xfc>
    99fe:	42af      	cmp	r7, r5
    9a00:	d900      	bls.n	9a04 <__udivmoddi4+0xfc>
    9a02:	e151      	b.n	9ca8 <__udivmoddi4+0x3a0>
    9a04:	1bef      	subs	r7, r5, r7
    9a06:	4643      	mov	r3, r8
    9a08:	42bd      	cmp	r5, r7
    9a0a:	41ad      	sbcs	r5, r5
    9a0c:	1ae4      	subs	r4, r4, r3
    9a0e:	426d      	negs	r5, r5
    9a10:	1b63      	subs	r3, r4, r5
    9a12:	469a      	mov	sl, r3
    9a14:	2001      	movs	r0, #1
    9a16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9a18:	2b00      	cmp	r3, #0
    9a1a:	d0df      	beq.n	99dc <__udivmoddi4+0xd4>
    9a1c:	4652      	mov	r2, sl
    9a1e:	601f      	str	r7, [r3, #0]
    9a20:	605a      	str	r2, [r3, #4]
    9a22:	e7db      	b.n	99dc <__udivmoddi4+0xd4>
    9a24:	b917      	cbnz	r7, 9a2c <__udivmoddi4+0x124>
    9a26:	3601      	adds	r6, #1
    9a28:	fbb6 f6f7 	udiv	r6, r6, r7
    9a2c:	0030      	movs	r0, r6
    9a2e:	f001 f909 	bl	ac44 <__clzsi2>
    9a32:	bbb8      	cbnz	r0, 9aa4 <__udivmoddi4+0x19c>
    9a34:	f64f 77ff 	movw	r7, #65535	; 0xffff
    9a38:	2301      	movs	r3, #1
    9a3a:	1ba5      	subs	r5, r4, r6
    9a3c:	4037      	ands	r7, r6
    9a3e:	0c34      	lsrs	r4, r6, #16
    9a40:	9301      	str	r3, [sp, #4]
    9a42:	fbb5 f3f4 	udiv	r3, r5, r4
    9a46:	003a      	movs	r2, r7
    9a48:	435a      	muls	r2, r3
    9a4a:	4694      	mov	ip, r2
    9a4c:	0022      	movs	r2, r4
    9a4e:	435a      	muls	r2, r3
    9a50:	1aaa      	subs	r2, r5, r2
    9a52:	465d      	mov	r5, fp
    9a54:	0412      	lsls	r2, r2, #16
    9a56:	0c2d      	lsrs	r5, r5, #16
    9a58:	432a      	orrs	r2, r5
    9a5a:	4594      	cmp	ip, r2
    9a5c:	d907      	bls.n	9a6e <__udivmoddi4+0x166>
    9a5e:	1992      	adds	r2, r2, r6
    9a60:	1e5d      	subs	r5, r3, #1
    9a62:	4296      	cmp	r6, r2
    9a64:	d802      	bhi.n	9a6c <__udivmoddi4+0x164>
    9a66:	4594      	cmp	ip, r2
    9a68:	d900      	bls.n	9a6c <__udivmoddi4+0x164>
    9a6a:	e120      	b.n	9cae <__udivmoddi4+0x3a6>
    9a6c:	002b      	movs	r3, r5
    9a6e:	4665      	mov	r5, ip
    9a70:	1b52      	subs	r2, r2, r5
    9a72:	fbb2 f5f4 	udiv	r5, r2, r4
    9a76:	436c      	muls	r4, r5
    9a78:	4659      	mov	r1, fp
    9a7a:	1b12      	subs	r2, r2, r4
    9a7c:	f64f 74ff 	movw	r4, #65535	; 0xffff
    9a80:	436f      	muls	r7, r5
    9a82:	0412      	lsls	r2, r2, #16
    9a84:	400c      	ands	r4, r1
    9a86:	4314      	orrs	r4, r2
    9a88:	42a7      	cmp	r7, r4
    9a8a:	d907      	bls.n	9a9c <__udivmoddi4+0x194>
    9a8c:	19a4      	adds	r4, r4, r6
    9a8e:	1e6a      	subs	r2, r5, #1
    9a90:	42a6      	cmp	r6, r4
    9a92:	d802      	bhi.n	9a9a <__udivmoddi4+0x192>
    9a94:	42a7      	cmp	r7, r4
    9a96:	d900      	bls.n	9a9a <__udivmoddi4+0x192>
    9a98:	e103      	b.n	9ca2 <__udivmoddi4+0x39a>
    9a9a:	0015      	movs	r5, r2
    9a9c:	041b      	lsls	r3, r3, #16
    9a9e:	1be4      	subs	r4, r4, r7
    9aa0:	432b      	orrs	r3, r5
    9aa2:	e786      	b.n	99b2 <__udivmoddi4+0xaa>
    9aa4:	2120      	movs	r1, #32
    9aa6:	002a      	movs	r2, r5
    9aa8:	0023      	movs	r3, r4
    9aaa:	1a09      	subs	r1, r1, r0
    9aac:	4086      	lsls	r6, r0
    9aae:	4084      	lsls	r4, r0
    9ab0:	40ca      	lsrs	r2, r1
    9ab2:	40cb      	lsrs	r3, r1
    9ab4:	4322      	orrs	r2, r4
    9ab6:	0c34      	lsrs	r4, r6, #16
    9ab8:	fbb3 f1f4 	udiv	r1, r3, r4
    9abc:	4085      	lsls	r5, r0
    9abe:	f64f 77ff 	movw	r7, #65535	; 0xffff
    9ac2:	46ab      	mov	fp, r5
    9ac4:	000d      	movs	r5, r1
    9ac6:	4037      	ands	r7, r6
    9ac8:	437d      	muls	r5, r7
    9aca:	46ac      	mov	ip, r5
    9acc:	0025      	movs	r5, r4
    9ace:	434d      	muls	r5, r1
    9ad0:	1b5d      	subs	r5, r3, r5
    9ad2:	042d      	lsls	r5, r5, #16
    9ad4:	0c13      	lsrs	r3, r2, #16
    9ad6:	4691      	mov	r9, r2
    9ad8:	432b      	orrs	r3, r5
    9ada:	459c      	cmp	ip, r3
    9adc:	d909      	bls.n	9af2 <__udivmoddi4+0x1ea>
    9ade:	199b      	adds	r3, r3, r6
    9ae0:	1e4d      	subs	r5, r1, #1
    9ae2:	429e      	cmp	r6, r3
    9ae4:	d900      	bls.n	9ae8 <__udivmoddi4+0x1e0>
    9ae6:	e0da      	b.n	9c9e <__udivmoddi4+0x396>
    9ae8:	459c      	cmp	ip, r3
    9aea:	d800      	bhi.n	9aee <__udivmoddi4+0x1e6>
    9aec:	e0d7      	b.n	9c9e <__udivmoddi4+0x396>
    9aee:	3902      	subs	r1, #2
    9af0:	199b      	adds	r3, r3, r6
    9af2:	4662      	mov	r2, ip
    9af4:	1a9b      	subs	r3, r3, r2
    9af6:	fbb3 fcf4 	udiv	ip, r3, r4
    9afa:	4662      	mov	r2, ip
    9afc:	f64f 78ff 	movw	r8, #65535	; 0xffff
    9b00:	4362      	muls	r2, r4
    9b02:	1a9b      	subs	r3, r3, r2
    9b04:	041b      	lsls	r3, r3, #16
    9b06:	469a      	mov	sl, r3
    9b08:	4642      	mov	r2, r8
    9b0a:	464b      	mov	r3, r9
    9b0c:	4665      	mov	r5, ip
    9b0e:	401a      	ands	r2, r3
    9b10:	4653      	mov	r3, sl
    9b12:	437d      	muls	r5, r7
    9b14:	4313      	orrs	r3, r2
    9b16:	429d      	cmp	r5, r3
    9b18:	d90d      	bls.n	9b36 <__udivmoddi4+0x22e>
    9b1a:	4662      	mov	r2, ip
    9b1c:	199b      	adds	r3, r3, r6
    9b1e:	3a01      	subs	r2, #1
    9b20:	429e      	cmp	r6, r3
    9b22:	d900      	bls.n	9b26 <__udivmoddi4+0x21e>
    9b24:	e0b7      	b.n	9c96 <__udivmoddi4+0x38e>
    9b26:	429d      	cmp	r5, r3
    9b28:	d800      	bhi.n	9b2c <__udivmoddi4+0x224>
    9b2a:	e0b4      	b.n	9c96 <__udivmoddi4+0x38e>
    9b2c:	2202      	movs	r2, #2
    9b2e:	4252      	negs	r2, r2
    9b30:	4690      	mov	r8, r2
    9b32:	199b      	adds	r3, r3, r6
    9b34:	44c4      	add	ip, r8
    9b36:	1b5d      	subs	r5, r3, r5
    9b38:	4663      	mov	r3, ip
    9b3a:	0409      	lsls	r1, r1, #16
    9b3c:	4319      	orrs	r1, r3
    9b3e:	9101      	str	r1, [sp, #4]
    9b40:	e77f      	b.n	9a42 <__udivmoddi4+0x13a>
    9b42:	2320      	movs	r3, #32
    9b44:	9801      	ldr	r0, [sp, #4]
    9b46:	003a      	movs	r2, r7
    9b48:	1a1b      	subs	r3, r3, r0
    9b4a:	469c      	mov	ip, r3
    9b4c:	4643      	mov	r3, r8
    9b4e:	4661      	mov	r1, ip
    9b50:	4083      	lsls	r3, r0
    9b52:	40ca      	lsrs	r2, r1
    9b54:	4313      	orrs	r3, r2
    9b56:	002a      	movs	r2, r5
    9b58:	0026      	movs	r6, r4
    9b5a:	40ca      	lsrs	r2, r1
    9b5c:	4084      	lsls	r4, r0
    9b5e:	40ce      	lsrs	r6, r1
    9b60:	4322      	orrs	r2, r4
    9b62:	0c1c      	lsrs	r4, r3, #16
    9b64:	4087      	lsls	r7, r0
    9b66:	4085      	lsls	r5, r0
    9b68:	fbb6 f0f4 	udiv	r0, r6, r4
    9b6c:	4691      	mov	r9, r2
    9b6e:	f64f 72ff 	movw	r2, #65535	; 0xffff
    9b72:	0001      	movs	r1, r0
    9b74:	401a      	ands	r2, r3
    9b76:	4351      	muls	r1, r2
    9b78:	4688      	mov	r8, r1
    9b7a:	0021      	movs	r1, r4
    9b7c:	4341      	muls	r1, r0
    9b7e:	1a76      	subs	r6, r6, r1
    9b80:	4649      	mov	r1, r9
    9b82:	0436      	lsls	r6, r6, #16
    9b84:	0c09      	lsrs	r1, r1, #16
    9b86:	430e      	orrs	r6, r1
    9b88:	45b0      	cmp	r8, r6
    9b8a:	d909      	bls.n	9ba0 <__udivmoddi4+0x298>
    9b8c:	1e41      	subs	r1, r0, #1
    9b8e:	18f6      	adds	r6, r6, r3
    9b90:	468a      	mov	sl, r1
    9b92:	42b3      	cmp	r3, r6
    9b94:	d900      	bls.n	9b98 <__udivmoddi4+0x290>
    9b96:	e080      	b.n	9c9a <__udivmoddi4+0x392>
    9b98:	45b0      	cmp	r8, r6
    9b9a:	d97e      	bls.n	9c9a <__udivmoddi4+0x392>
    9b9c:	3802      	subs	r0, #2
    9b9e:	18f6      	adds	r6, r6, r3
    9ba0:	4641      	mov	r1, r8
    9ba2:	1a76      	subs	r6, r6, r1
    9ba4:	fbb6 f8f4 	udiv	r8, r6, r4
    9ba8:	4641      	mov	r1, r8
    9baa:	434c      	muls	r4, r1
    9bac:	434a      	muls	r2, r1
    9bae:	1b36      	subs	r6, r6, r4
    9bb0:	4649      	mov	r1, r9
    9bb2:	f64f 74ff 	movw	r4, #65535	; 0xffff
    9bb6:	0436      	lsls	r6, r6, #16
    9bb8:	400c      	ands	r4, r1
    9bba:	4334      	orrs	r4, r6
    9bbc:	42a2      	cmp	r2, r4
    9bbe:	d90b      	bls.n	9bd8 <__udivmoddi4+0x2d0>
    9bc0:	4641      	mov	r1, r8
    9bc2:	18e4      	adds	r4, r4, r3
    9bc4:	1e4e      	subs	r6, r1, #1
    9bc6:	42a3      	cmp	r3, r4
    9bc8:	d863      	bhi.n	9c92 <__udivmoddi4+0x38a>
    9bca:	42a2      	cmp	r2, r4
    9bcc:	d961      	bls.n	9c92 <__udivmoddi4+0x38a>
    9bce:	2102      	movs	r1, #2
    9bd0:	4249      	negs	r1, r1
    9bd2:	4689      	mov	r9, r1
    9bd4:	18e4      	adds	r4, r4, r3
    9bd6:	44c8      	add	r8, r9
    9bd8:	4641      	mov	r1, r8
    9bda:	f64f 76ff 	movw	r6, #65535	; 0xffff
    9bde:	0400      	lsls	r0, r0, #16
    9be0:	4308      	orrs	r0, r1
    9be2:	0031      	movs	r1, r6
    9be4:	4001      	ands	r1, r0
    9be6:	468a      	mov	sl, r1
    9be8:	0c01      	lsrs	r1, r0, #16
    9bea:	4688      	mov	r8, r1
    9bec:	4651      	mov	r1, sl
    9bee:	403e      	ands	r6, r7
    9bf0:	4371      	muls	r1, r6
    9bf2:	4689      	mov	r9, r1
    9bf4:	4641      	mov	r1, r8
    9bf6:	1aa2      	subs	r2, r4, r2
    9bf8:	0c3c      	lsrs	r4, r7, #16
    9bfa:	434e      	muls	r6, r1
    9bfc:	4361      	muls	r1, r4
    9bfe:	4688      	mov	r8, r1
    9c00:	4651      	mov	r1, sl
    9c02:	434c      	muls	r4, r1
    9c04:	4649      	mov	r1, r9
    9c06:	0c09      	lsrs	r1, r1, #16
    9c08:	468a      	mov	sl, r1
    9c0a:	19a4      	adds	r4, r4, r6
    9c0c:	4454      	add	r4, sl
    9c0e:	42a6      	cmp	r6, r4
    9c10:	d903      	bls.n	9c1a <__udivmoddi4+0x312>
    9c12:	2180      	movs	r1, #128	; 0x80
    9c14:	0249      	lsls	r1, r1, #9
    9c16:	468a      	mov	sl, r1
    9c18:	44d0      	add	r8, sl
    9c1a:	0c26      	lsrs	r6, r4, #16
    9c1c:	4446      	add	r6, r8
    9c1e:	f64f 78ff 	movw	r8, #65535	; 0xffff
    9c22:	0421      	lsls	r1, r4, #16
    9c24:	468a      	mov	sl, r1
    9c26:	464c      	mov	r4, r9
    9c28:	4641      	mov	r1, r8
    9c2a:	4021      	ands	r1, r4
    9c2c:	4689      	mov	r9, r1
    9c2e:	4654      	mov	r4, sl
    9c30:	444c      	add	r4, r9
    9c32:	42b2      	cmp	r2, r6
    9c34:	d324      	bcc.n	9c80 <__udivmoddi4+0x378>
    9c36:	d021      	beq.n	9c7c <__udivmoddi4+0x374>
    9c38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9c3a:	b183      	cbz	r3, 9c5e <__udivmoddi4+0x356>
    9c3c:	1b2c      	subs	r4, r5, r4
    9c3e:	42a5      	cmp	r5, r4
    9c40:	41ad      	sbcs	r5, r5
    9c42:	1b92      	subs	r2, r2, r6
    9c44:	426d      	negs	r5, r5
    9c46:	1b52      	subs	r2, r2, r5
    9c48:	0013      	movs	r3, r2
    9c4a:	4661      	mov	r1, ip
    9c4c:	408b      	lsls	r3, r1
    9c4e:	9901      	ldr	r1, [sp, #4]
    9c50:	40cc      	lsrs	r4, r1
    9c52:	40ca      	lsrs	r2, r1
    9c54:	431c      	orrs	r4, r3
    9c56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9c58:	601c      	str	r4, [r3, #0]
    9c5a:	605a      	str	r2, [r3, #4]
    9c5c:	2300      	movs	r3, #0
    9c5e:	9301      	str	r3, [sp, #4]
    9c60:	e6bc      	b.n	99dc <__udivmoddi4+0xd4>
    9c62:	19a4      	adds	r4, r4, r6
    9c64:	1e59      	subs	r1, r3, #1
    9c66:	42a6      	cmp	r6, r4
    9c68:	d804      	bhi.n	9c74 <__udivmoddi4+0x36c>
    9c6a:	42a5      	cmp	r5, r4
    9c6c:	d902      	bls.n	9c74 <__udivmoddi4+0x36c>
    9c6e:	3b02      	subs	r3, #2
    9c70:	19a4      	adds	r4, r4, r6
    9c72:	e699      	b.n	99a8 <__udivmoddi4+0xa0>
    9c74:	000b      	movs	r3, r1
    9c76:	e697      	b.n	99a8 <__udivmoddi4+0xa0>
    9c78:	000a      	movs	r2, r1
    9c7a:	e685      	b.n	9988 <__udivmoddi4+0x80>
    9c7c:	42a5      	cmp	r5, r4
    9c7e:	d2db      	bcs.n	9c38 <__udivmoddi4+0x330>
    9c80:	1be7      	subs	r7, r4, r7
    9c82:	1af3      	subs	r3, r6, r3
    9c84:	42bc      	cmp	r4, r7
    9c86:	41b6      	sbcs	r6, r6
    9c88:	4276      	negs	r6, r6
    9c8a:	3801      	subs	r0, #1
    9c8c:	1b9e      	subs	r6, r3, r6
    9c8e:	003c      	movs	r4, r7
    9c90:	e7d2      	b.n	9c38 <__udivmoddi4+0x330>
    9c92:	46b0      	mov	r8, r6
    9c94:	e7a0      	b.n	9bd8 <__udivmoddi4+0x2d0>
    9c96:	4694      	mov	ip, r2
    9c98:	e74d      	b.n	9b36 <__udivmoddi4+0x22e>
    9c9a:	4650      	mov	r0, sl
    9c9c:	e780      	b.n	9ba0 <__udivmoddi4+0x298>
    9c9e:	0029      	movs	r1, r5
    9ca0:	e727      	b.n	9af2 <__udivmoddi4+0x1ea>
    9ca2:	3d02      	subs	r5, #2
    9ca4:	19a4      	adds	r4, r4, r6
    9ca6:	e6f9      	b.n	9a9c <__udivmoddi4+0x194>
    9ca8:	2000      	movs	r0, #0
    9caa:	002f      	movs	r7, r5
    9cac:	e6b3      	b.n	9a16 <__udivmoddi4+0x10e>
    9cae:	3b02      	subs	r3, #2
    9cb0:	1992      	adds	r2, r2, r6
    9cb2:	e6dc      	b.n	9a6e <__udivmoddi4+0x166>
    9cb4:	2300      	movs	r3, #0
    9cb6:	2000      	movs	r0, #0
    9cb8:	9301      	str	r3, [sp, #4]
    9cba:	e68f      	b.n	99dc <__udivmoddi4+0xd4>

00009cbc <__aeabi_fadd>:
    9cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    9cbe:	46c6      	mov	lr, r8
    9cc0:	024e      	lsls	r6, r1, #9
    9cc2:	0247      	lsls	r7, r0, #9
    9cc4:	0a76      	lsrs	r6, r6, #9
    9cc6:	0a7b      	lsrs	r3, r7, #9
    9cc8:	0044      	lsls	r4, r0, #1
    9cca:	0fc5      	lsrs	r5, r0, #31
    9ccc:	00f7      	lsls	r7, r6, #3
    9cce:	0048      	lsls	r0, r1, #1
    9cd0:	4698      	mov	r8, r3
    9cd2:	b500      	push	{lr}
    9cd4:	0e24      	lsrs	r4, r4, #24
    9cd6:	002a      	movs	r2, r5
    9cd8:	00db      	lsls	r3, r3, #3
    9cda:	0e00      	lsrs	r0, r0, #24
    9cdc:	0fc9      	lsrs	r1, r1, #31
    9cde:	46bc      	mov	ip, r7
    9ce0:	428d      	cmp	r5, r1
    9ce2:	d067      	beq.n	9db4 <__aeabi_fadd+0xf8>
    9ce4:	1a22      	subs	r2, r4, r0
    9ce6:	2a00      	cmp	r2, #0
    9ce8:	dc00      	bgt.n	9cec <__aeabi_fadd+0x30>
    9cea:	e0a5      	b.n	9e38 <__aeabi_fadd+0x17c>
    9cec:	2800      	cmp	r0, #0
    9cee:	d13a      	bne.n	9d66 <__aeabi_fadd+0xaa>
    9cf0:	2f00      	cmp	r7, #0
    9cf2:	d100      	bne.n	9cf6 <__aeabi_fadd+0x3a>
    9cf4:	e093      	b.n	9e1e <__aeabi_fadd+0x162>
    9cf6:	1e51      	subs	r1, r2, #1
    9cf8:	2900      	cmp	r1, #0
    9cfa:	d000      	beq.n	9cfe <__aeabi_fadd+0x42>
    9cfc:	e0bb      	b.n	9e76 <__aeabi_fadd+0x1ba>
    9cfe:	2401      	movs	r4, #1
    9d00:	1bdb      	subs	r3, r3, r7
    9d02:	015a      	lsls	r2, r3, #5
    9d04:	d546      	bpl.n	9d94 <__aeabi_fadd+0xd8>
    9d06:	019b      	lsls	r3, r3, #6
    9d08:	099e      	lsrs	r6, r3, #6
    9d0a:	0030      	movs	r0, r6
    9d0c:	f000 ff9a 	bl	ac44 <__clzsi2>
    9d10:	3805      	subs	r0, #5
    9d12:	4086      	lsls	r6, r0
    9d14:	4284      	cmp	r4, r0
    9d16:	dd00      	ble.n	9d1a <__aeabi_fadd+0x5e>
    9d18:	e09c      	b.n	9e54 <__aeabi_fadd+0x198>
    9d1a:	1b04      	subs	r4, r0, r4
    9d1c:	0032      	movs	r2, r6
    9d1e:	2020      	movs	r0, #32
    9d20:	3401      	adds	r4, #1
    9d22:	40e2      	lsrs	r2, r4
    9d24:	1b04      	subs	r4, r0, r4
    9d26:	40a6      	lsls	r6, r4
    9d28:	0033      	movs	r3, r6
    9d2a:	1e5e      	subs	r6, r3, #1
    9d2c:	41b3      	sbcs	r3, r6
    9d2e:	2400      	movs	r4, #0
    9d30:	4313      	orrs	r3, r2
    9d32:	075a      	lsls	r2, r3, #29
    9d34:	d004      	beq.n	9d40 <__aeabi_fadd+0x84>
    9d36:	220f      	movs	r2, #15
    9d38:	401a      	ands	r2, r3
    9d3a:	2a04      	cmp	r2, #4
    9d3c:	d000      	beq.n	9d40 <__aeabi_fadd+0x84>
    9d3e:	3304      	adds	r3, #4
    9d40:	015a      	lsls	r2, r3, #5
    9d42:	d529      	bpl.n	9d98 <__aeabi_fadd+0xdc>
    9d44:	3401      	adds	r4, #1
    9d46:	2cff      	cmp	r4, #255	; 0xff
    9d48:	d100      	bne.n	9d4c <__aeabi_fadd+0x90>
    9d4a:	e080      	b.n	9e4e <__aeabi_fadd+0x192>
    9d4c:	002a      	movs	r2, r5
    9d4e:	019b      	lsls	r3, r3, #6
    9d50:	0a5b      	lsrs	r3, r3, #9
    9d52:	b2e4      	uxtb	r4, r4
    9d54:	025b      	lsls	r3, r3, #9
    9d56:	05e4      	lsls	r4, r4, #23
    9d58:	0a58      	lsrs	r0, r3, #9
    9d5a:	07d2      	lsls	r2, r2, #31
    9d5c:	4320      	orrs	r0, r4
    9d5e:	4310      	orrs	r0, r2
    9d60:	bc04      	pop	{r2}
    9d62:	4690      	mov	r8, r2
    9d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9d66:	2cff      	cmp	r4, #255	; 0xff
    9d68:	d0e3      	beq.n	9d32 <__aeabi_fadd+0x76>
    9d6a:	2180      	movs	r1, #128	; 0x80
    9d6c:	0038      	movs	r0, r7
    9d6e:	04c9      	lsls	r1, r1, #19
    9d70:	4308      	orrs	r0, r1
    9d72:	4684      	mov	ip, r0
    9d74:	2a1b      	cmp	r2, #27
    9d76:	dd00      	ble.n	9d7a <__aeabi_fadd+0xbe>
    9d78:	e081      	b.n	9e7e <__aeabi_fadd+0x1c2>
    9d7a:	2020      	movs	r0, #32
    9d7c:	4661      	mov	r1, ip
    9d7e:	40d1      	lsrs	r1, r2
    9d80:	1a82      	subs	r2, r0, r2
    9d82:	4660      	mov	r0, ip
    9d84:	4090      	lsls	r0, r2
    9d86:	0002      	movs	r2, r0
    9d88:	1e50      	subs	r0, r2, #1
    9d8a:	4182      	sbcs	r2, r0
    9d8c:	430a      	orrs	r2, r1
    9d8e:	1a9b      	subs	r3, r3, r2
    9d90:	015a      	lsls	r2, r3, #5
    9d92:	d4b8      	bmi.n	9d06 <__aeabi_fadd+0x4a>
    9d94:	075a      	lsls	r2, r3, #29
    9d96:	d1ce      	bne.n	9d36 <__aeabi_fadd+0x7a>
    9d98:	08de      	lsrs	r6, r3, #3
    9d9a:	002a      	movs	r2, r5
    9d9c:	2cff      	cmp	r4, #255	; 0xff
    9d9e:	d13a      	bne.n	9e16 <__aeabi_fadd+0x15a>
    9da0:	2e00      	cmp	r6, #0
    9da2:	d100      	bne.n	9da6 <__aeabi_fadd+0xea>
    9da4:	e0ac      	b.n	9f00 <__aeabi_fadd+0x244>
    9da6:	2380      	movs	r3, #128	; 0x80
    9da8:	03db      	lsls	r3, r3, #15
    9daa:	4333      	orrs	r3, r6
    9dac:	025b      	lsls	r3, r3, #9
    9dae:	0a5b      	lsrs	r3, r3, #9
    9db0:	24ff      	movs	r4, #255	; 0xff
    9db2:	e7cf      	b.n	9d54 <__aeabi_fadd+0x98>
    9db4:	1a21      	subs	r1, r4, r0
    9db6:	2900      	cmp	r1, #0
    9db8:	dd51      	ble.n	9e5e <__aeabi_fadd+0x1a2>
    9dba:	b390      	cbz	r0, 9e22 <__aeabi_fadd+0x166>
    9dbc:	2cff      	cmp	r4, #255	; 0xff
    9dbe:	d0b8      	beq.n	9d32 <__aeabi_fadd+0x76>
    9dc0:	2080      	movs	r0, #128	; 0x80
    9dc2:	003e      	movs	r6, r7
    9dc4:	04c0      	lsls	r0, r0, #19
    9dc6:	4306      	orrs	r6, r0
    9dc8:	46b4      	mov	ip, r6
    9dca:	291b      	cmp	r1, #27
    9dcc:	dd00      	ble.n	9dd0 <__aeabi_fadd+0x114>
    9dce:	e0a9      	b.n	9f24 <__aeabi_fadd+0x268>
    9dd0:	2620      	movs	r6, #32
    9dd2:	4660      	mov	r0, ip
    9dd4:	40c8      	lsrs	r0, r1
    9dd6:	1a71      	subs	r1, r6, r1
    9dd8:	4666      	mov	r6, ip
    9dda:	408e      	lsls	r6, r1
    9ddc:	0031      	movs	r1, r6
    9dde:	1e4e      	subs	r6, r1, #1
    9de0:	41b1      	sbcs	r1, r6
    9de2:	4301      	orrs	r1, r0
    9de4:	185b      	adds	r3, r3, r1
    9de6:	0159      	lsls	r1, r3, #5
    9de8:	d5d4      	bpl.n	9d94 <__aeabi_fadd+0xd8>
    9dea:	3401      	adds	r4, #1
    9dec:	2cff      	cmp	r4, #255	; 0xff
    9dee:	d100      	bne.n	9df2 <__aeabi_fadd+0x136>
    9df0:	e086      	b.n	9f00 <__aeabi_fadd+0x244>
    9df2:	2201      	movs	r2, #1
    9df4:	4975      	ldr	r1, [pc, #468]	; (9fcc <__aeabi_fadd+0x310>)
    9df6:	401a      	ands	r2, r3
    9df8:	085b      	lsrs	r3, r3, #1
    9dfa:	400b      	ands	r3, r1
    9dfc:	4313      	orrs	r3, r2
    9dfe:	e798      	b.n	9d32 <__aeabi_fadd+0x76>
    9e00:	2c00      	cmp	r4, #0
    9e02:	d000      	beq.n	9e06 <__aeabi_fadd+0x14a>
    9e04:	e0a3      	b.n	9f4e <__aeabi_fadd+0x292>
    9e06:	2b00      	cmp	r3, #0
    9e08:	d000      	beq.n	9e0c <__aeabi_fadd+0x150>
    9e0a:	e0b1      	b.n	9f70 <__aeabi_fadd+0x2b4>
    9e0c:	003b      	movs	r3, r7
    9e0e:	2f00      	cmp	r7, #0
    9e10:	d160      	bne.n	9ed4 <__aeabi_fadd+0x218>
    9e12:	2600      	movs	r6, #0
    9e14:	2200      	movs	r2, #0
    9e16:	0273      	lsls	r3, r6, #9
    9e18:	0a5b      	lsrs	r3, r3, #9
    9e1a:	b2e4      	uxtb	r4, r4
    9e1c:	e79a      	b.n	9d54 <__aeabi_fadd+0x98>
    9e1e:	0014      	movs	r4, r2
    9e20:	e787      	b.n	9d32 <__aeabi_fadd+0x76>
    9e22:	2f00      	cmp	r7, #0
    9e24:	d04b      	beq.n	9ebe <__aeabi_fadd+0x202>
    9e26:	1e48      	subs	r0, r1, #1
    9e28:	2800      	cmp	r0, #0
    9e2a:	d155      	bne.n	9ed8 <__aeabi_fadd+0x21c>
    9e2c:	4463      	add	r3, ip
    9e2e:	2401      	movs	r4, #1
    9e30:	015a      	lsls	r2, r3, #5
    9e32:	d5af      	bpl.n	9d94 <__aeabi_fadd+0xd8>
    9e34:	2402      	movs	r4, #2
    9e36:	e7dc      	b.n	9df2 <__aeabi_fadd+0x136>
    9e38:	bb22      	cbnz	r2, 9e84 <__aeabi_fadd+0x1c8>
    9e3a:	1c62      	adds	r2, r4, #1
    9e3c:	b2d2      	uxtb	r2, r2
    9e3e:	2a01      	cmp	r2, #1
    9e40:	ddde      	ble.n	9e00 <__aeabi_fadd+0x144>
    9e42:	1bde      	subs	r6, r3, r7
    9e44:	0172      	lsls	r2, r6, #5
    9e46:	d534      	bpl.n	9eb2 <__aeabi_fadd+0x1f6>
    9e48:	1afe      	subs	r6, r7, r3
    9e4a:	000d      	movs	r5, r1
    9e4c:	e75d      	b.n	9d0a <__aeabi_fadd+0x4e>
    9e4e:	002a      	movs	r2, r5
    9e50:	2300      	movs	r3, #0
    9e52:	e77f      	b.n	9d54 <__aeabi_fadd+0x98>
    9e54:	0033      	movs	r3, r6
    9e56:	4a5e      	ldr	r2, [pc, #376]	; (9fd0 <__aeabi_fadd+0x314>)
    9e58:	1a24      	subs	r4, r4, r0
    9e5a:	4013      	ands	r3, r2
    9e5c:	e769      	b.n	9d32 <__aeabi_fadd+0x76>
    9e5e:	2900      	cmp	r1, #0
    9e60:	d162      	bne.n	9f28 <__aeabi_fadd+0x26c>
    9e62:	1c61      	adds	r1, r4, #1
    9e64:	b2c8      	uxtb	r0, r1
    9e66:	2801      	cmp	r0, #1
    9e68:	dd4d      	ble.n	9f06 <__aeabi_fadd+0x24a>
    9e6a:	29ff      	cmp	r1, #255	; 0xff
    9e6c:	d048      	beq.n	9f00 <__aeabi_fadd+0x244>
    9e6e:	4463      	add	r3, ip
    9e70:	085b      	lsrs	r3, r3, #1
    9e72:	000c      	movs	r4, r1
    9e74:	e75d      	b.n	9d32 <__aeabi_fadd+0x76>
    9e76:	2aff      	cmp	r2, #255	; 0xff
    9e78:	d040      	beq.n	9efc <__aeabi_fadd+0x240>
    9e7a:	000a      	movs	r2, r1
    9e7c:	e77a      	b.n	9d74 <__aeabi_fadd+0xb8>
    9e7e:	2201      	movs	r2, #1
    9e80:	1a9b      	subs	r3, r3, r2
    9e82:	e785      	b.n	9d90 <__aeabi_fadd+0xd4>
    9e84:	b1ec      	cbz	r4, 9ec2 <__aeabi_fadd+0x206>
    9e86:	28ff      	cmp	r0, #255	; 0xff
    9e88:	d022      	beq.n	9ed0 <__aeabi_fadd+0x214>
    9e8a:	2480      	movs	r4, #128	; 0x80
    9e8c:	04e4      	lsls	r4, r4, #19
    9e8e:	4252      	negs	r2, r2
    9e90:	4323      	orrs	r3, r4
    9e92:	2a1b      	cmp	r2, #27
    9e94:	dd00      	ble.n	9e98 <__aeabi_fadd+0x1dc>
    9e96:	e086      	b.n	9fa6 <__aeabi_fadd+0x2ea>
    9e98:	001c      	movs	r4, r3
    9e9a:	2520      	movs	r5, #32
    9e9c:	40d4      	lsrs	r4, r2
    9e9e:	1aaa      	subs	r2, r5, r2
    9ea0:	4093      	lsls	r3, r2
    9ea2:	1e5a      	subs	r2, r3, #1
    9ea4:	4193      	sbcs	r3, r2
    9ea6:	4323      	orrs	r3, r4
    9ea8:	4662      	mov	r2, ip
    9eaa:	0004      	movs	r4, r0
    9eac:	1ad3      	subs	r3, r2, r3
    9eae:	000d      	movs	r5, r1
    9eb0:	e727      	b.n	9d02 <__aeabi_fadd+0x46>
    9eb2:	2e00      	cmp	r6, #0
    9eb4:	d000      	beq.n	9eb8 <__aeabi_fadd+0x1fc>
    9eb6:	e728      	b.n	9d0a <__aeabi_fadd+0x4e>
    9eb8:	2200      	movs	r2, #0
    9eba:	2400      	movs	r4, #0
    9ebc:	e7ab      	b.n	9e16 <__aeabi_fadd+0x15a>
    9ebe:	000c      	movs	r4, r1
    9ec0:	e737      	b.n	9d32 <__aeabi_fadd+0x76>
    9ec2:	2b00      	cmp	r3, #0
    9ec4:	d049      	beq.n	9f5a <__aeabi_fadd+0x29e>
    9ec6:	43d2      	mvns	r2, r2
    9ec8:	2a00      	cmp	r2, #0
    9eca:	d0ed      	beq.n	9ea8 <__aeabi_fadd+0x1ec>
    9ecc:	28ff      	cmp	r0, #255	; 0xff
    9ece:	d1e0      	bne.n	9e92 <__aeabi_fadd+0x1d6>
    9ed0:	4663      	mov	r3, ip
    9ed2:	24ff      	movs	r4, #255	; 0xff
    9ed4:	000d      	movs	r5, r1
    9ed6:	e72c      	b.n	9d32 <__aeabi_fadd+0x76>
    9ed8:	29ff      	cmp	r1, #255	; 0xff
    9eda:	d00f      	beq.n	9efc <__aeabi_fadd+0x240>
    9edc:	0001      	movs	r1, r0
    9ede:	e774      	b.n	9dca <__aeabi_fadd+0x10e>
    9ee0:	2b00      	cmp	r3, #0
    9ee2:	d05d      	beq.n	9fa0 <__aeabi_fadd+0x2e4>
    9ee4:	24ff      	movs	r4, #255	; 0xff
    9ee6:	2f00      	cmp	r7, #0
    9ee8:	d100      	bne.n	9eec <__aeabi_fadd+0x230>
    9eea:	e722      	b.n	9d32 <__aeabi_fadd+0x76>
    9eec:	2280      	movs	r2, #128	; 0x80
    9eee:	4641      	mov	r1, r8
    9ef0:	03d2      	lsls	r2, r2, #15
    9ef2:	4211      	tst	r1, r2
    9ef4:	d002      	beq.n	9efc <__aeabi_fadd+0x240>
    9ef6:	4216      	tst	r6, r2
    9ef8:	d100      	bne.n	9efc <__aeabi_fadd+0x240>
    9efa:	003b      	movs	r3, r7
    9efc:	24ff      	movs	r4, #255	; 0xff
    9efe:	e718      	b.n	9d32 <__aeabi_fadd+0x76>
    9f00:	24ff      	movs	r4, #255	; 0xff
    9f02:	2300      	movs	r3, #0
    9f04:	e726      	b.n	9d54 <__aeabi_fadd+0x98>
    9f06:	2c00      	cmp	r4, #0
    9f08:	d1ea      	bne.n	9ee0 <__aeabi_fadd+0x224>
    9f0a:	2b00      	cmp	r3, #0
    9f0c:	d054      	beq.n	9fb8 <__aeabi_fadd+0x2fc>
    9f0e:	2f00      	cmp	r7, #0
    9f10:	d100      	bne.n	9f14 <__aeabi_fadd+0x258>
    9f12:	e70e      	b.n	9d32 <__aeabi_fadd+0x76>
    9f14:	4463      	add	r3, ip
    9f16:	015a      	lsls	r2, r3, #5
    9f18:	d400      	bmi.n	9f1c <__aeabi_fadd+0x260>
    9f1a:	e73b      	b.n	9d94 <__aeabi_fadd+0xd8>
    9f1c:	4a2c      	ldr	r2, [pc, #176]	; (9fd0 <__aeabi_fadd+0x314>)
    9f1e:	000c      	movs	r4, r1
    9f20:	4013      	ands	r3, r2
    9f22:	e706      	b.n	9d32 <__aeabi_fadd+0x76>
    9f24:	2101      	movs	r1, #1
    9f26:	e75d      	b.n	9de4 <__aeabi_fadd+0x128>
    9f28:	b9dc      	cbnz	r4, 9f62 <__aeabi_fadd+0x2a6>
    9f2a:	b3f3      	cbz	r3, 9faa <__aeabi_fadd+0x2ee>
    9f2c:	43c9      	mvns	r1, r1
    9f2e:	b159      	cbz	r1, 9f48 <__aeabi_fadd+0x28c>
    9f30:	28ff      	cmp	r0, #255	; 0xff
    9f32:	d035      	beq.n	9fa0 <__aeabi_fadd+0x2e4>
    9f34:	291b      	cmp	r1, #27
    9f36:	dc47      	bgt.n	9fc8 <__aeabi_fadd+0x30c>
    9f38:	001c      	movs	r4, r3
    9f3a:	2620      	movs	r6, #32
    9f3c:	40cc      	lsrs	r4, r1
    9f3e:	1a71      	subs	r1, r6, r1
    9f40:	408b      	lsls	r3, r1
    9f42:	1e59      	subs	r1, r3, #1
    9f44:	418b      	sbcs	r3, r1
    9f46:	4323      	orrs	r3, r4
    9f48:	4463      	add	r3, ip
    9f4a:	0004      	movs	r4, r0
    9f4c:	e74b      	b.n	9de6 <__aeabi_fadd+0x12a>
    9f4e:	b9c3      	cbnz	r3, 9f82 <__aeabi_fadd+0x2c6>
    9f50:	003b      	movs	r3, r7
    9f52:	b36f      	cbz	r7, 9fb0 <__aeabi_fadd+0x2f4>
    9f54:	000d      	movs	r5, r1
    9f56:	24ff      	movs	r4, #255	; 0xff
    9f58:	e6eb      	b.n	9d32 <__aeabi_fadd+0x76>
    9f5a:	003b      	movs	r3, r7
    9f5c:	0004      	movs	r4, r0
    9f5e:	000d      	movs	r5, r1
    9f60:	e6e7      	b.n	9d32 <__aeabi_fadd+0x76>
    9f62:	28ff      	cmp	r0, #255	; 0xff
    9f64:	d01c      	beq.n	9fa0 <__aeabi_fadd+0x2e4>
    9f66:	2480      	movs	r4, #128	; 0x80
    9f68:	04e4      	lsls	r4, r4, #19
    9f6a:	4249      	negs	r1, r1
    9f6c:	4323      	orrs	r3, r4
    9f6e:	e7e1      	b.n	9f34 <__aeabi_fadd+0x278>
    9f70:	2f00      	cmp	r7, #0
    9f72:	d100      	bne.n	9f76 <__aeabi_fadd+0x2ba>
    9f74:	e6dd      	b.n	9d32 <__aeabi_fadd+0x76>
    9f76:	1bde      	subs	r6, r3, r7
    9f78:	0172      	lsls	r2, r6, #5
    9f7a:	d51f      	bpl.n	9fbc <__aeabi_fadd+0x300>
    9f7c:	1afb      	subs	r3, r7, r3
    9f7e:	000d      	movs	r5, r1
    9f80:	e6d7      	b.n	9d32 <__aeabi_fadd+0x76>
    9f82:	24ff      	movs	r4, #255	; 0xff
    9f84:	2f00      	cmp	r7, #0
    9f86:	d100      	bne.n	9f8a <__aeabi_fadd+0x2ce>
    9f88:	e6d3      	b.n	9d32 <__aeabi_fadd+0x76>
    9f8a:	2280      	movs	r2, #128	; 0x80
    9f8c:	4640      	mov	r0, r8
    9f8e:	03d2      	lsls	r2, r2, #15
    9f90:	4210      	tst	r0, r2
    9f92:	d0b3      	beq.n	9efc <__aeabi_fadd+0x240>
    9f94:	4216      	tst	r6, r2
    9f96:	d1b1      	bne.n	9efc <__aeabi_fadd+0x240>
    9f98:	003b      	movs	r3, r7
    9f9a:	000d      	movs	r5, r1
    9f9c:	24ff      	movs	r4, #255	; 0xff
    9f9e:	e6c8      	b.n	9d32 <__aeabi_fadd+0x76>
    9fa0:	4663      	mov	r3, ip
    9fa2:	24ff      	movs	r4, #255	; 0xff
    9fa4:	e6c5      	b.n	9d32 <__aeabi_fadd+0x76>
    9fa6:	2301      	movs	r3, #1
    9fa8:	e77e      	b.n	9ea8 <__aeabi_fadd+0x1ec>
    9faa:	003b      	movs	r3, r7
    9fac:	0004      	movs	r4, r0
    9fae:	e6c0      	b.n	9d32 <__aeabi_fadd+0x76>
    9fb0:	2680      	movs	r6, #128	; 0x80
    9fb2:	2200      	movs	r2, #0
    9fb4:	03f6      	lsls	r6, r6, #15
    9fb6:	e6f6      	b.n	9da6 <__aeabi_fadd+0xea>
    9fb8:	003b      	movs	r3, r7
    9fba:	e6ba      	b.n	9d32 <__aeabi_fadd+0x76>
    9fbc:	0033      	movs	r3, r6
    9fbe:	2e00      	cmp	r6, #0
    9fc0:	d000      	beq.n	9fc4 <__aeabi_fadd+0x308>
    9fc2:	e6e7      	b.n	9d94 <__aeabi_fadd+0xd8>
    9fc4:	2200      	movs	r2, #0
    9fc6:	e726      	b.n	9e16 <__aeabi_fadd+0x15a>
    9fc8:	2301      	movs	r3, #1
    9fca:	e7bd      	b.n	9f48 <__aeabi_fadd+0x28c>
    9fcc:	7dffffff 	.word	0x7dffffff
    9fd0:	fbffffff 	.word	0xfbffffff

00009fd4 <__aeabi_fdiv>:
    9fd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    9fd6:	4657      	mov	r7, sl
    9fd8:	464e      	mov	r6, r9
    9fda:	46de      	mov	lr, fp
    9fdc:	4645      	mov	r5, r8
    9fde:	b5e0      	push	{r5, r6, r7, lr}
    9fe0:	0043      	lsls	r3, r0, #1
    9fe2:	0244      	lsls	r4, r0, #9
    9fe4:	0fc6      	lsrs	r6, r0, #31
    9fe6:	0e1b      	lsrs	r3, r3, #24
    9fe8:	b083      	sub	sp, #12
    9fea:	1c0f      	adds	r7, r1, #0
    9fec:	0a64      	lsrs	r4, r4, #9
    9fee:	46b2      	mov	sl, r6
    9ff0:	2b00      	cmp	r3, #0
    9ff2:	d054      	beq.n	a09e <__aeabi_fdiv+0xca>
    9ff4:	2bff      	cmp	r3, #255	; 0xff
    9ff6:	d028      	beq.n	a04a <__aeabi_fdiv+0x76>
    9ff8:	2280      	movs	r2, #128	; 0x80
    9ffa:	00e4      	lsls	r4, r4, #3
    9ffc:	04d2      	lsls	r2, r2, #19
    9ffe:	4314      	orrs	r4, r2
    a000:	227f      	movs	r2, #127	; 0x7f
    a002:	4252      	negs	r2, r2
    a004:	4690      	mov	r8, r2
    a006:	f240 0900 	movw	r9, #0
    a00a:	f240 0b00 	movw	fp, #0
    a00e:	4498      	add	r8, r3
    a010:	0078      	lsls	r0, r7, #1
    a012:	027d      	lsls	r5, r7, #9
    a014:	0ffb      	lsrs	r3, r7, #31
    a016:	0e00      	lsrs	r0, r0, #24
    a018:	0a6d      	lsrs	r5, r5, #9
    a01a:	9300      	str	r3, [sp, #0]
    a01c:	b328      	cbz	r0, a06a <__aeabi_fdiv+0x96>
    a01e:	28ff      	cmp	r0, #255	; 0xff
    a020:	d045      	beq.n	a0ae <__aeabi_fdiv+0xda>
    a022:	2380      	movs	r3, #128	; 0x80
    a024:	2100      	movs	r1, #0
    a026:	00ed      	lsls	r5, r5, #3
    a028:	04db      	lsls	r3, r3, #19
    a02a:	431d      	orrs	r5, r3
    a02c:	387f      	subs	r0, #127	; 0x7f
    a02e:	4647      	mov	r7, r8
    a030:	1a38      	subs	r0, r7, r0
    a032:	464f      	mov	r7, r9
    a034:	430f      	orrs	r7, r1
    a036:	00bf      	lsls	r7, r7, #2
    a038:	46b9      	mov	r9, r7
    a03a:	0033      	movs	r3, r6
    a03c:	9a00      	ldr	r2, [sp, #0]
    a03e:	4f87      	ldr	r7, [pc, #540]	; (a25c <__aeabi_fdiv+0x288>)
    a040:	4053      	eors	r3, r2
    a042:	464a      	mov	r2, r9
    a044:	58ba      	ldr	r2, [r7, r2]
    a046:	9301      	str	r3, [sp, #4]
    a048:	4697      	mov	pc, r2
    a04a:	2c00      	cmp	r4, #0
    a04c:	d14d      	bne.n	a0ea <__aeabi_fdiv+0x116>
    a04e:	0078      	lsls	r0, r7, #1
    a050:	027d      	lsls	r5, r7, #9
    a052:	0ffb      	lsrs	r3, r7, #31
    a054:	0e00      	lsrs	r0, r0, #24
    a056:	f240 0908 	movw	r9, #8
    a05a:	f240 08ff 	movw	r8, #255	; 0xff
    a05e:	f240 0b02 	movw	fp, #2
    a062:	0a6d      	lsrs	r5, r5, #9
    a064:	9300      	str	r3, [sp, #0]
    a066:	2800      	cmp	r0, #0
    a068:	d1d9      	bne.n	a01e <__aeabi_fdiv+0x4a>
    a06a:	bb25      	cbnz	r5, a0b6 <__aeabi_fdiv+0xe2>
    a06c:	2000      	movs	r0, #0
    a06e:	2101      	movs	r1, #1
    a070:	0033      	movs	r3, r6
    a072:	9a00      	ldr	r2, [sp, #0]
    a074:	4f7a      	ldr	r7, [pc, #488]	; (a260 <__aeabi_fdiv+0x28c>)
    a076:	4053      	eors	r3, r2
    a078:	4642      	mov	r2, r8
    a07a:	1a10      	subs	r0, r2, r0
    a07c:	464a      	mov	r2, r9
    a07e:	430a      	orrs	r2, r1
    a080:	0092      	lsls	r2, r2, #2
    a082:	58ba      	ldr	r2, [r7, r2]
    a084:	001d      	movs	r5, r3
    a086:	4697      	mov	pc, r2
    a088:	9b00      	ldr	r3, [sp, #0]
    a08a:	002c      	movs	r4, r5
    a08c:	469a      	mov	sl, r3
    a08e:	468b      	mov	fp, r1
    a090:	465b      	mov	r3, fp
    a092:	2b02      	cmp	r3, #2
    a094:	d130      	bne.n	a0f8 <__aeabi_fdiv+0x124>
    a096:	4653      	mov	r3, sl
    a098:	21ff      	movs	r1, #255	; 0xff
    a09a:	2400      	movs	r4, #0
    a09c:	e037      	b.n	a10e <__aeabi_fdiv+0x13a>
    a09e:	b9b4      	cbnz	r4, a0ce <__aeabi_fdiv+0xfa>
    a0a0:	f240 0904 	movw	r9, #4
    a0a4:	f240 0800 	movw	r8, #0
    a0a8:	f240 0b01 	movw	fp, #1
    a0ac:	e7b0      	b.n	a010 <__aeabi_fdiv+0x3c>
    a0ae:	20ff      	movs	r0, #255	; 0xff
    a0b0:	b95d      	cbnz	r5, a0ca <__aeabi_fdiv+0xf6>
    a0b2:	2102      	movs	r1, #2
    a0b4:	e7dc      	b.n	a070 <__aeabi_fdiv+0x9c>
    a0b6:	0028      	movs	r0, r5
    a0b8:	f000 fdc4 	bl	ac44 <__clzsi2>
    a0bc:	1f43      	subs	r3, r0, #5
    a0be:	409d      	lsls	r5, r3
    a0c0:	2376      	movs	r3, #118	; 0x76
    a0c2:	425b      	negs	r3, r3
    a0c4:	1a18      	subs	r0, r3, r0
    a0c6:	2100      	movs	r1, #0
    a0c8:	e7b1      	b.n	a02e <__aeabi_fdiv+0x5a>
    a0ca:	2103      	movs	r1, #3
    a0cc:	e7af      	b.n	a02e <__aeabi_fdiv+0x5a>
    a0ce:	0020      	movs	r0, r4
    a0d0:	f000 fdb8 	bl	ac44 <__clzsi2>
    a0d4:	1f43      	subs	r3, r0, #5
    a0d6:	409c      	lsls	r4, r3
    a0d8:	2376      	movs	r3, #118	; 0x76
    a0da:	425b      	negs	r3, r3
    a0dc:	1a1b      	subs	r3, r3, r0
    a0de:	4698      	mov	r8, r3
    a0e0:	f240 0900 	movw	r9, #0
    a0e4:	f240 0b00 	movw	fp, #0
    a0e8:	e792      	b.n	a010 <__aeabi_fdiv+0x3c>
    a0ea:	f240 090c 	movw	r9, #12
    a0ee:	f240 08ff 	movw	r8, #255	; 0xff
    a0f2:	f240 0b03 	movw	fp, #3
    a0f6:	e78b      	b.n	a010 <__aeabi_fdiv+0x3c>
    a0f8:	2b03      	cmp	r3, #3
    a0fa:	d100      	bne.n	a0fe <__aeabi_fdiv+0x12a>
    a0fc:	e0a5      	b.n	a24a <__aeabi_fdiv+0x276>
    a0fe:	4655      	mov	r5, sl
    a100:	2b01      	cmp	r3, #1
    a102:	d000      	beq.n	a106 <__aeabi_fdiv+0x132>
    a104:	e081      	b.n	a20a <__aeabi_fdiv+0x236>
    a106:	2301      	movs	r3, #1
    a108:	2100      	movs	r1, #0
    a10a:	2400      	movs	r4, #0
    a10c:	402b      	ands	r3, r5
    a10e:	0264      	lsls	r4, r4, #9
    a110:	05c9      	lsls	r1, r1, #23
    a112:	0a60      	lsrs	r0, r4, #9
    a114:	07db      	lsls	r3, r3, #31
    a116:	4308      	orrs	r0, r1
    a118:	4318      	orrs	r0, r3
    a11a:	b003      	add	sp, #12
    a11c:	bc3c      	pop	{r2, r3, r4, r5}
    a11e:	4690      	mov	r8, r2
    a120:	4699      	mov	r9, r3
    a122:	46a2      	mov	sl, r4
    a124:	46ab      	mov	fp, r5
    a126:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a128:	2480      	movs	r4, #128	; 0x80
    a12a:	2300      	movs	r3, #0
    a12c:	03e4      	lsls	r4, r4, #15
    a12e:	21ff      	movs	r1, #255	; 0xff
    a130:	e7ed      	b.n	a10e <__aeabi_fdiv+0x13a>
    a132:	21ff      	movs	r1, #255	; 0xff
    a134:	2400      	movs	r4, #0
    a136:	e7ea      	b.n	a10e <__aeabi_fdiv+0x13a>
    a138:	2301      	movs	r3, #1
    a13a:	1a59      	subs	r1, r3, r1
    a13c:	291b      	cmp	r1, #27
    a13e:	dd66      	ble.n	a20e <__aeabi_fdiv+0x23a>
    a140:	9a01      	ldr	r2, [sp, #4]
    a142:	4013      	ands	r3, r2
    a144:	2100      	movs	r1, #0
    a146:	2400      	movs	r4, #0
    a148:	e7e1      	b.n	a10e <__aeabi_fdiv+0x13a>
    a14a:	2380      	movs	r3, #128	; 0x80
    a14c:	03db      	lsls	r3, r3, #15
    a14e:	421c      	tst	r4, r3
    a150:	d038      	beq.n	a1c4 <__aeabi_fdiv+0x1f0>
    a152:	421d      	tst	r5, r3
    a154:	d051      	beq.n	a1fa <__aeabi_fdiv+0x226>
    a156:	431c      	orrs	r4, r3
    a158:	0264      	lsls	r4, r4, #9
    a15a:	0a64      	lsrs	r4, r4, #9
    a15c:	0033      	movs	r3, r6
    a15e:	21ff      	movs	r1, #255	; 0xff
    a160:	e7d5      	b.n	a10e <__aeabi_fdiv+0x13a>
    a162:	0163      	lsls	r3, r4, #5
    a164:	016c      	lsls	r4, r5, #5
    a166:	42a3      	cmp	r3, r4
    a168:	d23b      	bcs.n	a1e2 <__aeabi_fdiv+0x20e>
    a16a:	261b      	movs	r6, #27
    a16c:	2100      	movs	r1, #0
    a16e:	3801      	subs	r0, #1
    a170:	2501      	movs	r5, #1
    a172:	001f      	movs	r7, r3
    a174:	0049      	lsls	r1, r1, #1
    a176:	005b      	lsls	r3, r3, #1
    a178:	2f00      	cmp	r7, #0
    a17a:	db01      	blt.n	a180 <__aeabi_fdiv+0x1ac>
    a17c:	429c      	cmp	r4, r3
    a17e:	d801      	bhi.n	a184 <__aeabi_fdiv+0x1b0>
    a180:	1b1b      	subs	r3, r3, r4
    a182:	4329      	orrs	r1, r5
    a184:	3e01      	subs	r6, #1
    a186:	2e00      	cmp	r6, #0
    a188:	d1f3      	bne.n	a172 <__aeabi_fdiv+0x19e>
    a18a:	001c      	movs	r4, r3
    a18c:	1e63      	subs	r3, r4, #1
    a18e:	419c      	sbcs	r4, r3
    a190:	430c      	orrs	r4, r1
    a192:	0001      	movs	r1, r0
    a194:	317f      	adds	r1, #127	; 0x7f
    a196:	2900      	cmp	r1, #0
    a198:	ddce      	ble.n	a138 <__aeabi_fdiv+0x164>
    a19a:	0763      	lsls	r3, r4, #29
    a19c:	d004      	beq.n	a1a8 <__aeabi_fdiv+0x1d4>
    a19e:	230f      	movs	r3, #15
    a1a0:	4023      	ands	r3, r4
    a1a2:	2b04      	cmp	r3, #4
    a1a4:	d000      	beq.n	a1a8 <__aeabi_fdiv+0x1d4>
    a1a6:	3404      	adds	r4, #4
    a1a8:	0123      	lsls	r3, r4, #4
    a1aa:	d503      	bpl.n	a1b4 <__aeabi_fdiv+0x1e0>
    a1ac:	0001      	movs	r1, r0
    a1ae:	4b2d      	ldr	r3, [pc, #180]	; (a264 <__aeabi_fdiv+0x290>)
    a1b0:	3180      	adds	r1, #128	; 0x80
    a1b2:	401c      	ands	r4, r3
    a1b4:	29fe      	cmp	r1, #254	; 0xfe
    a1b6:	dd0d      	ble.n	a1d4 <__aeabi_fdiv+0x200>
    a1b8:	2301      	movs	r3, #1
    a1ba:	9a01      	ldr	r2, [sp, #4]
    a1bc:	21ff      	movs	r1, #255	; 0xff
    a1be:	4013      	ands	r3, r2
    a1c0:	2400      	movs	r4, #0
    a1c2:	e7a4      	b.n	a10e <__aeabi_fdiv+0x13a>
    a1c4:	2380      	movs	r3, #128	; 0x80
    a1c6:	03db      	lsls	r3, r3, #15
    a1c8:	431c      	orrs	r4, r3
    a1ca:	0264      	lsls	r4, r4, #9
    a1cc:	0a64      	lsrs	r4, r4, #9
    a1ce:	0033      	movs	r3, r6
    a1d0:	21ff      	movs	r1, #255	; 0xff
    a1d2:	e79c      	b.n	a10e <__aeabi_fdiv+0x13a>
    a1d4:	2301      	movs	r3, #1
    a1d6:	9a01      	ldr	r2, [sp, #4]
    a1d8:	01a4      	lsls	r4, r4, #6
    a1da:	0a64      	lsrs	r4, r4, #9
    a1dc:	b2c9      	uxtb	r1, r1
    a1de:	4013      	ands	r3, r2
    a1e0:	e795      	b.n	a10e <__aeabi_fdiv+0x13a>
    a1e2:	1b1b      	subs	r3, r3, r4
    a1e4:	261a      	movs	r6, #26
    a1e6:	2101      	movs	r1, #1
    a1e8:	e7c2      	b.n	a170 <__aeabi_fdiv+0x19c>
    a1ea:	9b00      	ldr	r3, [sp, #0]
    a1ec:	468b      	mov	fp, r1
    a1ee:	469a      	mov	sl, r3
    a1f0:	2400      	movs	r4, #0
    a1f2:	e74d      	b.n	a090 <__aeabi_fdiv+0xbc>
    a1f4:	0263      	lsls	r3, r4, #9
    a1f6:	d5e5      	bpl.n	a1c4 <__aeabi_fdiv+0x1f0>
    a1f8:	2500      	movs	r5, #0
    a1fa:	2480      	movs	r4, #128	; 0x80
    a1fc:	03e4      	lsls	r4, r4, #15
    a1fe:	432c      	orrs	r4, r5
    a200:	0264      	lsls	r4, r4, #9
    a202:	0a64      	lsrs	r4, r4, #9
    a204:	9b00      	ldr	r3, [sp, #0]
    a206:	21ff      	movs	r1, #255	; 0xff
    a208:	e781      	b.n	a10e <__aeabi_fdiv+0x13a>
    a20a:	9501      	str	r5, [sp, #4]
    a20c:	e7c1      	b.n	a192 <__aeabi_fdiv+0x1be>
    a20e:	0023      	movs	r3, r4
    a210:	2020      	movs	r0, #32
    a212:	40cb      	lsrs	r3, r1
    a214:	1a41      	subs	r1, r0, r1
    a216:	408c      	lsls	r4, r1
    a218:	1e61      	subs	r1, r4, #1
    a21a:	418c      	sbcs	r4, r1
    a21c:	431c      	orrs	r4, r3
    a21e:	0763      	lsls	r3, r4, #29
    a220:	d004      	beq.n	a22c <__aeabi_fdiv+0x258>
    a222:	230f      	movs	r3, #15
    a224:	4023      	ands	r3, r4
    a226:	2b04      	cmp	r3, #4
    a228:	d000      	beq.n	a22c <__aeabi_fdiv+0x258>
    a22a:	3404      	adds	r4, #4
    a22c:	0163      	lsls	r3, r4, #5
    a22e:	d505      	bpl.n	a23c <__aeabi_fdiv+0x268>
    a230:	2301      	movs	r3, #1
    a232:	9a01      	ldr	r2, [sp, #4]
    a234:	2101      	movs	r1, #1
    a236:	4013      	ands	r3, r2
    a238:	2400      	movs	r4, #0
    a23a:	e768      	b.n	a10e <__aeabi_fdiv+0x13a>
    a23c:	2301      	movs	r3, #1
    a23e:	9a01      	ldr	r2, [sp, #4]
    a240:	01a4      	lsls	r4, r4, #6
    a242:	0a64      	lsrs	r4, r4, #9
    a244:	4013      	ands	r3, r2
    a246:	2100      	movs	r1, #0
    a248:	e761      	b.n	a10e <__aeabi_fdiv+0x13a>
    a24a:	2380      	movs	r3, #128	; 0x80
    a24c:	03db      	lsls	r3, r3, #15
    a24e:	431c      	orrs	r4, r3
    a250:	0264      	lsls	r4, r4, #9
    a252:	0a64      	lsrs	r4, r4, #9
    a254:	4653      	mov	r3, sl
    a256:	21ff      	movs	r1, #255	; 0xff
    a258:	e759      	b.n	a10e <__aeabi_fdiv+0x13a>
    a25a:	46c0      	nop			; (mov r8, r8)
    a25c:	0000b980 	.word	0x0000b980
    a260:	0000b9c0 	.word	0x0000b9c0
    a264:	f7ffffff 	.word	0xf7ffffff

0000a268 <__eqsf2>:
    a268:	b570      	push	{r4, r5, r6, lr}
    a26a:	0042      	lsls	r2, r0, #1
    a26c:	0245      	lsls	r5, r0, #9
    a26e:	024e      	lsls	r6, r1, #9
    a270:	004c      	lsls	r4, r1, #1
    a272:	0fc3      	lsrs	r3, r0, #31
    a274:	0a6d      	lsrs	r5, r5, #9
    a276:	0e12      	lsrs	r2, r2, #24
    a278:	0a76      	lsrs	r6, r6, #9
    a27a:	0e24      	lsrs	r4, r4, #24
    a27c:	0fc9      	lsrs	r1, r1, #31
    a27e:	2001      	movs	r0, #1
    a280:	2aff      	cmp	r2, #255	; 0xff
    a282:	d006      	beq.n	a292 <__eqsf2+0x2a>
    a284:	2cff      	cmp	r4, #255	; 0xff
    a286:	d003      	beq.n	a290 <__eqsf2+0x28>
    a288:	42a2      	cmp	r2, r4
    a28a:	d101      	bne.n	a290 <__eqsf2+0x28>
    a28c:	42b5      	cmp	r5, r6
    a28e:	d006      	beq.n	a29e <__eqsf2+0x36>
    a290:	bd70      	pop	{r4, r5, r6, pc}
    a292:	2d00      	cmp	r5, #0
    a294:	d1fc      	bne.n	a290 <__eqsf2+0x28>
    a296:	2cff      	cmp	r4, #255	; 0xff
    a298:	d1fa      	bne.n	a290 <__eqsf2+0x28>
    a29a:	2e00      	cmp	r6, #0
    a29c:	d1f8      	bne.n	a290 <__eqsf2+0x28>
    a29e:	428b      	cmp	r3, r1
    a2a0:	d006      	beq.n	a2b0 <__eqsf2+0x48>
    a2a2:	2001      	movs	r0, #1
    a2a4:	2a00      	cmp	r2, #0
    a2a6:	d1f3      	bne.n	a290 <__eqsf2+0x28>
    a2a8:	0028      	movs	r0, r5
    a2aa:	1e45      	subs	r5, r0, #1
    a2ac:	41a8      	sbcs	r0, r5
    a2ae:	e7ef      	b.n	a290 <__eqsf2+0x28>
    a2b0:	2000      	movs	r0, #0
    a2b2:	e7ed      	b.n	a290 <__eqsf2+0x28>

0000a2b4 <__gesf2>:
    a2b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    a2b6:	0042      	lsls	r2, r0, #1
    a2b8:	0245      	lsls	r5, r0, #9
    a2ba:	024c      	lsls	r4, r1, #9
    a2bc:	0fc3      	lsrs	r3, r0, #31
    a2be:	0048      	lsls	r0, r1, #1
    a2c0:	0a6d      	lsrs	r5, r5, #9
    a2c2:	0e12      	lsrs	r2, r2, #24
    a2c4:	0a64      	lsrs	r4, r4, #9
    a2c6:	0e00      	lsrs	r0, r0, #24
    a2c8:	0fc9      	lsrs	r1, r1, #31
    a2ca:	2aff      	cmp	r2, #255	; 0xff
    a2cc:	d01d      	beq.n	a30a <__gesf2+0x56>
    a2ce:	28ff      	cmp	r0, #255	; 0xff
    a2d0:	d010      	beq.n	a2f4 <__gesf2+0x40>
    a2d2:	b93a      	cbnz	r2, a2e4 <__gesf2+0x30>
    a2d4:	426e      	negs	r6, r5
    a2d6:	416e      	adcs	r6, r5
    a2d8:	b2f6      	uxtb	r6, r6
    a2da:	b980      	cbnz	r0, a2fe <__gesf2+0x4a>
    a2dc:	b97c      	cbnz	r4, a2fe <__gesf2+0x4a>
    a2de:	2000      	movs	r0, #0
    a2e0:	b13d      	cbz	r5, a2f2 <__gesf2+0x3e>
    a2e2:	e003      	b.n	a2ec <__gesf2+0x38>
    a2e4:	b900      	cbnz	r0, a2e8 <__gesf2+0x34>
    a2e6:	b10c      	cbz	r4, a2ec <__gesf2+0x38>
    a2e8:	428b      	cmp	r3, r1
    a2ea:	d011      	beq.n	a310 <__gesf2+0x5c>
    a2ec:	2101      	movs	r1, #1
    a2ee:	4258      	negs	r0, r3
    a2f0:	4308      	orrs	r0, r1
    a2f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a2f4:	2c00      	cmp	r4, #0
    a2f6:	d0ec      	beq.n	a2d2 <__gesf2+0x1e>
    a2f8:	2002      	movs	r0, #2
    a2fa:	4240      	negs	r0, r0
    a2fc:	e7f9      	b.n	a2f2 <__gesf2+0x3e>
    a2fe:	2e00      	cmp	r6, #0
    a300:	d0f2      	beq.n	a2e8 <__gesf2+0x34>
    a302:	2001      	movs	r0, #1
    a304:	3901      	subs	r1, #1
    a306:	4308      	orrs	r0, r1
    a308:	e7f3      	b.n	a2f2 <__gesf2+0x3e>
    a30a:	2d00      	cmp	r5, #0
    a30c:	d0df      	beq.n	a2ce <__gesf2+0x1a>
    a30e:	e7f3      	b.n	a2f8 <__gesf2+0x44>
    a310:	4282      	cmp	r2, r0
    a312:	dceb      	bgt.n	a2ec <__gesf2+0x38>
    a314:	db04      	blt.n	a320 <__gesf2+0x6c>
    a316:	42a5      	cmp	r5, r4
    a318:	d8e8      	bhi.n	a2ec <__gesf2+0x38>
    a31a:	2000      	movs	r0, #0
    a31c:	42a5      	cmp	r5, r4
    a31e:	d2e8      	bcs.n	a2f2 <__gesf2+0x3e>
    a320:	2101      	movs	r1, #1
    a322:	1e58      	subs	r0, r3, #1
    a324:	4308      	orrs	r0, r1
    a326:	e7e4      	b.n	a2f2 <__gesf2+0x3e>

0000a328 <__lesf2>:
    a328:	b5f0      	push	{r4, r5, r6, r7, lr}
    a32a:	0042      	lsls	r2, r0, #1
    a32c:	024d      	lsls	r5, r1, #9
    a32e:	004c      	lsls	r4, r1, #1
    a330:	0246      	lsls	r6, r0, #9
    a332:	0a76      	lsrs	r6, r6, #9
    a334:	0e12      	lsrs	r2, r2, #24
    a336:	0fc3      	lsrs	r3, r0, #31
    a338:	0a6d      	lsrs	r5, r5, #9
    a33a:	0e24      	lsrs	r4, r4, #24
    a33c:	0fc9      	lsrs	r1, r1, #31
    a33e:	2aff      	cmp	r2, #255	; 0xff
    a340:	d016      	beq.n	a370 <__lesf2+0x48>
    a342:	2cff      	cmp	r4, #255	; 0xff
    a344:	d010      	beq.n	a368 <__lesf2+0x40>
    a346:	b942      	cbnz	r2, a35a <__lesf2+0x32>
    a348:	4270      	negs	r0, r6
    a34a:	4170      	adcs	r0, r6
    a34c:	b2c0      	uxtb	r0, r0
    a34e:	b19c      	cbz	r4, a378 <__lesf2+0x50>
    a350:	b120      	cbz	r0, a35c <__lesf2+0x34>
    a352:	2001      	movs	r0, #1
    a354:	3901      	subs	r1, #1
    a356:	4308      	orrs	r0, r1
    a358:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a35a:	b19c      	cbz	r4, a384 <__lesf2+0x5c>
    a35c:	4299      	cmp	r1, r3
    a35e:	d014      	beq.n	a38a <__lesf2+0x62>
    a360:	2001      	movs	r0, #1
    a362:	425b      	negs	r3, r3
    a364:	4318      	orrs	r0, r3
    a366:	e7f7      	b.n	a358 <__lesf2+0x30>
    a368:	2002      	movs	r0, #2
    a36a:	2d00      	cmp	r5, #0
    a36c:	d1f4      	bne.n	a358 <__lesf2+0x30>
    a36e:	e7ea      	b.n	a346 <__lesf2+0x1e>
    a370:	2002      	movs	r0, #2
    a372:	2e00      	cmp	r6, #0
    a374:	d1f0      	bne.n	a358 <__lesf2+0x30>
    a376:	e7e4      	b.n	a342 <__lesf2+0x1a>
    a378:	2d00      	cmp	r5, #0
    a37a:	d1e9      	bne.n	a350 <__lesf2+0x28>
    a37c:	2000      	movs	r0, #0
    a37e:	2e00      	cmp	r6, #0
    a380:	d0ea      	beq.n	a358 <__lesf2+0x30>
    a382:	e7ed      	b.n	a360 <__lesf2+0x38>
    a384:	2d00      	cmp	r5, #0
    a386:	d1e9      	bne.n	a35c <__lesf2+0x34>
    a388:	e7ea      	b.n	a360 <__lesf2+0x38>
    a38a:	42a2      	cmp	r2, r4
    a38c:	dc06      	bgt.n	a39c <__lesf2+0x74>
    a38e:	dbe0      	blt.n	a352 <__lesf2+0x2a>
    a390:	42ae      	cmp	r6, r5
    a392:	d803      	bhi.n	a39c <__lesf2+0x74>
    a394:	2000      	movs	r0, #0
    a396:	42ae      	cmp	r6, r5
    a398:	d3db      	bcc.n	a352 <__lesf2+0x2a>
    a39a:	e7dd      	b.n	a358 <__lesf2+0x30>
    a39c:	2001      	movs	r0, #1
    a39e:	4249      	negs	r1, r1
    a3a0:	4308      	orrs	r0, r1
    a3a2:	e7d9      	b.n	a358 <__lesf2+0x30>

0000a3a4 <__aeabi_fmul>:
    a3a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    a3a6:	4646      	mov	r6, r8
    a3a8:	464f      	mov	r7, r9
    a3aa:	46d6      	mov	lr, sl
    a3ac:	0243      	lsls	r3, r0, #9
    a3ae:	b5c0      	push	{r6, r7, lr}
    a3b0:	0046      	lsls	r6, r0, #1
    a3b2:	0a5b      	lsrs	r3, r3, #9
    a3b4:	0e36      	lsrs	r6, r6, #24
    a3b6:	4688      	mov	r8, r1
    a3b8:	4699      	mov	r9, r3
    a3ba:	0fc4      	lsrs	r4, r0, #31
    a3bc:	2e00      	cmp	r6, #0
    a3be:	d051      	beq.n	a464 <__aeabi_fmul+0xc0>
    a3c0:	2eff      	cmp	r6, #255	; 0xff
    a3c2:	d023      	beq.n	a40c <__aeabi_fmul+0x68>
    a3c4:	2080      	movs	r0, #128	; 0x80
    a3c6:	00db      	lsls	r3, r3, #3
    a3c8:	04c0      	lsls	r0, r0, #19
    a3ca:	4318      	orrs	r0, r3
    a3cc:	4681      	mov	r9, r0
    a3ce:	2700      	movs	r7, #0
    a3d0:	f240 0a00 	movw	sl, #0
    a3d4:	3e7f      	subs	r6, #127	; 0x7f
    a3d6:	4643      	mov	r3, r8
    a3d8:	0058      	lsls	r0, r3, #1
    a3da:	025d      	lsls	r5, r3, #9
    a3dc:	0e00      	lsrs	r0, r0, #24
    a3de:	0fdb      	lsrs	r3, r3, #31
    a3e0:	0a6d      	lsrs	r5, r5, #9
    a3e2:	4698      	mov	r8, r3
    a3e4:	b308      	cbz	r0, a42a <__aeabi_fmul+0x86>
    a3e6:	28ff      	cmp	r0, #255	; 0xff
    a3e8:	d042      	beq.n	a470 <__aeabi_fmul+0xcc>
    a3ea:	00eb      	lsls	r3, r5, #3
    a3ec:	2580      	movs	r5, #128	; 0x80
    a3ee:	04ed      	lsls	r5, r5, #19
    a3f0:	431d      	orrs	r5, r3
    a3f2:	2300      	movs	r3, #0
    a3f4:	387f      	subs	r0, #127	; 0x7f
    a3f6:	4641      	mov	r1, r8
    a3f8:	1836      	adds	r6, r6, r0
    a3fa:	4061      	eors	r1, r4
    a3fc:	1c70      	adds	r0, r6, #1
    a3fe:	431f      	orrs	r7, r3
    a400:	2f0f      	cmp	r7, #15
    a402:	d869      	bhi.n	a4d8 <__aeabi_fmul+0x134>
    a404:	4a7b      	ldr	r2, [pc, #492]	; (a5f4 <__aeabi_fmul+0x250>)
    a406:	00bf      	lsls	r7, r7, #2
    a408:	59d2      	ldr	r2, [r2, r7]
    a40a:	4697      	mov	pc, r2
    a40c:	2b00      	cmp	r3, #0
    a40e:	d148      	bne.n	a4a2 <__aeabi_fmul+0xfe>
    a410:	4643      	mov	r3, r8
    a412:	0058      	lsls	r0, r3, #1
    a414:	025d      	lsls	r5, r3, #9
    a416:	0e00      	lsrs	r0, r0, #24
    a418:	0fdb      	lsrs	r3, r3, #31
    a41a:	2708      	movs	r7, #8
    a41c:	26ff      	movs	r6, #255	; 0xff
    a41e:	f240 0a02 	movw	sl, #2
    a422:	0a6d      	lsrs	r5, r5, #9
    a424:	4698      	mov	r8, r3
    a426:	2800      	cmp	r0, #0
    a428:	d1dd      	bne.n	a3e6 <__aeabi_fmul+0x42>
    a42a:	2d00      	cmp	r5, #0
    a42c:	d13e      	bne.n	a4ac <__aeabi_fmul+0x108>
    a42e:	2000      	movs	r0, #0
    a430:	2301      	movs	r3, #1
    a432:	e7e0      	b.n	a3f6 <__aeabi_fmul+0x52>
    a434:	4641      	mov	r1, r8
    a436:	2b02      	cmp	r3, #2
    a438:	d020      	beq.n	a47c <__aeabi_fmul+0xd8>
    a43a:	2b03      	cmp	r3, #3
    a43c:	d100      	bne.n	a440 <__aeabi_fmul+0x9c>
    a43e:	e0cf      	b.n	a5e0 <__aeabi_fmul+0x23c>
    a440:	2b01      	cmp	r3, #1
    a442:	d000      	beq.n	a446 <__aeabi_fmul+0xa2>
    a444:	e0ad      	b.n	a5a2 <__aeabi_fmul+0x1fe>
    a446:	2200      	movs	r2, #0
    a448:	2000      	movs	r0, #0
    a44a:	4019      	ands	r1, r3
    a44c:	b2cc      	uxtb	r4, r1
    a44e:	0240      	lsls	r0, r0, #9
    a450:	05d2      	lsls	r2, r2, #23
    a452:	0a40      	lsrs	r0, r0, #9
    a454:	07e4      	lsls	r4, r4, #31
    a456:	4310      	orrs	r0, r2
    a458:	4320      	orrs	r0, r4
    a45a:	bc1c      	pop	{r2, r3, r4}
    a45c:	4690      	mov	r8, r2
    a45e:	4699      	mov	r9, r3
    a460:	46a2      	mov	sl, r4
    a462:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a464:	b97b      	cbnz	r3, a486 <__aeabi_fmul+0xe2>
    a466:	2704      	movs	r7, #4
    a468:	2600      	movs	r6, #0
    a46a:	f240 0a01 	movw	sl, #1
    a46e:	e7b2      	b.n	a3d6 <__aeabi_fmul+0x32>
    a470:	20ff      	movs	r0, #255	; 0xff
    a472:	2302      	movs	r3, #2
    a474:	2d00      	cmp	r5, #0
    a476:	d0be      	beq.n	a3f6 <__aeabi_fmul+0x52>
    a478:	2303      	movs	r3, #3
    a47a:	e7bc      	b.n	a3f6 <__aeabi_fmul+0x52>
    a47c:	2401      	movs	r4, #1
    a47e:	22ff      	movs	r2, #255	; 0xff
    a480:	400c      	ands	r4, r1
    a482:	2000      	movs	r0, #0
    a484:	e7e3      	b.n	a44e <__aeabi_fmul+0xaa>
    a486:	0018      	movs	r0, r3
    a488:	f000 fbdc 	bl	ac44 <__clzsi2>
    a48c:	464a      	mov	r2, r9
    a48e:	1f43      	subs	r3, r0, #5
    a490:	2676      	movs	r6, #118	; 0x76
    a492:	409a      	lsls	r2, r3
    a494:	4276      	negs	r6, r6
    a496:	4691      	mov	r9, r2
    a498:	1a36      	subs	r6, r6, r0
    a49a:	2700      	movs	r7, #0
    a49c:	f240 0a00 	movw	sl, #0
    a4a0:	e799      	b.n	a3d6 <__aeabi_fmul+0x32>
    a4a2:	270c      	movs	r7, #12
    a4a4:	26ff      	movs	r6, #255	; 0xff
    a4a6:	f240 0a03 	movw	sl, #3
    a4aa:	e794      	b.n	a3d6 <__aeabi_fmul+0x32>
    a4ac:	0028      	movs	r0, r5
    a4ae:	f000 fbc9 	bl	ac44 <__clzsi2>
    a4b2:	1f43      	subs	r3, r0, #5
    a4b4:	409d      	lsls	r5, r3
    a4b6:	2376      	movs	r3, #118	; 0x76
    a4b8:	425b      	negs	r3, r3
    a4ba:	1a18      	subs	r0, r3, r0
    a4bc:	2300      	movs	r3, #0
    a4be:	e79a      	b.n	a3f6 <__aeabi_fmul+0x52>
    a4c0:	2080      	movs	r0, #128	; 0x80
    a4c2:	2400      	movs	r4, #0
    a4c4:	03c0      	lsls	r0, r0, #15
    a4c6:	22ff      	movs	r2, #255	; 0xff
    a4c8:	e7c1      	b.n	a44e <__aeabi_fmul+0xaa>
    a4ca:	464d      	mov	r5, r9
    a4cc:	4653      	mov	r3, sl
    a4ce:	e7b2      	b.n	a436 <__aeabi_fmul+0x92>
    a4d0:	464d      	mov	r5, r9
    a4d2:	0021      	movs	r1, r4
    a4d4:	4653      	mov	r3, sl
    a4d6:	e7ae      	b.n	a436 <__aeabi_fmul+0x92>
    a4d8:	464b      	mov	r3, r9
    a4da:	0c1b      	lsrs	r3, r3, #16
    a4dc:	4698      	mov	r8, r3
    a4de:	464a      	mov	r2, r9
    a4e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
    a4e4:	401a      	ands	r2, r3
    a4e6:	402b      	ands	r3, r5
    a4e8:	001c      	movs	r4, r3
    a4ea:	4354      	muls	r4, r2
    a4ec:	0c2f      	lsrs	r7, r5, #16
    a4ee:	46a4      	mov	ip, r4
    a4f0:	4645      	mov	r5, r8
    a4f2:	4644      	mov	r4, r8
    a4f4:	437d      	muls	r5, r7
    a4f6:	4357      	muls	r7, r2
    a4f8:	4662      	mov	r2, ip
    a4fa:	4363      	muls	r3, r4
    a4fc:	0c12      	lsrs	r2, r2, #16
    a4fe:	18ff      	adds	r7, r7, r3
    a500:	19d2      	adds	r2, r2, r7
    a502:	4293      	cmp	r3, r2
    a504:	d903      	bls.n	a50e <__aeabi_fmul+0x16a>
    a506:	2380      	movs	r3, #128	; 0x80
    a508:	025b      	lsls	r3, r3, #9
    a50a:	4698      	mov	r8, r3
    a50c:	4445      	add	r5, r8
    a50e:	4667      	mov	r7, ip
    a510:	f64f 73ff 	movw	r3, #65535	; 0xffff
    a514:	0414      	lsls	r4, r2, #16
    a516:	403b      	ands	r3, r7
    a518:	18e4      	adds	r4, r4, r3
    a51a:	01a3      	lsls	r3, r4, #6
    a51c:	1e5f      	subs	r7, r3, #1
    a51e:	41bb      	sbcs	r3, r7
    a520:	0c12      	lsrs	r2, r2, #16
    a522:	0ea4      	lsrs	r4, r4, #26
    a524:	1955      	adds	r5, r2, r5
    a526:	431c      	orrs	r4, r3
    a528:	01ad      	lsls	r5, r5, #6
    a52a:	4325      	orrs	r5, r4
    a52c:	012b      	lsls	r3, r5, #4
    a52e:	d504      	bpl.n	a53a <__aeabi_fmul+0x196>
    a530:	2301      	movs	r3, #1
    a532:	0006      	movs	r6, r0
    a534:	086a      	lsrs	r2, r5, #1
    a536:	401d      	ands	r5, r3
    a538:	4315      	orrs	r5, r2
    a53a:	0032      	movs	r2, r6
    a53c:	327f      	adds	r2, #127	; 0x7f
    a53e:	2a00      	cmp	r2, #0
    a540:	dd27      	ble.n	a592 <__aeabi_fmul+0x1ee>
    a542:	076b      	lsls	r3, r5, #29
    a544:	d004      	beq.n	a550 <__aeabi_fmul+0x1ac>
    a546:	230f      	movs	r3, #15
    a548:	402b      	ands	r3, r5
    a54a:	2b04      	cmp	r3, #4
    a54c:	d000      	beq.n	a550 <__aeabi_fmul+0x1ac>
    a54e:	3504      	adds	r5, #4
    a550:	012b      	lsls	r3, r5, #4
    a552:	d503      	bpl.n	a55c <__aeabi_fmul+0x1b8>
    a554:	0032      	movs	r2, r6
    a556:	4b28      	ldr	r3, [pc, #160]	; (a5f8 <__aeabi_fmul+0x254>)
    a558:	3280      	adds	r2, #128	; 0x80
    a55a:	401d      	ands	r5, r3
    a55c:	2afe      	cmp	r2, #254	; 0xfe
    a55e:	dc8d      	bgt.n	a47c <__aeabi_fmul+0xd8>
    a560:	2401      	movs	r4, #1
    a562:	01a8      	lsls	r0, r5, #6
    a564:	0a40      	lsrs	r0, r0, #9
    a566:	b2d2      	uxtb	r2, r2
    a568:	400c      	ands	r4, r1
    a56a:	e770      	b.n	a44e <__aeabi_fmul+0xaa>
    a56c:	2080      	movs	r0, #128	; 0x80
    a56e:	464b      	mov	r3, r9
    a570:	03c0      	lsls	r0, r0, #15
    a572:	4203      	tst	r3, r0
    a574:	d008      	beq.n	a588 <__aeabi_fmul+0x1e4>
    a576:	4205      	tst	r5, r0
    a578:	d105      	bne.n	a586 <__aeabi_fmul+0x1e2>
    a57a:	4328      	orrs	r0, r5
    a57c:	0240      	lsls	r0, r0, #9
    a57e:	0a40      	lsrs	r0, r0, #9
    a580:	4644      	mov	r4, r8
    a582:	22ff      	movs	r2, #255	; 0xff
    a584:	e763      	b.n	a44e <__aeabi_fmul+0xaa>
    a586:	464b      	mov	r3, r9
    a588:	4318      	orrs	r0, r3
    a58a:	0240      	lsls	r0, r0, #9
    a58c:	0a40      	lsrs	r0, r0, #9
    a58e:	22ff      	movs	r2, #255	; 0xff
    a590:	e75d      	b.n	a44e <__aeabi_fmul+0xaa>
    a592:	2401      	movs	r4, #1
    a594:	1aa3      	subs	r3, r4, r2
    a596:	2b1b      	cmp	r3, #27
    a598:	dd05      	ble.n	a5a6 <__aeabi_fmul+0x202>
    a59a:	400c      	ands	r4, r1
    a59c:	2200      	movs	r2, #0
    a59e:	2000      	movs	r0, #0
    a5a0:	e755      	b.n	a44e <__aeabi_fmul+0xaa>
    a5a2:	0006      	movs	r6, r0
    a5a4:	e7c9      	b.n	a53a <__aeabi_fmul+0x196>
    a5a6:	002a      	movs	r2, r5
    a5a8:	2020      	movs	r0, #32
    a5aa:	40da      	lsrs	r2, r3
    a5ac:	1ac3      	subs	r3, r0, r3
    a5ae:	409d      	lsls	r5, r3
    a5b0:	002b      	movs	r3, r5
    a5b2:	1e5d      	subs	r5, r3, #1
    a5b4:	41ab      	sbcs	r3, r5
    a5b6:	4313      	orrs	r3, r2
    a5b8:	075a      	lsls	r2, r3, #29
    a5ba:	d004      	beq.n	a5c6 <__aeabi_fmul+0x222>
    a5bc:	220f      	movs	r2, #15
    a5be:	401a      	ands	r2, r3
    a5c0:	2a04      	cmp	r2, #4
    a5c2:	d000      	beq.n	a5c6 <__aeabi_fmul+0x222>
    a5c4:	3304      	adds	r3, #4
    a5c6:	015a      	lsls	r2, r3, #5
    a5c8:	d504      	bpl.n	a5d4 <__aeabi_fmul+0x230>
    a5ca:	2401      	movs	r4, #1
    a5cc:	2201      	movs	r2, #1
    a5ce:	400c      	ands	r4, r1
    a5d0:	2000      	movs	r0, #0
    a5d2:	e73c      	b.n	a44e <__aeabi_fmul+0xaa>
    a5d4:	2401      	movs	r4, #1
    a5d6:	019b      	lsls	r3, r3, #6
    a5d8:	0a58      	lsrs	r0, r3, #9
    a5da:	400c      	ands	r4, r1
    a5dc:	2200      	movs	r2, #0
    a5de:	e736      	b.n	a44e <__aeabi_fmul+0xaa>
    a5e0:	2080      	movs	r0, #128	; 0x80
    a5e2:	2401      	movs	r4, #1
    a5e4:	03c0      	lsls	r0, r0, #15
    a5e6:	4328      	orrs	r0, r5
    a5e8:	0240      	lsls	r0, r0, #9
    a5ea:	0a40      	lsrs	r0, r0, #9
    a5ec:	400c      	ands	r4, r1
    a5ee:	22ff      	movs	r2, #255	; 0xff
    a5f0:	e72d      	b.n	a44e <__aeabi_fmul+0xaa>
    a5f2:	46c0      	nop			; (mov r8, r8)
    a5f4:	0000ba00 	.word	0x0000ba00
    a5f8:	f7ffffff 	.word	0xf7ffffff

0000a5fc <__aeabi_fsub>:
    a5fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a5fe:	46ce      	mov	lr, r9
    a600:	4647      	mov	r7, r8
    a602:	0044      	lsls	r4, r0, #1
    a604:	0fc2      	lsrs	r2, r0, #31
    a606:	b580      	push	{r7, lr}
    a608:	0247      	lsls	r7, r0, #9
    a60a:	0248      	lsls	r0, r1, #9
    a60c:	0a40      	lsrs	r0, r0, #9
    a60e:	4684      	mov	ip, r0
    a610:	4666      	mov	r6, ip
    a612:	0a7b      	lsrs	r3, r7, #9
    a614:	0048      	lsls	r0, r1, #1
    a616:	4699      	mov	r9, r3
    a618:	0e24      	lsrs	r4, r4, #24
    a61a:	0015      	movs	r5, r2
    a61c:	00db      	lsls	r3, r3, #3
    a61e:	0e00      	lsrs	r0, r0, #24
    a620:	0fc9      	lsrs	r1, r1, #31
    a622:	00f6      	lsls	r6, r6, #3
    a624:	28ff      	cmp	r0, #255	; 0xff
    a626:	d100      	bne.n	a62a <__aeabi_fsub+0x2e>
    a628:	e08d      	b.n	a746 <__aeabi_fsub+0x14a>
    a62a:	f240 0801 	movw	r8, #1
    a62e:	4647      	mov	r7, r8
    a630:	4079      	eors	r1, r7
    a632:	4291      	cmp	r1, r2
    a634:	d065      	beq.n	a702 <__aeabi_fsub+0x106>
    a636:	1a22      	subs	r2, r4, r0
    a638:	2a00      	cmp	r2, #0
    a63a:	dc00      	bgt.n	a63e <__aeabi_fsub+0x42>
    a63c:	e09c      	b.n	a778 <__aeabi_fsub+0x17c>
    a63e:	2800      	cmp	r0, #0
    a640:	d13c      	bne.n	a6bc <__aeabi_fsub+0xc0>
    a642:	2e00      	cmp	r6, #0
    a644:	d100      	bne.n	a648 <__aeabi_fsub+0x4c>
    a646:	e08a      	b.n	a75e <__aeabi_fsub+0x162>
    a648:	1e51      	subs	r1, r2, #1
    a64a:	2900      	cmp	r1, #0
    a64c:	d000      	beq.n	a650 <__aeabi_fsub+0x54>
    a64e:	e0b3      	b.n	a7b8 <__aeabi_fsub+0x1bc>
    a650:	2401      	movs	r4, #1
    a652:	1b9b      	subs	r3, r3, r6
    a654:	015a      	lsls	r2, r3, #5
    a656:	d543      	bpl.n	a6e0 <__aeabi_fsub+0xe4>
    a658:	019b      	lsls	r3, r3, #6
    a65a:	099f      	lsrs	r7, r3, #6
    a65c:	0038      	movs	r0, r7
    a65e:	f000 faf1 	bl	ac44 <__clzsi2>
    a662:	3805      	subs	r0, #5
    a664:	4087      	lsls	r7, r0
    a666:	4284      	cmp	r4, r0
    a668:	dd00      	ble.n	a66c <__aeabi_fsub+0x70>
    a66a:	e094      	b.n	a796 <__aeabi_fsub+0x19a>
    a66c:	1b04      	subs	r4, r0, r4
    a66e:	003a      	movs	r2, r7
    a670:	2020      	movs	r0, #32
    a672:	3401      	adds	r4, #1
    a674:	40e2      	lsrs	r2, r4
    a676:	1b04      	subs	r4, r0, r4
    a678:	40a7      	lsls	r7, r4
    a67a:	003b      	movs	r3, r7
    a67c:	1e5f      	subs	r7, r3, #1
    a67e:	41bb      	sbcs	r3, r7
    a680:	2400      	movs	r4, #0
    a682:	4313      	orrs	r3, r2
    a684:	075a      	lsls	r2, r3, #29
    a686:	d004      	beq.n	a692 <__aeabi_fsub+0x96>
    a688:	220f      	movs	r2, #15
    a68a:	401a      	ands	r2, r3
    a68c:	2a04      	cmp	r2, #4
    a68e:	d000      	beq.n	a692 <__aeabi_fsub+0x96>
    a690:	3304      	adds	r3, #4
    a692:	015a      	lsls	r2, r3, #5
    a694:	d526      	bpl.n	a6e4 <__aeabi_fsub+0xe8>
    a696:	3401      	adds	r4, #1
    a698:	2cff      	cmp	r4, #255	; 0xff
    a69a:	d100      	bne.n	a69e <__aeabi_fsub+0xa2>
    a69c:	e077      	b.n	a78e <__aeabi_fsub+0x192>
    a69e:	2201      	movs	r2, #1
    a6a0:	019b      	lsls	r3, r3, #6
    a6a2:	0a5b      	lsrs	r3, r3, #9
    a6a4:	b2e4      	uxtb	r4, r4
    a6a6:	402a      	ands	r2, r5
    a6a8:	025b      	lsls	r3, r3, #9
    a6aa:	05e4      	lsls	r4, r4, #23
    a6ac:	0a58      	lsrs	r0, r3, #9
    a6ae:	07d2      	lsls	r2, r2, #31
    a6b0:	4320      	orrs	r0, r4
    a6b2:	4310      	orrs	r0, r2
    a6b4:	bc0c      	pop	{r2, r3}
    a6b6:	4690      	mov	r8, r2
    a6b8:	4699      	mov	r9, r3
    a6ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a6bc:	2cff      	cmp	r4, #255	; 0xff
    a6be:	d0e1      	beq.n	a684 <__aeabi_fsub+0x88>
    a6c0:	2180      	movs	r1, #128	; 0x80
    a6c2:	04c9      	lsls	r1, r1, #19
    a6c4:	430e      	orrs	r6, r1
    a6c6:	2a1b      	cmp	r2, #27
    a6c8:	dc7a      	bgt.n	a7c0 <__aeabi_fsub+0x1c4>
    a6ca:	0031      	movs	r1, r6
    a6cc:	2020      	movs	r0, #32
    a6ce:	40d1      	lsrs	r1, r2
    a6d0:	1a82      	subs	r2, r0, r2
    a6d2:	4096      	lsls	r6, r2
    a6d4:	1e72      	subs	r2, r6, #1
    a6d6:	4196      	sbcs	r6, r2
    a6d8:	430e      	orrs	r6, r1
    a6da:	1b9b      	subs	r3, r3, r6
    a6dc:	015a      	lsls	r2, r3, #5
    a6de:	d4bb      	bmi.n	a658 <__aeabi_fsub+0x5c>
    a6e0:	075a      	lsls	r2, r3, #29
    a6e2:	d1d1      	bne.n	a688 <__aeabi_fsub+0x8c>
    a6e4:	2201      	movs	r2, #1
    a6e6:	08df      	lsrs	r7, r3, #3
    a6e8:	402a      	ands	r2, r5
    a6ea:	2cff      	cmp	r4, #255	; 0xff
    a6ec:	d133      	bne.n	a756 <__aeabi_fsub+0x15a>
    a6ee:	2f00      	cmp	r7, #0
    a6f0:	d100      	bne.n	a6f4 <__aeabi_fsub+0xf8>
    a6f2:	e0a6      	b.n	a842 <__aeabi_fsub+0x246>
    a6f4:	2380      	movs	r3, #128	; 0x80
    a6f6:	03db      	lsls	r3, r3, #15
    a6f8:	433b      	orrs	r3, r7
    a6fa:	025b      	lsls	r3, r3, #9
    a6fc:	0a5b      	lsrs	r3, r3, #9
    a6fe:	24ff      	movs	r4, #255	; 0xff
    a700:	e7d2      	b.n	a6a8 <__aeabi_fsub+0xac>
    a702:	1a21      	subs	r1, r4, r0
    a704:	2900      	cmp	r1, #0
    a706:	dd4b      	ble.n	a7a0 <__aeabi_fsub+0x1a4>
    a708:	b358      	cbz	r0, a762 <__aeabi_fsub+0x166>
    a70a:	2cff      	cmp	r4, #255	; 0xff
    a70c:	d0ba      	beq.n	a684 <__aeabi_fsub+0x88>
    a70e:	2080      	movs	r0, #128	; 0x80
    a710:	04c0      	lsls	r0, r0, #19
    a712:	4306      	orrs	r6, r0
    a714:	291b      	cmp	r1, #27
    a716:	dd00      	ble.n	a71a <__aeabi_fsub+0x11e>
    a718:	e0ac      	b.n	a874 <__aeabi_fsub+0x278>
    a71a:	0030      	movs	r0, r6
    a71c:	2720      	movs	r7, #32
    a71e:	40c8      	lsrs	r0, r1
    a720:	1a79      	subs	r1, r7, r1
    a722:	408e      	lsls	r6, r1
    a724:	1e71      	subs	r1, r6, #1
    a726:	418e      	sbcs	r6, r1
    a728:	4306      	orrs	r6, r0
    a72a:	199b      	adds	r3, r3, r6
    a72c:	0159      	lsls	r1, r3, #5
    a72e:	d5d7      	bpl.n	a6e0 <__aeabi_fsub+0xe4>
    a730:	3401      	adds	r4, #1
    a732:	2cff      	cmp	r4, #255	; 0xff
    a734:	d100      	bne.n	a738 <__aeabi_fsub+0x13c>
    a736:	e084      	b.n	a842 <__aeabi_fsub+0x246>
    a738:	2201      	movs	r2, #1
    a73a:	4976      	ldr	r1, [pc, #472]	; (a914 <__aeabi_fsub+0x318>)
    a73c:	401a      	ands	r2, r3
    a73e:	085b      	lsrs	r3, r3, #1
    a740:	400b      	ands	r3, r1
    a742:	4313      	orrs	r3, r2
    a744:	e79e      	b.n	a684 <__aeabi_fsub+0x88>
    a746:	2e00      	cmp	r6, #0
    a748:	d000      	beq.n	a74c <__aeabi_fsub+0x150>
    a74a:	e772      	b.n	a632 <__aeabi_fsub+0x36>
    a74c:	e76d      	b.n	a62a <__aeabi_fsub+0x2e>
    a74e:	003b      	movs	r3, r7
    a750:	2f00      	cmp	r7, #0
    a752:	d1c5      	bne.n	a6e0 <__aeabi_fsub+0xe4>
    a754:	2200      	movs	r2, #0
    a756:	027b      	lsls	r3, r7, #9
    a758:	0a5b      	lsrs	r3, r3, #9
    a75a:	b2e4      	uxtb	r4, r4
    a75c:	e7a4      	b.n	a6a8 <__aeabi_fsub+0xac>
    a75e:	0014      	movs	r4, r2
    a760:	e790      	b.n	a684 <__aeabi_fsub+0x88>
    a762:	2e00      	cmp	r6, #0
    a764:	d04b      	beq.n	a7fe <__aeabi_fsub+0x202>
    a766:	1e48      	subs	r0, r1, #1
    a768:	2800      	cmp	r0, #0
    a76a:	d155      	bne.n	a818 <__aeabi_fsub+0x21c>
    a76c:	199b      	adds	r3, r3, r6
    a76e:	2401      	movs	r4, #1
    a770:	015a      	lsls	r2, r3, #5
    a772:	d5b5      	bpl.n	a6e0 <__aeabi_fsub+0xe4>
    a774:	2402      	movs	r4, #2
    a776:	e7df      	b.n	a738 <__aeabi_fsub+0x13c>
    a778:	bb2a      	cbnz	r2, a7c6 <__aeabi_fsub+0x1ca>
    a77a:	1c62      	adds	r2, r4, #1
    a77c:	b2d2      	uxtb	r2, r2
    a77e:	2a01      	cmp	r2, #1
    a780:	dd71      	ble.n	a866 <__aeabi_fsub+0x26a>
    a782:	1b9f      	subs	r7, r3, r6
    a784:	017a      	lsls	r2, r7, #5
    a786:	d534      	bpl.n	a7f2 <__aeabi_fsub+0x1f6>
    a788:	1af7      	subs	r7, r6, r3
    a78a:	000d      	movs	r5, r1
    a78c:	e766      	b.n	a65c <__aeabi_fsub+0x60>
    a78e:	2201      	movs	r2, #1
    a790:	2300      	movs	r3, #0
    a792:	402a      	ands	r2, r5
    a794:	e788      	b.n	a6a8 <__aeabi_fsub+0xac>
    a796:	003b      	movs	r3, r7
    a798:	4a5f      	ldr	r2, [pc, #380]	; (a918 <__aeabi_fsub+0x31c>)
    a79a:	1a24      	subs	r4, r4, r0
    a79c:	4013      	ands	r3, r2
    a79e:	e771      	b.n	a684 <__aeabi_fsub+0x88>
    a7a0:	2900      	cmp	r1, #0
    a7a2:	d169      	bne.n	a878 <__aeabi_fsub+0x27c>
    a7a4:	1c61      	adds	r1, r4, #1
    a7a6:	b2c8      	uxtb	r0, r1
    a7a8:	2801      	cmp	r0, #1
    a7aa:	dd4d      	ble.n	a848 <__aeabi_fsub+0x24c>
    a7ac:	29ff      	cmp	r1, #255	; 0xff
    a7ae:	d048      	beq.n	a842 <__aeabi_fsub+0x246>
    a7b0:	199b      	adds	r3, r3, r6
    a7b2:	085b      	lsrs	r3, r3, #1
    a7b4:	000c      	movs	r4, r1
    a7b6:	e765      	b.n	a684 <__aeabi_fsub+0x88>
    a7b8:	2aff      	cmp	r2, #255	; 0xff
    a7ba:	d040      	beq.n	a83e <__aeabi_fsub+0x242>
    a7bc:	000a      	movs	r2, r1
    a7be:	e782      	b.n	a6c6 <__aeabi_fsub+0xca>
    a7c0:	2601      	movs	r6, #1
    a7c2:	1b9b      	subs	r3, r3, r6
    a7c4:	e78a      	b.n	a6dc <__aeabi_fsub+0xe0>
    a7c6:	b1e4      	cbz	r4, a802 <__aeabi_fsub+0x206>
    a7c8:	28ff      	cmp	r0, #255	; 0xff
    a7ca:	d021      	beq.n	a810 <__aeabi_fsub+0x214>
    a7cc:	2480      	movs	r4, #128	; 0x80
    a7ce:	04e4      	lsls	r4, r4, #19
    a7d0:	4252      	negs	r2, r2
    a7d2:	4323      	orrs	r3, r4
    a7d4:	2a1b      	cmp	r2, #27
    a7d6:	dd00      	ble.n	a7da <__aeabi_fsub+0x1de>
    a7d8:	e090      	b.n	a8fc <__aeabi_fsub+0x300>
    a7da:	001c      	movs	r4, r3
    a7dc:	2520      	movs	r5, #32
    a7de:	40d4      	lsrs	r4, r2
    a7e0:	1aaa      	subs	r2, r5, r2
    a7e2:	4093      	lsls	r3, r2
    a7e4:	1e5a      	subs	r2, r3, #1
    a7e6:	4193      	sbcs	r3, r2
    a7e8:	4323      	orrs	r3, r4
    a7ea:	1af3      	subs	r3, r6, r3
    a7ec:	0004      	movs	r4, r0
    a7ee:	000d      	movs	r5, r1
    a7f0:	e730      	b.n	a654 <__aeabi_fsub+0x58>
    a7f2:	2f00      	cmp	r7, #0
    a7f4:	d000      	beq.n	a7f8 <__aeabi_fsub+0x1fc>
    a7f6:	e731      	b.n	a65c <__aeabi_fsub+0x60>
    a7f8:	2200      	movs	r2, #0
    a7fa:	2400      	movs	r4, #0
    a7fc:	e7ab      	b.n	a756 <__aeabi_fsub+0x15a>
    a7fe:	000c      	movs	r4, r1
    a800:	e740      	b.n	a684 <__aeabi_fsub+0x88>
    a802:	2b00      	cmp	r3, #0
    a804:	d052      	beq.n	a8ac <__aeabi_fsub+0x2b0>
    a806:	43d2      	mvns	r2, r2
    a808:	2a00      	cmp	r2, #0
    a80a:	d0ee      	beq.n	a7ea <__aeabi_fsub+0x1ee>
    a80c:	28ff      	cmp	r0, #255	; 0xff
    a80e:	d1e1      	bne.n	a7d4 <__aeabi_fsub+0x1d8>
    a810:	0033      	movs	r3, r6
    a812:	24ff      	movs	r4, #255	; 0xff
    a814:	000d      	movs	r5, r1
    a816:	e735      	b.n	a684 <__aeabi_fsub+0x88>
    a818:	29ff      	cmp	r1, #255	; 0xff
    a81a:	d010      	beq.n	a83e <__aeabi_fsub+0x242>
    a81c:	0001      	movs	r1, r0
    a81e:	e779      	b.n	a714 <__aeabi_fsub+0x118>
    a820:	2b00      	cmp	r3, #0
    a822:	d068      	beq.n	a8f6 <__aeabi_fsub+0x2fa>
    a824:	24ff      	movs	r4, #255	; 0xff
    a826:	2e00      	cmp	r6, #0
    a828:	d100      	bne.n	a82c <__aeabi_fsub+0x230>
    a82a:	e72b      	b.n	a684 <__aeabi_fsub+0x88>
    a82c:	2280      	movs	r2, #128	; 0x80
    a82e:	4649      	mov	r1, r9
    a830:	03d2      	lsls	r2, r2, #15
    a832:	4211      	tst	r1, r2
    a834:	d003      	beq.n	a83e <__aeabi_fsub+0x242>
    a836:	4661      	mov	r1, ip
    a838:	4211      	tst	r1, r2
    a83a:	d100      	bne.n	a83e <__aeabi_fsub+0x242>
    a83c:	0033      	movs	r3, r6
    a83e:	24ff      	movs	r4, #255	; 0xff
    a840:	e720      	b.n	a684 <__aeabi_fsub+0x88>
    a842:	24ff      	movs	r4, #255	; 0xff
    a844:	2300      	movs	r3, #0
    a846:	e72f      	b.n	a6a8 <__aeabi_fsub+0xac>
    a848:	2c00      	cmp	r4, #0
    a84a:	d1e9      	bne.n	a820 <__aeabi_fsub+0x224>
    a84c:	2b00      	cmp	r3, #0
    a84e:	d05d      	beq.n	a90c <__aeabi_fsub+0x310>
    a850:	2e00      	cmp	r6, #0
    a852:	d100      	bne.n	a856 <__aeabi_fsub+0x25a>
    a854:	e716      	b.n	a684 <__aeabi_fsub+0x88>
    a856:	199b      	adds	r3, r3, r6
    a858:	015a      	lsls	r2, r3, #5
    a85a:	d400      	bmi.n	a85e <__aeabi_fsub+0x262>
    a85c:	e740      	b.n	a6e0 <__aeabi_fsub+0xe4>
    a85e:	4a2e      	ldr	r2, [pc, #184]	; (a918 <__aeabi_fsub+0x31c>)
    a860:	000c      	movs	r4, r1
    a862:	4013      	ands	r3, r2
    a864:	e70e      	b.n	a684 <__aeabi_fsub+0x88>
    a866:	b9dc      	cbnz	r4, a8a0 <__aeabi_fsub+0x2a4>
    a868:	bb5b      	cbnz	r3, a8c2 <__aeabi_fsub+0x2c6>
    a86a:	2e00      	cmp	r6, #0
    a86c:	d04b      	beq.n	a906 <__aeabi_fsub+0x30a>
    a86e:	0033      	movs	r3, r6
    a870:	000d      	movs	r5, r1
    a872:	e707      	b.n	a684 <__aeabi_fsub+0x88>
    a874:	2601      	movs	r6, #1
    a876:	e758      	b.n	a72a <__aeabi_fsub+0x12e>
    a878:	b9e4      	cbnz	r4, a8b4 <__aeabi_fsub+0x2b8>
    a87a:	2b00      	cmp	r3, #0
    a87c:	d040      	beq.n	a900 <__aeabi_fsub+0x304>
    a87e:	43c9      	mvns	r1, r1
    a880:	b159      	cbz	r1, a89a <__aeabi_fsub+0x29e>
    a882:	28ff      	cmp	r0, #255	; 0xff
    a884:	d037      	beq.n	a8f6 <__aeabi_fsub+0x2fa>
    a886:	291b      	cmp	r1, #27
    a888:	dc42      	bgt.n	a910 <__aeabi_fsub+0x314>
    a88a:	001c      	movs	r4, r3
    a88c:	2720      	movs	r7, #32
    a88e:	40cc      	lsrs	r4, r1
    a890:	1a79      	subs	r1, r7, r1
    a892:	408b      	lsls	r3, r1
    a894:	1e59      	subs	r1, r3, #1
    a896:	418b      	sbcs	r3, r1
    a898:	4323      	orrs	r3, r4
    a89a:	199b      	adds	r3, r3, r6
    a89c:	0004      	movs	r4, r0
    a89e:	e745      	b.n	a72c <__aeabi_fsub+0x130>
    a8a0:	b9cb      	cbnz	r3, a8d6 <__aeabi_fsub+0x2da>
    a8a2:	bb26      	cbnz	r6, a8ee <__aeabi_fsub+0x2f2>
    a8a4:	2780      	movs	r7, #128	; 0x80
    a8a6:	2200      	movs	r2, #0
    a8a8:	03ff      	lsls	r7, r7, #15
    a8aa:	e723      	b.n	a6f4 <__aeabi_fsub+0xf8>
    a8ac:	0033      	movs	r3, r6
    a8ae:	0004      	movs	r4, r0
    a8b0:	000d      	movs	r5, r1
    a8b2:	e6e7      	b.n	a684 <__aeabi_fsub+0x88>
    a8b4:	28ff      	cmp	r0, #255	; 0xff
    a8b6:	d01e      	beq.n	a8f6 <__aeabi_fsub+0x2fa>
    a8b8:	2480      	movs	r4, #128	; 0x80
    a8ba:	04e4      	lsls	r4, r4, #19
    a8bc:	4249      	negs	r1, r1
    a8be:	4323      	orrs	r3, r4
    a8c0:	e7e1      	b.n	a886 <__aeabi_fsub+0x28a>
    a8c2:	2e00      	cmp	r6, #0
    a8c4:	d100      	bne.n	a8c8 <__aeabi_fsub+0x2cc>
    a8c6:	e6dd      	b.n	a684 <__aeabi_fsub+0x88>
    a8c8:	1b9f      	subs	r7, r3, r6
    a8ca:	017a      	lsls	r2, r7, #5
    a8cc:	d400      	bmi.n	a8d0 <__aeabi_fsub+0x2d4>
    a8ce:	e73e      	b.n	a74e <__aeabi_fsub+0x152>
    a8d0:	1af3      	subs	r3, r6, r3
    a8d2:	000d      	movs	r5, r1
    a8d4:	e6d6      	b.n	a684 <__aeabi_fsub+0x88>
    a8d6:	24ff      	movs	r4, #255	; 0xff
    a8d8:	2e00      	cmp	r6, #0
    a8da:	d100      	bne.n	a8de <__aeabi_fsub+0x2e2>
    a8dc:	e6d2      	b.n	a684 <__aeabi_fsub+0x88>
    a8de:	2280      	movs	r2, #128	; 0x80
    a8e0:	4648      	mov	r0, r9
    a8e2:	03d2      	lsls	r2, r2, #15
    a8e4:	4210      	tst	r0, r2
    a8e6:	d0aa      	beq.n	a83e <__aeabi_fsub+0x242>
    a8e8:	4660      	mov	r0, ip
    a8ea:	4210      	tst	r0, r2
    a8ec:	d1a7      	bne.n	a83e <__aeabi_fsub+0x242>
    a8ee:	0033      	movs	r3, r6
    a8f0:	000d      	movs	r5, r1
    a8f2:	24ff      	movs	r4, #255	; 0xff
    a8f4:	e6c6      	b.n	a684 <__aeabi_fsub+0x88>
    a8f6:	0033      	movs	r3, r6
    a8f8:	24ff      	movs	r4, #255	; 0xff
    a8fa:	e6c3      	b.n	a684 <__aeabi_fsub+0x88>
    a8fc:	2301      	movs	r3, #1
    a8fe:	e774      	b.n	a7ea <__aeabi_fsub+0x1ee>
    a900:	0033      	movs	r3, r6
    a902:	0004      	movs	r4, r0
    a904:	e6be      	b.n	a684 <__aeabi_fsub+0x88>
    a906:	2700      	movs	r7, #0
    a908:	2200      	movs	r2, #0
    a90a:	e724      	b.n	a756 <__aeabi_fsub+0x15a>
    a90c:	0033      	movs	r3, r6
    a90e:	e6b9      	b.n	a684 <__aeabi_fsub+0x88>
    a910:	2301      	movs	r3, #1
    a912:	e7c2      	b.n	a89a <__aeabi_fsub+0x29e>
    a914:	7dffffff 	.word	0x7dffffff
    a918:	fbffffff 	.word	0xfbffffff

0000a91c <__aeabi_f2iz>:
    a91c:	0241      	lsls	r1, r0, #9
    a91e:	0043      	lsls	r3, r0, #1
    a920:	0fc2      	lsrs	r2, r0, #31
    a922:	0a49      	lsrs	r1, r1, #9
    a924:	0e1b      	lsrs	r3, r3, #24
    a926:	2000      	movs	r0, #0
    a928:	2b7e      	cmp	r3, #126	; 0x7e
    a92a:	dd0c      	ble.n	a946 <__aeabi_f2iz+0x2a>
    a92c:	2b9d      	cmp	r3, #157	; 0x9d
    a92e:	dc0b      	bgt.n	a948 <__aeabi_f2iz+0x2c>
    a930:	2080      	movs	r0, #128	; 0x80
    a932:	0400      	lsls	r0, r0, #16
    a934:	4301      	orrs	r1, r0
    a936:	2b95      	cmp	r3, #149	; 0x95
    a938:	dc09      	bgt.n	a94e <__aeabi_f2iz+0x32>
    a93a:	2096      	movs	r0, #150	; 0x96
    a93c:	1ac3      	subs	r3, r0, r3
    a93e:	40d9      	lsrs	r1, r3
    a940:	4248      	negs	r0, r1
    a942:	b902      	cbnz	r2, a946 <__aeabi_f2iz+0x2a>
    a944:	0008      	movs	r0, r1
    a946:	4770      	bx	lr
    a948:	4b02      	ldr	r3, [pc, #8]	; (a954 <__aeabi_f2iz+0x38>)
    a94a:	18d0      	adds	r0, r2, r3
    a94c:	e7fb      	b.n	a946 <__aeabi_f2iz+0x2a>
    a94e:	3b96      	subs	r3, #150	; 0x96
    a950:	4099      	lsls	r1, r3
    a952:	e7f5      	b.n	a940 <__aeabi_f2iz+0x24>
    a954:	7fffffff 	.word	0x7fffffff

0000a958 <__aeabi_i2f>:
    a958:	b570      	push	{r4, r5, r6, lr}
    a95a:	2800      	cmp	r0, #0
    a95c:	d030      	beq.n	a9c0 <__aeabi_i2f+0x68>
    a95e:	17c3      	asrs	r3, r0, #31
    a960:	18c4      	adds	r4, r0, r3
    a962:	405c      	eors	r4, r3
    a964:	0fc5      	lsrs	r5, r0, #31
    a966:	0020      	movs	r0, r4
    a968:	f000 f96c 	bl	ac44 <__clzsi2>
    a96c:	239e      	movs	r3, #158	; 0x9e
    a96e:	1a1b      	subs	r3, r3, r0
    a970:	2b96      	cmp	r3, #150	; 0x96
    a972:	dc0d      	bgt.n	a990 <__aeabi_i2f+0x38>
    a974:	2296      	movs	r2, #150	; 0x96
    a976:	1ad2      	subs	r2, r2, r3
    a978:	4094      	lsls	r4, r2
    a97a:	002a      	movs	r2, r5
    a97c:	0264      	lsls	r4, r4, #9
    a97e:	0a64      	lsrs	r4, r4, #9
    a980:	b2db      	uxtb	r3, r3
    a982:	0264      	lsls	r4, r4, #9
    a984:	05db      	lsls	r3, r3, #23
    a986:	0a60      	lsrs	r0, r4, #9
    a988:	07d2      	lsls	r2, r2, #31
    a98a:	4318      	orrs	r0, r3
    a98c:	4310      	orrs	r0, r2
    a98e:	bd70      	pop	{r4, r5, r6, pc}
    a990:	2b99      	cmp	r3, #153	; 0x99
    a992:	dc19      	bgt.n	a9c8 <__aeabi_i2f+0x70>
    a994:	2299      	movs	r2, #153	; 0x99
    a996:	1ad2      	subs	r2, r2, r3
    a998:	2a00      	cmp	r2, #0
    a99a:	dd29      	ble.n	a9f0 <__aeabi_i2f+0x98>
    a99c:	4094      	lsls	r4, r2
    a99e:	0022      	movs	r2, r4
    a9a0:	4c14      	ldr	r4, [pc, #80]	; (a9f4 <__aeabi_i2f+0x9c>)
    a9a2:	4014      	ands	r4, r2
    a9a4:	0751      	lsls	r1, r2, #29
    a9a6:	d004      	beq.n	a9b2 <__aeabi_i2f+0x5a>
    a9a8:	210f      	movs	r1, #15
    a9aa:	400a      	ands	r2, r1
    a9ac:	2a04      	cmp	r2, #4
    a9ae:	d000      	beq.n	a9b2 <__aeabi_i2f+0x5a>
    a9b0:	3404      	adds	r4, #4
    a9b2:	0162      	lsls	r2, r4, #5
    a9b4:	d413      	bmi.n	a9de <__aeabi_i2f+0x86>
    a9b6:	01a4      	lsls	r4, r4, #6
    a9b8:	0a64      	lsrs	r4, r4, #9
    a9ba:	b2db      	uxtb	r3, r3
    a9bc:	002a      	movs	r2, r5
    a9be:	e7e0      	b.n	a982 <__aeabi_i2f+0x2a>
    a9c0:	2200      	movs	r2, #0
    a9c2:	2300      	movs	r3, #0
    a9c4:	2400      	movs	r4, #0
    a9c6:	e7dc      	b.n	a982 <__aeabi_i2f+0x2a>
    a9c8:	2205      	movs	r2, #5
    a9ca:	0021      	movs	r1, r4
    a9cc:	1a12      	subs	r2, r2, r0
    a9ce:	40d1      	lsrs	r1, r2
    a9d0:	22b9      	movs	r2, #185	; 0xb9
    a9d2:	1ad2      	subs	r2, r2, r3
    a9d4:	4094      	lsls	r4, r2
    a9d6:	1e62      	subs	r2, r4, #1
    a9d8:	4194      	sbcs	r4, r2
    a9da:	430c      	orrs	r4, r1
    a9dc:	e7da      	b.n	a994 <__aeabi_i2f+0x3c>
    a9de:	4b05      	ldr	r3, [pc, #20]	; (a9f4 <__aeabi_i2f+0x9c>)
    a9e0:	002a      	movs	r2, r5
    a9e2:	401c      	ands	r4, r3
    a9e4:	239f      	movs	r3, #159	; 0x9f
    a9e6:	01a4      	lsls	r4, r4, #6
    a9e8:	1a1b      	subs	r3, r3, r0
    a9ea:	0a64      	lsrs	r4, r4, #9
    a9ec:	b2db      	uxtb	r3, r3
    a9ee:	e7c8      	b.n	a982 <__aeabi_i2f+0x2a>
    a9f0:	0022      	movs	r2, r4
    a9f2:	e7d5      	b.n	a9a0 <__aeabi_i2f+0x48>
    a9f4:	fbffffff 	.word	0xfbffffff

0000a9f8 <__aeabi_ui2f>:
    a9f8:	b510      	push	{r4, lr}
    a9fa:	0004      	movs	r4, r0
    a9fc:	b338      	cbz	r0, aa4e <__aeabi_ui2f+0x56>
    a9fe:	f000 f921 	bl	ac44 <__clzsi2>
    aa02:	239e      	movs	r3, #158	; 0x9e
    aa04:	1a1b      	subs	r3, r3, r0
    aa06:	2b96      	cmp	r3, #150	; 0x96
    aa08:	dc0a      	bgt.n	aa20 <__aeabi_ui2f+0x28>
    aa0a:	2296      	movs	r2, #150	; 0x96
    aa0c:	1ad2      	subs	r2, r2, r3
    aa0e:	4094      	lsls	r4, r2
    aa10:	0264      	lsls	r4, r4, #9
    aa12:	0a64      	lsrs	r4, r4, #9
    aa14:	b2db      	uxtb	r3, r3
    aa16:	0264      	lsls	r4, r4, #9
    aa18:	05db      	lsls	r3, r3, #23
    aa1a:	0a60      	lsrs	r0, r4, #9
    aa1c:	4318      	orrs	r0, r3
    aa1e:	bd10      	pop	{r4, pc}
    aa20:	2b99      	cmp	r3, #153	; 0x99
    aa22:	dc17      	bgt.n	aa54 <__aeabi_ui2f+0x5c>
    aa24:	2299      	movs	r2, #153	; 0x99
    aa26:	1ad2      	subs	r2, r2, r3
    aa28:	2a00      	cmp	r2, #0
    aa2a:	dd27      	ble.n	aa7c <__aeabi_ui2f+0x84>
    aa2c:	4094      	lsls	r4, r2
    aa2e:	0022      	movs	r2, r4
    aa30:	4c13      	ldr	r4, [pc, #76]	; (aa80 <__aeabi_ui2f+0x88>)
    aa32:	4014      	ands	r4, r2
    aa34:	0751      	lsls	r1, r2, #29
    aa36:	d004      	beq.n	aa42 <__aeabi_ui2f+0x4a>
    aa38:	210f      	movs	r1, #15
    aa3a:	400a      	ands	r2, r1
    aa3c:	2a04      	cmp	r2, #4
    aa3e:	d000      	beq.n	aa42 <__aeabi_ui2f+0x4a>
    aa40:	3404      	adds	r4, #4
    aa42:	0162      	lsls	r2, r4, #5
    aa44:	d412      	bmi.n	aa6c <__aeabi_ui2f+0x74>
    aa46:	01a4      	lsls	r4, r4, #6
    aa48:	0a64      	lsrs	r4, r4, #9
    aa4a:	b2db      	uxtb	r3, r3
    aa4c:	e7e3      	b.n	aa16 <__aeabi_ui2f+0x1e>
    aa4e:	2300      	movs	r3, #0
    aa50:	2400      	movs	r4, #0
    aa52:	e7e0      	b.n	aa16 <__aeabi_ui2f+0x1e>
    aa54:	22b9      	movs	r2, #185	; 0xb9
    aa56:	0021      	movs	r1, r4
    aa58:	1ad2      	subs	r2, r2, r3
    aa5a:	4091      	lsls	r1, r2
    aa5c:	000a      	movs	r2, r1
    aa5e:	1e51      	subs	r1, r2, #1
    aa60:	418a      	sbcs	r2, r1
    aa62:	2105      	movs	r1, #5
    aa64:	1a09      	subs	r1, r1, r0
    aa66:	40cc      	lsrs	r4, r1
    aa68:	4314      	orrs	r4, r2
    aa6a:	e7db      	b.n	aa24 <__aeabi_ui2f+0x2c>
    aa6c:	4b04      	ldr	r3, [pc, #16]	; (aa80 <__aeabi_ui2f+0x88>)
    aa6e:	401c      	ands	r4, r3
    aa70:	239f      	movs	r3, #159	; 0x9f
    aa72:	01a4      	lsls	r4, r4, #6
    aa74:	1a1b      	subs	r3, r3, r0
    aa76:	0a64      	lsrs	r4, r4, #9
    aa78:	b2db      	uxtb	r3, r3
    aa7a:	e7cc      	b.n	aa16 <__aeabi_ui2f+0x1e>
    aa7c:	0022      	movs	r2, r4
    aa7e:	e7d7      	b.n	aa30 <__aeabi_ui2f+0x38>
    aa80:	fbffffff 	.word	0xfbffffff

0000aa84 <__aeabi_f2d>:
    aa84:	0041      	lsls	r1, r0, #1
    aa86:	0e09      	lsrs	r1, r1, #24
    aa88:	1c4b      	adds	r3, r1, #1
    aa8a:	0242      	lsls	r2, r0, #9
    aa8c:	b2db      	uxtb	r3, r3
    aa8e:	b570      	push	{r4, r5, r6, lr}
    aa90:	0a56      	lsrs	r6, r2, #9
    aa92:	0fc4      	lsrs	r4, r0, #31
    aa94:	2b01      	cmp	r3, #1
    aa96:	dd19      	ble.n	aacc <__aeabi_f2d+0x48>
    aa98:	0b13      	lsrs	r3, r2, #12
    aa9a:	f240 3280 	movw	r2, #896	; 0x380
    aa9e:	0776      	lsls	r6, r6, #29
    aaa0:	188d      	adds	r5, r1, r2
    aaa2:	2100      	movs	r1, #0
    aaa4:	0d0a      	lsrs	r2, r1, #20
    aaa6:	0512      	lsls	r2, r2, #20
    aaa8:	431a      	orrs	r2, r3
    aaaa:	f240 73ff 	movw	r3, #2047	; 0x7ff
    aaae:	402b      	ands	r3, r5
    aab0:	f64f 75ff 	movw	r5, #65535	; 0xffff
    aab4:	f2c8 050f 	movt	r5, #32783	; 0x800f
    aab8:	402a      	ands	r2, r5
    aaba:	051b      	lsls	r3, r3, #20
    aabc:	4313      	orrs	r3, r2
    aabe:	005b      	lsls	r3, r3, #1
    aac0:	07e4      	lsls	r4, r4, #31
    aac2:	085b      	lsrs	r3, r3, #1
    aac4:	4323      	orrs	r3, r4
    aac6:	0030      	movs	r0, r6
    aac8:	0019      	movs	r1, r3
    aaca:	bd70      	pop	{r4, r5, r6, pc}
    aacc:	b9a9      	cbnz	r1, aafa <__aeabi_f2d+0x76>
    aace:	b30e      	cbz	r6, ab14 <__aeabi_f2d+0x90>
    aad0:	0030      	movs	r0, r6
    aad2:	f000 f8b7 	bl	ac44 <__clzsi2>
    aad6:	280a      	cmp	r0, #10
    aad8:	dc1f      	bgt.n	ab1a <__aeabi_f2d+0x96>
    aada:	230b      	movs	r3, #11
    aadc:	0032      	movs	r2, r6
    aade:	1a1b      	subs	r3, r3, r0
    aae0:	40da      	lsrs	r2, r3
    aae2:	0003      	movs	r3, r0
    aae4:	3315      	adds	r3, #21
    aae6:	409e      	lsls	r6, r3
    aae8:	f240 3589 	movw	r5, #905	; 0x389
    aaec:	f240 71ff 	movw	r1, #2047	; 0x7ff
    aaf0:	0312      	lsls	r2, r2, #12
    aaf2:	1a2d      	subs	r5, r5, r0
    aaf4:	0b13      	lsrs	r3, r2, #12
    aaf6:	400d      	ands	r5, r1
    aaf8:	e7d3      	b.n	aaa2 <__aeabi_f2d+0x1e>
    aafa:	b13e      	cbz	r6, ab0c <__aeabi_f2d+0x88>
    aafc:	2380      	movs	r3, #128	; 0x80
    aafe:	0b12      	lsrs	r2, r2, #12
    ab00:	031b      	lsls	r3, r3, #12
    ab02:	0776      	lsls	r6, r6, #29
    ab04:	4313      	orrs	r3, r2
    ab06:	f240 75ff 	movw	r5, #2047	; 0x7ff
    ab0a:	e7ca      	b.n	aaa2 <__aeabi_f2d+0x1e>
    ab0c:	f240 75ff 	movw	r5, #2047	; 0x7ff
    ab10:	2300      	movs	r3, #0
    ab12:	e7c6      	b.n	aaa2 <__aeabi_f2d+0x1e>
    ab14:	2500      	movs	r5, #0
    ab16:	2300      	movs	r3, #0
    ab18:	e7c3      	b.n	aaa2 <__aeabi_f2d+0x1e>
    ab1a:	0003      	movs	r3, r0
    ab1c:	0032      	movs	r2, r6
    ab1e:	3b0b      	subs	r3, #11
    ab20:	409a      	lsls	r2, r3
    ab22:	2600      	movs	r6, #0
    ab24:	e7e0      	b.n	aae8 <__aeabi_f2d+0x64>
    ab26:	46c0      	nop			; (mov r8, r8)

0000ab28 <__aeabi_d2f>:
    ab28:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab2a:	f240 75ff 	movw	r5, #2047	; 0x7ff
    ab2e:	004c      	lsls	r4, r1, #1
    ab30:	030b      	lsls	r3, r1, #12
    ab32:	0d64      	lsrs	r4, r4, #21
    ab34:	0f46      	lsrs	r6, r0, #29
    ab36:	0a5b      	lsrs	r3, r3, #9
    ab38:	1c67      	adds	r7, r4, #1
    ab3a:	4333      	orrs	r3, r6
    ab3c:	0fc9      	lsrs	r1, r1, #31
    ab3e:	00c6      	lsls	r6, r0, #3
    ab40:	403d      	ands	r5, r7
    ab42:	2d01      	cmp	r5, #1
    ab44:	dd29      	ble.n	ab9a <__aeabi_d2f+0x72>
    ab46:	4a3b      	ldr	r2, [pc, #236]	; (ac34 <__aeabi_d2f+0x10c>)
    ab48:	18a5      	adds	r5, r4, r2
    ab4a:	2dfe      	cmp	r5, #254	; 0xfe
    ab4c:	dc1c      	bgt.n	ab88 <__aeabi_d2f+0x60>
    ab4e:	2d00      	cmp	r5, #0
    ab50:	dd3e      	ble.n	abd0 <__aeabi_d2f+0xa8>
    ab52:	0180      	lsls	r0, r0, #6
    ab54:	0002      	movs	r2, r0
    ab56:	1e50      	subs	r0, r2, #1
    ab58:	4182      	sbcs	r2, r0
    ab5a:	0f76      	lsrs	r6, r6, #29
    ab5c:	4332      	orrs	r2, r6
    ab5e:	00db      	lsls	r3, r3, #3
    ab60:	4313      	orrs	r3, r2
    ab62:	075a      	lsls	r2, r3, #29
    ab64:	d004      	beq.n	ab70 <__aeabi_d2f+0x48>
    ab66:	220f      	movs	r2, #15
    ab68:	401a      	ands	r2, r3
    ab6a:	2a04      	cmp	r2, #4
    ab6c:	d000      	beq.n	ab70 <__aeabi_d2f+0x48>
    ab6e:	3304      	adds	r3, #4
    ab70:	2280      	movs	r2, #128	; 0x80
    ab72:	04d2      	lsls	r2, r2, #19
    ab74:	401a      	ands	r2, r3
    ab76:	2a00      	cmp	r2, #0
    ab78:	d059      	beq.n	ac2e <__aeabi_d2f+0x106>
    ab7a:	3501      	adds	r5, #1
    ab7c:	2dff      	cmp	r5, #255	; 0xff
    ab7e:	d003      	beq.n	ab88 <__aeabi_d2f+0x60>
    ab80:	019b      	lsls	r3, r3, #6
    ab82:	0a5b      	lsrs	r3, r3, #9
    ab84:	b2ec      	uxtb	r4, r5
    ab86:	e001      	b.n	ab8c <__aeabi_d2f+0x64>
    ab88:	24ff      	movs	r4, #255	; 0xff
    ab8a:	2300      	movs	r3, #0
    ab8c:	0258      	lsls	r0, r3, #9
    ab8e:	05e4      	lsls	r4, r4, #23
    ab90:	0a40      	lsrs	r0, r0, #9
    ab92:	07c9      	lsls	r1, r1, #31
    ab94:	4320      	orrs	r0, r4
    ab96:	4308      	orrs	r0, r1
    ab98:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ab9a:	b144      	cbz	r4, abae <__aeabi_d2f+0x86>
    ab9c:	431e      	orrs	r6, r3
    ab9e:	2e00      	cmp	r6, #0
    aba0:	d0f2      	beq.n	ab88 <__aeabi_d2f+0x60>
    aba2:	2080      	movs	r0, #128	; 0x80
    aba4:	00db      	lsls	r3, r3, #3
    aba6:	0480      	lsls	r0, r0, #18
    aba8:	4303      	orrs	r3, r0
    abaa:	25ff      	movs	r5, #255	; 0xff
    abac:	e7d9      	b.n	ab62 <__aeabi_d2f+0x3a>
    abae:	4333      	orrs	r3, r6
    abb0:	b11b      	cbz	r3, abba <__aeabi_d2f+0x92>
    abb2:	2305      	movs	r3, #5
    abb4:	08db      	lsrs	r3, r3, #3
    abb6:	2cff      	cmp	r4, #255	; 0xff
    abb8:	d003      	beq.n	abc2 <__aeabi_d2f+0x9a>
    abba:	025b      	lsls	r3, r3, #9
    abbc:	0a5b      	lsrs	r3, r3, #9
    abbe:	b2e4      	uxtb	r4, r4
    abc0:	e7e4      	b.n	ab8c <__aeabi_d2f+0x64>
    abc2:	b393      	cbz	r3, ac2a <__aeabi_d2f+0x102>
    abc4:	2080      	movs	r0, #128	; 0x80
    abc6:	03c0      	lsls	r0, r0, #15
    abc8:	4303      	orrs	r3, r0
    abca:	025b      	lsls	r3, r3, #9
    abcc:	0a5b      	lsrs	r3, r3, #9
    abce:	e7dd      	b.n	ab8c <__aeabi_d2f+0x64>
    abd0:	002a      	movs	r2, r5
    abd2:	3217      	adds	r2, #23
    abd4:	db14      	blt.n	ac00 <__aeabi_d2f+0xd8>
    abd6:	2280      	movs	r2, #128	; 0x80
    abd8:	271e      	movs	r7, #30
    abda:	0412      	lsls	r2, r2, #16
    abdc:	4313      	orrs	r3, r2
    abde:	1b7f      	subs	r7, r7, r5
    abe0:	2f1f      	cmp	r7, #31
    abe2:	dc0f      	bgt.n	ac04 <__aeabi_d2f+0xdc>
    abe4:	4a14      	ldr	r2, [pc, #80]	; (ac38 <__aeabi_d2f+0x110>)
    abe6:	4694      	mov	ip, r2
    abe8:	4464      	add	r4, ip
    abea:	0032      	movs	r2, r6
    abec:	40a6      	lsls	r6, r4
    abee:	0035      	movs	r5, r6
    abf0:	40a3      	lsls	r3, r4
    abf2:	1e6e      	subs	r6, r5, #1
    abf4:	41b5      	sbcs	r5, r6
    abf6:	40fa      	lsrs	r2, r7
    abf8:	432b      	orrs	r3, r5
    abfa:	4313      	orrs	r3, r2
    abfc:	2500      	movs	r5, #0
    abfe:	e7b0      	b.n	ab62 <__aeabi_d2f+0x3a>
    ac00:	2400      	movs	r4, #0
    ac02:	e7d6      	b.n	abb2 <__aeabi_d2f+0x8a>
    ac04:	2202      	movs	r2, #2
    ac06:	4252      	negs	r2, r2
    ac08:	1b55      	subs	r5, r2, r5
    ac0a:	001a      	movs	r2, r3
    ac0c:	40ea      	lsrs	r2, r5
    ac0e:	2f20      	cmp	r7, #32
    ac10:	d009      	beq.n	ac26 <__aeabi_d2f+0xfe>
    ac12:	480a      	ldr	r0, [pc, #40]	; (ac3c <__aeabi_d2f+0x114>)
    ac14:	4684      	mov	ip, r0
    ac16:	4464      	add	r4, ip
    ac18:	40a3      	lsls	r3, r4
    ac1a:	4333      	orrs	r3, r6
    ac1c:	1e5e      	subs	r6, r3, #1
    ac1e:	41b3      	sbcs	r3, r6
    ac20:	2500      	movs	r5, #0
    ac22:	4313      	orrs	r3, r2
    ac24:	e79d      	b.n	ab62 <__aeabi_d2f+0x3a>
    ac26:	2300      	movs	r3, #0
    ac28:	e7f7      	b.n	ac1a <__aeabi_d2f+0xf2>
    ac2a:	2300      	movs	r3, #0
    ac2c:	e7ae      	b.n	ab8c <__aeabi_d2f+0x64>
    ac2e:	002c      	movs	r4, r5
    ac30:	e7c0      	b.n	abb4 <__aeabi_d2f+0x8c>
    ac32:	46c0      	nop			; (mov r8, r8)
    ac34:	fffffc80 	.word	0xfffffc80
    ac38:	fffffc82 	.word	0xfffffc82
    ac3c:	fffffca2 	.word	0xfffffca2

0000ac40 <__aeabi_idiv0>:
    ac40:	4770      	bx	lr
    ac42:	46c0      	nop			; (mov r8, r8)

0000ac44 <__clzsi2>:
    ac44:	211c      	movs	r1, #28
    ac46:	2301      	movs	r3, #1
    ac48:	041b      	lsls	r3, r3, #16
    ac4a:	4298      	cmp	r0, r3
    ac4c:	d301      	bcc.n	ac52 <__clzsi2+0xe>
    ac4e:	0c00      	lsrs	r0, r0, #16
    ac50:	3910      	subs	r1, #16
    ac52:	0a1b      	lsrs	r3, r3, #8
    ac54:	4298      	cmp	r0, r3
    ac56:	d301      	bcc.n	ac5c <__clzsi2+0x18>
    ac58:	0a00      	lsrs	r0, r0, #8
    ac5a:	3908      	subs	r1, #8
    ac5c:	091b      	lsrs	r3, r3, #4
    ac5e:	4298      	cmp	r0, r3
    ac60:	d301      	bcc.n	ac66 <__clzsi2+0x22>
    ac62:	0900      	lsrs	r0, r0, #4
    ac64:	3904      	subs	r1, #4
    ac66:	a202      	add	r2, pc, #8	; (adr r2, ac70 <__clzsi2+0x2c>)
    ac68:	5c10      	ldrb	r0, [r2, r0]
    ac6a:	1840      	adds	r0, r0, r1
    ac6c:	4770      	bx	lr
    ac6e:	46c0      	nop			; (mov r8, r8)
    ac70:	02020304 	.word	0x02020304
    ac74:	01010101 	.word	0x01010101
	...

0000ac80 <atoi>:
    ac80:	b510      	push	{r4, lr}
    ac82:	220a      	movs	r2, #10
    ac84:	2100      	movs	r1, #0
    ac86:	f000 fb7f 	bl	b388 <strtol>
    ac8a:	bd10      	pop	{r4, pc}

0000ac8c <calloc>:
    ac8c:	b510      	push	{r4, lr}
    ac8e:	4b03      	ldr	r3, [pc, #12]	; (ac9c <calloc+0x10>)
    ac90:	000a      	movs	r2, r1
    ac92:	0001      	movs	r1, r0
    ac94:	6818      	ldr	r0, [r3, #0]
    ac96:	f000 f85b 	bl	ad50 <_calloc_r>
    ac9a:	bd10      	pop	{r4, pc}
    ac9c:	20002004 	.word	0x20002004

0000aca0 <__errno>:
    aca0:	4b01      	ldr	r3, [pc, #4]	; (aca8 <__errno+0x8>)
    aca2:	6818      	ldr	r0, [r3, #0]
    aca4:	4770      	bx	lr
    aca6:	46c0      	nop			; (mov r8, r8)
    aca8:	20002004 	.word	0x20002004

0000acac <__libc_init_array>:
    acac:	b570      	push	{r4, r5, r6, lr}
    acae:	2500      	movs	r5, #0
    acb0:	4b0e      	ldr	r3, [pc, #56]	; (acec <__libc_init_array+0x40>)
    acb2:	4c0f      	ldr	r4, [pc, #60]	; (acf0 <__libc_init_array+0x44>)
    acb4:	1ae4      	subs	r4, r4, r3
    acb6:	10a4      	asrs	r4, r4, #2
    acb8:	42a5      	cmp	r5, r4
    acba:	d109      	bne.n	acd0 <__libc_init_array+0x24>
    acbc:	2500      	movs	r5, #0
    acbe:	f000 ff8f 	bl	bbe0 <_init>
    acc2:	4c0c      	ldr	r4, [pc, #48]	; (acf4 <__libc_init_array+0x48>)
    acc4:	4b0c      	ldr	r3, [pc, #48]	; (acf8 <__libc_init_array+0x4c>)
    acc6:	1ae4      	subs	r4, r4, r3
    acc8:	10a4      	asrs	r4, r4, #2
    acca:	42a5      	cmp	r5, r4
    accc:	d107      	bne.n	acde <__libc_init_array+0x32>
    acce:	bd70      	pop	{r4, r5, r6, pc}
    acd0:	4a06      	ldr	r2, [pc, #24]	; (acec <__libc_init_array+0x40>)
    acd2:	00ab      	lsls	r3, r5, #2
    acd4:	189b      	adds	r3, r3, r2
    acd6:	681b      	ldr	r3, [r3, #0]
    acd8:	4798      	blx	r3
    acda:	3501      	adds	r5, #1
    acdc:	e7ec      	b.n	acb8 <__libc_init_array+0xc>
    acde:	4a06      	ldr	r2, [pc, #24]	; (acf8 <__libc_init_array+0x4c>)
    ace0:	00ab      	lsls	r3, r5, #2
    ace2:	189b      	adds	r3, r3, r2
    ace4:	681b      	ldr	r3, [r3, #0]
    ace6:	4798      	blx	r3
    ace8:	3501      	adds	r5, #1
    acea:	e7ee      	b.n	acca <__libc_init_array+0x1e>
    acec:	0000bbec 	.word	0x0000bbec
    acf0:	0000bbec 	.word	0x0000bbec
    acf4:	0000bbf0 	.word	0x0000bbf0
    acf8:	0000bbec 	.word	0x0000bbec

0000acfc <malloc>:
    acfc:	b510      	push	{r4, lr}
    acfe:	4b03      	ldr	r3, [pc, #12]	; (ad0c <malloc+0x10>)
    ad00:	0001      	movs	r1, r0
    ad02:	6818      	ldr	r0, [r3, #0]
    ad04:	f000 f87c 	bl	ae00 <_malloc_r>
    ad08:	bd10      	pop	{r4, pc}
    ad0a:	46c0      	nop			; (mov r8, r8)
    ad0c:	20002004 	.word	0x20002004

0000ad10 <memcmp>:
    ad10:	b530      	push	{r4, r5, lr}
    ad12:	2400      	movs	r4, #0
    ad14:	42a2      	cmp	r2, r4
    ad16:	d101      	bne.n	ad1c <memcmp+0xc>
    ad18:	2000      	movs	r0, #0
    ad1a:	e005      	b.n	ad28 <memcmp+0x18>
    ad1c:	5d03      	ldrb	r3, [r0, r4]
    ad1e:	1c65      	adds	r5, r4, #1
    ad20:	5d0c      	ldrb	r4, [r1, r4]
    ad22:	42a3      	cmp	r3, r4
    ad24:	d001      	beq.n	ad2a <memcmp+0x1a>
    ad26:	1b18      	subs	r0, r3, r4
    ad28:	bd30      	pop	{r4, r5, pc}
    ad2a:	002c      	movs	r4, r5
    ad2c:	e7f2      	b.n	ad14 <memcmp+0x4>

0000ad2e <memcpy>:
    ad2e:	2300      	movs	r3, #0
    ad30:	b510      	push	{r4, lr}
    ad32:	429a      	cmp	r2, r3
    ad34:	d100      	bne.n	ad38 <memcpy+0xa>
    ad36:	bd10      	pop	{r4, pc}
    ad38:	5ccc      	ldrb	r4, [r1, r3]
    ad3a:	54c4      	strb	r4, [r0, r3]
    ad3c:	3301      	adds	r3, #1
    ad3e:	e7f8      	b.n	ad32 <memcpy+0x4>

0000ad40 <memset>:
    ad40:	0003      	movs	r3, r0
    ad42:	1882      	adds	r2, r0, r2
    ad44:	4293      	cmp	r3, r2
    ad46:	d100      	bne.n	ad4a <memset+0xa>
    ad48:	4770      	bx	lr
    ad4a:	7019      	strb	r1, [r3, #0]
    ad4c:	3301      	adds	r3, #1
    ad4e:	e7f9      	b.n	ad44 <memset+0x4>

0000ad50 <_calloc_r>:
    ad50:	434a      	muls	r2, r1
    ad52:	b570      	push	{r4, r5, r6, lr}
    ad54:	0011      	movs	r1, r2
    ad56:	0014      	movs	r4, r2
    ad58:	f000 f852 	bl	ae00 <_malloc_r>
    ad5c:	0005      	movs	r5, r0
    ad5e:	b118      	cbz	r0, ad68 <_calloc_r+0x18>
    ad60:	0022      	movs	r2, r4
    ad62:	2100      	movs	r1, #0
    ad64:	f7ff ffec 	bl	ad40 <memset>
    ad68:	0028      	movs	r0, r5
    ad6a:	bd70      	pop	{r4, r5, r6, pc}

0000ad6c <_free_r>:
    ad6c:	b570      	push	{r4, r5, r6, lr}
    ad6e:	0005      	movs	r5, r0
    ad70:	b181      	cbz	r1, ad94 <_free_r+0x28>
    ad72:	1f0c      	subs	r4, r1, #4
    ad74:	6823      	ldr	r3, [r4, #0]
    ad76:	2b00      	cmp	r3, #0
    ad78:	da00      	bge.n	ad7c <_free_r+0x10>
    ad7a:	18e4      	adds	r4, r4, r3
    ad7c:	0028      	movs	r0, r5
    ad7e:	f000 fb45 	bl	b40c <__malloc_lock>
    ad82:	4a1e      	ldr	r2, [pc, #120]	; (adfc <_free_r+0x90>)
    ad84:	6813      	ldr	r3, [r2, #0]
    ad86:	0011      	movs	r1, r2
    ad88:	b92b      	cbnz	r3, ad96 <_free_r+0x2a>
    ad8a:	6063      	str	r3, [r4, #4]
    ad8c:	6014      	str	r4, [r2, #0]
    ad8e:	0028      	movs	r0, r5
    ad90:	f000 fb3d 	bl	b40e <__malloc_unlock>
    ad94:	bd70      	pop	{r4, r5, r6, pc}
    ad96:	42a3      	cmp	r3, r4
    ad98:	d90b      	bls.n	adb2 <_free_r+0x46>
    ad9a:	6822      	ldr	r2, [r4, #0]
    ad9c:	18a0      	adds	r0, r4, r2
    ad9e:	4283      	cmp	r3, r0
    ada0:	d103      	bne.n	adaa <_free_r+0x3e>
    ada2:	6818      	ldr	r0, [r3, #0]
    ada4:	685b      	ldr	r3, [r3, #4]
    ada6:	1882      	adds	r2, r0, r2
    ada8:	6022      	str	r2, [r4, #0]
    adaa:	6063      	str	r3, [r4, #4]
    adac:	600c      	str	r4, [r1, #0]
    adae:	e7ee      	b.n	ad8e <_free_r+0x22>
    adb0:	0013      	movs	r3, r2
    adb2:	685a      	ldr	r2, [r3, #4]
    adb4:	b10a      	cbz	r2, adba <_free_r+0x4e>
    adb6:	42a2      	cmp	r2, r4
    adb8:	d9fa      	bls.n	adb0 <_free_r+0x44>
    adba:	6819      	ldr	r1, [r3, #0]
    adbc:	1858      	adds	r0, r3, r1
    adbe:	42a0      	cmp	r0, r4
    adc0:	d10b      	bne.n	adda <_free_r+0x6e>
    adc2:	6820      	ldr	r0, [r4, #0]
    adc4:	1809      	adds	r1, r1, r0
    adc6:	1858      	adds	r0, r3, r1
    adc8:	6019      	str	r1, [r3, #0]
    adca:	4282      	cmp	r2, r0
    adcc:	d1df      	bne.n	ad8e <_free_r+0x22>
    adce:	6810      	ldr	r0, [r2, #0]
    add0:	6852      	ldr	r2, [r2, #4]
    add2:	1841      	adds	r1, r0, r1
    add4:	6019      	str	r1, [r3, #0]
    add6:	605a      	str	r2, [r3, #4]
    add8:	e7d9      	b.n	ad8e <_free_r+0x22>
    adda:	42a0      	cmp	r0, r4
    addc:	d902      	bls.n	ade4 <_free_r+0x78>
    adde:	230c      	movs	r3, #12
    ade0:	602b      	str	r3, [r5, #0]
    ade2:	e7d4      	b.n	ad8e <_free_r+0x22>
    ade4:	6821      	ldr	r1, [r4, #0]
    ade6:	1860      	adds	r0, r4, r1
    ade8:	4282      	cmp	r2, r0
    adea:	d103      	bne.n	adf4 <_free_r+0x88>
    adec:	6810      	ldr	r0, [r2, #0]
    adee:	6852      	ldr	r2, [r2, #4]
    adf0:	1841      	adds	r1, r0, r1
    adf2:	6021      	str	r1, [r4, #0]
    adf4:	6062      	str	r2, [r4, #4]
    adf6:	605c      	str	r4, [r3, #4]
    adf8:	e7c9      	b.n	ad8e <_free_r+0x22>
    adfa:	46c0      	nop			; (mov r8, r8)
    adfc:	2000223c 	.word	0x2000223c

0000ae00 <_malloc_r>:
    ae00:	2303      	movs	r3, #3
    ae02:	b570      	push	{r4, r5, r6, lr}
    ae04:	1ccd      	adds	r5, r1, #3
    ae06:	439d      	bics	r5, r3
    ae08:	3508      	adds	r5, #8
    ae0a:	0006      	movs	r6, r0
    ae0c:	2d0c      	cmp	r5, #12
    ae0e:	d21c      	bcs.n	ae4a <_malloc_r+0x4a>
    ae10:	250c      	movs	r5, #12
    ae12:	42a9      	cmp	r1, r5
    ae14:	d81b      	bhi.n	ae4e <_malloc_r+0x4e>
    ae16:	0030      	movs	r0, r6
    ae18:	f000 faf8 	bl	b40c <__malloc_lock>
    ae1c:	4a25      	ldr	r2, [pc, #148]	; (aeb4 <_malloc_r+0xb4>)
    ae1e:	6814      	ldr	r4, [r2, #0]
    ae20:	0021      	movs	r1, r4
    ae22:	b9c1      	cbnz	r1, ae56 <_malloc_r+0x56>
    ae24:	4c24      	ldr	r4, [pc, #144]	; (aeb8 <_malloc_r+0xb8>)
    ae26:	6823      	ldr	r3, [r4, #0]
    ae28:	b91b      	cbnz	r3, ae32 <_malloc_r+0x32>
    ae2a:	0030      	movs	r0, r6
    ae2c:	f000 f9fc 	bl	b228 <_sbrk_r>
    ae30:	6020      	str	r0, [r4, #0]
    ae32:	0029      	movs	r1, r5
    ae34:	0030      	movs	r0, r6
    ae36:	f000 f9f7 	bl	b228 <_sbrk_r>
    ae3a:	1c43      	adds	r3, r0, #1
    ae3c:	d12d      	bne.n	ae9a <_malloc_r+0x9a>
    ae3e:	230c      	movs	r3, #12
    ae40:	0030      	movs	r0, r6
    ae42:	6033      	str	r3, [r6, #0]
    ae44:	f000 fae3 	bl	b40e <__malloc_unlock>
    ae48:	e003      	b.n	ae52 <_malloc_r+0x52>
    ae4a:	2d00      	cmp	r5, #0
    ae4c:	dae1      	bge.n	ae12 <_malloc_r+0x12>
    ae4e:	230c      	movs	r3, #12
    ae50:	6033      	str	r3, [r6, #0]
    ae52:	2000      	movs	r0, #0
    ae54:	bd70      	pop	{r4, r5, r6, pc}
    ae56:	680b      	ldr	r3, [r1, #0]
    ae58:	1b5b      	subs	r3, r3, r5
    ae5a:	d41b      	bmi.n	ae94 <_malloc_r+0x94>
    ae5c:	2b0b      	cmp	r3, #11
    ae5e:	d903      	bls.n	ae68 <_malloc_r+0x68>
    ae60:	600b      	str	r3, [r1, #0]
    ae62:	18cc      	adds	r4, r1, r3
    ae64:	6025      	str	r5, [r4, #0]
    ae66:	e003      	b.n	ae70 <_malloc_r+0x70>
    ae68:	428c      	cmp	r4, r1
    ae6a:	d10f      	bne.n	ae8c <_malloc_r+0x8c>
    ae6c:	6863      	ldr	r3, [r4, #4]
    ae6e:	6013      	str	r3, [r2, #0]
    ae70:	0030      	movs	r0, r6
    ae72:	f000 facc 	bl	b40e <__malloc_unlock>
    ae76:	0020      	movs	r0, r4
    ae78:	2207      	movs	r2, #7
    ae7a:	300b      	adds	r0, #11
    ae7c:	1d23      	adds	r3, r4, #4
    ae7e:	4390      	bics	r0, r2
    ae80:	1ac3      	subs	r3, r0, r3
    ae82:	2b00      	cmp	r3, #0
    ae84:	d0e6      	beq.n	ae54 <_malloc_r+0x54>
    ae86:	425a      	negs	r2, r3
    ae88:	50e2      	str	r2, [r4, r3]
    ae8a:	e7e3      	b.n	ae54 <_malloc_r+0x54>
    ae8c:	684b      	ldr	r3, [r1, #4]
    ae8e:	6063      	str	r3, [r4, #4]
    ae90:	000c      	movs	r4, r1
    ae92:	e7ed      	b.n	ae70 <_malloc_r+0x70>
    ae94:	000c      	movs	r4, r1
    ae96:	6849      	ldr	r1, [r1, #4]
    ae98:	e7c3      	b.n	ae22 <_malloc_r+0x22>
    ae9a:	2303      	movs	r3, #3
    ae9c:	1cc4      	adds	r4, r0, #3
    ae9e:	439c      	bics	r4, r3
    aea0:	42a0      	cmp	r0, r4
    aea2:	d0df      	beq.n	ae64 <_malloc_r+0x64>
    aea4:	1a21      	subs	r1, r4, r0
    aea6:	0030      	movs	r0, r6
    aea8:	f000 f9be 	bl	b228 <_sbrk_r>
    aeac:	1c43      	adds	r3, r0, #1
    aeae:	d1d9      	bne.n	ae64 <_malloc_r+0x64>
    aeb0:	e7c5      	b.n	ae3e <_malloc_r+0x3e>
    aeb2:	46c0      	nop			; (mov r8, r8)
    aeb4:	2000223c 	.word	0x2000223c
    aeb8:	20002240 	.word	0x20002240

0000aebc <_printf_common>:
    aebc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    aebe:	0015      	movs	r5, r2
    aec0:	9301      	str	r3, [sp, #4]
    aec2:	688a      	ldr	r2, [r1, #8]
    aec4:	690b      	ldr	r3, [r1, #16]
    aec6:	9000      	str	r0, [sp, #0]
    aec8:	000c      	movs	r4, r1
    aeca:	4293      	cmp	r3, r2
    aecc:	da00      	bge.n	aed0 <_printf_common+0x14>
    aece:	0013      	movs	r3, r2
    aed0:	0022      	movs	r2, r4
    aed2:	602b      	str	r3, [r5, #0]
    aed4:	3243      	adds	r2, #67	; 0x43
    aed6:	7812      	ldrb	r2, [r2, #0]
    aed8:	b10a      	cbz	r2, aede <_printf_common+0x22>
    aeda:	3301      	adds	r3, #1
    aedc:	602b      	str	r3, [r5, #0]
    aede:	6823      	ldr	r3, [r4, #0]
    aee0:	069b      	lsls	r3, r3, #26
    aee2:	d502      	bpl.n	aeea <_printf_common+0x2e>
    aee4:	682b      	ldr	r3, [r5, #0]
    aee6:	3302      	adds	r3, #2
    aee8:	602b      	str	r3, [r5, #0]
    aeea:	2706      	movs	r7, #6
    aeec:	6823      	ldr	r3, [r4, #0]
    aeee:	401f      	ands	r7, r3
    aef0:	b33f      	cbz	r7, af42 <_printf_common+0x86>
    aef2:	0023      	movs	r3, r4
    aef4:	3343      	adds	r3, #67	; 0x43
    aef6:	781b      	ldrb	r3, [r3, #0]
    aef8:	1e5a      	subs	r2, r3, #1
    aefa:	4193      	sbcs	r3, r2
    aefc:	6822      	ldr	r2, [r4, #0]
    aefe:	0692      	lsls	r2, r2, #26
    af00:	d430      	bmi.n	af64 <_printf_common+0xa8>
    af02:	0022      	movs	r2, r4
    af04:	9901      	ldr	r1, [sp, #4]
    af06:	3243      	adds	r2, #67	; 0x43
    af08:	9800      	ldr	r0, [sp, #0]
    af0a:	9e08      	ldr	r6, [sp, #32]
    af0c:	47b0      	blx	r6
    af0e:	1c43      	adds	r3, r0, #1
    af10:	d025      	beq.n	af5e <_printf_common+0xa2>
    af12:	2306      	movs	r3, #6
    af14:	6820      	ldr	r0, [r4, #0]
    af16:	682a      	ldr	r2, [r5, #0]
    af18:	68e1      	ldr	r1, [r4, #12]
    af1a:	4003      	ands	r3, r0
    af1c:	2500      	movs	r5, #0
    af1e:	2b04      	cmp	r3, #4
    af20:	d103      	bne.n	af2a <_printf_common+0x6e>
    af22:	1a8d      	subs	r5, r1, r2
    af24:	43eb      	mvns	r3, r5
    af26:	17db      	asrs	r3, r3, #31
    af28:	401d      	ands	r5, r3
    af2a:	68a3      	ldr	r3, [r4, #8]
    af2c:	6922      	ldr	r2, [r4, #16]
    af2e:	4293      	cmp	r3, r2
    af30:	dd01      	ble.n	af36 <_printf_common+0x7a>
    af32:	1a9b      	subs	r3, r3, r2
    af34:	18ed      	adds	r5, r5, r3
    af36:	2700      	movs	r7, #0
    af38:	42bd      	cmp	r5, r7
    af3a:	d120      	bne.n	af7e <_printf_common+0xc2>
    af3c:	2000      	movs	r0, #0
    af3e:	e010      	b.n	af62 <_printf_common+0xa6>
    af40:	3701      	adds	r7, #1
    af42:	68e3      	ldr	r3, [r4, #12]
    af44:	682a      	ldr	r2, [r5, #0]
    af46:	1a9b      	subs	r3, r3, r2
    af48:	429f      	cmp	r7, r3
    af4a:	dad2      	bge.n	aef2 <_printf_common+0x36>
    af4c:	0022      	movs	r2, r4
    af4e:	2301      	movs	r3, #1
    af50:	3219      	adds	r2, #25
    af52:	9901      	ldr	r1, [sp, #4]
    af54:	9800      	ldr	r0, [sp, #0]
    af56:	9e08      	ldr	r6, [sp, #32]
    af58:	47b0      	blx	r6
    af5a:	1c43      	adds	r3, r0, #1
    af5c:	d1f0      	bne.n	af40 <_printf_common+0x84>
    af5e:	2001      	movs	r0, #1
    af60:	4240      	negs	r0, r0
    af62:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    af64:	2030      	movs	r0, #48	; 0x30
    af66:	18e1      	adds	r1, r4, r3
    af68:	3143      	adds	r1, #67	; 0x43
    af6a:	7008      	strb	r0, [r1, #0]
    af6c:	0021      	movs	r1, r4
    af6e:	1c5a      	adds	r2, r3, #1
    af70:	3145      	adds	r1, #69	; 0x45
    af72:	7809      	ldrb	r1, [r1, #0]
    af74:	18a2      	adds	r2, r4, r2
    af76:	3243      	adds	r2, #67	; 0x43
    af78:	3302      	adds	r3, #2
    af7a:	7011      	strb	r1, [r2, #0]
    af7c:	e7c1      	b.n	af02 <_printf_common+0x46>
    af7e:	0022      	movs	r2, r4
    af80:	2301      	movs	r3, #1
    af82:	321a      	adds	r2, #26
    af84:	9901      	ldr	r1, [sp, #4]
    af86:	9800      	ldr	r0, [sp, #0]
    af88:	9e08      	ldr	r6, [sp, #32]
    af8a:	47b0      	blx	r6
    af8c:	1c43      	adds	r3, r0, #1
    af8e:	d0e6      	beq.n	af5e <_printf_common+0xa2>
    af90:	3701      	adds	r7, #1
    af92:	e7d1      	b.n	af38 <_printf_common+0x7c>

0000af94 <_printf_i>:
    af94:	b5f0      	push	{r4, r5, r6, r7, lr}
    af96:	000e      	movs	r6, r1
    af98:	b089      	sub	sp, #36	; 0x24
    af9a:	9305      	str	r3, [sp, #20]
    af9c:	9003      	str	r0, [sp, #12]
    af9e:	9204      	str	r2, [sp, #16]
    afa0:	7e0a      	ldrb	r2, [r1, #24]
    afa2:	000c      	movs	r4, r1
    afa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    afa6:	3643      	adds	r6, #67	; 0x43
    afa8:	2a6e      	cmp	r2, #110	; 0x6e
    afaa:	d100      	bne.n	afae <_printf_i+0x1a>
    afac:	e08b      	b.n	b0c6 <_printf_i+0x132>
    afae:	d817      	bhi.n	afe0 <_printf_i+0x4c>
    afb0:	2a63      	cmp	r2, #99	; 0x63
    afb2:	d02c      	beq.n	b00e <_printf_i+0x7a>
    afb4:	d808      	bhi.n	afc8 <_printf_i+0x34>
    afb6:	2a00      	cmp	r2, #0
    afb8:	d100      	bne.n	afbc <_printf_i+0x28>
    afba:	e095      	b.n	b0e8 <_printf_i+0x154>
    afbc:	2a58      	cmp	r2, #88	; 0x58
    afbe:	d065      	beq.n	b08c <_printf_i+0xf8>
    afc0:	0025      	movs	r5, r4
    afc2:	3542      	adds	r5, #66	; 0x42
    afc4:	702a      	strb	r2, [r5, #0]
    afc6:	e029      	b.n	b01c <_printf_i+0x88>
    afc8:	2a64      	cmp	r2, #100	; 0x64
    afca:	d001      	beq.n	afd0 <_printf_i+0x3c>
    afcc:	2a69      	cmp	r2, #105	; 0x69
    afce:	d1f7      	bne.n	afc0 <_printf_i+0x2c>
    afd0:	6821      	ldr	r1, [r4, #0]
    afd2:	681a      	ldr	r2, [r3, #0]
    afd4:	0608      	lsls	r0, r1, #24
    afd6:	d523      	bpl.n	b020 <_printf_i+0x8c>
    afd8:	1d11      	adds	r1, r2, #4
    afda:	6019      	str	r1, [r3, #0]
    afdc:	6813      	ldr	r3, [r2, #0]
    afde:	e025      	b.n	b02c <_printf_i+0x98>
    afe0:	2a73      	cmp	r2, #115	; 0x73
    afe2:	d100      	bne.n	afe6 <_printf_i+0x52>
    afe4:	e084      	b.n	b0f0 <_printf_i+0x15c>
    afe6:	d808      	bhi.n	affa <_printf_i+0x66>
    afe8:	2a6f      	cmp	r2, #111	; 0x6f
    afea:	d027      	beq.n	b03c <_printf_i+0xa8>
    afec:	2a70      	cmp	r2, #112	; 0x70
    afee:	d1e7      	bne.n	afc0 <_printf_i+0x2c>
    aff0:	2220      	movs	r2, #32
    aff2:	6809      	ldr	r1, [r1, #0]
    aff4:	430a      	orrs	r2, r1
    aff6:	6022      	str	r2, [r4, #0]
    aff8:	e003      	b.n	b002 <_printf_i+0x6e>
    affa:	2a75      	cmp	r2, #117	; 0x75
    affc:	d01e      	beq.n	b03c <_printf_i+0xa8>
    affe:	2a78      	cmp	r2, #120	; 0x78
    b000:	d1de      	bne.n	afc0 <_printf_i+0x2c>
    b002:	0022      	movs	r2, r4
    b004:	2178      	movs	r1, #120	; 0x78
    b006:	3245      	adds	r2, #69	; 0x45
    b008:	7011      	strb	r1, [r2, #0]
    b00a:	4968      	ldr	r1, [pc, #416]	; (b1ac <_printf_i+0x218>)
    b00c:	e041      	b.n	b092 <_printf_i+0xfe>
    b00e:	000d      	movs	r5, r1
    b010:	681a      	ldr	r2, [r3, #0]
    b012:	3542      	adds	r5, #66	; 0x42
    b014:	1d11      	adds	r1, r2, #4
    b016:	6019      	str	r1, [r3, #0]
    b018:	6813      	ldr	r3, [r2, #0]
    b01a:	702b      	strb	r3, [r5, #0]
    b01c:	2301      	movs	r3, #1
    b01e:	e074      	b.n	b10a <_printf_i+0x176>
    b020:	0649      	lsls	r1, r1, #25
    b022:	d5d9      	bpl.n	afd8 <_printf_i+0x44>
    b024:	1d11      	adds	r1, r2, #4
    b026:	6019      	str	r1, [r3, #0]
    b028:	2300      	movs	r3, #0
    b02a:	5ed3      	ldrsh	r3, [r2, r3]
    b02c:	2b00      	cmp	r3, #0
    b02e:	da02      	bge.n	b036 <_printf_i+0xa2>
    b030:	222d      	movs	r2, #45	; 0x2d
    b032:	425b      	negs	r3, r3
    b034:	7032      	strb	r2, [r6, #0]
    b036:	495e      	ldr	r1, [pc, #376]	; (b1b0 <_printf_i+0x21c>)
    b038:	220a      	movs	r2, #10
    b03a:	e015      	b.n	b068 <_printf_i+0xd4>
    b03c:	6820      	ldr	r0, [r4, #0]
    b03e:	6819      	ldr	r1, [r3, #0]
    b040:	0605      	lsls	r5, r0, #24
    b042:	d503      	bpl.n	b04c <_printf_i+0xb8>
    b044:	1d08      	adds	r0, r1, #4
    b046:	6018      	str	r0, [r3, #0]
    b048:	680b      	ldr	r3, [r1, #0]
    b04a:	e005      	b.n	b058 <_printf_i+0xc4>
    b04c:	0640      	lsls	r0, r0, #25
    b04e:	d5f9      	bpl.n	b044 <_printf_i+0xb0>
    b050:	1d08      	adds	r0, r1, #4
    b052:	6018      	str	r0, [r3, #0]
    b054:	680b      	ldr	r3, [r1, #0]
    b056:	b29b      	uxth	r3, r3
    b058:	4955      	ldr	r1, [pc, #340]	; (b1b0 <_printf_i+0x21c>)
    b05a:	2a6f      	cmp	r2, #111	; 0x6f
    b05c:	d131      	bne.n	b0c2 <_printf_i+0x12e>
    b05e:	3a67      	subs	r2, #103	; 0x67
    b060:	0020      	movs	r0, r4
    b062:	2500      	movs	r5, #0
    b064:	3043      	adds	r0, #67	; 0x43
    b066:	7005      	strb	r5, [r0, #0]
    b068:	6860      	ldr	r0, [r4, #4]
    b06a:	60a0      	str	r0, [r4, #8]
    b06c:	2800      	cmp	r0, #0
    b06e:	db72      	blt.n	b156 <_printf_i+0x1c2>
    b070:	2504      	movs	r5, #4
    b072:	6827      	ldr	r7, [r4, #0]
    b074:	43af      	bics	r7, r5
    b076:	6027      	str	r7, [r4, #0]
    b078:	2b00      	cmp	r3, #0
    b07a:	d16e      	bne.n	b15a <_printf_i+0x1c6>
    b07c:	0035      	movs	r5, r6
    b07e:	2800      	cmp	r0, #0
    b080:	d077      	beq.n	b172 <_printf_i+0x1de>
    b082:	0025      	movs	r5, r4
    b084:	780b      	ldrb	r3, [r1, #0]
    b086:	3542      	adds	r5, #66	; 0x42
    b088:	702b      	strb	r3, [r5, #0]
    b08a:	e072      	b.n	b172 <_printf_i+0x1de>
    b08c:	3145      	adds	r1, #69	; 0x45
    b08e:	700a      	strb	r2, [r1, #0]
    b090:	4947      	ldr	r1, [pc, #284]	; (b1b0 <_printf_i+0x21c>)
    b092:	681a      	ldr	r2, [r3, #0]
    b094:	6820      	ldr	r0, [r4, #0]
    b096:	1d15      	adds	r5, r2, #4
    b098:	601d      	str	r5, [r3, #0]
    b09a:	6813      	ldr	r3, [r2, #0]
    b09c:	0605      	lsls	r5, r0, #24
    b09e:	d50c      	bpl.n	b0ba <_printf_i+0x126>
    b0a0:	07c2      	lsls	r2, r0, #31
    b0a2:	d502      	bpl.n	b0aa <_printf_i+0x116>
    b0a4:	2220      	movs	r2, #32
    b0a6:	4310      	orrs	r0, r2
    b0a8:	6020      	str	r0, [r4, #0]
    b0aa:	2210      	movs	r2, #16
    b0ac:	2b00      	cmp	r3, #0
    b0ae:	d1d7      	bne.n	b060 <_printf_i+0xcc>
    b0b0:	2020      	movs	r0, #32
    b0b2:	6825      	ldr	r5, [r4, #0]
    b0b4:	4385      	bics	r5, r0
    b0b6:	6025      	str	r5, [r4, #0]
    b0b8:	e7d2      	b.n	b060 <_printf_i+0xcc>
    b0ba:	0645      	lsls	r5, r0, #25
    b0bc:	d5f0      	bpl.n	b0a0 <_printf_i+0x10c>
    b0be:	b29b      	uxth	r3, r3
    b0c0:	e7ee      	b.n	b0a0 <_printf_i+0x10c>
    b0c2:	220a      	movs	r2, #10
    b0c4:	e7cc      	b.n	b060 <_printf_i+0xcc>
    b0c6:	6809      	ldr	r1, [r1, #0]
    b0c8:	681a      	ldr	r2, [r3, #0]
    b0ca:	0608      	lsls	r0, r1, #24
    b0cc:	d505      	bpl.n	b0da <_printf_i+0x146>
    b0ce:	1d11      	adds	r1, r2, #4
    b0d0:	6019      	str	r1, [r3, #0]
    b0d2:	6813      	ldr	r3, [r2, #0]
    b0d4:	6962      	ldr	r2, [r4, #20]
    b0d6:	601a      	str	r2, [r3, #0]
    b0d8:	e006      	b.n	b0e8 <_printf_i+0x154>
    b0da:	0649      	lsls	r1, r1, #25
    b0dc:	d5f7      	bpl.n	b0ce <_printf_i+0x13a>
    b0de:	1d11      	adds	r1, r2, #4
    b0e0:	6019      	str	r1, [r3, #0]
    b0e2:	6813      	ldr	r3, [r2, #0]
    b0e4:	8aa2      	ldrh	r2, [r4, #20]
    b0e6:	801a      	strh	r2, [r3, #0]
    b0e8:	2300      	movs	r3, #0
    b0ea:	0035      	movs	r5, r6
    b0ec:	6123      	str	r3, [r4, #16]
    b0ee:	e04e      	b.n	b18e <_printf_i+0x1fa>
    b0f0:	681a      	ldr	r2, [r3, #0]
    b0f2:	1d11      	adds	r1, r2, #4
    b0f4:	6019      	str	r1, [r3, #0]
    b0f6:	6815      	ldr	r5, [r2, #0]
    b0f8:	2100      	movs	r1, #0
    b0fa:	6862      	ldr	r2, [r4, #4]
    b0fc:	0028      	movs	r0, r5
    b0fe:	f000 f968 	bl	b3d2 <memchr>
    b102:	b108      	cbz	r0, b108 <_printf_i+0x174>
    b104:	1b40      	subs	r0, r0, r5
    b106:	6060      	str	r0, [r4, #4]
    b108:	6863      	ldr	r3, [r4, #4]
    b10a:	6123      	str	r3, [r4, #16]
    b10c:	2300      	movs	r3, #0
    b10e:	7033      	strb	r3, [r6, #0]
    b110:	e03d      	b.n	b18e <_printf_i+0x1fa>
    b112:	6923      	ldr	r3, [r4, #16]
    b114:	002a      	movs	r2, r5
    b116:	9904      	ldr	r1, [sp, #16]
    b118:	9803      	ldr	r0, [sp, #12]
    b11a:	9d05      	ldr	r5, [sp, #20]
    b11c:	47a8      	blx	r5
    b11e:	1c43      	adds	r3, r0, #1
    b120:	d03f      	beq.n	b1a2 <_printf_i+0x20e>
    b122:	6823      	ldr	r3, [r4, #0]
    b124:	2500      	movs	r5, #0
    b126:	079b      	lsls	r3, r3, #30
    b128:	d40f      	bmi.n	b14a <_printf_i+0x1b6>
    b12a:	9b07      	ldr	r3, [sp, #28]
    b12c:	68e0      	ldr	r0, [r4, #12]
    b12e:	4298      	cmp	r0, r3
    b130:	da39      	bge.n	b1a6 <_printf_i+0x212>
    b132:	0018      	movs	r0, r3
    b134:	e037      	b.n	b1a6 <_printf_i+0x212>
    b136:	0022      	movs	r2, r4
    b138:	2301      	movs	r3, #1
    b13a:	3219      	adds	r2, #25
    b13c:	9904      	ldr	r1, [sp, #16]
    b13e:	9803      	ldr	r0, [sp, #12]
    b140:	9e05      	ldr	r6, [sp, #20]
    b142:	47b0      	blx	r6
    b144:	1c43      	adds	r3, r0, #1
    b146:	d02c      	beq.n	b1a2 <_printf_i+0x20e>
    b148:	3501      	adds	r5, #1
    b14a:	68e3      	ldr	r3, [r4, #12]
    b14c:	9a07      	ldr	r2, [sp, #28]
    b14e:	1a9b      	subs	r3, r3, r2
    b150:	429d      	cmp	r5, r3
    b152:	dbf0      	blt.n	b136 <_printf_i+0x1a2>
    b154:	e7e9      	b.n	b12a <_printf_i+0x196>
    b156:	2b00      	cmp	r3, #0
    b158:	d093      	beq.n	b082 <_printf_i+0xee>
    b15a:	0035      	movs	r5, r6
    b15c:	fbb3 f0f2 	udiv	r0, r3, r2
    b160:	0017      	movs	r7, r2
    b162:	4347      	muls	r7, r0
    b164:	1bdb      	subs	r3, r3, r7
    b166:	5ccb      	ldrb	r3, [r1, r3]
    b168:	3d01      	subs	r5, #1
    b16a:	702b      	strb	r3, [r5, #0]
    b16c:	0003      	movs	r3, r0
    b16e:	2800      	cmp	r0, #0
    b170:	d1f4      	bne.n	b15c <_printf_i+0x1c8>
    b172:	2a08      	cmp	r2, #8
    b174:	d109      	bne.n	b18a <_printf_i+0x1f6>
    b176:	6823      	ldr	r3, [r4, #0]
    b178:	07db      	lsls	r3, r3, #31
    b17a:	d506      	bpl.n	b18a <_printf_i+0x1f6>
    b17c:	6863      	ldr	r3, [r4, #4]
    b17e:	6922      	ldr	r2, [r4, #16]
    b180:	4293      	cmp	r3, r2
    b182:	dc02      	bgt.n	b18a <_printf_i+0x1f6>
    b184:	2330      	movs	r3, #48	; 0x30
    b186:	3d01      	subs	r5, #1
    b188:	702b      	strb	r3, [r5, #0]
    b18a:	1b76      	subs	r6, r6, r5
    b18c:	6126      	str	r6, [r4, #16]
    b18e:	9b05      	ldr	r3, [sp, #20]
    b190:	aa07      	add	r2, sp, #28
    b192:	9300      	str	r3, [sp, #0]
    b194:	0021      	movs	r1, r4
    b196:	9b04      	ldr	r3, [sp, #16]
    b198:	9803      	ldr	r0, [sp, #12]
    b19a:	f7ff fe8f 	bl	aebc <_printf_common>
    b19e:	1c43      	adds	r3, r0, #1
    b1a0:	d1b7      	bne.n	b112 <_printf_i+0x17e>
    b1a2:	2001      	movs	r0, #1
    b1a4:	4240      	negs	r0, r0
    b1a6:	b009      	add	sp, #36	; 0x24
    b1a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b1aa:	46c0      	nop			; (mov r8, r8)
    b1ac:	0000bab1 	.word	0x0000bab1
    b1b0:	0000baa0 	.word	0x0000baa0

0000b1b4 <rand>:
    b1b4:	4b16      	ldr	r3, [pc, #88]	; (b210 <rand+0x5c>)
    b1b6:	b510      	push	{r4, lr}
    b1b8:	681c      	ldr	r4, [r3, #0]
    b1ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    b1bc:	b9bb      	cbnz	r3, b1ee <rand+0x3a>
    b1be:	2018      	movs	r0, #24
    b1c0:	f7ff fd9c 	bl	acfc <malloc>
    b1c4:	f243 330e 	movw	r3, #13070	; 0x330e
    b1c8:	63a0      	str	r0, [r4, #56]	; 0x38
    b1ca:	8003      	strh	r3, [r0, #0]
    b1cc:	4b11      	ldr	r3, [pc, #68]	; (b214 <rand+0x60>)
    b1ce:	2201      	movs	r2, #1
    b1d0:	8043      	strh	r3, [r0, #2]
    b1d2:	f241 2334 	movw	r3, #4660	; 0x1234
    b1d6:	8083      	strh	r3, [r0, #4]
    b1d8:	4b0f      	ldr	r3, [pc, #60]	; (b218 <rand+0x64>)
    b1da:	80c3      	strh	r3, [r0, #6]
    b1dc:	4b0f      	ldr	r3, [pc, #60]	; (b21c <rand+0x68>)
    b1de:	8103      	strh	r3, [r0, #8]
    b1e0:	2305      	movs	r3, #5
    b1e2:	8143      	strh	r3, [r0, #10]
    b1e4:	3306      	adds	r3, #6
    b1e6:	8183      	strh	r3, [r0, #12]
    b1e8:	2300      	movs	r3, #0
    b1ea:	6102      	str	r2, [r0, #16]
    b1ec:	6143      	str	r3, [r0, #20]
    b1ee:	6ba4      	ldr	r4, [r4, #56]	; 0x38
    b1f0:	4a0b      	ldr	r2, [pc, #44]	; (b220 <rand+0x6c>)
    b1f2:	6920      	ldr	r0, [r4, #16]
    b1f4:	6961      	ldr	r1, [r4, #20]
    b1f6:	4b0b      	ldr	r3, [pc, #44]	; (b224 <rand+0x70>)
    b1f8:	f7fe fb58 	bl	98ac <__aeabi_lmul>
    b1fc:	2201      	movs	r2, #1
    b1fe:	2300      	movs	r3, #0
    b200:	1880      	adds	r0, r0, r2
    b202:	4159      	adcs	r1, r3
    b204:	6120      	str	r0, [r4, #16]
    b206:	6161      	str	r1, [r4, #20]
    b208:	0048      	lsls	r0, r1, #1
    b20a:	0840      	lsrs	r0, r0, #1
    b20c:	bd10      	pop	{r4, pc}
    b20e:	46c0      	nop			; (mov r8, r8)
    b210:	20002004 	.word	0x20002004
    b214:	ffffabcd 	.word	0xffffabcd
    b218:	ffffe66d 	.word	0xffffe66d
    b21c:	ffffdeec 	.word	0xffffdeec
    b220:	4c957f2d 	.word	0x4c957f2d
    b224:	5851f42d 	.word	0x5851f42d

0000b228 <_sbrk_r>:
    b228:	2300      	movs	r3, #0
    b22a:	b570      	push	{r4, r5, r6, lr}
    b22c:	4c05      	ldr	r4, [pc, #20]	; (b244 <_sbrk_r+0x1c>)
    b22e:	0005      	movs	r5, r0
    b230:	0008      	movs	r0, r1
    b232:	6023      	str	r3, [r4, #0]
    b234:	f000 fa88 	bl	b748 <_sbrk>
    b238:	1c43      	adds	r3, r0, #1
    b23a:	d102      	bne.n	b242 <_sbrk_r+0x1a>
    b23c:	6823      	ldr	r3, [r4, #0]
    b23e:	b103      	cbz	r3, b242 <_sbrk_r+0x1a>
    b240:	602b      	str	r3, [r5, #0]
    b242:	bd70      	pop	{r4, r5, r6, pc}
    b244:	200028c0 	.word	0x200028c0

0000b248 <siprintf>:
    b248:	b40e      	push	{r1, r2, r3}
    b24a:	b510      	push	{r4, lr}
    b24c:	b09d      	sub	sp, #116	; 0x74
    b24e:	a902      	add	r1, sp, #8
    b250:	9002      	str	r0, [sp, #8]
    b252:	6108      	str	r0, [r1, #16]
    b254:	480b      	ldr	r0, [pc, #44]	; (b284 <siprintf+0x3c>)
    b256:	f240 2408 	movw	r4, #520	; 0x208
    b25a:	6088      	str	r0, [r1, #8]
    b25c:	6148      	str	r0, [r1, #20]
    b25e:	2001      	movs	r0, #1
    b260:	4240      	negs	r0, r0
    b262:	ab1f      	add	r3, sp, #124	; 0x7c
    b264:	81c8      	strh	r0, [r1, #14]
    b266:	4808      	ldr	r0, [pc, #32]	; (b288 <siprintf+0x40>)
    b268:	cb04      	ldmia	r3!, {r2}
    b26a:	6800      	ldr	r0, [r0, #0]
    b26c:	9301      	str	r3, [sp, #4]
    b26e:	818c      	strh	r4, [r1, #12]
    b270:	f000 f956 	bl	b520 <_svfiprintf_r>
    b274:	2300      	movs	r3, #0
    b276:	9a02      	ldr	r2, [sp, #8]
    b278:	7013      	strb	r3, [r2, #0]
    b27a:	b01d      	add	sp, #116	; 0x74
    b27c:	bc10      	pop	{r4}
    b27e:	bc08      	pop	{r3}
    b280:	b003      	add	sp, #12
    b282:	4718      	bx	r3
    b284:	7fffffff 	.word	0x7fffffff
    b288:	20002004 	.word	0x20002004

0000b28c <_strtol_l.isra.0>:
    b28c:	b5f0      	push	{r4, r5, r6, r7, lr}
    b28e:	001f      	movs	r7, r3
    b290:	000e      	movs	r6, r1
    b292:	b087      	sub	sp, #28
    b294:	9005      	str	r0, [sp, #20]
    b296:	9103      	str	r1, [sp, #12]
    b298:	9202      	str	r2, [sp, #8]
    b29a:	980c      	ldr	r0, [sp, #48]	; 0x30
    b29c:	7834      	ldrb	r4, [r6, #0]
    b29e:	f000 f885 	bl	b3ac <__locale_ctype_ptr_l>
    b2a2:	2208      	movs	r2, #8
    b2a4:	1900      	adds	r0, r0, r4
    b2a6:	7843      	ldrb	r3, [r0, #1]
    b2a8:	1c75      	adds	r5, r6, #1
    b2aa:	4013      	ands	r3, r2
    b2ac:	b95b      	cbnz	r3, b2c6 <_strtol_l.isra.0+0x3a>
    b2ae:	2c2d      	cmp	r4, #45	; 0x2d
    b2b0:	d10b      	bne.n	b2ca <_strtol_l.isra.0+0x3e>
    b2b2:	3301      	adds	r3, #1
    b2b4:	782c      	ldrb	r4, [r5, #0]
    b2b6:	9301      	str	r3, [sp, #4]
    b2b8:	1cb5      	adds	r5, r6, #2
    b2ba:	b167      	cbz	r7, b2d6 <_strtol_l.isra.0+0x4a>
    b2bc:	2f10      	cmp	r7, #16
    b2be:	d114      	bne.n	b2ea <_strtol_l.isra.0+0x5e>
    b2c0:	2c30      	cmp	r4, #48	; 0x30
    b2c2:	d00a      	beq.n	b2da <_strtol_l.isra.0+0x4e>
    b2c4:	e011      	b.n	b2ea <_strtol_l.isra.0+0x5e>
    b2c6:	002e      	movs	r6, r5
    b2c8:	e7e7      	b.n	b29a <_strtol_l.isra.0+0xe>
    b2ca:	9301      	str	r3, [sp, #4]
    b2cc:	2c2b      	cmp	r4, #43	; 0x2b
    b2ce:	d1f4      	bne.n	b2ba <_strtol_l.isra.0+0x2e>
    b2d0:	782c      	ldrb	r4, [r5, #0]
    b2d2:	1cb5      	adds	r5, r6, #2
    b2d4:	e7f1      	b.n	b2ba <_strtol_l.isra.0+0x2e>
    b2d6:	2c30      	cmp	r4, #48	; 0x30
    b2d8:	d12b      	bne.n	b332 <_strtol_l.isra.0+0xa6>
    b2da:	2220      	movs	r2, #32
    b2dc:	782b      	ldrb	r3, [r5, #0]
    b2de:	4393      	bics	r3, r2
    b2e0:	2b58      	cmp	r3, #88	; 0x58
    b2e2:	d14a      	bne.n	b37a <_strtol_l.isra.0+0xee>
    b2e4:	2710      	movs	r7, #16
    b2e6:	786c      	ldrb	r4, [r5, #1]
    b2e8:	3502      	adds	r5, #2
    b2ea:	9b01      	ldr	r3, [sp, #4]
    b2ec:	4a25      	ldr	r2, [pc, #148]	; (b384 <_strtol_l.isra.0+0xf8>)
    b2ee:	1899      	adds	r1, r3, r2
    b2f0:	fbb1 f6f7 	udiv	r6, r1, r7
    b2f4:	003b      	movs	r3, r7
    b2f6:	4373      	muls	r3, r6
    b2f8:	1acb      	subs	r3, r1, r3
    b2fa:	9304      	str	r3, [sp, #16]
    b2fc:	2301      	movs	r3, #1
    b2fe:	2200      	movs	r2, #0
    b300:	425b      	negs	r3, r3
    b302:	0010      	movs	r0, r2
    b304:	469c      	mov	ip, r3
    b306:	0023      	movs	r3, r4
    b308:	3b30      	subs	r3, #48	; 0x30
    b30a:	2b09      	cmp	r3, #9
    b30c:	d813      	bhi.n	b336 <_strtol_l.isra.0+0xaa>
    b30e:	001c      	movs	r4, r3
    b310:	42a7      	cmp	r7, r4
    b312:	dd1c      	ble.n	b34e <_strtol_l.isra.0+0xc2>
    b314:	1c53      	adds	r3, r2, #1
    b316:	d009      	beq.n	b32c <_strtol_l.isra.0+0xa0>
    b318:	4662      	mov	r2, ip
    b31a:	4286      	cmp	r6, r0
    b31c:	d306      	bcc.n	b32c <_strtol_l.isra.0+0xa0>
    b31e:	d102      	bne.n	b326 <_strtol_l.isra.0+0x9a>
    b320:	9b04      	ldr	r3, [sp, #16]
    b322:	42a3      	cmp	r3, r4
    b324:	db02      	blt.n	b32c <_strtol_l.isra.0+0xa0>
    b326:	2201      	movs	r2, #1
    b328:	4378      	muls	r0, r7
    b32a:	1820      	adds	r0, r4, r0
    b32c:	782c      	ldrb	r4, [r5, #0]
    b32e:	3501      	adds	r5, #1
    b330:	e7e9      	b.n	b306 <_strtol_l.isra.0+0x7a>
    b332:	270a      	movs	r7, #10
    b334:	e7d9      	b.n	b2ea <_strtol_l.isra.0+0x5e>
    b336:	0023      	movs	r3, r4
    b338:	3b41      	subs	r3, #65	; 0x41
    b33a:	2b19      	cmp	r3, #25
    b33c:	d801      	bhi.n	b342 <_strtol_l.isra.0+0xb6>
    b33e:	3c37      	subs	r4, #55	; 0x37
    b340:	e7e6      	b.n	b310 <_strtol_l.isra.0+0x84>
    b342:	0023      	movs	r3, r4
    b344:	3b61      	subs	r3, #97	; 0x61
    b346:	2b19      	cmp	r3, #25
    b348:	d801      	bhi.n	b34e <_strtol_l.isra.0+0xc2>
    b34a:	3c57      	subs	r4, #87	; 0x57
    b34c:	e7e0      	b.n	b310 <_strtol_l.isra.0+0x84>
    b34e:	1c53      	adds	r3, r2, #1
    b350:	d107      	bne.n	b362 <_strtol_l.isra.0+0xd6>
    b352:	2322      	movs	r3, #34	; 0x22
    b354:	9a05      	ldr	r2, [sp, #20]
    b356:	0008      	movs	r0, r1
    b358:	6013      	str	r3, [r2, #0]
    b35a:	9b02      	ldr	r3, [sp, #8]
    b35c:	b94b      	cbnz	r3, b372 <_strtol_l.isra.0+0xe6>
    b35e:	b007      	add	sp, #28
    b360:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b362:	9b01      	ldr	r3, [sp, #4]
    b364:	b103      	cbz	r3, b368 <_strtol_l.isra.0+0xdc>
    b366:	4240      	negs	r0, r0
    b368:	9b02      	ldr	r3, [sp, #8]
    b36a:	2b00      	cmp	r3, #0
    b36c:	d0f7      	beq.n	b35e <_strtol_l.isra.0+0xd2>
    b36e:	9b03      	ldr	r3, [sp, #12]
    b370:	b102      	cbz	r2, b374 <_strtol_l.isra.0+0xe8>
    b372:	1e6b      	subs	r3, r5, #1
    b374:	9a02      	ldr	r2, [sp, #8]
    b376:	6013      	str	r3, [r2, #0]
    b378:	e7f1      	b.n	b35e <_strtol_l.isra.0+0xd2>
    b37a:	2430      	movs	r4, #48	; 0x30
    b37c:	2f00      	cmp	r7, #0
    b37e:	d1b4      	bne.n	b2ea <_strtol_l.isra.0+0x5e>
    b380:	3708      	adds	r7, #8
    b382:	e7b2      	b.n	b2ea <_strtol_l.isra.0+0x5e>
    b384:	7fffffff 	.word	0x7fffffff

0000b388 <strtol>:
    b388:	b537      	push	{r0, r1, r2, r4, r5, lr}
    b38a:	0013      	movs	r3, r2
    b38c:	4a05      	ldr	r2, [pc, #20]	; (b3a4 <strtol+0x1c>)
    b38e:	0005      	movs	r5, r0
    b390:	6810      	ldr	r0, [r2, #0]
    b392:	6a04      	ldr	r4, [r0, #32]
    b394:	b904      	cbnz	r4, b398 <strtol+0x10>
    b396:	4c04      	ldr	r4, [pc, #16]	; (b3a8 <strtol+0x20>)
    b398:	000a      	movs	r2, r1
    b39a:	9400      	str	r4, [sp, #0]
    b39c:	0029      	movs	r1, r5
    b39e:	f7ff ff75 	bl	b28c <_strtol_l.isra.0>
    b3a2:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    b3a4:	20002004 	.word	0x20002004
    b3a8:	20002068 	.word	0x20002068

0000b3ac <__locale_ctype_ptr_l>:
    b3ac:	30ec      	adds	r0, #236	; 0xec
    b3ae:	6800      	ldr	r0, [r0, #0]
    b3b0:	4770      	bx	lr

0000b3b2 <__ascii_mbtowc>:
    b3b2:	b082      	sub	sp, #8
    b3b4:	b901      	cbnz	r1, b3b8 <__ascii_mbtowc+0x6>
    b3b6:	a901      	add	r1, sp, #4
    b3b8:	0010      	movs	r0, r2
    b3ba:	b12a      	cbz	r2, b3c8 <__ascii_mbtowc+0x16>
    b3bc:	b133      	cbz	r3, b3cc <__ascii_mbtowc+0x1a>
    b3be:	7813      	ldrb	r3, [r2, #0]
    b3c0:	600b      	str	r3, [r1, #0]
    b3c2:	7810      	ldrb	r0, [r2, #0]
    b3c4:	1e43      	subs	r3, r0, #1
    b3c6:	4198      	sbcs	r0, r3
    b3c8:	b002      	add	sp, #8
    b3ca:	4770      	bx	lr
    b3cc:	2002      	movs	r0, #2
    b3ce:	4240      	negs	r0, r0
    b3d0:	e7fa      	b.n	b3c8 <__ascii_mbtowc+0x16>

0000b3d2 <memchr>:
    b3d2:	b2c9      	uxtb	r1, r1
    b3d4:	1882      	adds	r2, r0, r2
    b3d6:	4290      	cmp	r0, r2
    b3d8:	d101      	bne.n	b3de <memchr+0xc>
    b3da:	2000      	movs	r0, #0
    b3dc:	4770      	bx	lr
    b3de:	7803      	ldrb	r3, [r0, #0]
    b3e0:	428b      	cmp	r3, r1
    b3e2:	d0fb      	beq.n	b3dc <memchr+0xa>
    b3e4:	3001      	adds	r0, #1
    b3e6:	e7f6      	b.n	b3d6 <memchr+0x4>

0000b3e8 <memmove>:
    b3e8:	b510      	push	{r4, lr}
    b3ea:	4288      	cmp	r0, r1
    b3ec:	d902      	bls.n	b3f4 <memmove+0xc>
    b3ee:	188b      	adds	r3, r1, r2
    b3f0:	4298      	cmp	r0, r3
    b3f2:	d308      	bcc.n	b406 <memmove+0x1e>
    b3f4:	2300      	movs	r3, #0
    b3f6:	429a      	cmp	r2, r3
    b3f8:	d007      	beq.n	b40a <memmove+0x22>
    b3fa:	5ccc      	ldrb	r4, [r1, r3]
    b3fc:	54c4      	strb	r4, [r0, r3]
    b3fe:	3301      	adds	r3, #1
    b400:	e7f9      	b.n	b3f6 <memmove+0xe>
    b402:	5c8b      	ldrb	r3, [r1, r2]
    b404:	5483      	strb	r3, [r0, r2]
    b406:	3a01      	subs	r2, #1
    b408:	d2fb      	bcs.n	b402 <memmove+0x1a>
    b40a:	bd10      	pop	{r4, pc}

0000b40c <__malloc_lock>:
    b40c:	4770      	bx	lr

0000b40e <__malloc_unlock>:
    b40e:	4770      	bx	lr

0000b410 <_realloc_r>:
    b410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b412:	0007      	movs	r7, r0
    b414:	000d      	movs	r5, r1
    b416:	0016      	movs	r6, r2
    b418:	b929      	cbnz	r1, b426 <_realloc_r+0x16>
    b41a:	0011      	movs	r1, r2
    b41c:	f7ff fcf0 	bl	ae00 <_malloc_r>
    b420:	0004      	movs	r4, r0
    b422:	0020      	movs	r0, r4
    b424:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    b426:	b91a      	cbnz	r2, b430 <_realloc_r+0x20>
    b428:	f7ff fca0 	bl	ad6c <_free_r>
    b42c:	0034      	movs	r4, r6
    b42e:	e7f8      	b.n	b422 <_realloc_r+0x12>
    b430:	f000 f982 	bl	b738 <_malloc_usable_size_r>
    b434:	002c      	movs	r4, r5
    b436:	4286      	cmp	r6, r0
    b438:	d9f3      	bls.n	b422 <_realloc_r+0x12>
    b43a:	0031      	movs	r1, r6
    b43c:	0038      	movs	r0, r7
    b43e:	f7ff fcdf 	bl	ae00 <_malloc_r>
    b442:	0004      	movs	r4, r0
    b444:	2800      	cmp	r0, #0
    b446:	d0ec      	beq.n	b422 <_realloc_r+0x12>
    b448:	0029      	movs	r1, r5
    b44a:	0032      	movs	r2, r6
    b44c:	f7ff fc6f 	bl	ad2e <memcpy>
    b450:	0029      	movs	r1, r5
    b452:	0038      	movs	r0, r7
    b454:	f7ff fc8a 	bl	ad6c <_free_r>
    b458:	e7e3      	b.n	b422 <_realloc_r+0x12>
	...

0000b45c <__ssputs_r>:
    b45c:	b5f0      	push	{r4, r5, r6, r7, lr}
    b45e:	688e      	ldr	r6, [r1, #8]
    b460:	b085      	sub	sp, #20
    b462:	0007      	movs	r7, r0
    b464:	000c      	movs	r4, r1
    b466:	9203      	str	r2, [sp, #12]
    b468:	9301      	str	r3, [sp, #4]
    b46a:	429e      	cmp	r6, r3
    b46c:	d839      	bhi.n	b4e2 <__ssputs_r+0x86>
    b46e:	f240 4380 	movw	r3, #1152	; 0x480
    b472:	898a      	ldrh	r2, [r1, #12]
    b474:	421a      	tst	r2, r3
    b476:	d034      	beq.n	b4e2 <__ssputs_r+0x86>
    b478:	2503      	movs	r5, #3
    b47a:	6909      	ldr	r1, [r1, #16]
    b47c:	6823      	ldr	r3, [r4, #0]
    b47e:	1a5b      	subs	r3, r3, r1
    b480:	9302      	str	r3, [sp, #8]
    b482:	6963      	ldr	r3, [r4, #20]
    b484:	9802      	ldr	r0, [sp, #8]
    b486:	435d      	muls	r5, r3
    b488:	0feb      	lsrs	r3, r5, #31
    b48a:	195d      	adds	r5, r3, r5
    b48c:	9b01      	ldr	r3, [sp, #4]
    b48e:	106d      	asrs	r5, r5, #1
    b490:	3301      	adds	r3, #1
    b492:	181b      	adds	r3, r3, r0
    b494:	42ab      	cmp	r3, r5
    b496:	d900      	bls.n	b49a <__ssputs_r+0x3e>
    b498:	001d      	movs	r5, r3
    b49a:	0553      	lsls	r3, r2, #21
    b49c:	d532      	bpl.n	b504 <__ssputs_r+0xa8>
    b49e:	0029      	movs	r1, r5
    b4a0:	0038      	movs	r0, r7
    b4a2:	f7ff fcad 	bl	ae00 <_malloc_r>
    b4a6:	0006      	movs	r6, r0
    b4a8:	b948      	cbnz	r0, b4be <__ssputs_r+0x62>
    b4aa:	230c      	movs	r3, #12
    b4ac:	603b      	str	r3, [r7, #0]
    b4ae:	2340      	movs	r3, #64	; 0x40
    b4b0:	2001      	movs	r0, #1
    b4b2:	89a2      	ldrh	r2, [r4, #12]
    b4b4:	4240      	negs	r0, r0
    b4b6:	4313      	orrs	r3, r2
    b4b8:	81a3      	strh	r3, [r4, #12]
    b4ba:	b005      	add	sp, #20
    b4bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b4be:	9a02      	ldr	r2, [sp, #8]
    b4c0:	6921      	ldr	r1, [r4, #16]
    b4c2:	f7ff fc34 	bl	ad2e <memcpy>
    b4c6:	89a3      	ldrh	r3, [r4, #12]
    b4c8:	4a14      	ldr	r2, [pc, #80]	; (b51c <__ssputs_r+0xc0>)
    b4ca:	401a      	ands	r2, r3
    b4cc:	2380      	movs	r3, #128	; 0x80
    b4ce:	4313      	orrs	r3, r2
    b4d0:	81a3      	strh	r3, [r4, #12]
    b4d2:	9b02      	ldr	r3, [sp, #8]
    b4d4:	6126      	str	r6, [r4, #16]
    b4d6:	18f6      	adds	r6, r6, r3
    b4d8:	6026      	str	r6, [r4, #0]
    b4da:	6165      	str	r5, [r4, #20]
    b4dc:	9e01      	ldr	r6, [sp, #4]
    b4de:	1aed      	subs	r5, r5, r3
    b4e0:	60a5      	str	r5, [r4, #8]
    b4e2:	9b01      	ldr	r3, [sp, #4]
    b4e4:	42b3      	cmp	r3, r6
    b4e6:	d200      	bcs.n	b4ea <__ssputs_r+0x8e>
    b4e8:	001e      	movs	r6, r3
    b4ea:	0032      	movs	r2, r6
    b4ec:	9903      	ldr	r1, [sp, #12]
    b4ee:	6820      	ldr	r0, [r4, #0]
    b4f0:	f7ff ff7a 	bl	b3e8 <memmove>
    b4f4:	68a3      	ldr	r3, [r4, #8]
    b4f6:	2000      	movs	r0, #0
    b4f8:	1b9b      	subs	r3, r3, r6
    b4fa:	60a3      	str	r3, [r4, #8]
    b4fc:	6823      	ldr	r3, [r4, #0]
    b4fe:	199e      	adds	r6, r3, r6
    b500:	6026      	str	r6, [r4, #0]
    b502:	e7da      	b.n	b4ba <__ssputs_r+0x5e>
    b504:	002a      	movs	r2, r5
    b506:	0038      	movs	r0, r7
    b508:	f7ff ff82 	bl	b410 <_realloc_r>
    b50c:	0006      	movs	r6, r0
    b50e:	2800      	cmp	r0, #0
    b510:	d1df      	bne.n	b4d2 <__ssputs_r+0x76>
    b512:	6921      	ldr	r1, [r4, #16]
    b514:	0038      	movs	r0, r7
    b516:	f7ff fc29 	bl	ad6c <_free_r>
    b51a:	e7c6      	b.n	b4aa <__ssputs_r+0x4e>
    b51c:	fffffb7f 	.word	0xfffffb7f

0000b520 <_svfiprintf_r>:
    b520:	b5f0      	push	{r4, r5, r6, r7, lr}
    b522:	b09f      	sub	sp, #124	; 0x7c
    b524:	9002      	str	r0, [sp, #8]
    b526:	9305      	str	r3, [sp, #20]
    b528:	898b      	ldrh	r3, [r1, #12]
    b52a:	000f      	movs	r7, r1
    b52c:	0016      	movs	r6, r2
    b52e:	061b      	lsls	r3, r3, #24
    b530:	d50f      	bpl.n	b552 <_svfiprintf_r+0x32>
    b532:	690b      	ldr	r3, [r1, #16]
    b534:	b96b      	cbnz	r3, b552 <_svfiprintf_r+0x32>
    b536:	2140      	movs	r1, #64	; 0x40
    b538:	f7ff fc62 	bl	ae00 <_malloc_r>
    b53c:	6038      	str	r0, [r7, #0]
    b53e:	6138      	str	r0, [r7, #16]
    b540:	b928      	cbnz	r0, b54e <_svfiprintf_r+0x2e>
    b542:	230c      	movs	r3, #12
    b544:	9a02      	ldr	r2, [sp, #8]
    b546:	3801      	subs	r0, #1
    b548:	6013      	str	r3, [r2, #0]
    b54a:	b01f      	add	sp, #124	; 0x7c
    b54c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b54e:	2340      	movs	r3, #64	; 0x40
    b550:	617b      	str	r3, [r7, #20]
    b552:	2300      	movs	r3, #0
    b554:	ad06      	add	r5, sp, #24
    b556:	616b      	str	r3, [r5, #20]
    b558:	3320      	adds	r3, #32
    b55a:	766b      	strb	r3, [r5, #25]
    b55c:	3310      	adds	r3, #16
    b55e:	76ab      	strb	r3, [r5, #26]
    b560:	0034      	movs	r4, r6
    b562:	7823      	ldrb	r3, [r4, #0]
    b564:	2b00      	cmp	r3, #0
    b566:	d146      	bne.n	b5f6 <_svfiprintf_r+0xd6>
    b568:	1ba3      	subs	r3, r4, r6
    b56a:	9304      	str	r3, [sp, #16]
    b56c:	b16b      	cbz	r3, b58a <_svfiprintf_r+0x6a>
    b56e:	1ba3      	subs	r3, r4, r6
    b570:	0032      	movs	r2, r6
    b572:	0039      	movs	r1, r7
    b574:	9802      	ldr	r0, [sp, #8]
    b576:	f7ff ff71 	bl	b45c <__ssputs_r>
    b57a:	1c43      	adds	r3, r0, #1
    b57c:	d100      	bne.n	b580 <_svfiprintf_r+0x60>
    b57e:	e0b3      	b.n	b6e8 <_svfiprintf_r+0x1c8>
    b580:	696a      	ldr	r2, [r5, #20]
    b582:	9b04      	ldr	r3, [sp, #16]
    b584:	4694      	mov	ip, r2
    b586:	4463      	add	r3, ip
    b588:	616b      	str	r3, [r5, #20]
    b58a:	7823      	ldrb	r3, [r4, #0]
    b58c:	2b00      	cmp	r3, #0
    b58e:	d100      	bne.n	b592 <_svfiprintf_r+0x72>
    b590:	e0aa      	b.n	b6e8 <_svfiprintf_r+0x1c8>
    b592:	2201      	movs	r2, #1
    b594:	2300      	movs	r3, #0
    b596:	4252      	negs	r2, r2
    b598:	606a      	str	r2, [r5, #4]
    b59a:	a902      	add	r1, sp, #8
    b59c:	3254      	adds	r2, #84	; 0x54
    b59e:	1852      	adds	r2, r2, r1
    b5a0:	3401      	adds	r4, #1
    b5a2:	602b      	str	r3, [r5, #0]
    b5a4:	60eb      	str	r3, [r5, #12]
    b5a6:	60ab      	str	r3, [r5, #8]
    b5a8:	7013      	strb	r3, [r2, #0]
    b5aa:	65ab      	str	r3, [r5, #88]	; 0x58
    b5ac:	4e57      	ldr	r6, [pc, #348]	; (b70c <_svfiprintf_r+0x1ec>)
    b5ae:	2205      	movs	r2, #5
    b5b0:	7821      	ldrb	r1, [r4, #0]
    b5b2:	0030      	movs	r0, r6
    b5b4:	f7ff ff0d 	bl	b3d2 <memchr>
    b5b8:	1c62      	adds	r2, r4, #1
    b5ba:	bb00      	cbnz	r0, b5fe <_svfiprintf_r+0xde>
    b5bc:	6829      	ldr	r1, [r5, #0]
    b5be:	06cb      	lsls	r3, r1, #27
    b5c0:	d504      	bpl.n	b5cc <_svfiprintf_r+0xac>
    b5c2:	2353      	movs	r3, #83	; 0x53
    b5c4:	ae02      	add	r6, sp, #8
    b5c6:	3020      	adds	r0, #32
    b5c8:	199b      	adds	r3, r3, r6
    b5ca:	7018      	strb	r0, [r3, #0]
    b5cc:	070b      	lsls	r3, r1, #28
    b5ce:	d504      	bpl.n	b5da <_svfiprintf_r+0xba>
    b5d0:	2353      	movs	r3, #83	; 0x53
    b5d2:	202b      	movs	r0, #43	; 0x2b
    b5d4:	ae02      	add	r6, sp, #8
    b5d6:	199b      	adds	r3, r3, r6
    b5d8:	7018      	strb	r0, [r3, #0]
    b5da:	7823      	ldrb	r3, [r4, #0]
    b5dc:	2b2a      	cmp	r3, #42	; 0x2a
    b5de:	d016      	beq.n	b60e <_svfiprintf_r+0xee>
    b5e0:	2100      	movs	r1, #0
    b5e2:	200a      	movs	r0, #10
    b5e4:	2601      	movs	r6, #1
    b5e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b5e8:	7822      	ldrb	r2, [r4, #0]
    b5ea:	3a30      	subs	r2, #48	; 0x30
    b5ec:	2a09      	cmp	r2, #9
    b5ee:	d952      	bls.n	b696 <_svfiprintf_r+0x176>
    b5f0:	b1a9      	cbz	r1, b61e <_svfiprintf_r+0xfe>
    b5f2:	9309      	str	r3, [sp, #36]	; 0x24
    b5f4:	e013      	b.n	b61e <_svfiprintf_r+0xfe>
    b5f6:	2b25      	cmp	r3, #37	; 0x25
    b5f8:	d0b6      	beq.n	b568 <_svfiprintf_r+0x48>
    b5fa:	3401      	adds	r4, #1
    b5fc:	e7b1      	b.n	b562 <_svfiprintf_r+0x42>
    b5fe:	2301      	movs	r3, #1
    b600:	1b80      	subs	r0, r0, r6
    b602:	4083      	lsls	r3, r0
    b604:	6829      	ldr	r1, [r5, #0]
    b606:	0014      	movs	r4, r2
    b608:	430b      	orrs	r3, r1
    b60a:	602b      	str	r3, [r5, #0]
    b60c:	e7ce      	b.n	b5ac <_svfiprintf_r+0x8c>
    b60e:	9b05      	ldr	r3, [sp, #20]
    b610:	1d18      	adds	r0, r3, #4
    b612:	681b      	ldr	r3, [r3, #0]
    b614:	9005      	str	r0, [sp, #20]
    b616:	2b00      	cmp	r3, #0
    b618:	db37      	blt.n	b68a <_svfiprintf_r+0x16a>
    b61a:	9309      	str	r3, [sp, #36]	; 0x24
    b61c:	0014      	movs	r4, r2
    b61e:	7823      	ldrb	r3, [r4, #0]
    b620:	2b2e      	cmp	r3, #46	; 0x2e
    b622:	d10b      	bne.n	b63c <_svfiprintf_r+0x11c>
    b624:	7863      	ldrb	r3, [r4, #1]
    b626:	1c62      	adds	r2, r4, #1
    b628:	2b2a      	cmp	r3, #42	; 0x2a
    b62a:	d13c      	bne.n	b6a6 <_svfiprintf_r+0x186>
    b62c:	9b05      	ldr	r3, [sp, #20]
    b62e:	3402      	adds	r4, #2
    b630:	1d1a      	adds	r2, r3, #4
    b632:	681b      	ldr	r3, [r3, #0]
    b634:	9205      	str	r2, [sp, #20]
    b636:	2b00      	cmp	r3, #0
    b638:	db32      	blt.n	b6a0 <_svfiprintf_r+0x180>
    b63a:	9307      	str	r3, [sp, #28]
    b63c:	4e34      	ldr	r6, [pc, #208]	; (b710 <_svfiprintf_r+0x1f0>)
    b63e:	7821      	ldrb	r1, [r4, #0]
    b640:	2203      	movs	r2, #3
    b642:	0030      	movs	r0, r6
    b644:	f7ff fec5 	bl	b3d2 <memchr>
    b648:	b130      	cbz	r0, b658 <_svfiprintf_r+0x138>
    b64a:	2340      	movs	r3, #64	; 0x40
    b64c:	1b80      	subs	r0, r0, r6
    b64e:	4083      	lsls	r3, r0
    b650:	682a      	ldr	r2, [r5, #0]
    b652:	3401      	adds	r4, #1
    b654:	4313      	orrs	r3, r2
    b656:	602b      	str	r3, [r5, #0]
    b658:	7821      	ldrb	r1, [r4, #0]
    b65a:	2206      	movs	r2, #6
    b65c:	482d      	ldr	r0, [pc, #180]	; (b714 <_svfiprintf_r+0x1f4>)
    b65e:	1c66      	adds	r6, r4, #1
    b660:	7629      	strb	r1, [r5, #24]
    b662:	f7ff feb6 	bl	b3d2 <memchr>
    b666:	2800      	cmp	r0, #0
    b668:	d046      	beq.n	b6f8 <_svfiprintf_r+0x1d8>
    b66a:	4b2b      	ldr	r3, [pc, #172]	; (b718 <_svfiprintf_r+0x1f8>)
    b66c:	bb83      	cbnz	r3, b6d0 <_svfiprintf_r+0x1b0>
    b66e:	6829      	ldr	r1, [r5, #0]
    b670:	9b05      	ldr	r3, [sp, #20]
    b672:	2207      	movs	r2, #7
    b674:	05c9      	lsls	r1, r1, #23
    b676:	d529      	bpl.n	b6cc <_svfiprintf_r+0x1ac>
    b678:	189b      	adds	r3, r3, r2
    b67a:	4393      	bics	r3, r2
    b67c:	3308      	adds	r3, #8
    b67e:	9305      	str	r3, [sp, #20]
    b680:	696b      	ldr	r3, [r5, #20]
    b682:	9a03      	ldr	r2, [sp, #12]
    b684:	189b      	adds	r3, r3, r2
    b686:	616b      	str	r3, [r5, #20]
    b688:	e76a      	b.n	b560 <_svfiprintf_r+0x40>
    b68a:	425b      	negs	r3, r3
    b68c:	60eb      	str	r3, [r5, #12]
    b68e:	2302      	movs	r3, #2
    b690:	430b      	orrs	r3, r1
    b692:	602b      	str	r3, [r5, #0]
    b694:	e7c2      	b.n	b61c <_svfiprintf_r+0xfc>
    b696:	4343      	muls	r3, r0
    b698:	3401      	adds	r4, #1
    b69a:	189b      	adds	r3, r3, r2
    b69c:	0031      	movs	r1, r6
    b69e:	e7a3      	b.n	b5e8 <_svfiprintf_r+0xc8>
    b6a0:	2301      	movs	r3, #1
    b6a2:	425b      	negs	r3, r3
    b6a4:	e7c9      	b.n	b63a <_svfiprintf_r+0x11a>
    b6a6:	2300      	movs	r3, #0
    b6a8:	0014      	movs	r4, r2
    b6aa:	200a      	movs	r0, #10
    b6ac:	001a      	movs	r2, r3
    b6ae:	2601      	movs	r6, #1
    b6b0:	606b      	str	r3, [r5, #4]
    b6b2:	7821      	ldrb	r1, [r4, #0]
    b6b4:	3930      	subs	r1, #48	; 0x30
    b6b6:	2909      	cmp	r1, #9
    b6b8:	d903      	bls.n	b6c2 <_svfiprintf_r+0x1a2>
    b6ba:	2b00      	cmp	r3, #0
    b6bc:	d0be      	beq.n	b63c <_svfiprintf_r+0x11c>
    b6be:	9207      	str	r2, [sp, #28]
    b6c0:	e7bc      	b.n	b63c <_svfiprintf_r+0x11c>
    b6c2:	4342      	muls	r2, r0
    b6c4:	3401      	adds	r4, #1
    b6c6:	1852      	adds	r2, r2, r1
    b6c8:	0033      	movs	r3, r6
    b6ca:	e7f2      	b.n	b6b2 <_svfiprintf_r+0x192>
    b6cc:	3307      	adds	r3, #7
    b6ce:	e7d4      	b.n	b67a <_svfiprintf_r+0x15a>
    b6d0:	ab05      	add	r3, sp, #20
    b6d2:	9300      	str	r3, [sp, #0]
    b6d4:	003a      	movs	r2, r7
    b6d6:	4b11      	ldr	r3, [pc, #68]	; (b71c <_svfiprintf_r+0x1fc>)
    b6d8:	0029      	movs	r1, r5
    b6da:	9802      	ldr	r0, [sp, #8]
    b6dc:	e000      	b.n	b6e0 <_svfiprintf_r+0x1c0>
    b6de:	bf00      	nop
    b6e0:	9003      	str	r0, [sp, #12]
    b6e2:	9b03      	ldr	r3, [sp, #12]
    b6e4:	3301      	adds	r3, #1
    b6e6:	d1cb      	bne.n	b680 <_svfiprintf_r+0x160>
    b6e8:	89bb      	ldrh	r3, [r7, #12]
    b6ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
    b6ec:	065b      	lsls	r3, r3, #25
    b6ee:	d400      	bmi.n	b6f2 <_svfiprintf_r+0x1d2>
    b6f0:	e72b      	b.n	b54a <_svfiprintf_r+0x2a>
    b6f2:	2001      	movs	r0, #1
    b6f4:	4240      	negs	r0, r0
    b6f6:	e728      	b.n	b54a <_svfiprintf_r+0x2a>
    b6f8:	ab05      	add	r3, sp, #20
    b6fa:	9300      	str	r3, [sp, #0]
    b6fc:	003a      	movs	r2, r7
    b6fe:	4b07      	ldr	r3, [pc, #28]	; (b71c <_svfiprintf_r+0x1fc>)
    b700:	0029      	movs	r1, r5
    b702:	9802      	ldr	r0, [sp, #8]
    b704:	f7ff fc46 	bl	af94 <_printf_i>
    b708:	e7ea      	b.n	b6e0 <_svfiprintf_r+0x1c0>
    b70a:	46c0      	nop			; (mov r8, r8)
    b70c:	0000bacc 	.word	0x0000bacc
    b710:	0000bad2 	.word	0x0000bad2
    b714:	0000bad6 	.word	0x0000bad6
    b718:	00000000 	.word	0x00000000
    b71c:	0000b45d 	.word	0x0000b45d

0000b720 <__ascii_wctomb>:
    b720:	000b      	movs	r3, r1
    b722:	b121      	cbz	r1, b72e <__ascii_wctomb+0xe>
    b724:	2aff      	cmp	r2, #255	; 0xff
    b726:	d904      	bls.n	b732 <__ascii_wctomb+0x12>
    b728:	238a      	movs	r3, #138	; 0x8a
    b72a:	6003      	str	r3, [r0, #0]
    b72c:	3b8b      	subs	r3, #139	; 0x8b
    b72e:	0018      	movs	r0, r3
    b730:	4770      	bx	lr
    b732:	700a      	strb	r2, [r1, #0]
    b734:	2301      	movs	r3, #1
    b736:	e7fa      	b.n	b72e <__ascii_wctomb+0xe>

0000b738 <_malloc_usable_size_r>:
    b738:	1f0b      	subs	r3, r1, #4
    b73a:	681b      	ldr	r3, [r3, #0]
    b73c:	1f18      	subs	r0, r3, #4
    b73e:	2b00      	cmp	r3, #0
    b740:	da01      	bge.n	b746 <_malloc_usable_size_r+0xe>
    b742:	580b      	ldr	r3, [r1, r0]
    b744:	18c0      	adds	r0, r0, r3
    b746:	4770      	bx	lr

0000b748 <_sbrk>:
    b748:	f242 2344 	movw	r3, #8772	; 0x2244
    b74c:	f2c2 0300 	movt	r3, #8192	; 0x2000
    b750:	681a      	ldr	r2, [r3, #0]
    b752:	b11a      	cbz	r2, b75c <_sbrk+0x14>
    b754:	1810      	adds	r0, r2, r0
    b756:	6018      	str	r0, [r3, #0]
    b758:	0010      	movs	r0, r2
    b75a:	4770      	bx	lr
    b75c:	f642 02c8 	movw	r2, #10440	; 0x28c8
    b760:	f2c2 0200 	movt	r2, #8192	; 0x2000
    b764:	e7f6      	b.n	b754 <_sbrk+0xc>
    b766:	46c0      	nop			; (mov r8, r8)
    b768:	415d535b 	.word	0x415d535b
    b76c:	5d455b41 	.word	0x5d455b41
    b770:	0000000a 	.word	0x0000000a
    b774:	425d535b 	.word	0x425d535b
    b778:	5d455b42 	.word	0x5d455b42
    b77c:	0000000a 	.word	0x0000000a
    b780:	005d535b 	.word	0x005d535b
    b784:	0a5d455b 	.word	0x0a5d455b
    b788:	00000000 	.word	0x00000000
    b78c:	00007830 	.word	0x00007830
    b790:	78322e25 	.word	0x78322e25
    b794:	00000000 	.word	0x00000000
    b798:	6f727265 	.word	0x6f727265
    b79c:	64252072 	.word	0x64252072
    b7a0:	203a3a20 	.word	0x203a3a20
    b7a4:	7261656c 	.word	0x7261656c
    b7a8:	676e696e 	.word	0x676e696e
    b7ac:	74617220 	.word	0x74617220
    b7b0:	64252065 	.word	0x64252065
    b7b4:	0000000a 	.word	0x0000000a
    b7b8:	75706e49 	.word	0x75706e49
    b7bc:	000a3a74 	.word	0x000a3a74
    b7c0:	3a44500a 	.word	0x3a44500a
    b7c4:	00000000 	.word	0x00000000
    b7c8:	3a54470a 	.word	0x3a54470a
    b7cc:	00000000 	.word	0x00000000
    b7d0:	7074735b 	.word	0x7074735b
    b7d4:	0000005d 	.word	0x0000005d
    b7d8:	746c635b 	.word	0x746c635b
    b7dc:	0000005d 	.word	0x0000005d
    b7e0:	7365545b 	.word	0x7365545b
    b7e4:	53205d74 	.word	0x53205d74
    b7e8:	70757465 	.word	0x70757465
    b7ec:	6c6f632f 	.word	0x6c6f632f
    b7f0:	7463656c 	.word	0x7463656c
    b7f4:	0000203a 	.word	0x0000203a
    b7f8:	75746572 	.word	0x75746572
    b7fc:	6e696e72 	.word	0x6e696e72
    b800:	00002067 	.word	0x00002067
    b804:	6f63202c 	.word	0x6f63202c
    b808:	65746e75 	.word	0x65746e75
    b80c:	00003d72 	.word	0x00003d72
    b810:	7566202c 	.word	0x7566202c
    b814:	003d636e 	.word	0x003d636e
    b818:	64203d20 	.word	0x64203d20
    b81c:	20656e6f 	.word	0x20656e6f
    b820:	542f5b20 	.word	0x542f5b20
    b824:	5d747365 	.word	0x5d747365
    b828:	00000a20 	.word	0x00000a20
    b82c:	7453535b 	.word	0x7453535b
    b830:	5d6b6361 	.word	0x5d6b6361
    b834:	00000020 	.word	0x00000020
    b838:	7453535b 	.word	0x7453535b
    b83c:	5d6b6361 	.word	0x5d6b6361
    b840:	0000000a 	.word	0x0000000a
    b844:	53534e5b 	.word	0x53534e5b
    b848:	6b636174 	.word	0x6b636174
    b84c:	003d205d 	.word	0x003d205d
    b850:	53534e5b 	.word	0x53534e5b
    b854:	6b636174 	.word	0x6b636174
    b858:	00000a5d 	.word	0x00000a5d
    b85c:	5d534f5b 	.word	0x5d534f5b
    b860:	00000000 	.word	0x00000000
    b864:	5d454f5b 	.word	0x5d454f5b
    b868:	0000000a 	.word	0x0000000a
    b86c:	65764f5b 	.word	0x65764f5b
    b870:	000a5d72 	.word	0x000a5d72
    b874:	6e72745b 	.word	0x6e72745b
    b878:	0000005d 	.word	0x0000005d
    b87c:	7365545b 	.word	0x7365545b
    b880:	54205d74 	.word	0x54205d74
    b884:	6e696172 	.word	0x6e696172
    b888:	3a676e69 	.word	0x3a676e69
    b88c:	00000020 	.word	0x00000020
    b890:	75746552 	.word	0x75746552
    b894:	6e696e72 	.word	0x6e696e72
    b898:	00002067 	.word	0x00002067
    b89c:	726c202c 	.word	0x726c202c
    b8a0:	0000003d 	.word	0x0000003d
    b8a4:	7065202c 	.word	0x7065202c
    b8a8:	3d68636f 	.word	0x3d68636f
    b8ac:	00000000 	.word	0x00000000
    b8b0:	6e69202c 	.word	0x6e69202c
    b8b4:	765f7469 	.word	0x765f7469
    b8b8:	003d6c61 	.word	0x003d6c61
    b8bc:	756f202c 	.word	0x756f202c
    b8c0:	74757074 	.word	0x74757074
    b8c4:	7a697320 	.word	0x7a697320
    b8c8:	00003d65 	.word	0x00003d65
    b8cc:	6c61202c 	.word	0x6c61202c
    b8d0:	20636f6c 	.word	0x20636f6c
    b8d4:	657a6973 	.word	0x657a6973
    b8d8:	0000003d 	.word	0x0000003d
    b8dc:	6c696166 	.word	0x6c696166
    b8e0:	74206465 	.word	0x74206465
    b8e4:	6170206f 	.word	0x6170206f
    b8e8:	20657372 	.word	0x20657372
    b8ec:	6d6d6f63 	.word	0x6d6d6f63
    b8f0:	3a646e61 	.word	0x3a646e61
    b8f4:	00000020 	.word	0x00000020
    b8f8:	6c204120 	.word	0x6c204120
    b8fc:	6f20746f 	.word	0x6f20746f
    b900:	65682066 	.word	0x65682066
    b904:	6f6f6c6c 	.word	0x6f6f6c6c
    b908:	006f6f6f 	.word	0x006f6f6f
    b90c:	61727720 	.word	0x61727720
    b910:	72657070 	.word	0x72657070
    b914:	696e695f 	.word	0x696e695f
    b918:	74612074 	.word	0x74612074
    b91c:	0000203a 	.word	0x0000203a
    b920:	61727720 	.word	0x61727720
    b924:	72657070 	.word	0x72657070
    b928:	6c6f635f 	.word	0x6c6f635f
    b92c:	7463656c 	.word	0x7463656c
    b930:	3a746120 	.word	0x3a746120
    b934:	00000020 	.word	0x00000020
    b938:	61727720 	.word	0x61727720
    b93c:	72657070 	.word	0x72657070
    b940:	6172745f 	.word	0x6172745f
    b944:	61206e69 	.word	0x61206e69
    b948:	00203a74 	.word	0x00203a74
    b94c:	6174535b 	.word	0x6174535b
    b950:	205d7472 	.word	0x205d7472
    b954:	0000000a 	.word	0x0000000a
    b958:	78654e5b 	.word	0x78654e5b
    b95c:	000a5d74 	.word	0x000a5d74
    b960:	66707865 	.word	0x66707865
    b964:	00000000 	.word	0x00000000

0000b968 <halF>:
    b968:	3f000000 bf000000                       ...?....

0000b970 <ln2HI>:
    b970:	3f317180 bf317180                       .q1?.q1.

0000b978 <ln2LO>:
    b978:	3717f7d1 b717f7d1 0000a162 0000a132     ...7....b...2...
    b988:	0000a144 0000a088 0000a144 0000a128     D.......D...(...
    b998:	0000a144 0000a088 0000a132 0000a132     D.......2...2...
    b9a8:	0000a128 0000a088 0000a090 0000a090     (...............
    b9b8:	0000a090 0000a14a 0000a132 0000a132     ....J...2...2...
    b9c8:	0000a106 0000a1ea 0000a106 0000a128     ............(...
    b9d8:	0000a106 0000a1ea 0000a132 0000a132     ........2...2...
    b9e8:	0000a128 0000a1ea 0000a090 0000a090     (...............
    b9f8:	0000a090 0000a1f4 0000a4d8 0000a436     ............6...
    ba08:	0000a436 0000a434 0000a4ca 0000a4ca     6...4...........
    ba18:	0000a4c0 0000a434 0000a4ca 0000a4c0     ....4...........
    ba28:	0000a4ca 0000a434 0000a4d0 0000a4d0     ....4...........
    ba38:	0000a4d0 0000a56c                       ....l...

0000ba40 <__sf_fake_stderr>:
	...

0000ba60 <__sf_fake_stdin>:
	...

0000ba80 <__sf_fake_stdout>:
	...
    baa0:	33323130 37363534 42413938 46454443     0123456789ABCDEF
    bab0:	32313000 36353433 61393837 65646362     .0123456789abcde
    bac0:	00430066 49534f50 002e0058 2b302d23     f.C.POSIX...#-0+
    bad0:	6c680020 6665004c 47464567 20200000               .hlL.efgEFG.

0000badd <_ctype_>:
    badd:	20202000 20202020 28282020 20282828     .         ((((( 
    baed:	20202020 20202020 20202020 20202020                     
    bafd:	10108820 10101010 10101010 10101010      ...............
    bb0d:	04040410 04040404 10040404 10101010     ................
    bb1d:	41411010 41414141 01010101 01010101     ..AAAAAA........
    bb2d:	01010101 01010101 01010101 10101010     ................
    bb3d:	42421010 42424242 02020202 02020202     ..BBBBBB........
    bb4d:	02020202 02020202 02020202 10101010     ................
    bb5d:	00000020 00000000 00000000 00000000      ...............
	...

0000bbe0 <_init>:
    bbe0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    bbe2:	46c0      	nop			; (mov r8, r8)
    bbe4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    bbe6:	bc08      	pop	{r3}
    bbe8:	469e      	mov	lr, r3
    bbea:	4770      	bx	lr

0000bbec <__init_array_start>:
    bbec:	00008121 	.word	0x00008121

0000bbf0 <_fini>:
    bbf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    bbf2:	46c0      	nop			; (mov r8, r8)
    bbf4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    bbf6:	bc08      	pop	{r3}
    bbf8:	469e      	mov	lr, r3
    bbfa:	4770      	bx	lr

0000bbfc <__fini_array_start>:
    bbfc:	000080f5 	.word	0x000080f5
