
NonSecureApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000163c  00008000  00008000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000963c  0000963c  0000963c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000064  20002000  00009644  00012000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          0000046c  20002068  000096b0  00012068  2**3
                  ALLOC
  4 .heap         00000204  200024d4  00009b1c  00012068  2**0
                  ALLOC
  5 .stack        00001000  200026d8  00009d20  00012068  2**0
                  ALLOC
  6 .ARM.attributes 0000002c  00000000  00000000  00012064  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00012090  2**0
                  CONTENTS, READONLY
  8 .debug_info   00008c36  00000000  00000000  000120e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000e50  00000000  00000000  0001ad1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001038  00000000  00000000  0001bb6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000158  00000000  00000000  0001cba7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003d0  00000000  00000000  0001ccff  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00014b39  00000000  00000000  0001d0cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00002994  00000000  00000000  00031c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00085a4d  00000000  00000000  0003459c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  0000080c  00000000  00000000  000b9fec  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      000000df  00000000  00000000  000ba7f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00008000 <exception_table>:
    8000:	d8 36 00 20 65 81 00 00 61 81 00 00 61 81 00 00     .6. e...a...a...
	...
    802c:	61 81 00 00 00 00 00 00 00 00 00 00 61 81 00 00     a...........a...
    803c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    804c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    805c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    806c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    807c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    808c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    809c:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80ac:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80bc:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80cc:	6d 82 00 00 61 81 00 00 61 81 00 00 61 81 00 00     m...a...a...a...
    80dc:	61 81 00 00 61 81 00 00 61 81 00 00 61 81 00 00     a...a...a...a...
    80ec:	61 81 00 00 61 81 00 00                             a...a...

000080f4 <__do_global_dtors_aux>:
    80f4:	b510      	push	{r4, lr}
    80f6:	f242 0468 	movw	r4, #8296	; 0x2068
    80fa:	f2c2 0400 	movt	r4, #8192	; 0x2000
    80fe:	7823      	ldrb	r3, [r4, #0]
    8100:	b963      	cbnz	r3, 811c <__do_global_dtors_aux+0x28>
    8102:	f240 0300 	movw	r3, #0
    8106:	f2c0 0300 	movt	r3, #0
    810a:	b12b      	cbz	r3, 8118 <__do_global_dtors_aux+0x24>
    810c:	f249 6044 	movw	r0, #38468	; 0x9644
    8110:	f2c0 0000 	movt	r0, #0
    8114:	e000      	b.n	8118 <__do_global_dtors_aux+0x24>
    8116:	bf00      	nop
    8118:	2301      	movs	r3, #1
    811a:	7023      	strb	r3, [r4, #0]
    811c:	bd10      	pop	{r4, pc}
    811e:	46c0      	nop			; (mov r8, r8)

00008120 <frame_dummy>:
    8120:	f240 0300 	movw	r3, #0
    8124:	f2c0 0300 	movt	r3, #0
    8128:	b510      	push	{r4, lr}
    812a:	b14b      	cbz	r3, 8140 <frame_dummy+0x20>
    812c:	f242 016c 	movw	r1, #8300	; 0x206c
    8130:	f249 6044 	movw	r0, #38468	; 0x9644
    8134:	f2c2 0100 	movt	r1, #8192	; 0x2000
    8138:	f2c0 0000 	movt	r0, #0
    813c:	e000      	b.n	8140 <frame_dummy+0x20>
    813e:	bf00      	nop
    8140:	f249 6044 	movw	r0, #38468	; 0x9644
    8144:	f2c0 0000 	movt	r0, #0
    8148:	6803      	ldr	r3, [r0, #0]
    814a:	b903      	cbnz	r3, 814e <frame_dummy+0x2e>
    814c:	bd10      	pop	{r4, pc}
    814e:	f240 0300 	movw	r3, #0
    8152:	f2c0 0300 	movt	r3, #0
    8156:	2b00      	cmp	r3, #0
    8158:	d0f8      	beq.n	814c <frame_dummy+0x2c>
    815a:	4798      	blx	r3
    815c:	e7f6      	b.n	814c <frame_dummy+0x2c>
    815e:	46c0      	nop			; (mov r8, r8)

00008160 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    8160:	e7fe      	b.n	8160 <Dummy_Handler>
    8162:	46c0      	nop			; (mov r8, r8)

00008164 <Reset_Handler>:
        if (pSrc != pDest) {
    8164:	f249 6144 	movw	r1, #38468	; 0x9644
    8168:	f242 0000 	movw	r0, #8192	; 0x2000
    816c:	f2c0 0100 	movt	r1, #0
    8170:	f2c2 0000 	movt	r0, #8192	; 0x2000
{
    8174:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
    8176:	4281      	cmp	r1, r0
    8178:	d00f      	beq.n	819a <Reset_Handler+0x36>
                for (; pDest < &_erelocate;) {
    817a:	f242 0364 	movw	r3, #8292	; 0x2064
    817e:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8182:	4298      	cmp	r0, r3
    8184:	d209      	bcs.n	819a <Reset_Handler+0x36>
                        *pDest++ = *pSrc++;
    8186:	43c2      	mvns	r2, r0
    8188:	18d2      	adds	r2, r2, r3
    818a:	f648 435d 	movw	r3, #35933	; 0x8c5d
    818e:	0892      	lsrs	r2, r2, #2
    8190:	3201      	adds	r2, #1
    8192:	0092      	lsls	r2, r2, #2
    8194:	f2c0 0300 	movt	r3, #0
    8198:	4798      	blx	r3
        for (pDest = &_szero; pDest < &_ezero;) {
    819a:	f242 0068 	movw	r0, #8296	; 0x2068
    819e:	f242 43d4 	movw	r3, #9428	; 0x24d4
    81a2:	f2c2 0000 	movt	r0, #8192	; 0x2000
    81a6:	f2c2 0300 	movt	r3, #8192	; 0x2000
    81aa:	4298      	cmp	r0, r3
    81ac:	d20a      	bcs.n	81c4 <Reset_Handler+0x60>
                *pDest++ = 0;
    81ae:	43c2      	mvns	r2, r0
    81b0:	18d2      	adds	r2, r2, r3
    81b2:	f648 4393 	movw	r3, #35987	; 0x8c93
    81b6:	0892      	lsrs	r2, r2, #2
    81b8:	3201      	adds	r2, #1
    81ba:	0092      	lsls	r2, r2, #2
    81bc:	2100      	movs	r1, #0
    81be:	f2c0 0300 	movt	r3, #0
    81c2:	4798      	blx	r3
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    81c4:	f248 0300 	movw	r3, #32768	; 0x8000
    81c8:	227f      	movs	r2, #127	; 0x7f
    81ca:	f2c0 0300 	movt	r3, #0
    81ce:	4393      	bics	r3, r2
    81d0:	f64e 5200 	movw	r2, #60672	; 0xed00
    81d4:	f2ce 0200 	movt	r2, #57344	; 0xe000
    81d8:	6093      	str	r3, [r2, #8]
        __libc_init_array();
    81da:	f648 430d 	movw	r3, #35853	; 0x8c0d
    81de:	f2c0 0300 	movt	r3, #0
    81e2:	4798      	blx	r3
        main();
    81e4:	f248 631d 	movw	r3, #34333	; 0x861d
    81e8:	f2c0 0300 	movt	r3, #0
    81ec:	4798      	blx	r3
    81ee:	e7fe      	b.n	81ee <Reset_Handler+0x8a>

000081f0 <timer_init>:
}

//-----------------------------------------------------------------------------
void timer_init(int period)
{
	MCLK->APBCMASK.reg |= MCLK_APBCMASK_TC1;
    81f0:	f640 0300 	movw	r3, #2048	; 0x800
    81f4:	2120      	movs	r1, #32
{
    81f6:	b510      	push	{r4, lr}
	MCLK->APBCMASK.reg |= MCLK_APBCMASK_TC1;
    81f8:	f2c4 0300 	movt	r3, #16384	; 0x4000
    81fc:	69da      	ldr	r2, [r3, #28]

	GCLK->PCHCTRL[TC1_GCLK_ID].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
	while (0 == (GCLK->PCHCTRL[TC1_GCLK_ID].reg & GCLK_PCHCTRL_CHEN));
    81fe:	24b8      	movs	r4, #184	; 0xb8
	MCLK->APBCMASK.reg |= MCLK_APBCMASK_TC1;
    8200:	430a      	orrs	r2, r1
    8202:	61da      	str	r2, [r3, #28]
	GCLK->PCHCTRL[TC1_GCLK_ID].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    8204:	f641 4200 	movw	r2, #7168	; 0x1c00
    8208:	23b8      	movs	r3, #184	; 0xb8
    820a:	f2c4 0200 	movt	r2, #16384	; 0x4000
    820e:	3120      	adds	r1, #32
    8210:	50d1      	str	r1, [r2, r3]
	while (0 == (GCLK->PCHCTRL[TC1_GCLK_ID].reg & GCLK_PCHCTRL_CHEN));
    8212:	5913      	ldr	r3, [r2, r4]
    8214:	4219      	tst	r1, r3
    8216:	d0fc      	beq.n	8212 <timer_init+0x22>

	TC1->COUNT16.CTRLA.reg = TC_CTRLA_MODE_COUNT16 | TC_CTRLA_PRESCALER_DIV256 |
    8218:	f241 4300 	movw	r3, #5120	; 0x1400
    821c:	f240 6220 	movw	r2, #1568	; 0x620
    8220:	f2c4 2300 	movt	r3, #16896	; 0x4200
    8224:	601a      	str	r2, [r3, #0]
	TC_CTRLA_PRESCSYNC_RESYNC;

	TC1->COUNT16.WAVE.reg = TC_WAVE_WAVEGEN_MFRQ;
    8226:	2201      	movs	r2, #1
    8228:	731a      	strb	r2, [r3, #12]

	TC1->COUNT16.COUNT.reg = 0xfecd;
    822a:	4a0f      	ldr	r2, [pc, #60]	; (8268 <timer_init+0x78>)

	timer_set_period(period);

	TC1->COUNT16.CTRLA.reg |= TC_CTRLA_ENABLE;
    822c:	2102      	movs	r1, #2
	TC1->COUNT16.COUNT.reg = 0xfecd;
    822e:	829a      	strh	r2, [r3, #20]
	TC1->COUNT16.CC[0].reg = (F_CPU / 1000ul / 256) * i;
    8230:	0142      	lsls	r2, r0, #5
    8232:	1a12      	subs	r2, r2, r0
    8234:	0052      	lsls	r2, r2, #1
    8236:	b292      	uxth	r2, r2
    8238:	839a      	strh	r2, [r3, #28]
	TC1->COUNT16.COUNT.reg = 0;
    823a:	2200      	movs	r2, #0
    823c:	829a      	strh	r2, [r3, #20]
	TC1->COUNT16.CTRLA.reg |= TC_CTRLA_ENABLE;
    823e:	681a      	ldr	r2, [r3, #0]
    8240:	430a      	orrs	r2, r1
    8242:	601a      	str	r2, [r3, #0]

	TC1->COUNT16.INTENSET.reg = TC_INTENSET_MC(1);
    8244:	2210      	movs	r2, #16
    8246:	725a      	strb	r2, [r3, #9]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    8248:	f24e 1300 	movw	r3, #57600	; 0xe100
    824c:	3a08      	subs	r2, #8
    824e:	f2ce 0300 	movt	r3, #57344	; 0xe000
    8252:	605a      	str	r2, [r3, #4]
	NVIC_EnableIRQ(TC1_IRQn);
	
	cur_period = period;
    8254:	f242 0388 	movw	r3, #8328	; 0x2088
    8258:	f2c2 0300 	movt	r3, #8192	; 0x2000
    825c:	6018      	str	r0, [r3, #0]
	num_overflows = 0;
    825e:	2100      	movs	r1, #0
    8260:	2000      	movs	r0, #0
    8262:	6098      	str	r0, [r3, #8]
    8264:	60d9      	str	r1, [r3, #12]
}
    8266:	bd10      	pop	{r4, pc}
    8268:	fffffecd 	.word	0xfffffecd

0000826c <TC1_Handler>:

void TC1_Handler(void)
{
	num_overflows++;
    826c:	f242 0388 	movw	r3, #8328	; 0x2088
    8270:	2001      	movs	r0, #1
    8272:	2100      	movs	r1, #0
    8274:	f2c2 0300 	movt	r3, #8192	; 0x2000
{
    8278:	b530      	push	{r4, r5, lr}
	num_overflows++;
    827a:	689c      	ldr	r4, [r3, #8]
    827c:	68dd      	ldr	r5, [r3, #12]
    827e:	1900      	adds	r0, r0, r4
    8280:	4169      	adcs	r1, r5
    8282:	6098      	str	r0, [r3, #8]
    8284:	60d9      	str	r1, [r3, #12]
	if (TC1->COUNT16.INTFLAG.reg & TC_INTFLAG_MC(1))
    8286:	f241 4300 	movw	r3, #5120	; 0x1400
    828a:	2210      	movs	r2, #16
    828c:	f2c4 2300 	movt	r3, #16896	; 0x4200
    8290:	7a99      	ldrb	r1, [r3, #10]
    8292:	420a      	tst	r2, r1
    8294:	d000      	beq.n	8298 <TC1_Handler+0x2c>
	{
		//HAL_GPIO_LED_toggle();
		TC1->COUNT16.INTFLAG.reg = TC_INTFLAG_MC(1);
    8296:	729a      	strb	r2, [r3, #10]
	}
}
    8298:	bd30      	pop	{r4, r5, pc}
    829a:	46c0      	nop			; (mov r8, r8)

0000829c <timer_reset>:
	return TC1->COUNT16.COUNT.reg;
}

void timer_reset()
{
	num_overflows = 0;	
    829c:	f242 0388 	movw	r3, #8328	; 0x2088
    82a0:	2000      	movs	r0, #0
    82a2:	2100      	movs	r1, #0
    82a4:	f2c2 0300 	movt	r3, #8192	; 0x2000
    82a8:	6098      	str	r0, [r3, #8]
    82aa:	60d9      	str	r1, [r3, #12]
    82ac:	4770      	bx	lr
    82ae:	46c0      	nop			; (mov r8, r8)

000082b0 <uart_init>:
 */ 

#include "uart.h"

void uart_init(uint32_t baud)
{
    82b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint64_t br = (uint64_t)65536 * (F_CPU - 16 * baud) / F_CPU;
    82b2:	f242 4300 	movw	r3, #9216	; 0x2400
    82b6:	f2c0 03f4 	movt	r3, #244	; 0xf4
    82ba:	469c      	mov	ip, r3
    82bc:	f248 74d9 	movw	r4, #34777	; 0x87d9
    82c0:	f242 4200 	movw	r2, #9216	; 0x2400
    82c4:	0100      	lsls	r0, r0, #4
    82c6:	4240      	negs	r0, r0
    82c8:	4460      	add	r0, ip
    82ca:	0c01      	lsrs	r1, r0, #16
    82cc:	f2c0 0400 	movt	r4, #0
    82d0:	f2c0 02f4 	movt	r2, #244	; 0xf4
    82d4:	2300      	movs	r3, #0
    82d6:	0400      	lsls	r0, r0, #16
    82d8:	47a0      	blx	r4
  {										\
    PORT->Group[HAL_GPIO_PORT##port].PINCFG[pin].reg &= ~PORT_PINCFG_PMUXEN;\
    (void)HAL_GPIO_##name##_pmuxdis;						\
  }										\

  HAL_GPIO_PIN(UART_TX,  A, 24)
    82da:	f243 0300 	movw	r3, #12288	; 0x3000
    82de:	2280      	movs	r2, #128	; 0x80
    82e0:	2158      	movs	r1, #88	; 0x58
    82e2:	2402      	movs	r4, #2
    82e4:	2701      	movs	r7, #1
    82e6:	f2c4 0300 	movt	r3, #16384	; 0x4000
    82ea:	0452      	lsls	r2, r2, #17
    82ec:	609a      	str	r2, [r3, #8]
    82ee:	5c5a      	ldrb	r2, [r3, r1]
    82f0:	263c      	movs	r6, #60	; 0x3c
    82f2:	4322      	orrs	r2, r4
    82f4:	b2d2      	uxtb	r2, r2
    82f6:	545a      	strb	r2, [r3, r1]
    82f8:	5c5a      	ldrb	r2, [r3, r1]
    82fa:	433a      	orrs	r2, r7
    82fc:	b2d2      	uxtb	r2, r2
    82fe:	545a      	strb	r2, [r3, r1]
    8300:	220f      	movs	r2, #15
    8302:	5d99      	ldrb	r1, [r3, r6]
    8304:	4391      	bics	r1, r2
    8306:	4321      	orrs	r1, r4
    8308:	5599      	strb	r1, [r3, r6]
  HAL_GPIO_PIN(UART_RX,  A, 25)
    830a:	2180      	movs	r1, #128	; 0x80
    830c:	0489      	lsls	r1, r1, #18
    830e:	6059      	str	r1, [r3, #4]
    8310:	2159      	movs	r1, #89	; 0x59
    8312:	5c5d      	ldrb	r5, [r3, r1]
    8314:	4325      	orrs	r5, r4
    8316:	b2ed      	uxtb	r5, r5
    8318:	545d      	strb	r5, [r3, r1]
    831a:	2504      	movs	r5, #4
    831c:	5c5c      	ldrb	r4, [r3, r1]
    831e:	43ac      	bics	r4, r5
    8320:	545c      	strb	r4, [r3, r1]
    8322:	5c5c      	ldrb	r4, [r3, r1]
    8324:	433c      	orrs	r4, r7
    8326:	b2e4      	uxtb	r4, r4
    8328:	545c      	strb	r4, [r3, r1]
    832a:	5d99      	ldrb	r1, [r3, r6]
	HAL_GPIO_UART_RX_pmuxen(HAL_GPIO_PMUX_C);

	MCLK->APBCMASK.reg |= MCLK_APBCMASK_SERCOM0;

	GCLK->PCHCTRL[SERCOM0_GCLK_ID_CORE].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
	while (0 == (GCLK->PCHCTRL[SERCOM0_GCLK_ID_CORE].reg & GCLK_PCHCTRL_CHEN));
    832c:	24ac      	movs	r4, #172	; 0xac
    832e:	400a      	ands	r2, r1
    8330:	2120      	movs	r1, #32
    8332:	430a      	orrs	r2, r1
    8334:	559a      	strb	r2, [r3, r6]
	MCLK->APBCMASK.reg |= MCLK_APBCMASK_SERCOM0;
    8336:	f640 0300 	movw	r3, #2048	; 0x800
    833a:	2102      	movs	r1, #2
    833c:	f2c4 0300 	movt	r3, #16384	; 0x4000
    8340:	69da      	ldr	r2, [r3, #28]
    8342:	430a      	orrs	r2, r1
    8344:	61da      	str	r2, [r3, #28]
	GCLK->PCHCTRL[SERCOM0_GCLK_ID_CORE].reg = GCLK_PCHCTRL_GEN(0) | GCLK_PCHCTRL_CHEN;
    8346:	f641 4200 	movw	r2, #7168	; 0x1c00
    834a:	23ac      	movs	r3, #172	; 0xac
    834c:	f2c4 0200 	movt	r2, #16384	; 0x4000
    8350:	313e      	adds	r1, #62	; 0x3e
    8352:	50d1      	str	r1, [r2, r3]
	while (0 == (GCLK->PCHCTRL[SERCOM0_GCLK_ID_CORE].reg & GCLK_PCHCTRL_CHEN));
    8354:	5913      	ldr	r3, [r2, r4]
    8356:	4219      	tst	r1, r3
    8358:	d0fc      	beq.n	8354 <uart_init+0xa4>

	SERCOM0->USART.CTRLA.reg =
    835a:	f240 4200 	movw	r2, #1024	; 0x400
    835e:	2304      	movs	r3, #4
    8360:	f2c4 2200 	movt	r2, #16896	; 0x4200
    8364:	f2c4 0331 	movt	r3, #16433	; 0x4031
    8368:	6013      	str	r3, [r2, #0]
	SERCOM_USART_CTRLA_DORD | SERCOM_USART_CTRLA_MODE(1/*USART_INT_CLK*/) |
	SERCOM_USART_CTRLA_RXPO(3/*PAD3*/) | SERCOM_USART_CTRLA_TXPO(1/*PAD2*/);

	SERCOM0->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    836a:	23c0      	movs	r3, #192	; 0xc0
	SERCOM_USART_CTRLB_CHSIZE(0/*8 bits*/);

	SERCOM0->USART.BAUD.reg = (uint16_t)br;

	SERCOM0->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    836c:	2102      	movs	r1, #2
	SERCOM0->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    836e:	029b      	lsls	r3, r3, #10
	SERCOM0->USART.BAUD.reg = (uint16_t)br;
    8370:	b280      	uxth	r0, r0
	SERCOM0->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN | SERCOM_USART_CTRLB_TXEN |
    8372:	6053      	str	r3, [r2, #4]
	SERCOM0->USART.BAUD.reg = (uint16_t)br;
    8374:	8190      	strh	r0, [r2, #12]
	SERCOM0->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    8376:	6813      	ldr	r3, [r2, #0]
    8378:	430b      	orrs	r3, r1
    837a:	6013      	str	r3, [r2, #0]
	
	while (SERCOM0->USART.SYNCBUSY.reg & SERCOM_USART_SYNCBUSY_ENABLE);
    837c:	69d3      	ldr	r3, [r2, #28]
    837e:	4219      	tst	r1, r3
    8380:	d1fc      	bne.n	837c <uart_init+0xcc>
}
    8382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00008384 <uart_puts>:
	SERCOM0->USART.DATA.reg = c;
}

//-----------------------------------------------------------------------------
void uart_puts(char *s)
{
    8384:	b510      	push	{r4, lr}
	while (*s)
    8386:	7804      	ldrb	r4, [r0, #0]
    8388:	b16c      	cbz	r4, 83a6 <uart_puts+0x22>
	while (!(SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    838a:	f240 4200 	movw	r2, #1024	; 0x400
    838e:	2101      	movs	r1, #1
    8390:	f2c4 2200 	movt	r2, #16896	; 0x4200
	uart_putc(*s++);
    8394:	3001      	adds	r0, #1
	while (!(SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    8396:	7e13      	ldrb	r3, [r2, #24]
    8398:	4219      	tst	r1, r3
    839a:	d0fc      	beq.n	8396 <uart_puts+0x12>
	SERCOM0->USART.DATA.reg = c;
    839c:	b2a4      	uxth	r4, r4
    839e:	8514      	strh	r4, [r2, #40]	; 0x28
	while (*s)
    83a0:	7804      	ldrb	r4, [r0, #0]
    83a2:	2c00      	cmp	r4, #0
    83a4:	d1f6      	bne.n	8394 <uart_puts+0x10>
}
    83a6:	bd10      	pop	{r4, pc}

000083a8 <uart_puti>:
void uart_puti(int i)
{
	char s[11];
	int last = 0;
	do {
		s[last] = i%10 + '0';
    83a8:	220a      	movs	r2, #10
    83aa:	fb90 f1f2 	sdiv	r1, r0, r2
{
    83ae:	b530      	push	{r4, r5, lr}
		s[last] = i%10 + '0';
    83b0:	008c      	lsls	r4, r1, #2
    83b2:	1864      	adds	r4, r4, r1
    83b4:	0064      	lsls	r4, r4, #1
{
    83b6:	b085      	sub	sp, #20
		s[last] = i%10 + '0';
    83b8:	1b04      	subs	r4, r0, r4
    83ba:	ab01      	add	r3, sp, #4
    83bc:	3430      	adds	r4, #48	; 0x30
    83be:	701c      	strb	r4, [r3, #0]
		i = i/10;
		last++;
	} while(i > 0);
    83c0:	2900      	cmp	r1, #0
    83c2:	dc00      	bgt.n	83c6 <uart_puti+0x1e>
    83c4:	e08f      	b.n	84e6 <uart_puti+0x13e>
		s[last] = i%10 + '0';
    83c6:	fb91 f5f2 	sdiv	r5, r1, r2
    83ca:	00ac      	lsls	r4, r5, #2
    83cc:	1964      	adds	r4, r4, r5
    83ce:	0064      	lsls	r4, r4, #1
    83d0:	1b09      	subs	r1, r1, r4
    83d2:	3130      	adds	r1, #48	; 0x30
    83d4:	7059      	strb	r1, [r3, #1]
		i = i/10;
    83d6:	2164      	movs	r1, #100	; 0x64
    83d8:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    83dc:	2900      	cmp	r1, #0
    83de:	d100      	bne.n	83e2 <uart_puti+0x3a>
    83e0:	e083      	b.n	84ea <uart_puti+0x142>
		s[last] = i%10 + '0';
    83e2:	fb91 f5f2 	sdiv	r5, r1, r2
    83e6:	00ac      	lsls	r4, r5, #2
    83e8:	1964      	adds	r4, r4, r5
    83ea:	0064      	lsls	r4, r4, #1
    83ec:	1b09      	subs	r1, r1, r4
    83ee:	3130      	adds	r1, #48	; 0x30
    83f0:	7099      	strb	r1, [r3, #2]
		i = i/10;
    83f2:	f240 31e8 	movw	r1, #1000	; 0x3e8
    83f6:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    83fa:	2900      	cmp	r1, #0
    83fc:	d100      	bne.n	8400 <uart_puti+0x58>
    83fe:	e076      	b.n	84ee <uart_puti+0x146>
		s[last] = i%10 + '0';
    8400:	fb91 f5f2 	sdiv	r5, r1, r2
    8404:	00ac      	lsls	r4, r5, #2
    8406:	1964      	adds	r4, r4, r5
    8408:	0064      	lsls	r4, r4, #1
    840a:	1b09      	subs	r1, r1, r4
    840c:	3130      	adds	r1, #48	; 0x30
    840e:	70d9      	strb	r1, [r3, #3]
		i = i/10;
    8410:	f242 7110 	movw	r1, #10000	; 0x2710
    8414:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    8418:	2900      	cmp	r1, #0
    841a:	d06a      	beq.n	84f2 <uart_puti+0x14a>
		s[last] = i%10 + '0';
    841c:	fb91 f5f2 	sdiv	r5, r1, r2
    8420:	00ac      	lsls	r4, r5, #2
    8422:	1964      	adds	r4, r4, r5
    8424:	0064      	lsls	r4, r4, #1
    8426:	1b09      	subs	r1, r1, r4
    8428:	3130      	adds	r1, #48	; 0x30
    842a:	7119      	strb	r1, [r3, #4]
		i = i/10;
    842c:	f248 61a0 	movw	r1, #34464	; 0x86a0
    8430:	f2c0 0101 	movt	r1, #1
    8434:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    8438:	2900      	cmp	r1, #0
    843a:	d05c      	beq.n	84f6 <uart_puti+0x14e>
		s[last] = i%10 + '0';
    843c:	fb91 f5f2 	sdiv	r5, r1, r2
    8440:	00ac      	lsls	r4, r5, #2
    8442:	1964      	adds	r4, r4, r5
    8444:	0064      	lsls	r4, r4, #1
    8446:	1b09      	subs	r1, r1, r4
    8448:	3130      	adds	r1, #48	; 0x30
    844a:	7159      	strb	r1, [r3, #5]
		i = i/10;
    844c:	f244 2140 	movw	r1, #16960	; 0x4240
    8450:	f2c0 010f 	movt	r1, #15
    8454:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    8458:	2900      	cmp	r1, #0
    845a:	d04e      	beq.n	84fa <uart_puti+0x152>
		s[last] = i%10 + '0';
    845c:	fb91 f5f2 	sdiv	r5, r1, r2
    8460:	00ac      	lsls	r4, r5, #2
    8462:	1964      	adds	r4, r4, r5
    8464:	0064      	lsls	r4, r4, #1
    8466:	1b09      	subs	r1, r1, r4
    8468:	3130      	adds	r1, #48	; 0x30
    846a:	7199      	strb	r1, [r3, #6]
		i = i/10;
    846c:	f249 6180 	movw	r1, #38528	; 0x9680
    8470:	f2c0 0198 	movt	r1, #152	; 0x98
    8474:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    8478:	2900      	cmp	r1, #0
    847a:	d040      	beq.n	84fe <uart_puti+0x156>
		s[last] = i%10 + '0';
    847c:	fb91 f5f2 	sdiv	r5, r1, r2
    8480:	00ac      	lsls	r4, r5, #2
    8482:	1964      	adds	r4, r4, r5
    8484:	0064      	lsls	r4, r4, #1
    8486:	1b09      	subs	r1, r1, r4
    8488:	3130      	adds	r1, #48	; 0x30
    848a:	71d9      	strb	r1, [r3, #7]
		i = i/10;
    848c:	f24e 1100 	movw	r1, #57600	; 0xe100
    8490:	f2c0 51f5 	movt	r1, #1525	; 0x5f5
    8494:	fb90 f1f1 	sdiv	r1, r0, r1
	} while(i > 0);
    8498:	2900      	cmp	r1, #0
    849a:	d032      	beq.n	8502 <uart_puti+0x15a>
		s[last] = i%10 + '0';
    849c:	fb91 f2f2 	sdiv	r2, r1, r2
    84a0:	0094      	lsls	r4, r2, #2
    84a2:	18a2      	adds	r2, r4, r2
    84a4:	0052      	lsls	r2, r2, #1
    84a6:	1a89      	subs	r1, r1, r2
		i = i/10;
    84a8:	f64c 2200 	movw	r2, #51712	; 0xca00
    84ac:	f6c3 329a 	movt	r2, #15258	; 0x3b9a
    84b0:	fb90 f0f2 	sdiv	r0, r0, r2
		s[last] = i%10 + '0';
    84b4:	3130      	adds	r1, #48	; 0x30
    84b6:	7219      	strb	r1, [r3, #8]
	} while(i > 0);
    84b8:	b328      	cbz	r0, 8506 <uart_puti+0x15e>
		s[last] = i%10 + '0';
    84ba:	3030      	adds	r0, #48	; 0x30
    84bc:	7258      	strb	r0, [r3, #9]
		last++;
    84be:	2009      	movs	r0, #9
    84c0:	1818      	adds	r0, r3, r0
	while (!(SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    84c2:	f240 4200 	movw	r2, #1024	; 0x400
    84c6:	466b      	mov	r3, sp
    84c8:	2101      	movs	r1, #1
    84ca:	1cdd      	adds	r5, r3, #3
    84cc:	f2c4 2200 	movt	r2, #16896	; 0x4200
	
	for(int j=last-1; j>=0; j--) {
		uart_putc(s[j]);
    84d0:	7804      	ldrb	r4, [r0, #0]
	while (!(SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE));
    84d2:	7e13      	ldrb	r3, [r2, #24]
    84d4:	4219      	tst	r1, r3
    84d6:	d0fc      	beq.n	84d2 <uart_puti+0x12a>
	SERCOM0->USART.DATA.reg = c;
    84d8:	b2a4      	uxth	r4, r4
    84da:	3801      	subs	r0, #1
    84dc:	8514      	strh	r4, [r2, #40]	; 0x28
	for(int j=last-1; j>=0; j--) {
    84de:	42a8      	cmp	r0, r5
    84e0:	d1f6      	bne.n	84d0 <uart_puti+0x128>
	}
}
    84e2:	b005      	add	sp, #20
    84e4:	bd30      	pop	{r4, r5, pc}
	int last = 0;
    84e6:	2000      	movs	r0, #0
    84e8:	e7ea      	b.n	84c0 <uart_puti+0x118>
		last++;
    84ea:	2001      	movs	r0, #1
    84ec:	e7e8      	b.n	84c0 <uart_puti+0x118>
    84ee:	2002      	movs	r0, #2
    84f0:	e7e6      	b.n	84c0 <uart_puti+0x118>
    84f2:	2003      	movs	r0, #3
    84f4:	e7e4      	b.n	84c0 <uart_puti+0x118>
    84f6:	2004      	movs	r0, #4
    84f8:	e7e2      	b.n	84c0 <uart_puti+0x118>
    84fa:	2005      	movs	r0, #5
    84fc:	e7e0      	b.n	84c0 <uart_puti+0x118>
    84fe:	2006      	movs	r0, #6
    8500:	e7de      	b.n	84c0 <uart_puti+0x118>
    8502:	2007      	movs	r0, #7
    8504:	e7dc      	b.n	84c0 <uart_puti+0x118>
    8506:	2008      	movs	r0, #8
    8508:	e7da      	b.n	84c0 <uart_puti+0x118>
    850a:	46c0      	nop			; (mov r8, r8)

0000850c <uart_get_bytes>:
		s[idx] = c;
		idx++;
	}
}

void uart_get_bytes(uint8_t* output, int size){
    850c:	b530      	push	{r4, r5, lr}
    850e:	1844      	adds	r4, r0, r1
	for (int i = 0; i < size; i++)
    8510:	2900      	cmp	r1, #0
    8512:	dd13      	ble.n	853c <uart_get_bytes+0x30>
	while(!(SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    8514:	f240 4200 	movw	r2, #1024	; 0x400
			SERCOM0->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    8518:	2580      	movs	r5, #128	; 0x80
	while(!(SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    851a:	f2c4 2200 	movt	r2, #16896	; 0x4200
    851e:	2104      	movs	r1, #4
			SERCOM0->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    8520:	426d      	negs	r5, r5
    8522:	e003      	b.n	852c <uart_get_bytes+0x20>
		if(SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR)
    8524:	7e13      	ldrb	r3, [r2, #24]
    8526:	b25b      	sxtb	r3, r3
    8528:	2b00      	cmp	r3, #0
    852a:	db08      	blt.n	853e <uart_get_bytes+0x32>
	while(!(SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC))   /* wait until Rx full */
    852c:	7e13      	ldrb	r3, [r2, #24]
    852e:	4219      	tst	r1, r3
    8530:	d0f8      	beq.n	8524 <uart_get_bytes+0x18>
	rx = (uint8_t)SERCOM0->USART.DATA.reg;
    8532:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    8534:	7003      	strb	r3, [r0, #0]
    8536:	3001      	adds	r0, #1
	for (int i = 0; i < size; i++)
    8538:	42a0      	cmp	r0, r4
    853a:	d1f7      	bne.n	852c <uart_get_bytes+0x20>
	{
		output[i] = uart_getc();
	}
}
    853c:	bd30      	pop	{r4, r5, pc}
			SERCOM0->USART.INTFLAG.reg |= SERCOM_USART_INTFLAG_ERROR; /* clear any errors */
    853e:	7e13      	ldrb	r3, [r2, #24]
    8540:	432b      	orrs	r3, r5
    8542:	b2db      	uxtb	r3, r3
    8544:	7613      	strb	r3, [r2, #24]
	rx = (uint8_t)SERCOM0->USART.DATA.reg;
    8546:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    8548:	7003      	strb	r3, [r0, #0]
    854a:	3001      	adds	r0, #1
	for (int i = 0; i < size; i++)
    854c:	42a0      	cmp	r0, r4
    854e:	d1ed      	bne.n	852c <uart_get_bytes+0x20>
    8550:	e7f4      	b.n	853c <uart_get_bytes+0x30>
    8552:	46c0      	nop			; (mov r8, r8)

00008554 <get_sphinc_sig>:
	#endif
}

extern uint8_t buffer[ 1024 ];
extern unsigned numSigs;
static uint8_t *get_sphinc_sig() {
    8554:	b570      	push	{r4, r5, r6, lr}
	uart_puts("SPHINCSPHINC\n");
    8556:	f249 40a8 	movw	r0, #38056	; 0x94a8
    855a:	f248 3585 	movw	r5, #33669	; 0x8385
    855e:	f2c0 0000 	movt	r0, #0
    8562:	f2c0 0500 	movt	r5, #0
    8566:	47a8      	blx	r5
	unsigned n = 0;
	int rem = 17088-numSigs;
    8568:	f242 03a0 	movw	r3, #8352	; 0x20a0
    856c:	f244 24c0 	movw	r4, #17088	; 0x42c0
    8570:	f240 4100 	movw	r1, #1024	; 0x400
    8574:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8578:	681a      	ldr	r2, [r3, #0]
    857a:	1aa4      	subs	r4, r4, r2
    857c:	428c      	cmp	r4, r1
    857e:	d901      	bls.n	8584 <get_sphinc_sig+0x30>
    8580:	f240 4400 	movw	r4, #1024	; 0x400
	if(rem > sizeof buffer) n = sizeof buffer;
	else n = rem;
	numSigs += n;
    8584:	1912      	adds	r2, r2, r4
    8586:	601a      	str	r2, [r3, #0]
	uart_get_bytes(buffer, n);
    8588:	f242 00b0 	movw	r0, #8368	; 0x20b0
    858c:	f248 530d 	movw	r3, #34061	; 0x850d
    8590:	0021      	movs	r1, r4
    8592:	f2c2 0000 	movt	r0, #8192	; 0x2000
    8596:	f2c0 0300 	movt	r3, #0
    859a:	4798      	blx	r3
	//out = buffer;
	uart_puti(n);
    859c:	f248 33a9 	movw	r3, #33705	; 0x83a9
    85a0:	0020      	movs	r0, r4
    85a2:	f2c0 0300 	movt	r3, #0
    85a6:	4798      	blx	r3
	uart_puts("\n");
    85a8:	f249 5078 	movw	r0, #38264	; 0x9578
    85ac:	f2c0 0000 	movt	r0, #0
    85b0:	47a8      	blx	r5
	return buffer;
}
    85b2:	f242 00b0 	movw	r0, #8368	; 0x20b0
    85b6:	f2c2 0000 	movt	r0, #8192	; 0x2000
    85ba:	bd70      	pop	{r4, r5, r6, pc}

000085bc <print_token>:
	char hex[3]={0};
    85bc:	f648 4393 	movw	r3, #35987	; 0x8c93
void print_token(uint8_t *token, int size) {
    85c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    85c2:	b083      	sub	sp, #12
    85c4:	000e      	movs	r6, r1
    85c6:	0004      	movs	r4, r0
	char hex[3]={0};
    85c8:	2203      	movs	r2, #3
    85ca:	2100      	movs	r1, #0
    85cc:	a801      	add	r0, sp, #4
    85ce:	f2c0 0300 	movt	r3, #0
    85d2:	4798      	blx	r3
	uart_puts("0x");
    85d4:	f248 3585 	movw	r5, #33669	; 0x8385
    85d8:	f249 40b8 	movw	r0, #38072	; 0x94b8
    85dc:	f2c0 0500 	movt	r5, #0
    85e0:	f2c0 0000 	movt	r0, #0
    85e4:	47a8      	blx	r5
	for(int i=0; i<size; i++) {
    85e6:	2e00      	cmp	r6, #0
    85e8:	dd10      	ble.n	860c <print_token+0x50>
    85ea:	f648 6715 	movw	r7, #36373	; 0x8e15
    85ee:	19a6      	adds	r6, r4, r6
    85f0:	f2c0 0700 	movt	r7, #0
		sprintf(hex, "%.2x", token[i]);
    85f4:	f249 41bc 	movw	r1, #38076	; 0x94bc
    85f8:	7822      	ldrb	r2, [r4, #0]
    85fa:	f2c0 0100 	movt	r1, #0
    85fe:	a801      	add	r0, sp, #4
    8600:	47b8      	blx	r7
    8602:	3401      	adds	r4, #1
		uart_puts(hex);
    8604:	a801      	add	r0, sp, #4
    8606:	47a8      	blx	r5
	for(int i=0; i<size; i++) {
    8608:	42b4      	cmp	r4, r6
    860a:	d1f3      	bne.n	85f4 <print_token+0x38>
	uart_puts("\n");
    860c:	f249 5078 	movw	r0, #38264	; 0x9578
    8610:	f2c0 0000 	movt	r0, #0
    8614:	47a8      	blx	r5
}
    8616:	b003      	add	sp, #12
    8618:	bdf0      	pop	{r4, r5, r6, r7, pc}
    861a:	46c0      	nop			; (mov r8, r8)

0000861c <main>:

/* Non-Secure main() */
int main(void)
{
    861c:	b5f0      	push	{r4, r5, r6, r7, lr}
    861e:	46ce      	mov	lr, r9
    8620:	4647      	mov	r7, r8
	
	//__disable_irq();
	timer_init(PERIOD_1S);
    8622:	f248 13f1 	movw	r3, #33265	; 0x81f1
{
    8626:	b580      	push	{r7, lr}
	timer_init(PERIOD_1S);
    8628:	f240 10f4 	movw	r0, #500	; 0x1f4
{
    862c:	b0a3      	sub	sp, #140	; 0x8c
	timer_init(PERIOD_1S);
    862e:	f2c0 0300 	movt	r3, #0
    8632:	4798      	blx	r3
	
	uart_init(115200);
    8634:	20e1      	movs	r0, #225	; 0xe1
    8636:	f248 23b1 	movw	r3, #33457	; 0x82b1
    863a:	0240      	lsls	r0, r0, #9
    863c:	f2c0 0300 	movt	r3, #0
    8640:	4798      	blx	r3
	uart_puts("A lot of helloooooo\n");
    8642:	f248 3585 	movw	r5, #33669	; 0x8385
    8646:	f249 40e0 	movw	r0, #38112	; 0x94e0
    864a:	f2c0 0500 	movt	r5, #0
    864e:	f2c0 0000 	movt	r0, #0
    8652:	47a8      	blx	r5
  }										\

  HAL_GPIO_PIN(UART_TX,  A, 24)
  HAL_GPIO_PIN(UART_RX,  A, 25)

  HAL_GPIO_PIN(LED,      A, 7)
    8654:	f243 0300 	movw	r3, #12288	; 0x3000
    8658:	2280      	movs	r2, #128	; 0x80
    865a:	2147      	movs	r1, #71	; 0x47
    865c:	2002      	movs	r0, #2
    865e:	f2c4 0300 	movt	r3, #16384	; 0x4000
    8662:	609a      	str	r2, [r3, #8]
    8664:	5c5a      	ldrb	r2, [r3, r1]
	HAL_GPIO_LED_out();
	timer_reset();
	
	
	uint8_t req[100]={};
    8666:	f648 4493 	movw	r4, #35987	; 0x8c93
    866a:	4302      	orrs	r2, r0
    866c:	545a      	strb	r2, [r3, r1]
	timer_reset();
    866e:	f248 239d 	movw	r3, #33437	; 0x829d
    8672:	f2c0 0300 	movt	r3, #0
    8676:	4798      	blx	r3
	uint8_t req[100]={};
    8678:	f2c0 0400 	movt	r4, #0
    867c:	2264      	movs	r2, #100	; 0x64
    867e:	2100      	movs	r1, #0
    8680:	a809      	add	r0, sp, #36	; 0x24
    8682:	47a0      	blx	r4
	uart_puts("Hi\n");
    8684:	f249 40f8 	movw	r0, #38136	; 0x94f8
    8688:	f2c0 0000 	movt	r0, #0
    868c:	47a8      	blx	r5
	uart_get_bytes(req, TOKEN_SIZE+9);
    868e:	f248 530d 	movw	r3, #34061	; 0x850d
    8692:	2149      	movs	r1, #73	; 0x49
    8694:	f2c0 0300 	movt	r3, #0
    8698:	a809      	add	r0, sp, #36	; 0x24
    869a:	4798      	blx	r3
	
	uart_puts("Receive: ");
    869c:	f249 40fc 	movw	r0, #38140	; 0x94fc
	uint32_t f, c;
	uint8_t i;
	c = *(uint32_t*)(req);
	f = *(uint32_t*)(req+4);
	i = *(uint32_t*)(req+8);
	uart_puti(c);
    86a0:	f248 38a9 	movw	r8, #33705	; 0x83a9
	uart_puts("Receive: ");
    86a4:	f2c0 0000 	movt	r0, #0
    86a8:	47a8      	blx	r5
	c = *(uint32_t*)(req);
    86aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
	uart_puti(c);
    86ac:	f2c0 0800 	movt	r8, #0
    86b0:	0018      	movs	r0, r3
	c = *(uint32_t*)(req);
    86b2:	4699      	mov	r9, r3
	f = *(uint32_t*)(req+4);
    86b4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
	i = *(uint32_t*)(req+8);
    86b6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
	uart_puti(c);
    86b8:	47c0      	blx	r8
	uart_puts(" ");
    86ba:	f249 5004 	movw	r0, #38148	; 0x9504
    86be:	f2c0 0000 	movt	r0, #0
    86c2:	47a8      	blx	r5
	uart_puti(f);
    86c4:	0038      	movs	r0, r7
    86c6:	47c0      	blx	r8
	uart_puts(" ");
    86c8:	f249 5004 	movw	r0, #38148	; 0x9504
    86cc:	f2c0 0000 	movt	r0, #0
    86d0:	47a8      	blx	r5
	uart_puti(i);
    86d2:	20ff      	movs	r0, #255	; 0xff
    86d4:	4030      	ands	r0, r6
    86d6:	47c0      	blx	r8
	uint8_t *token = (uint8_t*) (req+9);
	
	uart_puts("\n");
    86d8:	f249 5078 	movw	r0, #38264	; 0x9578
    86dc:	f2c0 0000 	movt	r0, #0
    86e0:	47a8      	blx	r5
	uart_puts("get_sphinc_sig at: ");
    86e2:	f249 5008 	movw	r0, #38152	; 0x9508
    86e6:	f2c0 0000 	movt	r0, #0
    86ea:	47a8      	blx	r5
	uart_puti(&get_sphinc_sig);
    86ec:	f248 5055 	movw	r0, #34133	; 0x8555
    86f0:	f2c0 0000 	movt	r0, #0
    86f4:	47c0      	blx	r8
	uart_puts("\n");
    86f6:	f249 5078 	movw	r0, #38264	; 0x9578
    86fa:	f2c0 0000 	movt	r0, #0
    86fe:	47a8      	blx	r5
	
	uart_puts("Start running sphincs\n");
    8700:	f249 501c 	movw	r0, #38172	; 0x951c
    8704:	f2c0 0000 	movt	r0, #0
    8708:	47a8      	blx	r5
	sha256_finalize(&hash, &sum, 1);
	uart_puts("initial state:\n");
	print_token(hash.hash, SHA256_DIGEST_SIZE);*/
	
	pox_call_t pc;
	pc.counter = c;
    870a:	464b      	mov	r3, r9
    870c:	9308      	str	r3, [sp, #32]
	pc.addr = f;
	pox_input[0] = i;
    870e:	f242 0398 	movw	r3, #8344	; 0x2098
	pc.input = pox_input;
	pc.input_size = 1;
    8712:	2201      	movs	r2, #1
	pox_input[0] = i;
    8714:	f2c2 0300 	movt	r3, #8192	; 0x2000
    8718:	701e      	strb	r6, [r3, #0]
	pc.input = pox_input;
    871a:	9304      	str	r3, [sp, #16]
	pc.output = pox_output;
    871c:	3304      	adds	r3, #4
	pc.input_size = 1;
    871e:	9205      	str	r2, [sp, #20]
	pc.output = pox_output;
    8720:	9306      	str	r3, [sp, #24]
	uart_puti(pass);
	uart_puts("\n");
	return;*/
	
	//uart_puts("SPHINCSTART\n");
	secure_pox(&pc, token);
    8722:	aa02      	add	r2, sp, #8
	pc.output_size = 4;
    8724:	2304      	movs	r3, #4
	secure_pox(&pc, token);
    8726:	4694      	mov	ip, r2
	pc.output_size = 4;
    8728:	9307      	str	r3, [sp, #28]
	secure_pox(&pc, token);
    872a:	3321      	adds	r3, #33	; 0x21
    872c:	4463      	add	r3, ip
    872e:	0019      	movs	r1, r3
    8730:	f647 4301 	movw	r3, #31745	; 0x7c01
    8734:	a803      	add	r0, sp, #12
    8736:	f2c0 0300 	movt	r3, #0
	pc.addr = f;
    873a:	9703      	str	r7, [sp, #12]
	secure_pox(&pc, token);
    873c:	4798      	blx	r3
	
	uart_puts("=========== Output ===========\n");
    873e:	f249 5034 	movw	r0, #38196	; 0x9534
    8742:	f2c0 0000 	movt	r0, #0
    8746:	47a8      	blx	r5
	print_token(pc.output, pc.output_size);
    8748:	9b07      	ldr	r3, [sp, #28]
    874a:	2765      	movs	r7, #101	; 0x65
    874c:	9300      	str	r3, [sp, #0]
    874e:	9b06      	ldr	r3, [sp, #24]
    8750:	9900      	ldr	r1, [sp, #0]
    8752:	0018      	movs	r0, r3
    8754:	9301      	str	r3, [sp, #4]
    8756:	f248 53bd 	movw	r3, #34237	; 0x85bd
    875a:	f2c0 0300 	movt	r3, #0
    875e:	4798      	blx	r3
	
	uart_puts("=========== Output token ===========\n");
    8760:	f249 5054 	movw	r0, #38228	; 0x9554
    8764:	f2c0 0000 	movt	r0, #0
    8768:	47a8      	blx	r5
	char hex[3]={0};
    876a:	2203      	movs	r2, #3
    876c:	2100      	movs	r1, #0
    876e:	a802      	add	r0, sp, #8
    8770:	47a0      	blx	r4
	uart_puts("0x");
    8772:	f249 40b8 	movw	r0, #38072	; 0x94b8
    8776:	f2c0 0000 	movt	r0, #0
    877a:	47a8      	blx	r5
    877c:	aa02      	add	r2, sp, #8
    877e:	4694      	mov	ip, r2
    8780:	2325      	movs	r3, #37	; 0x25
    8782:	f648 6615 	movw	r6, #36373	; 0x8e15
    8786:	4463      	add	r3, ip
    8788:	001c      	movs	r4, r3
    878a:	4467      	add	r7, ip
    878c:	f2c0 0600 	movt	r6, #0
		sprintf(hex, "%.2x", token[i]);
    8790:	f249 41bc 	movw	r1, #38076	; 0x94bc
    8794:	7822      	ldrb	r2, [r4, #0]
    8796:	f2c0 0100 	movt	r1, #0
    879a:	a802      	add	r0, sp, #8
    879c:	47b0      	blx	r6
    879e:	3401      	adds	r4, #1
		uart_puts(hex);
    87a0:	a802      	add	r0, sp, #8
    87a2:	47a8      	blx	r5
	for(int i=0; i<size; i++) {
    87a4:	42bc      	cmp	r4, r7
    87a6:	d1f3      	bne.n	8790 <main+0x174>
	uart_puts("\n");
    87a8:	f249 5078 	movw	r0, #38264	; 0x9578
    87ac:	f2c0 0000 	movt	r0, #0
    87b0:	47a8      	blx	r5
	print_token(token, TOKEN_SIZE);
	
	uart_puts("Stack used\n");
    87b2:	f249 507c 	movw	r0, #38268	; 0x957c
    87b6:	f2c0 0000 	movt	r0, #0
    87ba:	47a8      	blx	r5
	uart_puti(*(uint32_t*)(pc.output));
    87bc:	9b06      	ldr	r3, [sp, #24]
    87be:	6818      	ldr	r0, [r3, #0]
    87c0:	47c0      	blx	r8
	
	uart_puts("\n");
    87c2:	f249 5078 	movw	r0, #38264	; 0x9578
    87c6:	f2c0 0000 	movt	r0, #0
    87ca:	47a8      	blx	r5
	return;
	
	
}
    87cc:	b023      	add	sp, #140	; 0x8c
    87ce:	bc0c      	pop	{r2, r3}
    87d0:	4690      	mov	r8, r2
    87d2:	4699      	mov	r9, r3
    87d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    87d6:	46c0      	nop			; (mov r8, r8)

000087d8 <__aeabi_uldivmod>:
    87d8:	2b00      	cmp	r3, #0
    87da:	d111      	bne.n	8800 <__aeabi_uldivmod+0x28>
    87dc:	2a00      	cmp	r2, #0
    87de:	d10f      	bne.n	8800 <__aeabi_uldivmod+0x28>
    87e0:	2900      	cmp	r1, #0
    87e2:	d100      	bne.n	87e6 <__aeabi_uldivmod+0xe>
    87e4:	2800      	cmp	r0, #0
    87e6:	d002      	beq.n	87ee <__aeabi_uldivmod+0x16>
    87e8:	2100      	movs	r1, #0
    87ea:	43c9      	mvns	r1, r1
    87ec:	1c08      	adds	r0, r1, #0
    87ee:	b407      	push	{r0, r1, r2}
    87f0:	4802      	ldr	r0, [pc, #8]	; (87fc <__aeabi_uldivmod+0x24>)
    87f2:	a102      	add	r1, pc, #8	; (adr r1, 87fc <__aeabi_uldivmod+0x24>)
    87f4:	1840      	adds	r0, r0, r1
    87f6:	9002      	str	r0, [sp, #8]
    87f8:	bd03      	pop	{r0, r1, pc}
    87fa:	46c0      	nop			; (mov r8, r8)
    87fc:	000003d1 	.word	0x000003d1
    8800:	b403      	push	{r0, r1}
    8802:	4668      	mov	r0, sp
    8804:	b501      	push	{r0, lr}
    8806:	9802      	ldr	r0, [sp, #8]
    8808:	f000 f806 	bl	8818 <__udivmoddi4>
    880c:	9b01      	ldr	r3, [sp, #4]
    880e:	469e      	mov	lr, r3
    8810:	b002      	add	sp, #8
    8812:	bc0c      	pop	{r2, r3}
    8814:	4770      	bx	lr
    8816:	46c0      	nop			; (mov r8, r8)

00008818 <__udivmoddi4>:
    8818:	b5f0      	push	{r4, r5, r6, r7, lr}
    881a:	4657      	mov	r7, sl
    881c:	4645      	mov	r5, r8
    881e:	46de      	mov	lr, fp
    8820:	464e      	mov	r6, r9
    8822:	4698      	mov	r8, r3
    8824:	b5e0      	push	{r5, r6, r7, lr}
    8826:	b083      	sub	sp, #12
    8828:	0017      	movs	r7, r2
    882a:	9201      	str	r2, [sp, #4]
    882c:	0016      	movs	r6, r2
    882e:	4642      	mov	r2, r8
    8830:	0005      	movs	r5, r0
    8832:	000c      	movs	r4, r1
    8834:	4683      	mov	fp, r0
    8836:	468a      	mov	sl, r1
    8838:	2a00      	cmp	r2, #0
    883a:	d14c      	bne.n	88d6 <__udivmoddi4+0xbe>
    883c:	428f      	cmp	r7, r1
    883e:	d800      	bhi.n	8842 <__udivmoddi4+0x2a>
    8840:	e078      	b.n	8934 <__udivmoddi4+0x11c>
    8842:	0038      	movs	r0, r7
    8844:	f000 f9c4 	bl	8bd0 <__clzsi2>
    8848:	b150      	cbz	r0, 8860 <__udivmoddi4+0x48>
    884a:	2320      	movs	r3, #32
    884c:	002a      	movs	r2, r5
    884e:	1a1b      	subs	r3, r3, r0
    8850:	40da      	lsrs	r2, r3
    8852:	4084      	lsls	r4, r0
    8854:	0013      	movs	r3, r2
    8856:	4085      	lsls	r5, r0
    8858:	4323      	orrs	r3, r4
    885a:	4086      	lsls	r6, r0
    885c:	469a      	mov	sl, r3
    885e:	46ab      	mov	fp, r5
    8860:	0c37      	lsrs	r7, r6, #16
    8862:	fbba f2f7 	udiv	r2, sl, r7
    8866:	0039      	movs	r1, r7
    8868:	4653      	mov	r3, sl
    886a:	f64f 74ff 	movw	r4, #65535	; 0xffff
    886e:	4351      	muls	r1, r2
    8870:	0015      	movs	r5, r2
    8872:	1a59      	subs	r1, r3, r1
    8874:	465b      	mov	r3, fp
    8876:	4034      	ands	r4, r6
    8878:	4365      	muls	r5, r4
    887a:	0409      	lsls	r1, r1, #16
    887c:	0c1b      	lsrs	r3, r3, #16
    887e:	430b      	orrs	r3, r1
    8880:	429d      	cmp	r5, r3
    8882:	d909      	bls.n	8898 <__udivmoddi4+0x80>
    8884:	199b      	adds	r3, r3, r6
    8886:	1e51      	subs	r1, r2, #1
    8888:	429e      	cmp	r6, r3
    888a:	d900      	bls.n	888e <__udivmoddi4+0x76>
    888c:	e17c      	b.n	8b88 <__udivmoddi4+0x370>
    888e:	429d      	cmp	r5, r3
    8890:	d800      	bhi.n	8894 <__udivmoddi4+0x7c>
    8892:	e179      	b.n	8b88 <__udivmoddi4+0x370>
    8894:	3a02      	subs	r2, #2
    8896:	199b      	adds	r3, r3, r6
    8898:	1b59      	subs	r1, r3, r5
    889a:	fbb1 f3f7 	udiv	r3, r1, r7
    889e:	435c      	muls	r4, r3
    88a0:	435f      	muls	r7, r3
    88a2:	0025      	movs	r5, r4
    88a4:	1bc9      	subs	r1, r1, r7
    88a6:	f64f 74ff 	movw	r4, #65535	; 0xffff
    88aa:	465f      	mov	r7, fp
    88ac:	0409      	lsls	r1, r1, #16
    88ae:	403c      	ands	r4, r7
    88b0:	430c      	orrs	r4, r1
    88b2:	42a5      	cmp	r5, r4
    88b4:	d900      	bls.n	88b8 <__udivmoddi4+0xa0>
    88b6:	e15c      	b.n	8b72 <__udivmoddi4+0x35a>
    88b8:	0412      	lsls	r2, r2, #16
    88ba:	4313      	orrs	r3, r2
    88bc:	2200      	movs	r2, #0
    88be:	1b64      	subs	r4, r4, r5
    88c0:	9201      	str	r2, [sp, #4]
    88c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    88c4:	b12a      	cbz	r2, 88d2 <__udivmoddi4+0xba>
    88c6:	40c4      	lsrs	r4, r0
    88c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    88ca:	980c      	ldr	r0, [sp, #48]	; 0x30
    88cc:	6014      	str	r4, [r2, #0]
    88ce:	2200      	movs	r2, #0
    88d0:	6042      	str	r2, [r0, #4]
    88d2:	0018      	movs	r0, r3
    88d4:	e00a      	b.n	88ec <__udivmoddi4+0xd4>
    88d6:	4588      	cmp	r8, r1
    88d8:	d910      	bls.n	88fc <__udivmoddi4+0xe4>
    88da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    88dc:	2b00      	cmp	r3, #0
    88de:	d100      	bne.n	88e2 <__udivmoddi4+0xca>
    88e0:	e170      	b.n	8bc4 <__udivmoddi4+0x3ac>
    88e2:	6018      	str	r0, [r3, #0]
    88e4:	6059      	str	r1, [r3, #4]
    88e6:	2300      	movs	r3, #0
    88e8:	2000      	movs	r0, #0
    88ea:	9301      	str	r3, [sp, #4]
    88ec:	9901      	ldr	r1, [sp, #4]
    88ee:	b003      	add	sp, #12
    88f0:	bc3c      	pop	{r2, r3, r4, r5}
    88f2:	4690      	mov	r8, r2
    88f4:	4699      	mov	r9, r3
    88f6:	46a2      	mov	sl, r4
    88f8:	46ab      	mov	fp, r5
    88fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    88fc:	4640      	mov	r0, r8
    88fe:	f000 f967 	bl	8bd0 <__clzsi2>
    8902:	9001      	str	r0, [sp, #4]
    8904:	2800      	cmp	r0, #0
    8906:	d000      	beq.n	890a <__udivmoddi4+0xf2>
    8908:	e0a3      	b.n	8a52 <__udivmoddi4+0x23a>
    890a:	45a0      	cmp	r8, r4
    890c:	d302      	bcc.n	8914 <__udivmoddi4+0xfc>
    890e:	42af      	cmp	r7, r5
    8910:	d900      	bls.n	8914 <__udivmoddi4+0xfc>
    8912:	e151      	b.n	8bb8 <__udivmoddi4+0x3a0>
    8914:	1bef      	subs	r7, r5, r7
    8916:	4643      	mov	r3, r8
    8918:	42bd      	cmp	r5, r7
    891a:	41ad      	sbcs	r5, r5
    891c:	1ae4      	subs	r4, r4, r3
    891e:	426d      	negs	r5, r5
    8920:	1b63      	subs	r3, r4, r5
    8922:	469a      	mov	sl, r3
    8924:	2001      	movs	r0, #1
    8926:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8928:	2b00      	cmp	r3, #0
    892a:	d0df      	beq.n	88ec <__udivmoddi4+0xd4>
    892c:	4652      	mov	r2, sl
    892e:	601f      	str	r7, [r3, #0]
    8930:	605a      	str	r2, [r3, #4]
    8932:	e7db      	b.n	88ec <__udivmoddi4+0xd4>
    8934:	b917      	cbnz	r7, 893c <__udivmoddi4+0x124>
    8936:	3601      	adds	r6, #1
    8938:	fbb6 f6f7 	udiv	r6, r6, r7
    893c:	0030      	movs	r0, r6
    893e:	f000 f947 	bl	8bd0 <__clzsi2>
    8942:	bbb8      	cbnz	r0, 89b4 <__udivmoddi4+0x19c>
    8944:	f64f 77ff 	movw	r7, #65535	; 0xffff
    8948:	2301      	movs	r3, #1
    894a:	1ba5      	subs	r5, r4, r6
    894c:	4037      	ands	r7, r6
    894e:	0c34      	lsrs	r4, r6, #16
    8950:	9301      	str	r3, [sp, #4]
    8952:	fbb5 f3f4 	udiv	r3, r5, r4
    8956:	003a      	movs	r2, r7
    8958:	435a      	muls	r2, r3
    895a:	4694      	mov	ip, r2
    895c:	0022      	movs	r2, r4
    895e:	435a      	muls	r2, r3
    8960:	1aaa      	subs	r2, r5, r2
    8962:	465d      	mov	r5, fp
    8964:	0412      	lsls	r2, r2, #16
    8966:	0c2d      	lsrs	r5, r5, #16
    8968:	432a      	orrs	r2, r5
    896a:	4594      	cmp	ip, r2
    896c:	d907      	bls.n	897e <__udivmoddi4+0x166>
    896e:	1992      	adds	r2, r2, r6
    8970:	1e5d      	subs	r5, r3, #1
    8972:	4296      	cmp	r6, r2
    8974:	d802      	bhi.n	897c <__udivmoddi4+0x164>
    8976:	4594      	cmp	ip, r2
    8978:	d900      	bls.n	897c <__udivmoddi4+0x164>
    897a:	e120      	b.n	8bbe <__udivmoddi4+0x3a6>
    897c:	002b      	movs	r3, r5
    897e:	4665      	mov	r5, ip
    8980:	1b52      	subs	r2, r2, r5
    8982:	fbb2 f5f4 	udiv	r5, r2, r4
    8986:	436c      	muls	r4, r5
    8988:	4659      	mov	r1, fp
    898a:	1b12      	subs	r2, r2, r4
    898c:	f64f 74ff 	movw	r4, #65535	; 0xffff
    8990:	436f      	muls	r7, r5
    8992:	0412      	lsls	r2, r2, #16
    8994:	400c      	ands	r4, r1
    8996:	4314      	orrs	r4, r2
    8998:	42a7      	cmp	r7, r4
    899a:	d907      	bls.n	89ac <__udivmoddi4+0x194>
    899c:	19a4      	adds	r4, r4, r6
    899e:	1e6a      	subs	r2, r5, #1
    89a0:	42a6      	cmp	r6, r4
    89a2:	d802      	bhi.n	89aa <__udivmoddi4+0x192>
    89a4:	42a7      	cmp	r7, r4
    89a6:	d900      	bls.n	89aa <__udivmoddi4+0x192>
    89a8:	e103      	b.n	8bb2 <__udivmoddi4+0x39a>
    89aa:	0015      	movs	r5, r2
    89ac:	041b      	lsls	r3, r3, #16
    89ae:	1be4      	subs	r4, r4, r7
    89b0:	432b      	orrs	r3, r5
    89b2:	e786      	b.n	88c2 <__udivmoddi4+0xaa>
    89b4:	2120      	movs	r1, #32
    89b6:	002a      	movs	r2, r5
    89b8:	0023      	movs	r3, r4
    89ba:	1a09      	subs	r1, r1, r0
    89bc:	4086      	lsls	r6, r0
    89be:	4084      	lsls	r4, r0
    89c0:	40ca      	lsrs	r2, r1
    89c2:	40cb      	lsrs	r3, r1
    89c4:	4322      	orrs	r2, r4
    89c6:	0c34      	lsrs	r4, r6, #16
    89c8:	fbb3 f1f4 	udiv	r1, r3, r4
    89cc:	4085      	lsls	r5, r0
    89ce:	f64f 77ff 	movw	r7, #65535	; 0xffff
    89d2:	46ab      	mov	fp, r5
    89d4:	000d      	movs	r5, r1
    89d6:	4037      	ands	r7, r6
    89d8:	437d      	muls	r5, r7
    89da:	46ac      	mov	ip, r5
    89dc:	0025      	movs	r5, r4
    89de:	434d      	muls	r5, r1
    89e0:	1b5d      	subs	r5, r3, r5
    89e2:	042d      	lsls	r5, r5, #16
    89e4:	0c13      	lsrs	r3, r2, #16
    89e6:	4691      	mov	r9, r2
    89e8:	432b      	orrs	r3, r5
    89ea:	459c      	cmp	ip, r3
    89ec:	d909      	bls.n	8a02 <__udivmoddi4+0x1ea>
    89ee:	199b      	adds	r3, r3, r6
    89f0:	1e4d      	subs	r5, r1, #1
    89f2:	429e      	cmp	r6, r3
    89f4:	d900      	bls.n	89f8 <__udivmoddi4+0x1e0>
    89f6:	e0da      	b.n	8bae <__udivmoddi4+0x396>
    89f8:	459c      	cmp	ip, r3
    89fa:	d800      	bhi.n	89fe <__udivmoddi4+0x1e6>
    89fc:	e0d7      	b.n	8bae <__udivmoddi4+0x396>
    89fe:	3902      	subs	r1, #2
    8a00:	199b      	adds	r3, r3, r6
    8a02:	4662      	mov	r2, ip
    8a04:	1a9b      	subs	r3, r3, r2
    8a06:	fbb3 fcf4 	udiv	ip, r3, r4
    8a0a:	4662      	mov	r2, ip
    8a0c:	f64f 78ff 	movw	r8, #65535	; 0xffff
    8a10:	4362      	muls	r2, r4
    8a12:	1a9b      	subs	r3, r3, r2
    8a14:	041b      	lsls	r3, r3, #16
    8a16:	469a      	mov	sl, r3
    8a18:	4642      	mov	r2, r8
    8a1a:	464b      	mov	r3, r9
    8a1c:	4665      	mov	r5, ip
    8a1e:	401a      	ands	r2, r3
    8a20:	4653      	mov	r3, sl
    8a22:	437d      	muls	r5, r7
    8a24:	4313      	orrs	r3, r2
    8a26:	429d      	cmp	r5, r3
    8a28:	d90d      	bls.n	8a46 <__udivmoddi4+0x22e>
    8a2a:	4662      	mov	r2, ip
    8a2c:	199b      	adds	r3, r3, r6
    8a2e:	3a01      	subs	r2, #1
    8a30:	429e      	cmp	r6, r3
    8a32:	d900      	bls.n	8a36 <__udivmoddi4+0x21e>
    8a34:	e0b7      	b.n	8ba6 <__udivmoddi4+0x38e>
    8a36:	429d      	cmp	r5, r3
    8a38:	d800      	bhi.n	8a3c <__udivmoddi4+0x224>
    8a3a:	e0b4      	b.n	8ba6 <__udivmoddi4+0x38e>
    8a3c:	2202      	movs	r2, #2
    8a3e:	4252      	negs	r2, r2
    8a40:	4690      	mov	r8, r2
    8a42:	199b      	adds	r3, r3, r6
    8a44:	44c4      	add	ip, r8
    8a46:	1b5d      	subs	r5, r3, r5
    8a48:	4663      	mov	r3, ip
    8a4a:	0409      	lsls	r1, r1, #16
    8a4c:	4319      	orrs	r1, r3
    8a4e:	9101      	str	r1, [sp, #4]
    8a50:	e77f      	b.n	8952 <__udivmoddi4+0x13a>
    8a52:	2320      	movs	r3, #32
    8a54:	9801      	ldr	r0, [sp, #4]
    8a56:	003a      	movs	r2, r7
    8a58:	1a1b      	subs	r3, r3, r0
    8a5a:	469c      	mov	ip, r3
    8a5c:	4643      	mov	r3, r8
    8a5e:	4661      	mov	r1, ip
    8a60:	4083      	lsls	r3, r0
    8a62:	40ca      	lsrs	r2, r1
    8a64:	4313      	orrs	r3, r2
    8a66:	002a      	movs	r2, r5
    8a68:	0026      	movs	r6, r4
    8a6a:	40ca      	lsrs	r2, r1
    8a6c:	4084      	lsls	r4, r0
    8a6e:	40ce      	lsrs	r6, r1
    8a70:	4322      	orrs	r2, r4
    8a72:	0c1c      	lsrs	r4, r3, #16
    8a74:	4087      	lsls	r7, r0
    8a76:	4085      	lsls	r5, r0
    8a78:	fbb6 f0f4 	udiv	r0, r6, r4
    8a7c:	4691      	mov	r9, r2
    8a7e:	f64f 72ff 	movw	r2, #65535	; 0xffff
    8a82:	0001      	movs	r1, r0
    8a84:	401a      	ands	r2, r3
    8a86:	4351      	muls	r1, r2
    8a88:	4688      	mov	r8, r1
    8a8a:	0021      	movs	r1, r4
    8a8c:	4341      	muls	r1, r0
    8a8e:	1a76      	subs	r6, r6, r1
    8a90:	4649      	mov	r1, r9
    8a92:	0436      	lsls	r6, r6, #16
    8a94:	0c09      	lsrs	r1, r1, #16
    8a96:	430e      	orrs	r6, r1
    8a98:	45b0      	cmp	r8, r6
    8a9a:	d909      	bls.n	8ab0 <__udivmoddi4+0x298>
    8a9c:	1e41      	subs	r1, r0, #1
    8a9e:	18f6      	adds	r6, r6, r3
    8aa0:	468a      	mov	sl, r1
    8aa2:	42b3      	cmp	r3, r6
    8aa4:	d900      	bls.n	8aa8 <__udivmoddi4+0x290>
    8aa6:	e080      	b.n	8baa <__udivmoddi4+0x392>
    8aa8:	45b0      	cmp	r8, r6
    8aaa:	d97e      	bls.n	8baa <__udivmoddi4+0x392>
    8aac:	3802      	subs	r0, #2
    8aae:	18f6      	adds	r6, r6, r3
    8ab0:	4641      	mov	r1, r8
    8ab2:	1a76      	subs	r6, r6, r1
    8ab4:	fbb6 f8f4 	udiv	r8, r6, r4
    8ab8:	4641      	mov	r1, r8
    8aba:	434c      	muls	r4, r1
    8abc:	434a      	muls	r2, r1
    8abe:	1b36      	subs	r6, r6, r4
    8ac0:	4649      	mov	r1, r9
    8ac2:	f64f 74ff 	movw	r4, #65535	; 0xffff
    8ac6:	0436      	lsls	r6, r6, #16
    8ac8:	400c      	ands	r4, r1
    8aca:	4334      	orrs	r4, r6
    8acc:	42a2      	cmp	r2, r4
    8ace:	d90b      	bls.n	8ae8 <__udivmoddi4+0x2d0>
    8ad0:	4641      	mov	r1, r8
    8ad2:	18e4      	adds	r4, r4, r3
    8ad4:	1e4e      	subs	r6, r1, #1
    8ad6:	42a3      	cmp	r3, r4
    8ad8:	d863      	bhi.n	8ba2 <__udivmoddi4+0x38a>
    8ada:	42a2      	cmp	r2, r4
    8adc:	d961      	bls.n	8ba2 <__udivmoddi4+0x38a>
    8ade:	2102      	movs	r1, #2
    8ae0:	4249      	negs	r1, r1
    8ae2:	4689      	mov	r9, r1
    8ae4:	18e4      	adds	r4, r4, r3
    8ae6:	44c8      	add	r8, r9
    8ae8:	4641      	mov	r1, r8
    8aea:	f64f 76ff 	movw	r6, #65535	; 0xffff
    8aee:	0400      	lsls	r0, r0, #16
    8af0:	4308      	orrs	r0, r1
    8af2:	0031      	movs	r1, r6
    8af4:	4001      	ands	r1, r0
    8af6:	468a      	mov	sl, r1
    8af8:	0c01      	lsrs	r1, r0, #16
    8afa:	4688      	mov	r8, r1
    8afc:	4651      	mov	r1, sl
    8afe:	403e      	ands	r6, r7
    8b00:	4371      	muls	r1, r6
    8b02:	4689      	mov	r9, r1
    8b04:	4641      	mov	r1, r8
    8b06:	1aa2      	subs	r2, r4, r2
    8b08:	0c3c      	lsrs	r4, r7, #16
    8b0a:	434e      	muls	r6, r1
    8b0c:	4361      	muls	r1, r4
    8b0e:	4688      	mov	r8, r1
    8b10:	4651      	mov	r1, sl
    8b12:	434c      	muls	r4, r1
    8b14:	4649      	mov	r1, r9
    8b16:	0c09      	lsrs	r1, r1, #16
    8b18:	468a      	mov	sl, r1
    8b1a:	19a4      	adds	r4, r4, r6
    8b1c:	4454      	add	r4, sl
    8b1e:	42a6      	cmp	r6, r4
    8b20:	d903      	bls.n	8b2a <__udivmoddi4+0x312>
    8b22:	2180      	movs	r1, #128	; 0x80
    8b24:	0249      	lsls	r1, r1, #9
    8b26:	468a      	mov	sl, r1
    8b28:	44d0      	add	r8, sl
    8b2a:	0c26      	lsrs	r6, r4, #16
    8b2c:	4446      	add	r6, r8
    8b2e:	f64f 78ff 	movw	r8, #65535	; 0xffff
    8b32:	0421      	lsls	r1, r4, #16
    8b34:	468a      	mov	sl, r1
    8b36:	464c      	mov	r4, r9
    8b38:	4641      	mov	r1, r8
    8b3a:	4021      	ands	r1, r4
    8b3c:	4689      	mov	r9, r1
    8b3e:	4654      	mov	r4, sl
    8b40:	444c      	add	r4, r9
    8b42:	42b2      	cmp	r2, r6
    8b44:	d324      	bcc.n	8b90 <__udivmoddi4+0x378>
    8b46:	d021      	beq.n	8b8c <__udivmoddi4+0x374>
    8b48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8b4a:	b183      	cbz	r3, 8b6e <__udivmoddi4+0x356>
    8b4c:	1b2c      	subs	r4, r5, r4
    8b4e:	42a5      	cmp	r5, r4
    8b50:	41ad      	sbcs	r5, r5
    8b52:	1b92      	subs	r2, r2, r6
    8b54:	426d      	negs	r5, r5
    8b56:	1b52      	subs	r2, r2, r5
    8b58:	0013      	movs	r3, r2
    8b5a:	4661      	mov	r1, ip
    8b5c:	408b      	lsls	r3, r1
    8b5e:	9901      	ldr	r1, [sp, #4]
    8b60:	40cc      	lsrs	r4, r1
    8b62:	40ca      	lsrs	r2, r1
    8b64:	431c      	orrs	r4, r3
    8b66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8b68:	601c      	str	r4, [r3, #0]
    8b6a:	605a      	str	r2, [r3, #4]
    8b6c:	2300      	movs	r3, #0
    8b6e:	9301      	str	r3, [sp, #4]
    8b70:	e6bc      	b.n	88ec <__udivmoddi4+0xd4>
    8b72:	19a4      	adds	r4, r4, r6
    8b74:	1e59      	subs	r1, r3, #1
    8b76:	42a6      	cmp	r6, r4
    8b78:	d804      	bhi.n	8b84 <__udivmoddi4+0x36c>
    8b7a:	42a5      	cmp	r5, r4
    8b7c:	d902      	bls.n	8b84 <__udivmoddi4+0x36c>
    8b7e:	3b02      	subs	r3, #2
    8b80:	19a4      	adds	r4, r4, r6
    8b82:	e699      	b.n	88b8 <__udivmoddi4+0xa0>
    8b84:	000b      	movs	r3, r1
    8b86:	e697      	b.n	88b8 <__udivmoddi4+0xa0>
    8b88:	000a      	movs	r2, r1
    8b8a:	e685      	b.n	8898 <__udivmoddi4+0x80>
    8b8c:	42a5      	cmp	r5, r4
    8b8e:	d2db      	bcs.n	8b48 <__udivmoddi4+0x330>
    8b90:	1be7      	subs	r7, r4, r7
    8b92:	1af3      	subs	r3, r6, r3
    8b94:	42bc      	cmp	r4, r7
    8b96:	41b6      	sbcs	r6, r6
    8b98:	4276      	negs	r6, r6
    8b9a:	3801      	subs	r0, #1
    8b9c:	1b9e      	subs	r6, r3, r6
    8b9e:	003c      	movs	r4, r7
    8ba0:	e7d2      	b.n	8b48 <__udivmoddi4+0x330>
    8ba2:	46b0      	mov	r8, r6
    8ba4:	e7a0      	b.n	8ae8 <__udivmoddi4+0x2d0>
    8ba6:	4694      	mov	ip, r2
    8ba8:	e74d      	b.n	8a46 <__udivmoddi4+0x22e>
    8baa:	4650      	mov	r0, sl
    8bac:	e780      	b.n	8ab0 <__udivmoddi4+0x298>
    8bae:	0029      	movs	r1, r5
    8bb0:	e727      	b.n	8a02 <__udivmoddi4+0x1ea>
    8bb2:	3d02      	subs	r5, #2
    8bb4:	19a4      	adds	r4, r4, r6
    8bb6:	e6f9      	b.n	89ac <__udivmoddi4+0x194>
    8bb8:	2000      	movs	r0, #0
    8bba:	002f      	movs	r7, r5
    8bbc:	e6b3      	b.n	8926 <__udivmoddi4+0x10e>
    8bbe:	3b02      	subs	r3, #2
    8bc0:	1992      	adds	r2, r2, r6
    8bc2:	e6dc      	b.n	897e <__udivmoddi4+0x166>
    8bc4:	2300      	movs	r3, #0
    8bc6:	2000      	movs	r0, #0
    8bc8:	9301      	str	r3, [sp, #4]
    8bca:	e68f      	b.n	88ec <__udivmoddi4+0xd4>

00008bcc <__aeabi_idiv0>:
    8bcc:	4770      	bx	lr
    8bce:	46c0      	nop			; (mov r8, r8)

00008bd0 <__clzsi2>:
    8bd0:	211c      	movs	r1, #28
    8bd2:	2301      	movs	r3, #1
    8bd4:	041b      	lsls	r3, r3, #16
    8bd6:	4298      	cmp	r0, r3
    8bd8:	d301      	bcc.n	8bde <__clzsi2+0xe>
    8bda:	0c00      	lsrs	r0, r0, #16
    8bdc:	3910      	subs	r1, #16
    8bde:	0a1b      	lsrs	r3, r3, #8
    8be0:	4298      	cmp	r0, r3
    8be2:	d301      	bcc.n	8be8 <__clzsi2+0x18>
    8be4:	0a00      	lsrs	r0, r0, #8
    8be6:	3908      	subs	r1, #8
    8be8:	091b      	lsrs	r3, r3, #4
    8bea:	4298      	cmp	r0, r3
    8bec:	d301      	bcc.n	8bf2 <__clzsi2+0x22>
    8bee:	0900      	lsrs	r0, r0, #4
    8bf0:	3904      	subs	r1, #4
    8bf2:	a202      	add	r2, pc, #8	; (adr r2, 8bfc <__clzsi2+0x2c>)
    8bf4:	5c10      	ldrb	r0, [r2, r0]
    8bf6:	1840      	adds	r0, r0, r1
    8bf8:	4770      	bx	lr
    8bfa:	46c0      	nop			; (mov r8, r8)
    8bfc:	02020304 	.word	0x02020304
    8c00:	01010101 	.word	0x01010101
	...

00008c0c <__libc_init_array>:
    8c0c:	b570      	push	{r4, r5, r6, lr}
    8c0e:	2500      	movs	r5, #0
    8c10:	4b0e      	ldr	r3, [pc, #56]	; (8c4c <__libc_init_array+0x40>)
    8c12:	4c0f      	ldr	r4, [pc, #60]	; (8c50 <__libc_init_array+0x44>)
    8c14:	1ae4      	subs	r4, r4, r3
    8c16:	10a4      	asrs	r4, r4, #2
    8c18:	42a5      	cmp	r5, r4
    8c1a:	d109      	bne.n	8c30 <__libc_init_array+0x24>
    8c1c:	2500      	movs	r5, #0
    8c1e:	f000 fcfd 	bl	961c <_init>
    8c22:	4c0c      	ldr	r4, [pc, #48]	; (8c54 <__libc_init_array+0x48>)
    8c24:	4b0c      	ldr	r3, [pc, #48]	; (8c58 <__libc_init_array+0x4c>)
    8c26:	1ae4      	subs	r4, r4, r3
    8c28:	10a4      	asrs	r4, r4, #2
    8c2a:	42a5      	cmp	r5, r4
    8c2c:	d107      	bne.n	8c3e <__libc_init_array+0x32>
    8c2e:	bd70      	pop	{r4, r5, r6, pc}
    8c30:	4a06      	ldr	r2, [pc, #24]	; (8c4c <__libc_init_array+0x40>)
    8c32:	00ab      	lsls	r3, r5, #2
    8c34:	189b      	adds	r3, r3, r2
    8c36:	681b      	ldr	r3, [r3, #0]
    8c38:	4798      	blx	r3
    8c3a:	3501      	adds	r5, #1
    8c3c:	e7ec      	b.n	8c18 <__libc_init_array+0xc>
    8c3e:	4a06      	ldr	r2, [pc, #24]	; (8c58 <__libc_init_array+0x4c>)
    8c40:	00ab      	lsls	r3, r5, #2
    8c42:	189b      	adds	r3, r3, r2
    8c44:	681b      	ldr	r3, [r3, #0]
    8c46:	4798      	blx	r3
    8c48:	3501      	adds	r5, #1
    8c4a:	e7ee      	b.n	8c2a <__libc_init_array+0x1e>
    8c4c:	00009628 	.word	0x00009628
    8c50:	00009628 	.word	0x00009628
    8c54:	0000962c 	.word	0x0000962c
    8c58:	00009628 	.word	0x00009628

00008c5c <memcpy>:
    8c5c:	2300      	movs	r3, #0
    8c5e:	b510      	push	{r4, lr}
    8c60:	429a      	cmp	r2, r3
    8c62:	d100      	bne.n	8c66 <memcpy+0xa>
    8c64:	bd10      	pop	{r4, pc}
    8c66:	5ccc      	ldrb	r4, [r1, r3]
    8c68:	54c4      	strb	r4, [r0, r3]
    8c6a:	3301      	adds	r3, #1
    8c6c:	e7f8      	b.n	8c60 <memcpy+0x4>

00008c6e <memmove>:
    8c6e:	b510      	push	{r4, lr}
    8c70:	4288      	cmp	r0, r1
    8c72:	d902      	bls.n	8c7a <memmove+0xc>
    8c74:	188b      	adds	r3, r1, r2
    8c76:	4298      	cmp	r0, r3
    8c78:	d308      	bcc.n	8c8c <memmove+0x1e>
    8c7a:	2300      	movs	r3, #0
    8c7c:	429a      	cmp	r2, r3
    8c7e:	d007      	beq.n	8c90 <memmove+0x22>
    8c80:	5ccc      	ldrb	r4, [r1, r3]
    8c82:	54c4      	strb	r4, [r0, r3]
    8c84:	3301      	adds	r3, #1
    8c86:	e7f9      	b.n	8c7c <memmove+0xe>
    8c88:	5c8b      	ldrb	r3, [r1, r2]
    8c8a:	5483      	strb	r3, [r0, r2]
    8c8c:	3a01      	subs	r2, #1
    8c8e:	d2fb      	bcs.n	8c88 <memmove+0x1a>
    8c90:	bd10      	pop	{r4, pc}

00008c92 <memset>:
    8c92:	0003      	movs	r3, r0
    8c94:	1882      	adds	r2, r0, r2
    8c96:	4293      	cmp	r3, r2
    8c98:	d100      	bne.n	8c9c <memset+0xa>
    8c9a:	4770      	bx	lr
    8c9c:	7019      	strb	r1, [r3, #0]
    8c9e:	3301      	adds	r3, #1
    8ca0:	e7f9      	b.n	8c96 <memset+0x4>
	...

00008ca4 <_free_r>:
    8ca4:	b570      	push	{r4, r5, r6, lr}
    8ca6:	0005      	movs	r5, r0
    8ca8:	b181      	cbz	r1, 8ccc <_free_r+0x28>
    8caa:	1f0c      	subs	r4, r1, #4
    8cac:	6823      	ldr	r3, [r4, #0]
    8cae:	2b00      	cmp	r3, #0
    8cb0:	da00      	bge.n	8cb4 <_free_r+0x10>
    8cb2:	18e4      	adds	r4, r4, r3
    8cb4:	0028      	movs	r0, r5
    8cb6:	f000 f8cf 	bl	8e58 <__malloc_lock>
    8cba:	4a1e      	ldr	r2, [pc, #120]	; (8d34 <_free_r+0x90>)
    8cbc:	6813      	ldr	r3, [r2, #0]
    8cbe:	0011      	movs	r1, r2
    8cc0:	b92b      	cbnz	r3, 8cce <_free_r+0x2a>
    8cc2:	6063      	str	r3, [r4, #4]
    8cc4:	6014      	str	r4, [r2, #0]
    8cc6:	0028      	movs	r0, r5
    8cc8:	f000 f8c7 	bl	8e5a <__malloc_unlock>
    8ccc:	bd70      	pop	{r4, r5, r6, pc}
    8cce:	42a3      	cmp	r3, r4
    8cd0:	d90b      	bls.n	8cea <_free_r+0x46>
    8cd2:	6822      	ldr	r2, [r4, #0]
    8cd4:	18a0      	adds	r0, r4, r2
    8cd6:	4283      	cmp	r3, r0
    8cd8:	d103      	bne.n	8ce2 <_free_r+0x3e>
    8cda:	6818      	ldr	r0, [r3, #0]
    8cdc:	685b      	ldr	r3, [r3, #4]
    8cde:	1882      	adds	r2, r0, r2
    8ce0:	6022      	str	r2, [r4, #0]
    8ce2:	6063      	str	r3, [r4, #4]
    8ce4:	600c      	str	r4, [r1, #0]
    8ce6:	e7ee      	b.n	8cc6 <_free_r+0x22>
    8ce8:	0013      	movs	r3, r2
    8cea:	685a      	ldr	r2, [r3, #4]
    8cec:	b10a      	cbz	r2, 8cf2 <_free_r+0x4e>
    8cee:	42a2      	cmp	r2, r4
    8cf0:	d9fa      	bls.n	8ce8 <_free_r+0x44>
    8cf2:	6819      	ldr	r1, [r3, #0]
    8cf4:	1858      	adds	r0, r3, r1
    8cf6:	42a0      	cmp	r0, r4
    8cf8:	d10b      	bne.n	8d12 <_free_r+0x6e>
    8cfa:	6820      	ldr	r0, [r4, #0]
    8cfc:	1809      	adds	r1, r1, r0
    8cfe:	1858      	adds	r0, r3, r1
    8d00:	6019      	str	r1, [r3, #0]
    8d02:	4282      	cmp	r2, r0
    8d04:	d1df      	bne.n	8cc6 <_free_r+0x22>
    8d06:	6810      	ldr	r0, [r2, #0]
    8d08:	6852      	ldr	r2, [r2, #4]
    8d0a:	1841      	adds	r1, r0, r1
    8d0c:	6019      	str	r1, [r3, #0]
    8d0e:	605a      	str	r2, [r3, #4]
    8d10:	e7d9      	b.n	8cc6 <_free_r+0x22>
    8d12:	42a0      	cmp	r0, r4
    8d14:	d902      	bls.n	8d1c <_free_r+0x78>
    8d16:	230c      	movs	r3, #12
    8d18:	602b      	str	r3, [r5, #0]
    8d1a:	e7d4      	b.n	8cc6 <_free_r+0x22>
    8d1c:	6821      	ldr	r1, [r4, #0]
    8d1e:	1860      	adds	r0, r4, r1
    8d20:	4282      	cmp	r2, r0
    8d22:	d103      	bne.n	8d2c <_free_r+0x88>
    8d24:	6810      	ldr	r0, [r2, #0]
    8d26:	6852      	ldr	r2, [r2, #4]
    8d28:	1841      	adds	r1, r0, r1
    8d2a:	6021      	str	r1, [r4, #0]
    8d2c:	6062      	str	r2, [r4, #4]
    8d2e:	605c      	str	r4, [r3, #4]
    8d30:	e7c9      	b.n	8cc6 <_free_r+0x22>
    8d32:	46c0      	nop			; (mov r8, r8)
    8d34:	200020a4 	.word	0x200020a4

00008d38 <_malloc_r>:
    8d38:	2303      	movs	r3, #3
    8d3a:	b570      	push	{r4, r5, r6, lr}
    8d3c:	1ccd      	adds	r5, r1, #3
    8d3e:	439d      	bics	r5, r3
    8d40:	3508      	adds	r5, #8
    8d42:	0006      	movs	r6, r0
    8d44:	2d0c      	cmp	r5, #12
    8d46:	d21c      	bcs.n	8d82 <_malloc_r+0x4a>
    8d48:	250c      	movs	r5, #12
    8d4a:	42a9      	cmp	r1, r5
    8d4c:	d81b      	bhi.n	8d86 <_malloc_r+0x4e>
    8d4e:	0030      	movs	r0, r6
    8d50:	f000 f882 	bl	8e58 <__malloc_lock>
    8d54:	4a25      	ldr	r2, [pc, #148]	; (8dec <_malloc_r+0xb4>)
    8d56:	6814      	ldr	r4, [r2, #0]
    8d58:	0021      	movs	r1, r4
    8d5a:	b9c1      	cbnz	r1, 8d8e <_malloc_r+0x56>
    8d5c:	4c24      	ldr	r4, [pc, #144]	; (8df0 <_malloc_r+0xb8>)
    8d5e:	6823      	ldr	r3, [r4, #0]
    8d60:	b91b      	cbnz	r3, 8d6a <_malloc_r+0x32>
    8d62:	0030      	movs	r0, r6
    8d64:	f000 f846 	bl	8df4 <_sbrk_r>
    8d68:	6020      	str	r0, [r4, #0]
    8d6a:	0029      	movs	r1, r5
    8d6c:	0030      	movs	r0, r6
    8d6e:	f000 f841 	bl	8df4 <_sbrk_r>
    8d72:	1c43      	adds	r3, r0, #1
    8d74:	d12d      	bne.n	8dd2 <_malloc_r+0x9a>
    8d76:	230c      	movs	r3, #12
    8d78:	0030      	movs	r0, r6
    8d7a:	6033      	str	r3, [r6, #0]
    8d7c:	f000 f86d 	bl	8e5a <__malloc_unlock>
    8d80:	e003      	b.n	8d8a <_malloc_r+0x52>
    8d82:	2d00      	cmp	r5, #0
    8d84:	dae1      	bge.n	8d4a <_malloc_r+0x12>
    8d86:	230c      	movs	r3, #12
    8d88:	6033      	str	r3, [r6, #0]
    8d8a:	2000      	movs	r0, #0
    8d8c:	bd70      	pop	{r4, r5, r6, pc}
    8d8e:	680b      	ldr	r3, [r1, #0]
    8d90:	1b5b      	subs	r3, r3, r5
    8d92:	d41b      	bmi.n	8dcc <_malloc_r+0x94>
    8d94:	2b0b      	cmp	r3, #11
    8d96:	d903      	bls.n	8da0 <_malloc_r+0x68>
    8d98:	600b      	str	r3, [r1, #0]
    8d9a:	18cc      	adds	r4, r1, r3
    8d9c:	6025      	str	r5, [r4, #0]
    8d9e:	e003      	b.n	8da8 <_malloc_r+0x70>
    8da0:	428c      	cmp	r4, r1
    8da2:	d10f      	bne.n	8dc4 <_malloc_r+0x8c>
    8da4:	6863      	ldr	r3, [r4, #4]
    8da6:	6013      	str	r3, [r2, #0]
    8da8:	0030      	movs	r0, r6
    8daa:	f000 f856 	bl	8e5a <__malloc_unlock>
    8dae:	0020      	movs	r0, r4
    8db0:	2207      	movs	r2, #7
    8db2:	300b      	adds	r0, #11
    8db4:	1d23      	adds	r3, r4, #4
    8db6:	4390      	bics	r0, r2
    8db8:	1ac3      	subs	r3, r0, r3
    8dba:	2b00      	cmp	r3, #0
    8dbc:	d0e6      	beq.n	8d8c <_malloc_r+0x54>
    8dbe:	425a      	negs	r2, r3
    8dc0:	50e2      	str	r2, [r4, r3]
    8dc2:	e7e3      	b.n	8d8c <_malloc_r+0x54>
    8dc4:	684b      	ldr	r3, [r1, #4]
    8dc6:	6063      	str	r3, [r4, #4]
    8dc8:	000c      	movs	r4, r1
    8dca:	e7ed      	b.n	8da8 <_malloc_r+0x70>
    8dcc:	000c      	movs	r4, r1
    8dce:	6849      	ldr	r1, [r1, #4]
    8dd0:	e7c3      	b.n	8d5a <_malloc_r+0x22>
    8dd2:	2303      	movs	r3, #3
    8dd4:	1cc4      	adds	r4, r0, #3
    8dd6:	439c      	bics	r4, r3
    8dd8:	42a0      	cmp	r0, r4
    8dda:	d0df      	beq.n	8d9c <_malloc_r+0x64>
    8ddc:	1a21      	subs	r1, r4, r0
    8dde:	0030      	movs	r0, r6
    8de0:	f000 f808 	bl	8df4 <_sbrk_r>
    8de4:	1c43      	adds	r3, r0, #1
    8de6:	d1d9      	bne.n	8d9c <_malloc_r+0x64>
    8de8:	e7c5      	b.n	8d76 <_malloc_r+0x3e>
    8dea:	46c0      	nop			; (mov r8, r8)
    8dec:	200020a4 	.word	0x200020a4
    8df0:	200020a8 	.word	0x200020a8

00008df4 <_sbrk_r>:
    8df4:	2300      	movs	r3, #0
    8df6:	b570      	push	{r4, r5, r6, lr}
    8df8:	4c05      	ldr	r4, [pc, #20]	; (8e10 <_sbrk_r+0x1c>)
    8dfa:	0005      	movs	r5, r0
    8dfc:	0008      	movs	r0, r1
    8dfe:	6023      	str	r3, [r4, #0]
    8e00:	f000 fb42 	bl	9488 <_sbrk>
    8e04:	1c43      	adds	r3, r0, #1
    8e06:	d102      	bne.n	8e0e <_sbrk_r+0x1a>
    8e08:	6823      	ldr	r3, [r4, #0]
    8e0a:	b103      	cbz	r3, 8e0e <_sbrk_r+0x1a>
    8e0c:	602b      	str	r3, [r5, #0]
    8e0e:	bd70      	pop	{r4, r5, r6, pc}
    8e10:	200024d0 	.word	0x200024d0

00008e14 <siprintf>:
    8e14:	b40e      	push	{r1, r2, r3}
    8e16:	b510      	push	{r4, lr}
    8e18:	b09d      	sub	sp, #116	; 0x74
    8e1a:	a902      	add	r1, sp, #8
    8e1c:	9002      	str	r0, [sp, #8]
    8e1e:	6108      	str	r0, [r1, #16]
    8e20:	480b      	ldr	r0, [pc, #44]	; (8e50 <siprintf+0x3c>)
    8e22:	f240 2408 	movw	r4, #520	; 0x208
    8e26:	6088      	str	r0, [r1, #8]
    8e28:	6148      	str	r0, [r1, #20]
    8e2a:	2001      	movs	r0, #1
    8e2c:	4240      	negs	r0, r0
    8e2e:	ab1f      	add	r3, sp, #124	; 0x7c
    8e30:	81c8      	strh	r0, [r1, #14]
    8e32:	4808      	ldr	r0, [pc, #32]	; (8e54 <siprintf+0x40>)
    8e34:	cb04      	ldmia	r3!, {r2}
    8e36:	6800      	ldr	r0, [r0, #0]
    8e38:	9301      	str	r3, [sp, #4]
    8e3a:	818c      	strh	r4, [r1, #12]
    8e3c:	f000 f870 	bl	8f20 <_svfiprintf_r>
    8e40:	2300      	movs	r3, #0
    8e42:	9a02      	ldr	r2, [sp, #8]
    8e44:	7013      	strb	r3, [r2, #0]
    8e46:	b01d      	add	sp, #116	; 0x74
    8e48:	bc10      	pop	{r4}
    8e4a:	bc08      	pop	{r3}
    8e4c:	b003      	add	sp, #12
    8e4e:	4718      	bx	r3
    8e50:	7fffffff 	.word	0x7fffffff
    8e54:	20002000 	.word	0x20002000

00008e58 <__malloc_lock>:
    8e58:	4770      	bx	lr

00008e5a <__malloc_unlock>:
    8e5a:	4770      	bx	lr

00008e5c <__ssputs_r>:
    8e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
    8e5e:	688e      	ldr	r6, [r1, #8]
    8e60:	b085      	sub	sp, #20
    8e62:	0007      	movs	r7, r0
    8e64:	000c      	movs	r4, r1
    8e66:	9203      	str	r2, [sp, #12]
    8e68:	9301      	str	r3, [sp, #4]
    8e6a:	429e      	cmp	r6, r3
    8e6c:	d839      	bhi.n	8ee2 <__ssputs_r+0x86>
    8e6e:	f240 4380 	movw	r3, #1152	; 0x480
    8e72:	898a      	ldrh	r2, [r1, #12]
    8e74:	421a      	tst	r2, r3
    8e76:	d034      	beq.n	8ee2 <__ssputs_r+0x86>
    8e78:	2503      	movs	r5, #3
    8e7a:	6909      	ldr	r1, [r1, #16]
    8e7c:	6823      	ldr	r3, [r4, #0]
    8e7e:	1a5b      	subs	r3, r3, r1
    8e80:	9302      	str	r3, [sp, #8]
    8e82:	6963      	ldr	r3, [r4, #20]
    8e84:	9802      	ldr	r0, [sp, #8]
    8e86:	435d      	muls	r5, r3
    8e88:	0feb      	lsrs	r3, r5, #31
    8e8a:	195d      	adds	r5, r3, r5
    8e8c:	9b01      	ldr	r3, [sp, #4]
    8e8e:	106d      	asrs	r5, r5, #1
    8e90:	3301      	adds	r3, #1
    8e92:	181b      	adds	r3, r3, r0
    8e94:	42ab      	cmp	r3, r5
    8e96:	d900      	bls.n	8e9a <__ssputs_r+0x3e>
    8e98:	001d      	movs	r5, r3
    8e9a:	0553      	lsls	r3, r2, #21
    8e9c:	d532      	bpl.n	8f04 <__ssputs_r+0xa8>
    8e9e:	0029      	movs	r1, r5
    8ea0:	0038      	movs	r0, r7
    8ea2:	f7ff ff49 	bl	8d38 <_malloc_r>
    8ea6:	0006      	movs	r6, r0
    8ea8:	b948      	cbnz	r0, 8ebe <__ssputs_r+0x62>
    8eaa:	230c      	movs	r3, #12
    8eac:	603b      	str	r3, [r7, #0]
    8eae:	2340      	movs	r3, #64	; 0x40
    8eb0:	2001      	movs	r0, #1
    8eb2:	89a2      	ldrh	r2, [r4, #12]
    8eb4:	4240      	negs	r0, r0
    8eb6:	4313      	orrs	r3, r2
    8eb8:	81a3      	strh	r3, [r4, #12]
    8eba:	b005      	add	sp, #20
    8ebc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8ebe:	9a02      	ldr	r2, [sp, #8]
    8ec0:	6921      	ldr	r1, [r4, #16]
    8ec2:	f7ff fecb 	bl	8c5c <memcpy>
    8ec6:	89a3      	ldrh	r3, [r4, #12]
    8ec8:	4a14      	ldr	r2, [pc, #80]	; (8f1c <__ssputs_r+0xc0>)
    8eca:	401a      	ands	r2, r3
    8ecc:	2380      	movs	r3, #128	; 0x80
    8ece:	4313      	orrs	r3, r2
    8ed0:	81a3      	strh	r3, [r4, #12]
    8ed2:	9b02      	ldr	r3, [sp, #8]
    8ed4:	6126      	str	r6, [r4, #16]
    8ed6:	18f6      	adds	r6, r6, r3
    8ed8:	6026      	str	r6, [r4, #0]
    8eda:	6165      	str	r5, [r4, #20]
    8edc:	9e01      	ldr	r6, [sp, #4]
    8ede:	1aed      	subs	r5, r5, r3
    8ee0:	60a5      	str	r5, [r4, #8]
    8ee2:	9b01      	ldr	r3, [sp, #4]
    8ee4:	42b3      	cmp	r3, r6
    8ee6:	d200      	bcs.n	8eea <__ssputs_r+0x8e>
    8ee8:	001e      	movs	r6, r3
    8eea:	0032      	movs	r2, r6
    8eec:	9903      	ldr	r1, [sp, #12]
    8eee:	6820      	ldr	r0, [r4, #0]
    8ef0:	f7ff febd 	bl	8c6e <memmove>
    8ef4:	68a3      	ldr	r3, [r4, #8]
    8ef6:	2000      	movs	r0, #0
    8ef8:	1b9b      	subs	r3, r3, r6
    8efa:	60a3      	str	r3, [r4, #8]
    8efc:	6823      	ldr	r3, [r4, #0]
    8efe:	199e      	adds	r6, r3, r6
    8f00:	6026      	str	r6, [r4, #0]
    8f02:	e7da      	b.n	8eba <__ssputs_r+0x5e>
    8f04:	002a      	movs	r2, r5
    8f06:	0038      	movs	r0, r7
    8f08:	f000 fa91 	bl	942e <_realloc_r>
    8f0c:	0006      	movs	r6, r0
    8f0e:	2800      	cmp	r0, #0
    8f10:	d1df      	bne.n	8ed2 <__ssputs_r+0x76>
    8f12:	6921      	ldr	r1, [r4, #16]
    8f14:	0038      	movs	r0, r7
    8f16:	f7ff fec5 	bl	8ca4 <_free_r>
    8f1a:	e7c6      	b.n	8eaa <__ssputs_r+0x4e>
    8f1c:	fffffb7f 	.word	0xfffffb7f

00008f20 <_svfiprintf_r>:
    8f20:	b5f0      	push	{r4, r5, r6, r7, lr}
    8f22:	b09f      	sub	sp, #124	; 0x7c
    8f24:	9002      	str	r0, [sp, #8]
    8f26:	9305      	str	r3, [sp, #20]
    8f28:	898b      	ldrh	r3, [r1, #12]
    8f2a:	000f      	movs	r7, r1
    8f2c:	0016      	movs	r6, r2
    8f2e:	061b      	lsls	r3, r3, #24
    8f30:	d50f      	bpl.n	8f52 <_svfiprintf_r+0x32>
    8f32:	690b      	ldr	r3, [r1, #16]
    8f34:	b96b      	cbnz	r3, 8f52 <_svfiprintf_r+0x32>
    8f36:	2140      	movs	r1, #64	; 0x40
    8f38:	f7ff fefe 	bl	8d38 <_malloc_r>
    8f3c:	6038      	str	r0, [r7, #0]
    8f3e:	6138      	str	r0, [r7, #16]
    8f40:	b928      	cbnz	r0, 8f4e <_svfiprintf_r+0x2e>
    8f42:	230c      	movs	r3, #12
    8f44:	9a02      	ldr	r2, [sp, #8]
    8f46:	3801      	subs	r0, #1
    8f48:	6013      	str	r3, [r2, #0]
    8f4a:	b01f      	add	sp, #124	; 0x7c
    8f4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8f4e:	2340      	movs	r3, #64	; 0x40
    8f50:	617b      	str	r3, [r7, #20]
    8f52:	2300      	movs	r3, #0
    8f54:	ad06      	add	r5, sp, #24
    8f56:	616b      	str	r3, [r5, #20]
    8f58:	3320      	adds	r3, #32
    8f5a:	766b      	strb	r3, [r5, #25]
    8f5c:	3310      	adds	r3, #16
    8f5e:	76ab      	strb	r3, [r5, #26]
    8f60:	0034      	movs	r4, r6
    8f62:	7823      	ldrb	r3, [r4, #0]
    8f64:	2b00      	cmp	r3, #0
    8f66:	d146      	bne.n	8ff6 <_svfiprintf_r+0xd6>
    8f68:	1ba3      	subs	r3, r4, r6
    8f6a:	9304      	str	r3, [sp, #16]
    8f6c:	b16b      	cbz	r3, 8f8a <_svfiprintf_r+0x6a>
    8f6e:	1ba3      	subs	r3, r4, r6
    8f70:	0032      	movs	r2, r6
    8f72:	0039      	movs	r1, r7
    8f74:	9802      	ldr	r0, [sp, #8]
    8f76:	f7ff ff71 	bl	8e5c <__ssputs_r>
    8f7a:	1c43      	adds	r3, r0, #1
    8f7c:	d100      	bne.n	8f80 <_svfiprintf_r+0x60>
    8f7e:	e0b3      	b.n	90e8 <_svfiprintf_r+0x1c8>
    8f80:	696a      	ldr	r2, [r5, #20]
    8f82:	9b04      	ldr	r3, [sp, #16]
    8f84:	4694      	mov	ip, r2
    8f86:	4463      	add	r3, ip
    8f88:	616b      	str	r3, [r5, #20]
    8f8a:	7823      	ldrb	r3, [r4, #0]
    8f8c:	2b00      	cmp	r3, #0
    8f8e:	d100      	bne.n	8f92 <_svfiprintf_r+0x72>
    8f90:	e0aa      	b.n	90e8 <_svfiprintf_r+0x1c8>
    8f92:	2201      	movs	r2, #1
    8f94:	2300      	movs	r3, #0
    8f96:	4252      	negs	r2, r2
    8f98:	606a      	str	r2, [r5, #4]
    8f9a:	a902      	add	r1, sp, #8
    8f9c:	3254      	adds	r2, #84	; 0x54
    8f9e:	1852      	adds	r2, r2, r1
    8fa0:	3401      	adds	r4, #1
    8fa2:	602b      	str	r3, [r5, #0]
    8fa4:	60eb      	str	r3, [r5, #12]
    8fa6:	60ab      	str	r3, [r5, #8]
    8fa8:	7013      	strb	r3, [r2, #0]
    8faa:	65ab      	str	r3, [r5, #88]	; 0x58
    8fac:	4e57      	ldr	r6, [pc, #348]	; (910c <_svfiprintf_r+0x1ec>)
    8fae:	2205      	movs	r2, #5
    8fb0:	7821      	ldrb	r1, [r4, #0]
    8fb2:	0030      	movs	r0, r6
    8fb4:	f000 fa30 	bl	9418 <memchr>
    8fb8:	1c62      	adds	r2, r4, #1
    8fba:	bb00      	cbnz	r0, 8ffe <_svfiprintf_r+0xde>
    8fbc:	6829      	ldr	r1, [r5, #0]
    8fbe:	06cb      	lsls	r3, r1, #27
    8fc0:	d504      	bpl.n	8fcc <_svfiprintf_r+0xac>
    8fc2:	2353      	movs	r3, #83	; 0x53
    8fc4:	ae02      	add	r6, sp, #8
    8fc6:	3020      	adds	r0, #32
    8fc8:	199b      	adds	r3, r3, r6
    8fca:	7018      	strb	r0, [r3, #0]
    8fcc:	070b      	lsls	r3, r1, #28
    8fce:	d504      	bpl.n	8fda <_svfiprintf_r+0xba>
    8fd0:	2353      	movs	r3, #83	; 0x53
    8fd2:	202b      	movs	r0, #43	; 0x2b
    8fd4:	ae02      	add	r6, sp, #8
    8fd6:	199b      	adds	r3, r3, r6
    8fd8:	7018      	strb	r0, [r3, #0]
    8fda:	7823      	ldrb	r3, [r4, #0]
    8fdc:	2b2a      	cmp	r3, #42	; 0x2a
    8fde:	d016      	beq.n	900e <_svfiprintf_r+0xee>
    8fe0:	2100      	movs	r1, #0
    8fe2:	200a      	movs	r0, #10
    8fe4:	2601      	movs	r6, #1
    8fe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8fe8:	7822      	ldrb	r2, [r4, #0]
    8fea:	3a30      	subs	r2, #48	; 0x30
    8fec:	2a09      	cmp	r2, #9
    8fee:	d952      	bls.n	9096 <_svfiprintf_r+0x176>
    8ff0:	b1a9      	cbz	r1, 901e <_svfiprintf_r+0xfe>
    8ff2:	9309      	str	r3, [sp, #36]	; 0x24
    8ff4:	e013      	b.n	901e <_svfiprintf_r+0xfe>
    8ff6:	2b25      	cmp	r3, #37	; 0x25
    8ff8:	d0b6      	beq.n	8f68 <_svfiprintf_r+0x48>
    8ffa:	3401      	adds	r4, #1
    8ffc:	e7b1      	b.n	8f62 <_svfiprintf_r+0x42>
    8ffe:	2301      	movs	r3, #1
    9000:	1b80      	subs	r0, r0, r6
    9002:	4083      	lsls	r3, r0
    9004:	6829      	ldr	r1, [r5, #0]
    9006:	0014      	movs	r4, r2
    9008:	430b      	orrs	r3, r1
    900a:	602b      	str	r3, [r5, #0]
    900c:	e7ce      	b.n	8fac <_svfiprintf_r+0x8c>
    900e:	9b05      	ldr	r3, [sp, #20]
    9010:	1d18      	adds	r0, r3, #4
    9012:	681b      	ldr	r3, [r3, #0]
    9014:	9005      	str	r0, [sp, #20]
    9016:	2b00      	cmp	r3, #0
    9018:	db37      	blt.n	908a <_svfiprintf_r+0x16a>
    901a:	9309      	str	r3, [sp, #36]	; 0x24
    901c:	0014      	movs	r4, r2
    901e:	7823      	ldrb	r3, [r4, #0]
    9020:	2b2e      	cmp	r3, #46	; 0x2e
    9022:	d10b      	bne.n	903c <_svfiprintf_r+0x11c>
    9024:	7863      	ldrb	r3, [r4, #1]
    9026:	1c62      	adds	r2, r4, #1
    9028:	2b2a      	cmp	r3, #42	; 0x2a
    902a:	d13c      	bne.n	90a6 <_svfiprintf_r+0x186>
    902c:	9b05      	ldr	r3, [sp, #20]
    902e:	3402      	adds	r4, #2
    9030:	1d1a      	adds	r2, r3, #4
    9032:	681b      	ldr	r3, [r3, #0]
    9034:	9205      	str	r2, [sp, #20]
    9036:	2b00      	cmp	r3, #0
    9038:	db32      	blt.n	90a0 <_svfiprintf_r+0x180>
    903a:	9307      	str	r3, [sp, #28]
    903c:	4e34      	ldr	r6, [pc, #208]	; (9110 <_svfiprintf_r+0x1f0>)
    903e:	7821      	ldrb	r1, [r4, #0]
    9040:	2203      	movs	r2, #3
    9042:	0030      	movs	r0, r6
    9044:	f000 f9e8 	bl	9418 <memchr>
    9048:	b130      	cbz	r0, 9058 <_svfiprintf_r+0x138>
    904a:	2340      	movs	r3, #64	; 0x40
    904c:	1b80      	subs	r0, r0, r6
    904e:	4083      	lsls	r3, r0
    9050:	682a      	ldr	r2, [r5, #0]
    9052:	3401      	adds	r4, #1
    9054:	4313      	orrs	r3, r2
    9056:	602b      	str	r3, [r5, #0]
    9058:	7821      	ldrb	r1, [r4, #0]
    905a:	2206      	movs	r2, #6
    905c:	482d      	ldr	r0, [pc, #180]	; (9114 <_svfiprintf_r+0x1f4>)
    905e:	1c66      	adds	r6, r4, #1
    9060:	7629      	strb	r1, [r5, #24]
    9062:	f000 f9d9 	bl	9418 <memchr>
    9066:	2800      	cmp	r0, #0
    9068:	d046      	beq.n	90f8 <_svfiprintf_r+0x1d8>
    906a:	4b2b      	ldr	r3, [pc, #172]	; (9118 <_svfiprintf_r+0x1f8>)
    906c:	bb83      	cbnz	r3, 90d0 <_svfiprintf_r+0x1b0>
    906e:	6829      	ldr	r1, [r5, #0]
    9070:	9b05      	ldr	r3, [sp, #20]
    9072:	2207      	movs	r2, #7
    9074:	05c9      	lsls	r1, r1, #23
    9076:	d529      	bpl.n	90cc <_svfiprintf_r+0x1ac>
    9078:	189b      	adds	r3, r3, r2
    907a:	4393      	bics	r3, r2
    907c:	3308      	adds	r3, #8
    907e:	9305      	str	r3, [sp, #20]
    9080:	696b      	ldr	r3, [r5, #20]
    9082:	9a03      	ldr	r2, [sp, #12]
    9084:	189b      	adds	r3, r3, r2
    9086:	616b      	str	r3, [r5, #20]
    9088:	e76a      	b.n	8f60 <_svfiprintf_r+0x40>
    908a:	425b      	negs	r3, r3
    908c:	60eb      	str	r3, [r5, #12]
    908e:	2302      	movs	r3, #2
    9090:	430b      	orrs	r3, r1
    9092:	602b      	str	r3, [r5, #0]
    9094:	e7c2      	b.n	901c <_svfiprintf_r+0xfc>
    9096:	4343      	muls	r3, r0
    9098:	3401      	adds	r4, #1
    909a:	189b      	adds	r3, r3, r2
    909c:	0031      	movs	r1, r6
    909e:	e7a3      	b.n	8fe8 <_svfiprintf_r+0xc8>
    90a0:	2301      	movs	r3, #1
    90a2:	425b      	negs	r3, r3
    90a4:	e7c9      	b.n	903a <_svfiprintf_r+0x11a>
    90a6:	2300      	movs	r3, #0
    90a8:	0014      	movs	r4, r2
    90aa:	200a      	movs	r0, #10
    90ac:	001a      	movs	r2, r3
    90ae:	2601      	movs	r6, #1
    90b0:	606b      	str	r3, [r5, #4]
    90b2:	7821      	ldrb	r1, [r4, #0]
    90b4:	3930      	subs	r1, #48	; 0x30
    90b6:	2909      	cmp	r1, #9
    90b8:	d903      	bls.n	90c2 <_svfiprintf_r+0x1a2>
    90ba:	2b00      	cmp	r3, #0
    90bc:	d0be      	beq.n	903c <_svfiprintf_r+0x11c>
    90be:	9207      	str	r2, [sp, #28]
    90c0:	e7bc      	b.n	903c <_svfiprintf_r+0x11c>
    90c2:	4342      	muls	r2, r0
    90c4:	3401      	adds	r4, #1
    90c6:	1852      	adds	r2, r2, r1
    90c8:	0033      	movs	r3, r6
    90ca:	e7f2      	b.n	90b2 <_svfiprintf_r+0x192>
    90cc:	3307      	adds	r3, #7
    90ce:	e7d4      	b.n	907a <_svfiprintf_r+0x15a>
    90d0:	ab05      	add	r3, sp, #20
    90d2:	9300      	str	r3, [sp, #0]
    90d4:	003a      	movs	r2, r7
    90d6:	4b11      	ldr	r3, [pc, #68]	; (911c <_svfiprintf_r+0x1fc>)
    90d8:	0029      	movs	r1, r5
    90da:	9802      	ldr	r0, [sp, #8]
    90dc:	e000      	b.n	90e0 <_svfiprintf_r+0x1c0>
    90de:	bf00      	nop
    90e0:	9003      	str	r0, [sp, #12]
    90e2:	9b03      	ldr	r3, [sp, #12]
    90e4:	3301      	adds	r3, #1
    90e6:	d1cb      	bne.n	9080 <_svfiprintf_r+0x160>
    90e8:	89bb      	ldrh	r3, [r7, #12]
    90ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
    90ec:	065b      	lsls	r3, r3, #25
    90ee:	d400      	bmi.n	90f2 <_svfiprintf_r+0x1d2>
    90f0:	e72b      	b.n	8f4a <_svfiprintf_r+0x2a>
    90f2:	2001      	movs	r0, #1
    90f4:	4240      	negs	r0, r0
    90f6:	e728      	b.n	8f4a <_svfiprintf_r+0x2a>
    90f8:	ab05      	add	r3, sp, #20
    90fa:	9300      	str	r3, [sp, #0]
    90fc:	003a      	movs	r2, r7
    90fe:	4b07      	ldr	r3, [pc, #28]	; (911c <_svfiprintf_r+0x1fc>)
    9100:	0029      	movs	r1, r5
    9102:	9802      	ldr	r0, [sp, #8]
    9104:	f000 f878 	bl	91f8 <_printf_i>
    9108:	e7ea      	b.n	90e0 <_svfiprintf_r+0x1c0>
    910a:	46c0      	nop			; (mov r8, r8)
    910c:	00009588 	.word	0x00009588
    9110:	0000958e 	.word	0x0000958e
    9114:	00009592 	.word	0x00009592
    9118:	00000000 	.word	0x00000000
    911c:	00008e5d 	.word	0x00008e5d

00009120 <_printf_common>:
    9120:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9122:	0015      	movs	r5, r2
    9124:	9301      	str	r3, [sp, #4]
    9126:	688a      	ldr	r2, [r1, #8]
    9128:	690b      	ldr	r3, [r1, #16]
    912a:	9000      	str	r0, [sp, #0]
    912c:	000c      	movs	r4, r1
    912e:	4293      	cmp	r3, r2
    9130:	da00      	bge.n	9134 <_printf_common+0x14>
    9132:	0013      	movs	r3, r2
    9134:	0022      	movs	r2, r4
    9136:	602b      	str	r3, [r5, #0]
    9138:	3243      	adds	r2, #67	; 0x43
    913a:	7812      	ldrb	r2, [r2, #0]
    913c:	b10a      	cbz	r2, 9142 <_printf_common+0x22>
    913e:	3301      	adds	r3, #1
    9140:	602b      	str	r3, [r5, #0]
    9142:	6823      	ldr	r3, [r4, #0]
    9144:	069b      	lsls	r3, r3, #26
    9146:	d502      	bpl.n	914e <_printf_common+0x2e>
    9148:	682b      	ldr	r3, [r5, #0]
    914a:	3302      	adds	r3, #2
    914c:	602b      	str	r3, [r5, #0]
    914e:	2706      	movs	r7, #6
    9150:	6823      	ldr	r3, [r4, #0]
    9152:	401f      	ands	r7, r3
    9154:	b33f      	cbz	r7, 91a6 <_printf_common+0x86>
    9156:	0023      	movs	r3, r4
    9158:	3343      	adds	r3, #67	; 0x43
    915a:	781b      	ldrb	r3, [r3, #0]
    915c:	1e5a      	subs	r2, r3, #1
    915e:	4193      	sbcs	r3, r2
    9160:	6822      	ldr	r2, [r4, #0]
    9162:	0692      	lsls	r2, r2, #26
    9164:	d430      	bmi.n	91c8 <_printf_common+0xa8>
    9166:	0022      	movs	r2, r4
    9168:	9901      	ldr	r1, [sp, #4]
    916a:	3243      	adds	r2, #67	; 0x43
    916c:	9800      	ldr	r0, [sp, #0]
    916e:	9e08      	ldr	r6, [sp, #32]
    9170:	47b0      	blx	r6
    9172:	1c43      	adds	r3, r0, #1
    9174:	d025      	beq.n	91c2 <_printf_common+0xa2>
    9176:	2306      	movs	r3, #6
    9178:	6820      	ldr	r0, [r4, #0]
    917a:	682a      	ldr	r2, [r5, #0]
    917c:	68e1      	ldr	r1, [r4, #12]
    917e:	4003      	ands	r3, r0
    9180:	2500      	movs	r5, #0
    9182:	2b04      	cmp	r3, #4
    9184:	d103      	bne.n	918e <_printf_common+0x6e>
    9186:	1a8d      	subs	r5, r1, r2
    9188:	43eb      	mvns	r3, r5
    918a:	17db      	asrs	r3, r3, #31
    918c:	401d      	ands	r5, r3
    918e:	68a3      	ldr	r3, [r4, #8]
    9190:	6922      	ldr	r2, [r4, #16]
    9192:	4293      	cmp	r3, r2
    9194:	dd01      	ble.n	919a <_printf_common+0x7a>
    9196:	1a9b      	subs	r3, r3, r2
    9198:	18ed      	adds	r5, r5, r3
    919a:	2700      	movs	r7, #0
    919c:	42bd      	cmp	r5, r7
    919e:	d120      	bne.n	91e2 <_printf_common+0xc2>
    91a0:	2000      	movs	r0, #0
    91a2:	e010      	b.n	91c6 <_printf_common+0xa6>
    91a4:	3701      	adds	r7, #1
    91a6:	68e3      	ldr	r3, [r4, #12]
    91a8:	682a      	ldr	r2, [r5, #0]
    91aa:	1a9b      	subs	r3, r3, r2
    91ac:	429f      	cmp	r7, r3
    91ae:	dad2      	bge.n	9156 <_printf_common+0x36>
    91b0:	0022      	movs	r2, r4
    91b2:	2301      	movs	r3, #1
    91b4:	3219      	adds	r2, #25
    91b6:	9901      	ldr	r1, [sp, #4]
    91b8:	9800      	ldr	r0, [sp, #0]
    91ba:	9e08      	ldr	r6, [sp, #32]
    91bc:	47b0      	blx	r6
    91be:	1c43      	adds	r3, r0, #1
    91c0:	d1f0      	bne.n	91a4 <_printf_common+0x84>
    91c2:	2001      	movs	r0, #1
    91c4:	4240      	negs	r0, r0
    91c6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    91c8:	2030      	movs	r0, #48	; 0x30
    91ca:	18e1      	adds	r1, r4, r3
    91cc:	3143      	adds	r1, #67	; 0x43
    91ce:	7008      	strb	r0, [r1, #0]
    91d0:	0021      	movs	r1, r4
    91d2:	1c5a      	adds	r2, r3, #1
    91d4:	3145      	adds	r1, #69	; 0x45
    91d6:	7809      	ldrb	r1, [r1, #0]
    91d8:	18a2      	adds	r2, r4, r2
    91da:	3243      	adds	r2, #67	; 0x43
    91dc:	3302      	adds	r3, #2
    91de:	7011      	strb	r1, [r2, #0]
    91e0:	e7c1      	b.n	9166 <_printf_common+0x46>
    91e2:	0022      	movs	r2, r4
    91e4:	2301      	movs	r3, #1
    91e6:	321a      	adds	r2, #26
    91e8:	9901      	ldr	r1, [sp, #4]
    91ea:	9800      	ldr	r0, [sp, #0]
    91ec:	9e08      	ldr	r6, [sp, #32]
    91ee:	47b0      	blx	r6
    91f0:	1c43      	adds	r3, r0, #1
    91f2:	d0e6      	beq.n	91c2 <_printf_common+0xa2>
    91f4:	3701      	adds	r7, #1
    91f6:	e7d1      	b.n	919c <_printf_common+0x7c>

000091f8 <_printf_i>:
    91f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    91fa:	000e      	movs	r6, r1
    91fc:	b089      	sub	sp, #36	; 0x24
    91fe:	9305      	str	r3, [sp, #20]
    9200:	9003      	str	r0, [sp, #12]
    9202:	9204      	str	r2, [sp, #16]
    9204:	7e0a      	ldrb	r2, [r1, #24]
    9206:	000c      	movs	r4, r1
    9208:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    920a:	3643      	adds	r6, #67	; 0x43
    920c:	2a6e      	cmp	r2, #110	; 0x6e
    920e:	d100      	bne.n	9212 <_printf_i+0x1a>
    9210:	e08b      	b.n	932a <_printf_i+0x132>
    9212:	d817      	bhi.n	9244 <_printf_i+0x4c>
    9214:	2a63      	cmp	r2, #99	; 0x63
    9216:	d02c      	beq.n	9272 <_printf_i+0x7a>
    9218:	d808      	bhi.n	922c <_printf_i+0x34>
    921a:	2a00      	cmp	r2, #0
    921c:	d100      	bne.n	9220 <_printf_i+0x28>
    921e:	e095      	b.n	934c <_printf_i+0x154>
    9220:	2a58      	cmp	r2, #88	; 0x58
    9222:	d065      	beq.n	92f0 <_printf_i+0xf8>
    9224:	0025      	movs	r5, r4
    9226:	3542      	adds	r5, #66	; 0x42
    9228:	702a      	strb	r2, [r5, #0]
    922a:	e029      	b.n	9280 <_printf_i+0x88>
    922c:	2a64      	cmp	r2, #100	; 0x64
    922e:	d001      	beq.n	9234 <_printf_i+0x3c>
    9230:	2a69      	cmp	r2, #105	; 0x69
    9232:	d1f7      	bne.n	9224 <_printf_i+0x2c>
    9234:	6821      	ldr	r1, [r4, #0]
    9236:	681a      	ldr	r2, [r3, #0]
    9238:	0608      	lsls	r0, r1, #24
    923a:	d523      	bpl.n	9284 <_printf_i+0x8c>
    923c:	1d11      	adds	r1, r2, #4
    923e:	6019      	str	r1, [r3, #0]
    9240:	6813      	ldr	r3, [r2, #0]
    9242:	e025      	b.n	9290 <_printf_i+0x98>
    9244:	2a73      	cmp	r2, #115	; 0x73
    9246:	d100      	bne.n	924a <_printf_i+0x52>
    9248:	e084      	b.n	9354 <_printf_i+0x15c>
    924a:	d808      	bhi.n	925e <_printf_i+0x66>
    924c:	2a6f      	cmp	r2, #111	; 0x6f
    924e:	d027      	beq.n	92a0 <_printf_i+0xa8>
    9250:	2a70      	cmp	r2, #112	; 0x70
    9252:	d1e7      	bne.n	9224 <_printf_i+0x2c>
    9254:	2220      	movs	r2, #32
    9256:	6809      	ldr	r1, [r1, #0]
    9258:	430a      	orrs	r2, r1
    925a:	6022      	str	r2, [r4, #0]
    925c:	e003      	b.n	9266 <_printf_i+0x6e>
    925e:	2a75      	cmp	r2, #117	; 0x75
    9260:	d01e      	beq.n	92a0 <_printf_i+0xa8>
    9262:	2a78      	cmp	r2, #120	; 0x78
    9264:	d1de      	bne.n	9224 <_printf_i+0x2c>
    9266:	0022      	movs	r2, r4
    9268:	2178      	movs	r1, #120	; 0x78
    926a:	3245      	adds	r2, #69	; 0x45
    926c:	7011      	strb	r1, [r2, #0]
    926e:	4968      	ldr	r1, [pc, #416]	; (9410 <_printf_i+0x218>)
    9270:	e041      	b.n	92f6 <_printf_i+0xfe>
    9272:	000d      	movs	r5, r1
    9274:	681a      	ldr	r2, [r3, #0]
    9276:	3542      	adds	r5, #66	; 0x42
    9278:	1d11      	adds	r1, r2, #4
    927a:	6019      	str	r1, [r3, #0]
    927c:	6813      	ldr	r3, [r2, #0]
    927e:	702b      	strb	r3, [r5, #0]
    9280:	2301      	movs	r3, #1
    9282:	e074      	b.n	936e <_printf_i+0x176>
    9284:	0649      	lsls	r1, r1, #25
    9286:	d5d9      	bpl.n	923c <_printf_i+0x44>
    9288:	1d11      	adds	r1, r2, #4
    928a:	6019      	str	r1, [r3, #0]
    928c:	2300      	movs	r3, #0
    928e:	5ed3      	ldrsh	r3, [r2, r3]
    9290:	2b00      	cmp	r3, #0
    9292:	da02      	bge.n	929a <_printf_i+0xa2>
    9294:	222d      	movs	r2, #45	; 0x2d
    9296:	425b      	negs	r3, r3
    9298:	7032      	strb	r2, [r6, #0]
    929a:	495e      	ldr	r1, [pc, #376]	; (9414 <_printf_i+0x21c>)
    929c:	220a      	movs	r2, #10
    929e:	e015      	b.n	92cc <_printf_i+0xd4>
    92a0:	6820      	ldr	r0, [r4, #0]
    92a2:	6819      	ldr	r1, [r3, #0]
    92a4:	0605      	lsls	r5, r0, #24
    92a6:	d503      	bpl.n	92b0 <_printf_i+0xb8>
    92a8:	1d08      	adds	r0, r1, #4
    92aa:	6018      	str	r0, [r3, #0]
    92ac:	680b      	ldr	r3, [r1, #0]
    92ae:	e005      	b.n	92bc <_printf_i+0xc4>
    92b0:	0640      	lsls	r0, r0, #25
    92b2:	d5f9      	bpl.n	92a8 <_printf_i+0xb0>
    92b4:	1d08      	adds	r0, r1, #4
    92b6:	6018      	str	r0, [r3, #0]
    92b8:	680b      	ldr	r3, [r1, #0]
    92ba:	b29b      	uxth	r3, r3
    92bc:	4955      	ldr	r1, [pc, #340]	; (9414 <_printf_i+0x21c>)
    92be:	2a6f      	cmp	r2, #111	; 0x6f
    92c0:	d131      	bne.n	9326 <_printf_i+0x12e>
    92c2:	3a67      	subs	r2, #103	; 0x67
    92c4:	0020      	movs	r0, r4
    92c6:	2500      	movs	r5, #0
    92c8:	3043      	adds	r0, #67	; 0x43
    92ca:	7005      	strb	r5, [r0, #0]
    92cc:	6860      	ldr	r0, [r4, #4]
    92ce:	60a0      	str	r0, [r4, #8]
    92d0:	2800      	cmp	r0, #0
    92d2:	db72      	blt.n	93ba <_printf_i+0x1c2>
    92d4:	2504      	movs	r5, #4
    92d6:	6827      	ldr	r7, [r4, #0]
    92d8:	43af      	bics	r7, r5
    92da:	6027      	str	r7, [r4, #0]
    92dc:	2b00      	cmp	r3, #0
    92de:	d16e      	bne.n	93be <_printf_i+0x1c6>
    92e0:	0035      	movs	r5, r6
    92e2:	2800      	cmp	r0, #0
    92e4:	d077      	beq.n	93d6 <_printf_i+0x1de>
    92e6:	0025      	movs	r5, r4
    92e8:	780b      	ldrb	r3, [r1, #0]
    92ea:	3542      	adds	r5, #66	; 0x42
    92ec:	702b      	strb	r3, [r5, #0]
    92ee:	e072      	b.n	93d6 <_printf_i+0x1de>
    92f0:	3145      	adds	r1, #69	; 0x45
    92f2:	700a      	strb	r2, [r1, #0]
    92f4:	4947      	ldr	r1, [pc, #284]	; (9414 <_printf_i+0x21c>)
    92f6:	681a      	ldr	r2, [r3, #0]
    92f8:	6820      	ldr	r0, [r4, #0]
    92fa:	1d15      	adds	r5, r2, #4
    92fc:	601d      	str	r5, [r3, #0]
    92fe:	6813      	ldr	r3, [r2, #0]
    9300:	0605      	lsls	r5, r0, #24
    9302:	d50c      	bpl.n	931e <_printf_i+0x126>
    9304:	07c2      	lsls	r2, r0, #31
    9306:	d502      	bpl.n	930e <_printf_i+0x116>
    9308:	2220      	movs	r2, #32
    930a:	4310      	orrs	r0, r2
    930c:	6020      	str	r0, [r4, #0]
    930e:	2210      	movs	r2, #16
    9310:	2b00      	cmp	r3, #0
    9312:	d1d7      	bne.n	92c4 <_printf_i+0xcc>
    9314:	2020      	movs	r0, #32
    9316:	6825      	ldr	r5, [r4, #0]
    9318:	4385      	bics	r5, r0
    931a:	6025      	str	r5, [r4, #0]
    931c:	e7d2      	b.n	92c4 <_printf_i+0xcc>
    931e:	0645      	lsls	r5, r0, #25
    9320:	d5f0      	bpl.n	9304 <_printf_i+0x10c>
    9322:	b29b      	uxth	r3, r3
    9324:	e7ee      	b.n	9304 <_printf_i+0x10c>
    9326:	220a      	movs	r2, #10
    9328:	e7cc      	b.n	92c4 <_printf_i+0xcc>
    932a:	6809      	ldr	r1, [r1, #0]
    932c:	681a      	ldr	r2, [r3, #0]
    932e:	0608      	lsls	r0, r1, #24
    9330:	d505      	bpl.n	933e <_printf_i+0x146>
    9332:	1d11      	adds	r1, r2, #4
    9334:	6019      	str	r1, [r3, #0]
    9336:	6813      	ldr	r3, [r2, #0]
    9338:	6962      	ldr	r2, [r4, #20]
    933a:	601a      	str	r2, [r3, #0]
    933c:	e006      	b.n	934c <_printf_i+0x154>
    933e:	0649      	lsls	r1, r1, #25
    9340:	d5f7      	bpl.n	9332 <_printf_i+0x13a>
    9342:	1d11      	adds	r1, r2, #4
    9344:	6019      	str	r1, [r3, #0]
    9346:	6813      	ldr	r3, [r2, #0]
    9348:	8aa2      	ldrh	r2, [r4, #20]
    934a:	801a      	strh	r2, [r3, #0]
    934c:	2300      	movs	r3, #0
    934e:	0035      	movs	r5, r6
    9350:	6123      	str	r3, [r4, #16]
    9352:	e04e      	b.n	93f2 <_printf_i+0x1fa>
    9354:	681a      	ldr	r2, [r3, #0]
    9356:	1d11      	adds	r1, r2, #4
    9358:	6019      	str	r1, [r3, #0]
    935a:	6815      	ldr	r5, [r2, #0]
    935c:	2100      	movs	r1, #0
    935e:	6862      	ldr	r2, [r4, #4]
    9360:	0028      	movs	r0, r5
    9362:	f000 f859 	bl	9418 <memchr>
    9366:	b108      	cbz	r0, 936c <_printf_i+0x174>
    9368:	1b40      	subs	r0, r0, r5
    936a:	6060      	str	r0, [r4, #4]
    936c:	6863      	ldr	r3, [r4, #4]
    936e:	6123      	str	r3, [r4, #16]
    9370:	2300      	movs	r3, #0
    9372:	7033      	strb	r3, [r6, #0]
    9374:	e03d      	b.n	93f2 <_printf_i+0x1fa>
    9376:	6923      	ldr	r3, [r4, #16]
    9378:	002a      	movs	r2, r5
    937a:	9904      	ldr	r1, [sp, #16]
    937c:	9803      	ldr	r0, [sp, #12]
    937e:	9d05      	ldr	r5, [sp, #20]
    9380:	47a8      	blx	r5
    9382:	1c43      	adds	r3, r0, #1
    9384:	d03f      	beq.n	9406 <_printf_i+0x20e>
    9386:	6823      	ldr	r3, [r4, #0]
    9388:	2500      	movs	r5, #0
    938a:	079b      	lsls	r3, r3, #30
    938c:	d40f      	bmi.n	93ae <_printf_i+0x1b6>
    938e:	9b07      	ldr	r3, [sp, #28]
    9390:	68e0      	ldr	r0, [r4, #12]
    9392:	4298      	cmp	r0, r3
    9394:	da39      	bge.n	940a <_printf_i+0x212>
    9396:	0018      	movs	r0, r3
    9398:	e037      	b.n	940a <_printf_i+0x212>
    939a:	0022      	movs	r2, r4
    939c:	2301      	movs	r3, #1
    939e:	3219      	adds	r2, #25
    93a0:	9904      	ldr	r1, [sp, #16]
    93a2:	9803      	ldr	r0, [sp, #12]
    93a4:	9e05      	ldr	r6, [sp, #20]
    93a6:	47b0      	blx	r6
    93a8:	1c43      	adds	r3, r0, #1
    93aa:	d02c      	beq.n	9406 <_printf_i+0x20e>
    93ac:	3501      	adds	r5, #1
    93ae:	68e3      	ldr	r3, [r4, #12]
    93b0:	9a07      	ldr	r2, [sp, #28]
    93b2:	1a9b      	subs	r3, r3, r2
    93b4:	429d      	cmp	r5, r3
    93b6:	dbf0      	blt.n	939a <_printf_i+0x1a2>
    93b8:	e7e9      	b.n	938e <_printf_i+0x196>
    93ba:	2b00      	cmp	r3, #0
    93bc:	d093      	beq.n	92e6 <_printf_i+0xee>
    93be:	0035      	movs	r5, r6
    93c0:	fbb3 f0f2 	udiv	r0, r3, r2
    93c4:	0017      	movs	r7, r2
    93c6:	4347      	muls	r7, r0
    93c8:	1bdb      	subs	r3, r3, r7
    93ca:	5ccb      	ldrb	r3, [r1, r3]
    93cc:	3d01      	subs	r5, #1
    93ce:	702b      	strb	r3, [r5, #0]
    93d0:	0003      	movs	r3, r0
    93d2:	2800      	cmp	r0, #0
    93d4:	d1f4      	bne.n	93c0 <_printf_i+0x1c8>
    93d6:	2a08      	cmp	r2, #8
    93d8:	d109      	bne.n	93ee <_printf_i+0x1f6>
    93da:	6823      	ldr	r3, [r4, #0]
    93dc:	07db      	lsls	r3, r3, #31
    93de:	d506      	bpl.n	93ee <_printf_i+0x1f6>
    93e0:	6863      	ldr	r3, [r4, #4]
    93e2:	6922      	ldr	r2, [r4, #16]
    93e4:	4293      	cmp	r3, r2
    93e6:	dc02      	bgt.n	93ee <_printf_i+0x1f6>
    93e8:	2330      	movs	r3, #48	; 0x30
    93ea:	3d01      	subs	r5, #1
    93ec:	702b      	strb	r3, [r5, #0]
    93ee:	1b76      	subs	r6, r6, r5
    93f0:	6126      	str	r6, [r4, #16]
    93f2:	9b05      	ldr	r3, [sp, #20]
    93f4:	aa07      	add	r2, sp, #28
    93f6:	9300      	str	r3, [sp, #0]
    93f8:	0021      	movs	r1, r4
    93fa:	9b04      	ldr	r3, [sp, #16]
    93fc:	9803      	ldr	r0, [sp, #12]
    93fe:	f7ff fe8f 	bl	9120 <_printf_common>
    9402:	1c43      	adds	r3, r0, #1
    9404:	d1b7      	bne.n	9376 <_printf_i+0x17e>
    9406:	2001      	movs	r0, #1
    9408:	4240      	negs	r0, r0
    940a:	b009      	add	sp, #36	; 0x24
    940c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    940e:	46c0      	nop			; (mov r8, r8)
    9410:	000095aa 	.word	0x000095aa
    9414:	00009599 	.word	0x00009599

00009418 <memchr>:
    9418:	b2c9      	uxtb	r1, r1
    941a:	1882      	adds	r2, r0, r2
    941c:	4290      	cmp	r0, r2
    941e:	d101      	bne.n	9424 <memchr+0xc>
    9420:	2000      	movs	r0, #0
    9422:	4770      	bx	lr
    9424:	7803      	ldrb	r3, [r0, #0]
    9426:	428b      	cmp	r3, r1
    9428:	d0fb      	beq.n	9422 <memchr+0xa>
    942a:	3001      	adds	r0, #1
    942c:	e7f6      	b.n	941c <memchr+0x4>

0000942e <_realloc_r>:
    942e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9430:	0007      	movs	r7, r0
    9432:	000d      	movs	r5, r1
    9434:	0016      	movs	r6, r2
    9436:	b929      	cbnz	r1, 9444 <_realloc_r+0x16>
    9438:	0011      	movs	r1, r2
    943a:	f7ff fc7d 	bl	8d38 <_malloc_r>
    943e:	0004      	movs	r4, r0
    9440:	0020      	movs	r0, r4
    9442:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9444:	b91a      	cbnz	r2, 944e <_realloc_r+0x20>
    9446:	f7ff fc2d 	bl	8ca4 <_free_r>
    944a:	0034      	movs	r4, r6
    944c:	e7f8      	b.n	9440 <_realloc_r+0x12>
    944e:	f000 f813 	bl	9478 <_malloc_usable_size_r>
    9452:	002c      	movs	r4, r5
    9454:	4286      	cmp	r6, r0
    9456:	d9f3      	bls.n	9440 <_realloc_r+0x12>
    9458:	0031      	movs	r1, r6
    945a:	0038      	movs	r0, r7
    945c:	f7ff fc6c 	bl	8d38 <_malloc_r>
    9460:	0004      	movs	r4, r0
    9462:	2800      	cmp	r0, #0
    9464:	d0ec      	beq.n	9440 <_realloc_r+0x12>
    9466:	0029      	movs	r1, r5
    9468:	0032      	movs	r2, r6
    946a:	f7ff fbf7 	bl	8c5c <memcpy>
    946e:	0029      	movs	r1, r5
    9470:	0038      	movs	r0, r7
    9472:	f7ff fc17 	bl	8ca4 <_free_r>
    9476:	e7e3      	b.n	9440 <_realloc_r+0x12>

00009478 <_malloc_usable_size_r>:
    9478:	1f0b      	subs	r3, r1, #4
    947a:	681b      	ldr	r3, [r3, #0]
    947c:	1f18      	subs	r0, r3, #4
    947e:	2b00      	cmp	r3, #0
    9480:	da01      	bge.n	9486 <_malloc_usable_size_r+0xe>
    9482:	580b      	ldr	r3, [r1, r0]
    9484:	18c0      	adds	r0, r0, r3
    9486:	4770      	bx	lr

00009488 <_sbrk>:
    9488:	f242 03ac 	movw	r3, #8364	; 0x20ac
    948c:	f2c2 0300 	movt	r3, #8192	; 0x2000
    9490:	681a      	ldr	r2, [r3, #0]
    9492:	b11a      	cbz	r2, 949c <_sbrk+0x14>
    9494:	1810      	adds	r0, r2, r0
    9496:	6018      	str	r0, [r3, #0]
    9498:	0010      	movs	r0, r2
    949a:	4770      	bx	lr
    949c:	f242 42d8 	movw	r2, #9432	; 0x24d8
    94a0:	f2c2 0200 	movt	r2, #8192	; 0x2000
    94a4:	e7f6      	b.n	9494 <_sbrk+0xc>
    94a6:	46c0      	nop			; (mov r8, r8)
    94a8:	49485053 	.word	0x49485053
    94ac:	5053434e 	.word	0x5053434e
    94b0:	434e4948 	.word	0x434e4948
    94b4:	0000000a 	.word	0x0000000a
    94b8:	00007830 	.word	0x00007830
    94bc:	78322e25 	.word	0x78322e25
    94c0:	00000000 	.word	0x00000000
    94c4:	69726556 	.word	0x69726556
    94c8:	61636966 	.word	0x61636966
    94cc:	6e6f6974 	.word	0x6e6f6974
    94d0:	75732064 	.word	0x75732064
    94d4:	65656363 	.word	0x65656363
    94d8:	203f7364 	.word	0x203f7364
    94dc:	00000000 	.word	0x00000000
    94e0:	6f6c2041 	.word	0x6f6c2041
    94e4:	666f2074 	.word	0x666f2074
    94e8:	6c656820 	.word	0x6c656820
    94ec:	6f6f6f6c 	.word	0x6f6f6f6c
    94f0:	0a6f6f6f 	.word	0x0a6f6f6f
    94f4:	00000000 	.word	0x00000000
    94f8:	000a6948 	.word	0x000a6948
    94fc:	65636552 	.word	0x65636552
    9500:	3a657669 	.word	0x3a657669
    9504:	00000020 	.word	0x00000020
    9508:	5f746567 	.word	0x5f746567
    950c:	69687073 	.word	0x69687073
    9510:	735f636e 	.word	0x735f636e
    9514:	61206769 	.word	0x61206769
    9518:	00203a74 	.word	0x00203a74
    951c:	72617453 	.word	0x72617453
    9520:	75722074 	.word	0x75722074
    9524:	6e696e6e 	.word	0x6e696e6e
    9528:	70732067 	.word	0x70732067
    952c:	636e6968 	.word	0x636e6968
    9530:	00000a73 	.word	0x00000a73
    9534:	3d3d3d3d 	.word	0x3d3d3d3d
    9538:	3d3d3d3d 	.word	0x3d3d3d3d
    953c:	203d3d3d 	.word	0x203d3d3d
    9540:	7074754f 	.word	0x7074754f
    9544:	3d207475 	.word	0x3d207475
    9548:	3d3d3d3d 	.word	0x3d3d3d3d
    954c:	3d3d3d3d 	.word	0x3d3d3d3d
    9550:	000a3d3d 	.word	0x000a3d3d
    9554:	3d3d3d3d 	.word	0x3d3d3d3d
    9558:	3d3d3d3d 	.word	0x3d3d3d3d
    955c:	203d3d3d 	.word	0x203d3d3d
    9560:	7074754f 	.word	0x7074754f
    9564:	74207475 	.word	0x74207475
    9568:	6e656b6f 	.word	0x6e656b6f
    956c:	3d3d3d20 	.word	0x3d3d3d20
    9570:	3d3d3d3d 	.word	0x3d3d3d3d
    9574:	3d3d3d3d 	.word	0x3d3d3d3d
    9578:	0000000a 	.word	0x0000000a
    957c:	63617453 	.word	0x63617453
    9580:	7375206b 	.word	0x7375206b
    9584:	000a6465 	.word	0x000a6465
    9588:	2b302d23 	.word	0x2b302d23
    958c:	6c680020 	.word	0x6c680020
    9590:	6665004c 	.word	0x6665004c
    9594:	47464567 	.word	0x47464567
    9598:	00          	.byte	0x00
    9599:	30          	.byte	0x30
    959a:	3231      	.short	0x3231
    959c:	36353433 	.word	0x36353433
    95a0:	41393837 	.word	0x41393837
    95a4:	45444342 	.word	0x45444342
    95a8:	31300046 	.word	0x31300046
    95ac:	35343332 	.word	0x35343332
    95b0:	39383736 	.word	0x39383736
    95b4:	64636261 	.word	0x64636261
    95b8:	00006665 	.word	0x00006665

000095bc <__sf_fake_stderr>:
	...

000095dc <__sf_fake_stdin>:
	...

000095fc <__sf_fake_stdout>:
	...

0000961c <_init>:
    961c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    961e:	46c0      	nop			; (mov r8, r8)
    9620:	bcf8      	pop	{r3, r4, r5, r6, r7}
    9622:	bc08      	pop	{r3}
    9624:	469e      	mov	lr, r3
    9626:	4770      	bx	lr

00009628 <__init_array_start>:
    9628:	00008121 	.word	0x00008121

0000962c <_fini>:
    962c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    962e:	46c0      	nop			; (mov r8, r8)
    9630:	bcf8      	pop	{r3, r4, r5, r6, r7}
    9632:	bc08      	pop	{r3}
    9634:	469e      	mov	lr, r3
    9636:	4770      	bx	lr

00009638 <__fini_array_start>:
    9638:	000080f5 	.word	0x000080f5
