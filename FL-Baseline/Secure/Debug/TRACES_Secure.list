
TRACES_Secure.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f4  0c000000  0c000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000116f4  0c0001f8  0c0001f8  000011f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000008b8  0c0118ec  0c0118ec  000128ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0c0121a4  0c0121a4  00015040  2**0
                  CONTENTS
  4 .ARM          00000008  0c0121a4  0c0121a4  000131a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0c0121ac  0c0121ac  00015040  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0c0121ac  0c0121ac  000131ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0c0121b0  0c0121b0  000131b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001a0  30000000  0c0121b4  00014000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .gnu.sgstubs  00000040  0c03e000  0c03e000  00015000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .bss          00000340  300001a0  300001a0  000151a0  2**3
                  ALLOC
 11 ._user_heap_stack 00000a00  300004e0  300004e0  000151a0  2**0
                  ALLOC
 12 .ARM.attributes 00000036  00000000  00000000  00015040  2**0
                  CONTENTS, READONLY
 13 .debug_info   00018a2c  00000000  00000000  00015076  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00003b65  00000000  00000000  0002daa2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001168  00000000  00000000  00031608  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00001476  00000000  00000000  00032770  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000035bd  00000000  00000000  00033be6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001e2bf  00000000  00000000  000371a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0010ed1d  00000000  00000000  00055462  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0016417f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000030ac  00000000  00000000  001641c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000bf73  00000000  00000000  00167270  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000006c  00000000  00000000  001731e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0c0001f8 <__do_global_dtors_aux>:
 c0001f8:	b510      	push	{r4, lr}
 c0001fa:	4c05      	ldr	r4, [pc, #20]	@ (c000210 <__do_global_dtors_aux+0x18>)
 c0001fc:	7823      	ldrb	r3, [r4, #0]
 c0001fe:	b933      	cbnz	r3, c00020e <__do_global_dtors_aux+0x16>
 c000200:	4b04      	ldr	r3, [pc, #16]	@ (c000214 <__do_global_dtors_aux+0x1c>)
 c000202:	b113      	cbz	r3, c00020a <__do_global_dtors_aux+0x12>
 c000204:	4804      	ldr	r0, [pc, #16]	@ (c000218 <__do_global_dtors_aux+0x20>)
 c000206:	f3af 8000 	nop.w
 c00020a:	2301      	movs	r3, #1
 c00020c:	7023      	strb	r3, [r4, #0]
 c00020e:	bd10      	pop	{r4, pc}
 c000210:	300001a0 	.word	0x300001a0
 c000214:	00000000 	.word	0x00000000
 c000218:	0c0118d4 	.word	0x0c0118d4

0c00021c <frame_dummy>:
 c00021c:	b508      	push	{r3, lr}
 c00021e:	4b03      	ldr	r3, [pc, #12]	@ (c00022c <frame_dummy+0x10>)
 c000220:	b11b      	cbz	r3, c00022a <frame_dummy+0xe>
 c000222:	4903      	ldr	r1, [pc, #12]	@ (c000230 <frame_dummy+0x14>)
 c000224:	4803      	ldr	r0, [pc, #12]	@ (c000234 <frame_dummy+0x18>)
 c000226:	f3af 8000 	nop.w
 c00022a:	bd08      	pop	{r3, pc}
 c00022c:	00000000 	.word	0x00000000
 c000230:	300001a4 	.word	0x300001a4
 c000234:	0c0118d4 	.word	0x0c0118d4

0c000238 <__gnu_cmse_nonsecure_call>:
 c000238:	e92d 4fe0 	stmdb	sp!, {r5, r6, r7, r8, r9, sl, fp, lr}
 c00023c:	4627      	mov	r7, r4
 c00023e:	46a0      	mov	r8, r4
 c000240:	46a1      	mov	r9, r4
 c000242:	46a2      	mov	sl, r4
 c000244:	46a3      	mov	fp, r4
 c000246:	46a4      	mov	ip, r4
 c000248:	ed2d 8b10 	vpush	{d8-d15}
 c00024c:	f04f 0500 	mov.w	r5, #0
 c000250:	ec45 5b18 	vmov	d8, r5, r5
 c000254:	ec45 5a19 	vmov	s18, s19, r5, r5
 c000258:	ec45 5a1a 	vmov	s20, s21, r5, r5
 c00025c:	ec45 5a1b 	vmov	s22, s23, r5, r5
 c000260:	ec45 5a1c 	vmov	s24, s25, r5, r5
 c000264:	ec45 5a1d 	vmov	s26, s27, r5, r5
 c000268:	ec45 5a1e 	vmov	s28, s29, r5, r5
 c00026c:	ec45 5a1f 	vmov	s30, s31, r5, r5
 c000270:	eef1 5a10 	vmrs	r5, fpscr
 c000274:	f64f 7660 	movw	r6, #65376	@ 0xff60
 c000278:	f6c0 76ff 	movt	r6, #4095	@ 0xfff
 c00027c:	4035      	ands	r5, r6
 c00027e:	eee1 5a10 	vmsr	fpscr, r5
 c000282:	f384 8800 	msr	CPSR_f, r4
 c000286:	4625      	mov	r5, r4
 c000288:	4626      	mov	r6, r4
 c00028a:	47a4      	blxns	r4
 c00028c:	ecbd 8b10 	vpop	{d8-d15}
 c000290:	e8bd 8fe0 	ldmia.w	sp!, {r5, r6, r7, r8, r9, sl, fp, pc}

0c000294 <__aeabi_drsub>:
 c000294:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 c000298:	e002      	b.n	c0002a0 <__adddf3>
 c00029a:	bf00      	nop

0c00029c <__aeabi_dsub>:
 c00029c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0c0002a0 <__adddf3>:
 c0002a0:	b530      	push	{r4, r5, lr}
 c0002a2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 c0002a6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 c0002aa:	ea94 0f05 	teq	r4, r5
 c0002ae:	bf08      	it	eq
 c0002b0:	ea90 0f02 	teqeq	r0, r2
 c0002b4:	bf1f      	itttt	ne
 c0002b6:	ea54 0c00 	orrsne.w	ip, r4, r0
 c0002ba:	ea55 0c02 	orrsne.w	ip, r5, r2
 c0002be:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 c0002c2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 c0002c6:	f000 80e2 	beq.w	c00048e <__adddf3+0x1ee>
 c0002ca:	ea4f 5454 	mov.w	r4, r4, lsr #21
 c0002ce:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 c0002d2:	bfb8      	it	lt
 c0002d4:	426d      	neglt	r5, r5
 c0002d6:	dd0c      	ble.n	c0002f2 <__adddf3+0x52>
 c0002d8:	442c      	add	r4, r5
 c0002da:	ea80 0202 	eor.w	r2, r0, r2
 c0002de:	ea81 0303 	eor.w	r3, r1, r3
 c0002e2:	ea82 0000 	eor.w	r0, r2, r0
 c0002e6:	ea83 0101 	eor.w	r1, r3, r1
 c0002ea:	ea80 0202 	eor.w	r2, r0, r2
 c0002ee:	ea81 0303 	eor.w	r3, r1, r3
 c0002f2:	2d36      	cmp	r5, #54	@ 0x36
 c0002f4:	bf88      	it	hi
 c0002f6:	bd30      	pophi	{r4, r5, pc}
 c0002f8:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 c0002fc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 c000300:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 c000304:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 c000308:	d002      	beq.n	c000310 <__adddf3+0x70>
 c00030a:	4240      	negs	r0, r0
 c00030c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 c000310:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 c000314:	ea4f 3303 	mov.w	r3, r3, lsl #12
 c000318:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 c00031c:	d002      	beq.n	c000324 <__adddf3+0x84>
 c00031e:	4252      	negs	r2, r2
 c000320:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 c000324:	ea94 0f05 	teq	r4, r5
 c000328:	f000 80a7 	beq.w	c00047a <__adddf3+0x1da>
 c00032c:	f1a4 0401 	sub.w	r4, r4, #1
 c000330:	f1d5 0e20 	rsbs	lr, r5, #32
 c000334:	db0d      	blt.n	c000352 <__adddf3+0xb2>
 c000336:	fa02 fc0e 	lsl.w	ip, r2, lr
 c00033a:	fa22 f205 	lsr.w	r2, r2, r5
 c00033e:	1880      	adds	r0, r0, r2
 c000340:	f141 0100 	adc.w	r1, r1, #0
 c000344:	fa03 f20e 	lsl.w	r2, r3, lr
 c000348:	1880      	adds	r0, r0, r2
 c00034a:	fa43 f305 	asr.w	r3, r3, r5
 c00034e:	4159      	adcs	r1, r3
 c000350:	e00e      	b.n	c000370 <__adddf3+0xd0>
 c000352:	f1a5 0520 	sub.w	r5, r5, #32
 c000356:	f10e 0e20 	add.w	lr, lr, #32
 c00035a:	2a01      	cmp	r2, #1
 c00035c:	fa03 fc0e 	lsl.w	ip, r3, lr
 c000360:	bf28      	it	cs
 c000362:	f04c 0c02 	orrcs.w	ip, ip, #2
 c000366:	fa43 f305 	asr.w	r3, r3, r5
 c00036a:	18c0      	adds	r0, r0, r3
 c00036c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 c000370:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 c000374:	d507      	bpl.n	c000386 <__adddf3+0xe6>
 c000376:	f04f 0e00 	mov.w	lr, #0
 c00037a:	f1dc 0c00 	rsbs	ip, ip, #0
 c00037e:	eb7e 0000 	sbcs.w	r0, lr, r0
 c000382:	eb6e 0101 	sbc.w	r1, lr, r1
 c000386:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 c00038a:	d31b      	bcc.n	c0003c4 <__adddf3+0x124>
 c00038c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 c000390:	d30c      	bcc.n	c0003ac <__adddf3+0x10c>
 c000392:	0849      	lsrs	r1, r1, #1
 c000394:	ea5f 0030 	movs.w	r0, r0, rrx
 c000398:	ea4f 0c3c 	mov.w	ip, ip, rrx
 c00039c:	f104 0401 	add.w	r4, r4, #1
 c0003a0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 c0003a4:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 c0003a8:	f080 809a 	bcs.w	c0004e0 <__adddf3+0x240>
 c0003ac:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 c0003b0:	bf08      	it	eq
 c0003b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 c0003b6:	f150 0000 	adcs.w	r0, r0, #0
 c0003ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 c0003be:	ea41 0105 	orr.w	r1, r1, r5
 c0003c2:	bd30      	pop	{r4, r5, pc}
 c0003c4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 c0003c8:	4140      	adcs	r0, r0
 c0003ca:	eb41 0101 	adc.w	r1, r1, r1
 c0003ce:	3c01      	subs	r4, #1
 c0003d0:	bf28      	it	cs
 c0003d2:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 c0003d6:	d2e9      	bcs.n	c0003ac <__adddf3+0x10c>
 c0003d8:	f091 0f00 	teq	r1, #0
 c0003dc:	bf04      	itt	eq
 c0003de:	4601      	moveq	r1, r0
 c0003e0:	2000      	moveq	r0, #0
 c0003e2:	fab1 f381 	clz	r3, r1
 c0003e6:	bf08      	it	eq
 c0003e8:	3320      	addeq	r3, #32
 c0003ea:	f1a3 030b 	sub.w	r3, r3, #11
 c0003ee:	f1b3 0220 	subs.w	r2, r3, #32
 c0003f2:	da0c      	bge.n	c00040e <__adddf3+0x16e>
 c0003f4:	320c      	adds	r2, #12
 c0003f6:	dd08      	ble.n	c00040a <__adddf3+0x16a>
 c0003f8:	f102 0c14 	add.w	ip, r2, #20
 c0003fc:	f1c2 020c 	rsb	r2, r2, #12
 c000400:	fa01 f00c 	lsl.w	r0, r1, ip
 c000404:	fa21 f102 	lsr.w	r1, r1, r2
 c000408:	e00c      	b.n	c000424 <__adddf3+0x184>
 c00040a:	f102 0214 	add.w	r2, r2, #20
 c00040e:	bfd8      	it	le
 c000410:	f1c2 0c20 	rsble	ip, r2, #32
 c000414:	fa01 f102 	lsl.w	r1, r1, r2
 c000418:	fa20 fc0c 	lsr.w	ip, r0, ip
 c00041c:	bfdc      	itt	le
 c00041e:	ea41 010c 	orrle.w	r1, r1, ip
 c000422:	4090      	lslle	r0, r2
 c000424:	1ae4      	subs	r4, r4, r3
 c000426:	bfa2      	ittt	ge
 c000428:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 c00042c:	4329      	orrge	r1, r5
 c00042e:	bd30      	popge	{r4, r5, pc}
 c000430:	ea6f 0404 	mvn.w	r4, r4
 c000434:	3c1f      	subs	r4, #31
 c000436:	da1c      	bge.n	c000472 <__adddf3+0x1d2>
 c000438:	340c      	adds	r4, #12
 c00043a:	dc0e      	bgt.n	c00045a <__adddf3+0x1ba>
 c00043c:	f104 0414 	add.w	r4, r4, #20
 c000440:	f1c4 0220 	rsb	r2, r4, #32
 c000444:	fa20 f004 	lsr.w	r0, r0, r4
 c000448:	fa01 f302 	lsl.w	r3, r1, r2
 c00044c:	ea40 0003 	orr.w	r0, r0, r3
 c000450:	fa21 f304 	lsr.w	r3, r1, r4
 c000454:	ea45 0103 	orr.w	r1, r5, r3
 c000458:	bd30      	pop	{r4, r5, pc}
 c00045a:	f1c4 040c 	rsb	r4, r4, #12
 c00045e:	f1c4 0220 	rsb	r2, r4, #32
 c000462:	fa20 f002 	lsr.w	r0, r0, r2
 c000466:	fa01 f304 	lsl.w	r3, r1, r4
 c00046a:	ea40 0003 	orr.w	r0, r0, r3
 c00046e:	4629      	mov	r1, r5
 c000470:	bd30      	pop	{r4, r5, pc}
 c000472:	fa21 f004 	lsr.w	r0, r1, r4
 c000476:	4629      	mov	r1, r5
 c000478:	bd30      	pop	{r4, r5, pc}
 c00047a:	f094 0f00 	teq	r4, #0
 c00047e:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 c000482:	bf06      	itte	eq
 c000484:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 c000488:	3401      	addeq	r4, #1
 c00048a:	3d01      	subne	r5, #1
 c00048c:	e74e      	b.n	c00032c <__adddf3+0x8c>
 c00048e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 c000492:	bf18      	it	ne
 c000494:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 c000498:	d029      	beq.n	c0004ee <__adddf3+0x24e>
 c00049a:	ea94 0f05 	teq	r4, r5
 c00049e:	bf08      	it	eq
 c0004a0:	ea90 0f02 	teqeq	r0, r2
 c0004a4:	d005      	beq.n	c0004b2 <__adddf3+0x212>
 c0004a6:	ea54 0c00 	orrs.w	ip, r4, r0
 c0004aa:	bf04      	itt	eq
 c0004ac:	4619      	moveq	r1, r3
 c0004ae:	4610      	moveq	r0, r2
 c0004b0:	bd30      	pop	{r4, r5, pc}
 c0004b2:	ea91 0f03 	teq	r1, r3
 c0004b6:	bf1e      	ittt	ne
 c0004b8:	2100      	movne	r1, #0
 c0004ba:	2000      	movne	r0, #0
 c0004bc:	bd30      	popne	{r4, r5, pc}
 c0004be:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 c0004c2:	d105      	bne.n	c0004d0 <__adddf3+0x230>
 c0004c4:	0040      	lsls	r0, r0, #1
 c0004c6:	4149      	adcs	r1, r1
 c0004c8:	bf28      	it	cs
 c0004ca:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 c0004ce:	bd30      	pop	{r4, r5, pc}
 c0004d0:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 c0004d4:	bf3c      	itt	cc
 c0004d6:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 c0004da:	bd30      	popcc	{r4, r5, pc}
 c0004dc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 c0004e0:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 c0004e4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 c0004e8:	f04f 0000 	mov.w	r0, #0
 c0004ec:	bd30      	pop	{r4, r5, pc}
 c0004ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 c0004f2:	bf1a      	itte	ne
 c0004f4:	4619      	movne	r1, r3
 c0004f6:	4610      	movne	r0, r2
 c0004f8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 c0004fc:	bf1c      	itt	ne
 c0004fe:	460b      	movne	r3, r1
 c000500:	4602      	movne	r2, r0
 c000502:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 c000506:	bf06      	itte	eq
 c000508:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 c00050c:	ea91 0f03 	teqeq	r1, r3
 c000510:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 c000514:	bd30      	pop	{r4, r5, pc}
 c000516:	bf00      	nop

0c000518 <__aeabi_ui2d>:
 c000518:	f090 0f00 	teq	r0, #0
 c00051c:	bf04      	itt	eq
 c00051e:	2100      	moveq	r1, #0
 c000520:	4770      	bxeq	lr
 c000522:	b530      	push	{r4, r5, lr}
 c000524:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 c000528:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 c00052c:	f04f 0500 	mov.w	r5, #0
 c000530:	f04f 0100 	mov.w	r1, #0
 c000534:	e750      	b.n	c0003d8 <__adddf3+0x138>
 c000536:	bf00      	nop

0c000538 <__aeabi_i2d>:
 c000538:	f090 0f00 	teq	r0, #0
 c00053c:	bf04      	itt	eq
 c00053e:	2100      	moveq	r1, #0
 c000540:	4770      	bxeq	lr
 c000542:	b530      	push	{r4, r5, lr}
 c000544:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 c000548:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 c00054c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 c000550:	bf48      	it	mi
 c000552:	4240      	negmi	r0, r0
 c000554:	f04f 0100 	mov.w	r1, #0
 c000558:	e73e      	b.n	c0003d8 <__adddf3+0x138>
 c00055a:	bf00      	nop

0c00055c <__aeabi_f2d>:
 c00055c:	0042      	lsls	r2, r0, #1
 c00055e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 c000562:	ea4f 0131 	mov.w	r1, r1, rrx
 c000566:	ea4f 7002 	mov.w	r0, r2, lsl #28
 c00056a:	bf1f      	itttt	ne
 c00056c:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 c000570:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 c000574:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 c000578:	4770      	bxne	lr
 c00057a:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 c00057e:	bf08      	it	eq
 c000580:	4770      	bxeq	lr
 c000582:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 c000586:	bf04      	itt	eq
 c000588:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 c00058c:	4770      	bxeq	lr
 c00058e:	b530      	push	{r4, r5, lr}
 c000590:	f44f 7460 	mov.w	r4, #896	@ 0x380
 c000594:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 c000598:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 c00059c:	e71c      	b.n	c0003d8 <__adddf3+0x138>
 c00059e:	bf00      	nop

0c0005a0 <__aeabi_ul2d>:
 c0005a0:	ea50 0201 	orrs.w	r2, r0, r1
 c0005a4:	bf08      	it	eq
 c0005a6:	4770      	bxeq	lr
 c0005a8:	b530      	push	{r4, r5, lr}
 c0005aa:	f04f 0500 	mov.w	r5, #0
 c0005ae:	e00a      	b.n	c0005c6 <__aeabi_l2d+0x16>

0c0005b0 <__aeabi_l2d>:
 c0005b0:	ea50 0201 	orrs.w	r2, r0, r1
 c0005b4:	bf08      	it	eq
 c0005b6:	4770      	bxeq	lr
 c0005b8:	b530      	push	{r4, r5, lr}
 c0005ba:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 c0005be:	d502      	bpl.n	c0005c6 <__aeabi_l2d+0x16>
 c0005c0:	4240      	negs	r0, r0
 c0005c2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 c0005c6:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 c0005ca:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 c0005ce:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 c0005d2:	f43f aed8 	beq.w	c000386 <__adddf3+0xe6>
 c0005d6:	f04f 0203 	mov.w	r2, #3
 c0005da:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 c0005de:	bf18      	it	ne
 c0005e0:	3203      	addne	r2, #3
 c0005e2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 c0005e6:	bf18      	it	ne
 c0005e8:	3203      	addne	r2, #3
 c0005ea:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 c0005ee:	f1c2 0320 	rsb	r3, r2, #32
 c0005f2:	fa00 fc03 	lsl.w	ip, r0, r3
 c0005f6:	fa20 f002 	lsr.w	r0, r0, r2
 c0005fa:	fa01 fe03 	lsl.w	lr, r1, r3
 c0005fe:	ea40 000e 	orr.w	r0, r0, lr
 c000602:	fa21 f102 	lsr.w	r1, r1, r2
 c000606:	4414      	add	r4, r2
 c000608:	e6bd      	b.n	c000386 <__adddf3+0xe6>
 c00060a:	bf00      	nop

0c00060c <__aeabi_dmul>:
 c00060c:	b570      	push	{r4, r5, r6, lr}
 c00060e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 c000612:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 c000616:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 c00061a:	bf1d      	ittte	ne
 c00061c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 c000620:	ea94 0f0c 	teqne	r4, ip
 c000624:	ea95 0f0c 	teqne	r5, ip
 c000628:	f000 f8de 	bleq	c0007e8 <__aeabi_dmul+0x1dc>
 c00062c:	442c      	add	r4, r5
 c00062e:	ea81 0603 	eor.w	r6, r1, r3
 c000632:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 c000636:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 c00063a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 c00063e:	bf18      	it	ne
 c000640:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 c000644:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 c000648:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 c00064c:	d038      	beq.n	c0006c0 <__aeabi_dmul+0xb4>
 c00064e:	fba0 ce02 	umull	ip, lr, r0, r2
 c000652:	f04f 0500 	mov.w	r5, #0
 c000656:	fbe1 e502 	umlal	lr, r5, r1, r2
 c00065a:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 c00065e:	fbe0 e503 	umlal	lr, r5, r0, r3
 c000662:	f04f 0600 	mov.w	r6, #0
 c000666:	fbe1 5603 	umlal	r5, r6, r1, r3
 c00066a:	f09c 0f00 	teq	ip, #0
 c00066e:	bf18      	it	ne
 c000670:	f04e 0e01 	orrne.w	lr, lr, #1
 c000674:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 c000678:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 c00067c:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 c000680:	d204      	bcs.n	c00068c <__aeabi_dmul+0x80>
 c000682:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 c000686:	416d      	adcs	r5, r5
 c000688:	eb46 0606 	adc.w	r6, r6, r6
 c00068c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 c000690:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 c000694:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 c000698:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 c00069c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 c0006a0:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 c0006a4:	bf88      	it	hi
 c0006a6:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 c0006aa:	d81e      	bhi.n	c0006ea <__aeabi_dmul+0xde>
 c0006ac:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 c0006b0:	bf08      	it	eq
 c0006b2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 c0006b6:	f150 0000 	adcs.w	r0, r0, #0
 c0006ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 c0006be:	bd70      	pop	{r4, r5, r6, pc}
 c0006c0:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 c0006c4:	ea46 0101 	orr.w	r1, r6, r1
 c0006c8:	ea40 0002 	orr.w	r0, r0, r2
 c0006cc:	ea81 0103 	eor.w	r1, r1, r3
 c0006d0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 c0006d4:	bfc2      	ittt	gt
 c0006d6:	ebd4 050c 	rsbsgt	r5, r4, ip
 c0006da:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 c0006de:	bd70      	popgt	{r4, r5, r6, pc}
 c0006e0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 c0006e4:	f04f 0e00 	mov.w	lr, #0
 c0006e8:	3c01      	subs	r4, #1
 c0006ea:	f300 80ab 	bgt.w	c000844 <__aeabi_dmul+0x238>
 c0006ee:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 c0006f2:	bfde      	ittt	le
 c0006f4:	2000      	movle	r0, #0
 c0006f6:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 c0006fa:	bd70      	pople	{r4, r5, r6, pc}
 c0006fc:	f1c4 0400 	rsb	r4, r4, #0
 c000700:	3c20      	subs	r4, #32
 c000702:	da35      	bge.n	c000770 <__aeabi_dmul+0x164>
 c000704:	340c      	adds	r4, #12
 c000706:	dc1b      	bgt.n	c000740 <__aeabi_dmul+0x134>
 c000708:	f104 0414 	add.w	r4, r4, #20
 c00070c:	f1c4 0520 	rsb	r5, r4, #32
 c000710:	fa00 f305 	lsl.w	r3, r0, r5
 c000714:	fa20 f004 	lsr.w	r0, r0, r4
 c000718:	fa01 f205 	lsl.w	r2, r1, r5
 c00071c:	ea40 0002 	orr.w	r0, r0, r2
 c000720:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 c000724:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 c000728:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 c00072c:	fa21 f604 	lsr.w	r6, r1, r4
 c000730:	eb42 0106 	adc.w	r1, r2, r6
 c000734:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 c000738:	bf08      	it	eq
 c00073a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 c00073e:	bd70      	pop	{r4, r5, r6, pc}
 c000740:	f1c4 040c 	rsb	r4, r4, #12
 c000744:	f1c4 0520 	rsb	r5, r4, #32
 c000748:	fa00 f304 	lsl.w	r3, r0, r4
 c00074c:	fa20 f005 	lsr.w	r0, r0, r5
 c000750:	fa01 f204 	lsl.w	r2, r1, r4
 c000754:	ea40 0002 	orr.w	r0, r0, r2
 c000758:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 c00075c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 c000760:	f141 0100 	adc.w	r1, r1, #0
 c000764:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 c000768:	bf08      	it	eq
 c00076a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 c00076e:	bd70      	pop	{r4, r5, r6, pc}
 c000770:	f1c4 0520 	rsb	r5, r4, #32
 c000774:	fa00 f205 	lsl.w	r2, r0, r5
 c000778:	ea4e 0e02 	orr.w	lr, lr, r2
 c00077c:	fa20 f304 	lsr.w	r3, r0, r4
 c000780:	fa01 f205 	lsl.w	r2, r1, r5
 c000784:	ea43 0302 	orr.w	r3, r3, r2
 c000788:	fa21 f004 	lsr.w	r0, r1, r4
 c00078c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 c000790:	fa21 f204 	lsr.w	r2, r1, r4
 c000794:	ea20 0002 	bic.w	r0, r0, r2
 c000798:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 c00079c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 c0007a0:	bf08      	it	eq
 c0007a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 c0007a6:	bd70      	pop	{r4, r5, r6, pc}
 c0007a8:	f094 0f00 	teq	r4, #0
 c0007ac:	d10f      	bne.n	c0007ce <__aeabi_dmul+0x1c2>
 c0007ae:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 c0007b2:	0040      	lsls	r0, r0, #1
 c0007b4:	eb41 0101 	adc.w	r1, r1, r1
 c0007b8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 c0007bc:	bf08      	it	eq
 c0007be:	3c01      	subeq	r4, #1
 c0007c0:	d0f7      	beq.n	c0007b2 <__aeabi_dmul+0x1a6>
 c0007c2:	ea41 0106 	orr.w	r1, r1, r6
 c0007c6:	f095 0f00 	teq	r5, #0
 c0007ca:	bf18      	it	ne
 c0007cc:	4770      	bxne	lr
 c0007ce:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 c0007d2:	0052      	lsls	r2, r2, #1
 c0007d4:	eb43 0303 	adc.w	r3, r3, r3
 c0007d8:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 c0007dc:	bf08      	it	eq
 c0007de:	3d01      	subeq	r5, #1
 c0007e0:	d0f7      	beq.n	c0007d2 <__aeabi_dmul+0x1c6>
 c0007e2:	ea43 0306 	orr.w	r3, r3, r6
 c0007e6:	4770      	bx	lr
 c0007e8:	ea94 0f0c 	teq	r4, ip
 c0007ec:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 c0007f0:	bf18      	it	ne
 c0007f2:	ea95 0f0c 	teqne	r5, ip
 c0007f6:	d00c      	beq.n	c000812 <__aeabi_dmul+0x206>
 c0007f8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 c0007fc:	bf18      	it	ne
 c0007fe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 c000802:	d1d1      	bne.n	c0007a8 <__aeabi_dmul+0x19c>
 c000804:	ea81 0103 	eor.w	r1, r1, r3
 c000808:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 c00080c:	f04f 0000 	mov.w	r0, #0
 c000810:	bd70      	pop	{r4, r5, r6, pc}
 c000812:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 c000816:	bf06      	itte	eq
 c000818:	4610      	moveq	r0, r2
 c00081a:	4619      	moveq	r1, r3
 c00081c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 c000820:	d019      	beq.n	c000856 <__aeabi_dmul+0x24a>
 c000822:	ea94 0f0c 	teq	r4, ip
 c000826:	d102      	bne.n	c00082e <__aeabi_dmul+0x222>
 c000828:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 c00082c:	d113      	bne.n	c000856 <__aeabi_dmul+0x24a>
 c00082e:	ea95 0f0c 	teq	r5, ip
 c000832:	d105      	bne.n	c000840 <__aeabi_dmul+0x234>
 c000834:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 c000838:	bf1c      	itt	ne
 c00083a:	4610      	movne	r0, r2
 c00083c:	4619      	movne	r1, r3
 c00083e:	d10a      	bne.n	c000856 <__aeabi_dmul+0x24a>
 c000840:	ea81 0103 	eor.w	r1, r1, r3
 c000844:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 c000848:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 c00084c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 c000850:	f04f 0000 	mov.w	r0, #0
 c000854:	bd70      	pop	{r4, r5, r6, pc}
 c000856:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 c00085a:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 c00085e:	bd70      	pop	{r4, r5, r6, pc}

0c000860 <__aeabi_ddiv>:
 c000860:	b570      	push	{r4, r5, r6, lr}
 c000862:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 c000866:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 c00086a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 c00086e:	bf1d      	ittte	ne
 c000870:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 c000874:	ea94 0f0c 	teqne	r4, ip
 c000878:	ea95 0f0c 	teqne	r5, ip
 c00087c:	f000 f8a7 	bleq	c0009ce <__aeabi_ddiv+0x16e>
 c000880:	eba4 0405 	sub.w	r4, r4, r5
 c000884:	ea81 0e03 	eor.w	lr, r1, r3
 c000888:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 c00088c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 c000890:	f000 8088 	beq.w	c0009a4 <__aeabi_ddiv+0x144>
 c000894:	ea4f 3303 	mov.w	r3, r3, lsl #12
 c000898:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 c00089c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 c0008a0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 c0008a4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 c0008a8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 c0008ac:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 c0008b0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 c0008b4:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 c0008b8:	429d      	cmp	r5, r3
 c0008ba:	bf08      	it	eq
 c0008bc:	4296      	cmpeq	r6, r2
 c0008be:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 c0008c2:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 c0008c6:	d202      	bcs.n	c0008ce <__aeabi_ddiv+0x6e>
 c0008c8:	085b      	lsrs	r3, r3, #1
 c0008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 c0008ce:	1ab6      	subs	r6, r6, r2
 c0008d0:	eb65 0503 	sbc.w	r5, r5, r3
 c0008d4:	085b      	lsrs	r3, r3, #1
 c0008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 c0008da:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 c0008de:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 c0008e2:	ebb6 0e02 	subs.w	lr, r6, r2
 c0008e6:	eb75 0e03 	sbcs.w	lr, r5, r3
 c0008ea:	bf22      	ittt	cs
 c0008ec:	1ab6      	subcs	r6, r6, r2
 c0008ee:	4675      	movcs	r5, lr
 c0008f0:	ea40 000c 	orrcs.w	r0, r0, ip
 c0008f4:	085b      	lsrs	r3, r3, #1
 c0008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 c0008fa:	ebb6 0e02 	subs.w	lr, r6, r2
 c0008fe:	eb75 0e03 	sbcs.w	lr, r5, r3
 c000902:	bf22      	ittt	cs
 c000904:	1ab6      	subcs	r6, r6, r2
 c000906:	4675      	movcs	r5, lr
 c000908:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 c00090c:	085b      	lsrs	r3, r3, #1
 c00090e:	ea4f 0232 	mov.w	r2, r2, rrx
 c000912:	ebb6 0e02 	subs.w	lr, r6, r2
 c000916:	eb75 0e03 	sbcs.w	lr, r5, r3
 c00091a:	bf22      	ittt	cs
 c00091c:	1ab6      	subcs	r6, r6, r2
 c00091e:	4675      	movcs	r5, lr
 c000920:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 c000924:	085b      	lsrs	r3, r3, #1
 c000926:	ea4f 0232 	mov.w	r2, r2, rrx
 c00092a:	ebb6 0e02 	subs.w	lr, r6, r2
 c00092e:	eb75 0e03 	sbcs.w	lr, r5, r3
 c000932:	bf22      	ittt	cs
 c000934:	1ab6      	subcs	r6, r6, r2
 c000936:	4675      	movcs	r5, lr
 c000938:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 c00093c:	ea55 0e06 	orrs.w	lr, r5, r6
 c000940:	d018      	beq.n	c000974 <__aeabi_ddiv+0x114>
 c000942:	ea4f 1505 	mov.w	r5, r5, lsl #4
 c000946:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 c00094a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 c00094e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 c000952:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 c000956:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 c00095a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 c00095e:	d1c0      	bne.n	c0008e2 <__aeabi_ddiv+0x82>
 c000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 c000964:	d10b      	bne.n	c00097e <__aeabi_ddiv+0x11e>
 c000966:	ea41 0100 	orr.w	r1, r1, r0
 c00096a:	f04f 0000 	mov.w	r0, #0
 c00096e:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 c000972:	e7b6      	b.n	c0008e2 <__aeabi_ddiv+0x82>
 c000974:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 c000978:	bf04      	itt	eq
 c00097a:	4301      	orreq	r1, r0
 c00097c:	2000      	moveq	r0, #0
 c00097e:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 c000982:	bf88      	it	hi
 c000984:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 c000988:	f63f aeaf 	bhi.w	c0006ea <__aeabi_dmul+0xde>
 c00098c:	ebb5 0c03 	subs.w	ip, r5, r3
 c000990:	bf04      	itt	eq
 c000992:	ebb6 0c02 	subseq.w	ip, r6, r2
 c000996:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 c00099a:	f150 0000 	adcs.w	r0, r0, #0
 c00099e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 c0009a2:	bd70      	pop	{r4, r5, r6, pc}
 c0009a4:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 c0009a8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 c0009ac:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 c0009b0:	bfc2      	ittt	gt
 c0009b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 c0009b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 c0009ba:	bd70      	popgt	{r4, r5, r6, pc}
 c0009bc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 c0009c0:	f04f 0e00 	mov.w	lr, #0
 c0009c4:	3c01      	subs	r4, #1
 c0009c6:	e690      	b.n	c0006ea <__aeabi_dmul+0xde>
 c0009c8:	ea45 0e06 	orr.w	lr, r5, r6
 c0009cc:	e68d      	b.n	c0006ea <__aeabi_dmul+0xde>
 c0009ce:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 c0009d2:	ea94 0f0c 	teq	r4, ip
 c0009d6:	bf08      	it	eq
 c0009d8:	ea95 0f0c 	teqeq	r5, ip
 c0009dc:	f43f af3b 	beq.w	c000856 <__aeabi_dmul+0x24a>
 c0009e0:	ea94 0f0c 	teq	r4, ip
 c0009e4:	d10a      	bne.n	c0009fc <__aeabi_ddiv+0x19c>
 c0009e6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 c0009ea:	f47f af34 	bne.w	c000856 <__aeabi_dmul+0x24a>
 c0009ee:	ea95 0f0c 	teq	r5, ip
 c0009f2:	f47f af25 	bne.w	c000840 <__aeabi_dmul+0x234>
 c0009f6:	4610      	mov	r0, r2
 c0009f8:	4619      	mov	r1, r3
 c0009fa:	e72c      	b.n	c000856 <__aeabi_dmul+0x24a>
 c0009fc:	ea95 0f0c 	teq	r5, ip
 c000a00:	d106      	bne.n	c000a10 <__aeabi_ddiv+0x1b0>
 c000a02:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 c000a06:	f43f aefd 	beq.w	c000804 <__aeabi_dmul+0x1f8>
 c000a0a:	4610      	mov	r0, r2
 c000a0c:	4619      	mov	r1, r3
 c000a0e:	e722      	b.n	c000856 <__aeabi_dmul+0x24a>
 c000a10:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 c000a14:	bf18      	it	ne
 c000a16:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 c000a1a:	f47f aec5 	bne.w	c0007a8 <__aeabi_dmul+0x19c>
 c000a1e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 c000a22:	f47f af0d 	bne.w	c000840 <__aeabi_dmul+0x234>
 c000a26:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 c000a2a:	f47f aeeb 	bne.w	c000804 <__aeabi_dmul+0x1f8>
 c000a2e:	e712      	b.n	c000856 <__aeabi_dmul+0x24a>

0c000a30 <__gedf2>:
 c000a30:	f04f 3cff 	mov.w	ip, #4294967295
 c000a34:	e006      	b.n	c000a44 <__cmpdf2+0x4>
 c000a36:	bf00      	nop

0c000a38 <__ledf2>:
 c000a38:	f04f 0c01 	mov.w	ip, #1
 c000a3c:	e002      	b.n	c000a44 <__cmpdf2+0x4>
 c000a3e:	bf00      	nop

0c000a40 <__cmpdf2>:
 c000a40:	f04f 0c01 	mov.w	ip, #1
 c000a44:	f84d cd04 	str.w	ip, [sp, #-4]!
 c000a48:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 c000a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 c000a50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 c000a54:	bf18      	it	ne
 c000a56:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 c000a5a:	d01b      	beq.n	c000a94 <__cmpdf2+0x54>
 c000a5c:	b001      	add	sp, #4
 c000a5e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 c000a62:	bf0c      	ite	eq
 c000a64:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 c000a68:	ea91 0f03 	teqne	r1, r3
 c000a6c:	bf02      	ittt	eq
 c000a6e:	ea90 0f02 	teqeq	r0, r2
 c000a72:	2000      	moveq	r0, #0
 c000a74:	4770      	bxeq	lr
 c000a76:	f110 0f00 	cmn.w	r0, #0
 c000a7a:	ea91 0f03 	teq	r1, r3
 c000a7e:	bf58      	it	pl
 c000a80:	4299      	cmppl	r1, r3
 c000a82:	bf08      	it	eq
 c000a84:	4290      	cmpeq	r0, r2
 c000a86:	bf2c      	ite	cs
 c000a88:	17d8      	asrcs	r0, r3, #31
 c000a8a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 c000a8e:	f040 0001 	orr.w	r0, r0, #1
 c000a92:	4770      	bx	lr
 c000a94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 c000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 c000a9c:	d102      	bne.n	c000aa4 <__cmpdf2+0x64>
 c000a9e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 c000aa2:	d107      	bne.n	c000ab4 <__cmpdf2+0x74>
 c000aa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 c000aa8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 c000aac:	d1d6      	bne.n	c000a5c <__cmpdf2+0x1c>
 c000aae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 c000ab2:	d0d3      	beq.n	c000a5c <__cmpdf2+0x1c>
 c000ab4:	f85d 0b04 	ldr.w	r0, [sp], #4
 c000ab8:	4770      	bx	lr
 c000aba:	bf00      	nop

0c000abc <__aeabi_cdrcmple>:
 c000abc:	4684      	mov	ip, r0
 c000abe:	4610      	mov	r0, r2
 c000ac0:	4662      	mov	r2, ip
 c000ac2:	468c      	mov	ip, r1
 c000ac4:	4619      	mov	r1, r3
 c000ac6:	4663      	mov	r3, ip
 c000ac8:	e000      	b.n	c000acc <__aeabi_cdcmpeq>
 c000aca:	bf00      	nop

0c000acc <__aeabi_cdcmpeq>:
 c000acc:	b501      	push	{r0, lr}
 c000ace:	f7ff ffb7 	bl	c000a40 <__cmpdf2>
 c000ad2:	2800      	cmp	r0, #0
 c000ad4:	bf48      	it	mi
 c000ad6:	f110 0f00 	cmnmi.w	r0, #0
 c000ada:	bd01      	pop	{r0, pc}

0c000adc <__aeabi_dcmpeq>:
 c000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 c000ae0:	f7ff fff4 	bl	c000acc <__aeabi_cdcmpeq>
 c000ae4:	bf0c      	ite	eq
 c000ae6:	2001      	moveq	r0, #1
 c000ae8:	2000      	movne	r0, #0
 c000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 c000aee:	bf00      	nop

0c000af0 <__aeabi_dcmplt>:
 c000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 c000af4:	f7ff ffea 	bl	c000acc <__aeabi_cdcmpeq>
 c000af8:	bf34      	ite	cc
 c000afa:	2001      	movcc	r0, #1
 c000afc:	2000      	movcs	r0, #0
 c000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 c000b02:	bf00      	nop

0c000b04 <__aeabi_dcmple>:
 c000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 c000b08:	f7ff ffe0 	bl	c000acc <__aeabi_cdcmpeq>
 c000b0c:	bf94      	ite	ls
 c000b0e:	2001      	movls	r0, #1
 c000b10:	2000      	movhi	r0, #0
 c000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 c000b16:	bf00      	nop

0c000b18 <__aeabi_dcmpge>:
 c000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 c000b1c:	f7ff ffce 	bl	c000abc <__aeabi_cdrcmple>
 c000b20:	bf94      	ite	ls
 c000b22:	2001      	movls	r0, #1
 c000b24:	2000      	movhi	r0, #0
 c000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 c000b2a:	bf00      	nop

0c000b2c <__aeabi_dcmpgt>:
 c000b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 c000b30:	f7ff ffc4 	bl	c000abc <__aeabi_cdrcmple>
 c000b34:	bf34      	ite	cc
 c000b36:	2001      	movcc	r0, #1
 c000b38:	2000      	movcs	r0, #0
 c000b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 c000b3e:	bf00      	nop

0c000b40 <__aeabi_dcmpun>:
 c000b40:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 c000b44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 c000b48:	d102      	bne.n	c000b50 <__aeabi_dcmpun+0x10>
 c000b4a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 c000b4e:	d10a      	bne.n	c000b66 <__aeabi_dcmpun+0x26>
 c000b50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 c000b54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 c000b58:	d102      	bne.n	c000b60 <__aeabi_dcmpun+0x20>
 c000b5a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 c000b5e:	d102      	bne.n	c000b66 <__aeabi_dcmpun+0x26>
 c000b60:	f04f 0000 	mov.w	r0, #0
 c000b64:	4770      	bx	lr
 c000b66:	f04f 0001 	mov.w	r0, #1
 c000b6a:	4770      	bx	lr

0c000b6c <__aeabi_d2iz>:
 c000b6c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 c000b70:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 c000b74:	d215      	bcs.n	c000ba2 <__aeabi_d2iz+0x36>
 c000b76:	d511      	bpl.n	c000b9c <__aeabi_d2iz+0x30>
 c000b78:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 c000b7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 c000b80:	d912      	bls.n	c000ba8 <__aeabi_d2iz+0x3c>
 c000b82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 c000b86:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 c000b8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 c000b8e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 c000b92:	fa23 f002 	lsr.w	r0, r3, r2
 c000b96:	bf18      	it	ne
 c000b98:	4240      	negne	r0, r0
 c000b9a:	4770      	bx	lr
 c000b9c:	f04f 0000 	mov.w	r0, #0
 c000ba0:	4770      	bx	lr
 c000ba2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 c000ba6:	d105      	bne.n	c000bb4 <__aeabi_d2iz+0x48>
 c000ba8:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 c000bac:	bf08      	it	eq
 c000bae:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 c000bb2:	4770      	bx	lr
 c000bb4:	f04f 0000 	mov.w	r0, #0
 c000bb8:	4770      	bx	lr
 c000bba:	bf00      	nop

0c000bbc <__aeabi_d2f>:
 c000bbc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 c000bc0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 c000bc4:	bf24      	itt	cs
 c000bc6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 c000bca:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 c000bce:	d90d      	bls.n	c000bec <__aeabi_d2f+0x30>
 c000bd0:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 c000bd4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 c000bd8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 c000bdc:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 c000be0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 c000be4:	bf08      	it	eq
 c000be6:	f020 0001 	biceq.w	r0, r0, #1
 c000bea:	4770      	bx	lr
 c000bec:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 c000bf0:	d121      	bne.n	c000c36 <__aeabi_d2f+0x7a>
 c000bf2:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 c000bf6:	bfbc      	itt	lt
 c000bf8:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 c000bfc:	4770      	bxlt	lr
 c000bfe:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 c000c02:	ea4f 5252 	mov.w	r2, r2, lsr #21
 c000c06:	f1c2 0218 	rsb	r2, r2, #24
 c000c0a:	f1c2 0c20 	rsb	ip, r2, #32
 c000c0e:	fa10 f30c 	lsls.w	r3, r0, ip
 c000c12:	fa20 f002 	lsr.w	r0, r0, r2
 c000c16:	bf18      	it	ne
 c000c18:	f040 0001 	orrne.w	r0, r0, #1
 c000c1c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 c000c20:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 c000c24:	fa03 fc0c 	lsl.w	ip, r3, ip
 c000c28:	ea40 000c 	orr.w	r0, r0, ip
 c000c2c:	fa23 f302 	lsr.w	r3, r3, r2
 c000c30:	ea4f 0343 	mov.w	r3, r3, lsl #1
 c000c34:	e7cc      	b.n	c000bd0 <__aeabi_d2f+0x14>
 c000c36:	ea7f 5362 	mvns.w	r3, r2, asr #21
 c000c3a:	d107      	bne.n	c000c4c <__aeabi_d2f+0x90>
 c000c3c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 c000c40:	bf1e      	ittt	ne
 c000c42:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 c000c46:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 c000c4a:	4770      	bxne	lr
 c000c4c:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 c000c50:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 c000c54:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 c000c58:	4770      	bx	lr
 c000c5a:	bf00      	nop

0c000c5c <__aeabi_uldivmod>:
 c000c5c:	b953      	cbnz	r3, c000c74 <__aeabi_uldivmod+0x18>
 c000c5e:	b94a      	cbnz	r2, c000c74 <__aeabi_uldivmod+0x18>
 c000c60:	2900      	cmp	r1, #0
 c000c62:	bf08      	it	eq
 c000c64:	2800      	cmpeq	r0, #0
 c000c66:	bf1c      	itt	ne
 c000c68:	f04f 31ff 	movne.w	r1, #4294967295
 c000c6c:	f04f 30ff 	movne.w	r0, #4294967295
 c000c70:	f000 b97e 	b.w	c000f70 <__aeabi_idiv0>
 c000c74:	f1ad 0c08 	sub.w	ip, sp, #8
 c000c78:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 c000c7c:	f000 f806 	bl	c000c8c <__udivmoddi4>
 c000c80:	f8dd e004 	ldr.w	lr, [sp, #4]
 c000c84:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 c000c88:	b004      	add	sp, #16
 c000c8a:	4770      	bx	lr

0c000c8c <__udivmoddi4>:
 c000c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c000c90:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 c000c92:	460c      	mov	r4, r1
 c000c94:	2b00      	cmp	r3, #0
 c000c96:	d14d      	bne.n	c000d34 <__udivmoddi4+0xa8>
 c000c98:	428a      	cmp	r2, r1
 c000c9a:	460f      	mov	r7, r1
 c000c9c:	4684      	mov	ip, r0
 c000c9e:	4696      	mov	lr, r2
 c000ca0:	fab2 f382 	clz	r3, r2
 c000ca4:	d960      	bls.n	c000d68 <__udivmoddi4+0xdc>
 c000ca6:	b14b      	cbz	r3, c000cbc <__udivmoddi4+0x30>
 c000ca8:	fa02 fe03 	lsl.w	lr, r2, r3
 c000cac:	f1c3 0220 	rsb	r2, r3, #32
 c000cb0:	409f      	lsls	r7, r3
 c000cb2:	fa00 fc03 	lsl.w	ip, r0, r3
 c000cb6:	fa20 f202 	lsr.w	r2, r0, r2
 c000cba:	4317      	orrs	r7, r2
 c000cbc:	ea4f 461e 	mov.w	r6, lr, lsr #16
 c000cc0:	fa1f f48e 	uxth.w	r4, lr
 c000cc4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 c000cc8:	fbb7 f1f6 	udiv	r1, r7, r6
 c000ccc:	fb06 7711 	mls	r7, r6, r1, r7
 c000cd0:	fb01 f004 	mul.w	r0, r1, r4
 c000cd4:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 c000cd8:	4290      	cmp	r0, r2
 c000cda:	d908      	bls.n	c000cee <__udivmoddi4+0x62>
 c000cdc:	eb1e 0202 	adds.w	r2, lr, r2
 c000ce0:	f101 37ff 	add.w	r7, r1, #4294967295
 c000ce4:	d202      	bcs.n	c000cec <__udivmoddi4+0x60>
 c000ce6:	4290      	cmp	r0, r2
 c000ce8:	f200 812d 	bhi.w	c000f46 <__udivmoddi4+0x2ba>
 c000cec:	4639      	mov	r1, r7
 c000cee:	1a12      	subs	r2, r2, r0
 c000cf0:	fa1f fc8c 	uxth.w	ip, ip
 c000cf4:	fbb2 f0f6 	udiv	r0, r2, r6
 c000cf8:	fb06 2210 	mls	r2, r6, r0, r2
 c000cfc:	fb00 f404 	mul.w	r4, r0, r4
 c000d00:	ea4c 4c02 	orr.w	ip, ip, r2, lsl #16
 c000d04:	4564      	cmp	r4, ip
 c000d06:	d908      	bls.n	c000d1a <__udivmoddi4+0x8e>
 c000d08:	eb1e 0c0c 	adds.w	ip, lr, ip
 c000d0c:	f100 32ff 	add.w	r2, r0, #4294967295
 c000d10:	d202      	bcs.n	c000d18 <__udivmoddi4+0x8c>
 c000d12:	4564      	cmp	r4, ip
 c000d14:	f200 811a 	bhi.w	c000f4c <__udivmoddi4+0x2c0>
 c000d18:	4610      	mov	r0, r2
 c000d1a:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 c000d1e:	ebac 0c04 	sub.w	ip, ip, r4
 c000d22:	2100      	movs	r1, #0
 c000d24:	b125      	cbz	r5, c000d30 <__udivmoddi4+0xa4>
 c000d26:	fa2c f303 	lsr.w	r3, ip, r3
 c000d2a:	2200      	movs	r2, #0
 c000d2c:	e9c5 3200 	strd	r3, r2, [r5]
 c000d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c000d34:	428b      	cmp	r3, r1
 c000d36:	d905      	bls.n	c000d44 <__udivmoddi4+0xb8>
 c000d38:	b10d      	cbz	r5, c000d3e <__udivmoddi4+0xb2>
 c000d3a:	e9c5 0100 	strd	r0, r1, [r5]
 c000d3e:	2100      	movs	r1, #0
 c000d40:	4608      	mov	r0, r1
 c000d42:	e7f5      	b.n	c000d30 <__udivmoddi4+0xa4>
 c000d44:	fab3 f183 	clz	r1, r3
 c000d48:	2900      	cmp	r1, #0
 c000d4a:	d14d      	bne.n	c000de8 <__udivmoddi4+0x15c>
 c000d4c:	42a3      	cmp	r3, r4
 c000d4e:	f0c0 80f2 	bcc.w	c000f36 <__udivmoddi4+0x2aa>
 c000d52:	4290      	cmp	r0, r2
 c000d54:	f080 80ef 	bcs.w	c000f36 <__udivmoddi4+0x2aa>
 c000d58:	4606      	mov	r6, r0
 c000d5a:	4623      	mov	r3, r4
 c000d5c:	4608      	mov	r0, r1
 c000d5e:	2d00      	cmp	r5, #0
 c000d60:	d0e6      	beq.n	c000d30 <__udivmoddi4+0xa4>
 c000d62:	e9c5 6300 	strd	r6, r3, [r5]
 c000d66:	e7e3      	b.n	c000d30 <__udivmoddi4+0xa4>
 c000d68:	2b00      	cmp	r3, #0
 c000d6a:	f040 80a2 	bne.w	c000eb2 <__udivmoddi4+0x226>
 c000d6e:	1a8a      	subs	r2, r1, r2
 c000d70:	ea4f 471e 	mov.w	r7, lr, lsr #16
 c000d74:	fa1f f68e 	uxth.w	r6, lr
 c000d78:	2101      	movs	r1, #1
 c000d7a:	fbb2 f4f7 	udiv	r4, r2, r7
 c000d7e:	fb07 2014 	mls	r0, r7, r4, r2
 c000d82:	ea4f 421c 	mov.w	r2, ip, lsr #16
 c000d86:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 c000d8a:	fb06 f004 	mul.w	r0, r6, r4
 c000d8e:	4290      	cmp	r0, r2
 c000d90:	d90f      	bls.n	c000db2 <__udivmoddi4+0x126>
 c000d92:	eb1e 0202 	adds.w	r2, lr, r2
 c000d96:	f104 38ff 	add.w	r8, r4, #4294967295
 c000d9a:	bf2c      	ite	cs
 c000d9c:	f04f 0901 	movcs.w	r9, #1
 c000da0:	f04f 0900 	movcc.w	r9, #0
 c000da4:	4290      	cmp	r0, r2
 c000da6:	d903      	bls.n	c000db0 <__udivmoddi4+0x124>
 c000da8:	f1b9 0f00 	cmp.w	r9, #0
 c000dac:	f000 80c8 	beq.w	c000f40 <__udivmoddi4+0x2b4>
 c000db0:	4644      	mov	r4, r8
 c000db2:	1a12      	subs	r2, r2, r0
 c000db4:	fa1f fc8c 	uxth.w	ip, ip
 c000db8:	fbb2 f0f7 	udiv	r0, r2, r7
 c000dbc:	fb07 2210 	mls	r2, r7, r0, r2
 c000dc0:	fb00 f606 	mul.w	r6, r0, r6
 c000dc4:	ea4c 4c02 	orr.w	ip, ip, r2, lsl #16
 c000dc8:	4566      	cmp	r6, ip
 c000dca:	d908      	bls.n	c000dde <__udivmoddi4+0x152>
 c000dcc:	eb1e 0c0c 	adds.w	ip, lr, ip
 c000dd0:	f100 32ff 	add.w	r2, r0, #4294967295
 c000dd4:	d202      	bcs.n	c000ddc <__udivmoddi4+0x150>
 c000dd6:	4566      	cmp	r6, ip
 c000dd8:	f200 80bb 	bhi.w	c000f52 <__udivmoddi4+0x2c6>
 c000ddc:	4610      	mov	r0, r2
 c000dde:	ebac 0c06 	sub.w	ip, ip, r6
 c000de2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 c000de6:	e79d      	b.n	c000d24 <__udivmoddi4+0x98>
 c000de8:	f1c1 0620 	rsb	r6, r1, #32
 c000dec:	408b      	lsls	r3, r1
 c000dee:	fa04 fe01 	lsl.w	lr, r4, r1
 c000df2:	fa22 f706 	lsr.w	r7, r2, r6
 c000df6:	fa20 fc06 	lsr.w	ip, r0, r6
 c000dfa:	40f4      	lsrs	r4, r6
 c000dfc:	408a      	lsls	r2, r1
 c000dfe:	431f      	orrs	r7, r3
 c000e00:	ea4e 030c 	orr.w	r3, lr, ip
 c000e04:	fa00 fe01 	lsl.w	lr, r0, r1
 c000e08:	ea4f 4817 	mov.w	r8, r7, lsr #16
 c000e0c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 c000e10:	fa1f fc87 	uxth.w	ip, r7
 c000e14:	fbb4 f0f8 	udiv	r0, r4, r8
 c000e18:	fb08 4410 	mls	r4, r8, r0, r4
 c000e1c:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 c000e20:	fb00 f90c 	mul.w	r9, r0, ip
 c000e24:	45a1      	cmp	r9, r4
 c000e26:	d90e      	bls.n	c000e46 <__udivmoddi4+0x1ba>
 c000e28:	193c      	adds	r4, r7, r4
 c000e2a:	f100 3aff 	add.w	sl, r0, #4294967295
 c000e2e:	bf2c      	ite	cs
 c000e30:	f04f 0b01 	movcs.w	fp, #1
 c000e34:	f04f 0b00 	movcc.w	fp, #0
 c000e38:	45a1      	cmp	r9, r4
 c000e3a:	d903      	bls.n	c000e44 <__udivmoddi4+0x1b8>
 c000e3c:	f1bb 0f00 	cmp.w	fp, #0
 c000e40:	f000 8093 	beq.w	c000f6a <__udivmoddi4+0x2de>
 c000e44:	4650      	mov	r0, sl
 c000e46:	eba4 0409 	sub.w	r4, r4, r9
 c000e4a:	fa1f f983 	uxth.w	r9, r3
 c000e4e:	fbb4 f3f8 	udiv	r3, r4, r8
 c000e52:	fb08 4413 	mls	r4, r8, r3, r4
 c000e56:	fb03 fc0c 	mul.w	ip, r3, ip
 c000e5a:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 c000e5e:	45a4      	cmp	ip, r4
 c000e60:	d906      	bls.n	c000e70 <__udivmoddi4+0x1e4>
 c000e62:	193c      	adds	r4, r7, r4
 c000e64:	f103 38ff 	add.w	r8, r3, #4294967295
 c000e68:	d201      	bcs.n	c000e6e <__udivmoddi4+0x1e2>
 c000e6a:	45a4      	cmp	ip, r4
 c000e6c:	d87a      	bhi.n	c000f64 <__udivmoddi4+0x2d8>
 c000e6e:	4643      	mov	r3, r8
 c000e70:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 c000e74:	eba4 040c 	sub.w	r4, r4, ip
 c000e78:	fba0 9802 	umull	r9, r8, r0, r2
 c000e7c:	4544      	cmp	r4, r8
 c000e7e:	46cc      	mov	ip, r9
 c000e80:	4643      	mov	r3, r8
 c000e82:	d302      	bcc.n	c000e8a <__udivmoddi4+0x1fe>
 c000e84:	d106      	bne.n	c000e94 <__udivmoddi4+0x208>
 c000e86:	45ce      	cmp	lr, r9
 c000e88:	d204      	bcs.n	c000e94 <__udivmoddi4+0x208>
 c000e8a:	3801      	subs	r0, #1
 c000e8c:	ebb9 0c02 	subs.w	ip, r9, r2
 c000e90:	eb68 0307 	sbc.w	r3, r8, r7
 c000e94:	b15d      	cbz	r5, c000eae <__udivmoddi4+0x222>
 c000e96:	ebbe 020c 	subs.w	r2, lr, ip
 c000e9a:	eb64 0403 	sbc.w	r4, r4, r3
 c000e9e:	fa04 f606 	lsl.w	r6, r4, r6
 c000ea2:	fa22 f301 	lsr.w	r3, r2, r1
 c000ea6:	40cc      	lsrs	r4, r1
 c000ea8:	431e      	orrs	r6, r3
 c000eaa:	e9c5 6400 	strd	r6, r4, [r5]
 c000eae:	2100      	movs	r1, #0
 c000eb0:	e73e      	b.n	c000d30 <__udivmoddi4+0xa4>
 c000eb2:	fa02 fe03 	lsl.w	lr, r2, r3
 c000eb6:	f1c3 0120 	rsb	r1, r3, #32
 c000eba:	fa04 f203 	lsl.w	r2, r4, r3
 c000ebe:	fa00 fc03 	lsl.w	ip, r0, r3
 c000ec2:	40cc      	lsrs	r4, r1
 c000ec4:	ea4f 471e 	mov.w	r7, lr, lsr #16
 c000ec8:	fa20 f101 	lsr.w	r1, r0, r1
 c000ecc:	fa1f f68e 	uxth.w	r6, lr
 c000ed0:	fbb4 f0f7 	udiv	r0, r4, r7
 c000ed4:	430a      	orrs	r2, r1
 c000ed6:	fb07 4410 	mls	r4, r7, r0, r4
 c000eda:	0c11      	lsrs	r1, r2, #16
 c000edc:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 c000ee0:	fb00 f406 	mul.w	r4, r0, r6
 c000ee4:	428c      	cmp	r4, r1
 c000ee6:	d90e      	bls.n	c000f06 <__udivmoddi4+0x27a>
 c000ee8:	eb1e 0101 	adds.w	r1, lr, r1
 c000eec:	f100 38ff 	add.w	r8, r0, #4294967295
 c000ef0:	bf2c      	ite	cs
 c000ef2:	f04f 0901 	movcs.w	r9, #1
 c000ef6:	f04f 0900 	movcc.w	r9, #0
 c000efa:	428c      	cmp	r4, r1
 c000efc:	d902      	bls.n	c000f04 <__udivmoddi4+0x278>
 c000efe:	f1b9 0f00 	cmp.w	r9, #0
 c000f02:	d02c      	beq.n	c000f5e <__udivmoddi4+0x2d2>
 c000f04:	4640      	mov	r0, r8
 c000f06:	1b09      	subs	r1, r1, r4
 c000f08:	b292      	uxth	r2, r2
 c000f0a:	fbb1 f4f7 	udiv	r4, r1, r7
 c000f0e:	fb07 1114 	mls	r1, r7, r4, r1
 c000f12:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 c000f16:	fb04 f106 	mul.w	r1, r4, r6
 c000f1a:	4291      	cmp	r1, r2
 c000f1c:	d907      	bls.n	c000f2e <__udivmoddi4+0x2a2>
 c000f1e:	eb1e 0202 	adds.w	r2, lr, r2
 c000f22:	f104 38ff 	add.w	r8, r4, #4294967295
 c000f26:	d201      	bcs.n	c000f2c <__udivmoddi4+0x2a0>
 c000f28:	4291      	cmp	r1, r2
 c000f2a:	d815      	bhi.n	c000f58 <__udivmoddi4+0x2cc>
 c000f2c:	4644      	mov	r4, r8
 c000f2e:	1a52      	subs	r2, r2, r1
 c000f30:	ea44 4100 	orr.w	r1, r4, r0, lsl #16
 c000f34:	e721      	b.n	c000d7a <__udivmoddi4+0xee>
 c000f36:	1a86      	subs	r6, r0, r2
 c000f38:	eb64 0303 	sbc.w	r3, r4, r3
 c000f3c:	2001      	movs	r0, #1
 c000f3e:	e70e      	b.n	c000d5e <__udivmoddi4+0xd2>
 c000f40:	3c02      	subs	r4, #2
 c000f42:	4472      	add	r2, lr
 c000f44:	e735      	b.n	c000db2 <__udivmoddi4+0x126>
 c000f46:	3902      	subs	r1, #2
 c000f48:	4472      	add	r2, lr
 c000f4a:	e6d0      	b.n	c000cee <__udivmoddi4+0x62>
 c000f4c:	44f4      	add	ip, lr
 c000f4e:	3802      	subs	r0, #2
 c000f50:	e6e3      	b.n	c000d1a <__udivmoddi4+0x8e>
 c000f52:	44f4      	add	ip, lr
 c000f54:	3802      	subs	r0, #2
 c000f56:	e742      	b.n	c000dde <__udivmoddi4+0x152>
 c000f58:	3c02      	subs	r4, #2
 c000f5a:	4472      	add	r2, lr
 c000f5c:	e7e7      	b.n	c000f2e <__udivmoddi4+0x2a2>
 c000f5e:	3802      	subs	r0, #2
 c000f60:	4471      	add	r1, lr
 c000f62:	e7d0      	b.n	c000f06 <__udivmoddi4+0x27a>
 c000f64:	3b02      	subs	r3, #2
 c000f66:	443c      	add	r4, r7
 c000f68:	e782      	b.n	c000e70 <__udivmoddi4+0x1e4>
 c000f6a:	3802      	subs	r0, #2
 c000f6c:	443c      	add	r4, r7
 c000f6e:	e76a      	b.n	c000e46 <__udivmoddi4+0x1ba>

0c000f70 <__aeabi_idiv0>:
 c000f70:	4770      	bx	lr
 c000f72:	bf00      	nop

0c000f74 <sha256_initialize>:
 c000f74:	b510      	push	{r4, lr}
 c000f76:	4604      	mov	r4, r0
 c000f78:	2244      	movs	r2, #68	@ 0x44
 c000f7a:	2100      	movs	r1, #0
 c000f7c:	3020      	adds	r0, #32
 c000f7e:	f00e fb57 	bl	c00f630 <memset>
 c000f82:	2300      	movs	r3, #0
 c000f84:	480a      	ldr	r0, [pc, #40]	@ (c000fb0 <sha256_initialize+0x3c>)
 c000f86:	4a0b      	ldr	r2, [pc, #44]	@ (c000fb4 <sha256_initialize+0x40>)
 c000f88:	490b      	ldr	r1, [pc, #44]	@ (c000fb8 <sha256_initialize+0x44>)
 c000f8a:	e9c4 0218 	strd	r0, r2, [r4, #96]	@ 0x60
 c000f8e:	4a0b      	ldr	r2, [pc, #44]	@ (c000fbc <sha256_initialize+0x48>)
 c000f90:	480b      	ldr	r0, [pc, #44]	@ (c000fc0 <sha256_initialize+0x4c>)
 c000f92:	e9c4 121a 	strd	r1, r2, [r4, #104]	@ 0x68
 c000f96:	4a0b      	ldr	r2, [pc, #44]	@ (c000fc4 <sha256_initialize+0x50>)
 c000f98:	490b      	ldr	r1, [pc, #44]	@ (c000fc8 <sha256_initialize+0x54>)
 c000f9a:	e9c4 021c 	strd	r0, r2, [r4, #112]	@ 0x70
 c000f9e:	4a0b      	ldr	r2, [pc, #44]	@ (c000fcc <sha256_initialize+0x58>)
 c000fa0:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 c000fa4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 c000fa8:	e9c4 121e 	strd	r1, r2, [r4, #120]	@ 0x78
 c000fac:	bd10      	pop	{r4, pc}
 c000fae:	bf00      	nop
 c000fb0:	6a09e667 	.word	0x6a09e667
 c000fb4:	bb67ae85 	.word	0xbb67ae85
 c000fb8:	3c6ef372 	.word	0x3c6ef372
 c000fbc:	a54ff53a 	.word	0xa54ff53a
 c000fc0:	510e527f 	.word	0x510e527f
 c000fc4:	9b05688c 	.word	0x9b05688c
 c000fc8:	1f83d9ab 	.word	0x1f83d9ab
 c000fcc:	5be0cd19 	.word	0x5be0cd19

0c000fd0 <sha256_update>:
 c000fd0:	4603      	mov	r3, r0
 c000fd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c000fd6:	00d7      	lsls	r7, r2, #3
 c000fd8:	f5ad 7d0f 	sub.w	sp, sp, #572	@ 0x23c
 c000fdc:	f06f 0602 	mvn.w	r6, #2
 c000fe0:	2407      	movs	r4, #7
 c000fe2:	e9cd 2001 	strd	r2, r0, [sp, #4]
 c000fe6:	337f      	adds	r3, #127	@ 0x7f
 c000fe8:	fa5f fc87 	uxtb.w	ip, r7
 c000fec:	e00e      	b.n	c00100c <sha256_update+0x3c>
 c000fee:	2c02      	cmp	r4, #2
 c000ff0:	f340 81cb 	ble.w	c00138a <sha256_update+0x3ba>
 c000ff4:	9801      	ldr	r0, [sp, #4]
 c000ff6:	fa20 f506 	lsr.w	r5, r0, r6
 c000ffa:	fa52 f085 	uxtab	r0, r2, r5
 c000ffe:	28ff      	cmp	r0, #255	@ 0xff
 c001000:	dc0c      	bgt.n	c00101c <sha256_update+0x4c>
 c001002:	442a      	add	r2, r5
 c001004:	721a      	strb	r2, [r3, #8]
 c001006:	3c01      	subs	r4, #1
 c001008:	3b01      	subs	r3, #1
 c00100a:	3608      	adds	r6, #8
 c00100c:	2c07      	cmp	r4, #7
 c00100e:	7a1a      	ldrb	r2, [r3, #8]
 c001010:	d1ed      	bne.n	c000fee <sha256_update+0x1e>
 c001012:	eb0c 0002 	add.w	r0, ip, r2
 c001016:	28ff      	cmp	r0, #255	@ 0xff
 c001018:	463d      	mov	r5, r7
 c00101a:	ddf2      	ble.n	c001002 <sha256_update+0x32>
 c00101c:	79d8      	ldrb	r0, [r3, #7]
 c00101e:	f100 0e01 	add.w	lr, r0, #1
 c001022:	28ff      	cmp	r0, #255	@ 0xff
 c001024:	f883 e007 	strb.w	lr, [r3, #7]
 c001028:	d13e      	bne.n	c0010a8 <sha256_update+0xd8>
 c00102a:	7998      	ldrb	r0, [r3, #6]
 c00102c:	f100 0e01 	add.w	lr, r0, #1
 c001030:	28ff      	cmp	r0, #255	@ 0xff
 c001032:	f883 e006 	strb.w	lr, [r3, #6]
 c001036:	d137      	bne.n	c0010a8 <sha256_update+0xd8>
 c001038:	2c02      	cmp	r4, #2
 c00103a:	f000 8182 	beq.w	c001342 <sha256_update+0x372>
 c00103e:	7958      	ldrb	r0, [r3, #5]
 c001040:	f100 0e01 	add.w	lr, r0, #1
 c001044:	28ff      	cmp	r0, #255	@ 0xff
 c001046:	f883 e005 	strb.w	lr, [r3, #5]
 c00104a:	d12d      	bne.n	c0010a8 <sha256_update+0xd8>
 c00104c:	2c03      	cmp	r4, #3
 c00104e:	f000 817e 	beq.w	c00134e <sha256_update+0x37e>
 c001052:	7918      	ldrb	r0, [r3, #4]
 c001054:	f100 0e01 	add.w	lr, r0, #1
 c001058:	28ff      	cmp	r0, #255	@ 0xff
 c00105a:	f883 e004 	strb.w	lr, [r3, #4]
 c00105e:	d123      	bne.n	c0010a8 <sha256_update+0xd8>
 c001060:	2c04      	cmp	r4, #4
 c001062:	f000 817a 	beq.w	c00135a <sha256_update+0x38a>
 c001066:	78d8      	ldrb	r0, [r3, #3]
 c001068:	f100 0e01 	add.w	lr, r0, #1
 c00106c:	28ff      	cmp	r0, #255	@ 0xff
 c00106e:	f883 e003 	strb.w	lr, [r3, #3]
 c001072:	d119      	bne.n	c0010a8 <sha256_update+0xd8>
 c001074:	2c05      	cmp	r4, #5
 c001076:	f000 8176 	beq.w	c001366 <sha256_update+0x396>
 c00107a:	7898      	ldrb	r0, [r3, #2]
 c00107c:	f100 0e01 	add.w	lr, r0, #1
 c001080:	28ff      	cmp	r0, #255	@ 0xff
 c001082:	f883 e002 	strb.w	lr, [r3, #2]
 c001086:	d10f      	bne.n	c0010a8 <sha256_update+0xd8>
 c001088:	2c06      	cmp	r4, #6
 c00108a:	f000 8172 	beq.w	c001372 <sha256_update+0x3a2>
 c00108e:	7858      	ldrb	r0, [r3, #1]
 c001090:	f100 0e01 	add.w	lr, r0, #1
 c001094:	28ff      	cmp	r0, #255	@ 0xff
 c001096:	f883 e001 	strb.w	lr, [r3, #1]
 c00109a:	d105      	bne.n	c0010a8 <sha256_update+0xd8>
 c00109c:	2c07      	cmp	r4, #7
 c00109e:	f000 816e 	beq.w	c00137e <sha256_update+0x3ae>
 c0010a2:	7818      	ldrb	r0, [r3, #0]
 c0010a4:	3001      	adds	r0, #1
 c0010a6:	7018      	strb	r0, [r3, #0]
 c0010a8:	442a      	add	r2, r5
 c0010aa:	3c01      	subs	r4, #1
 c0010ac:	721a      	strb	r2, [r3, #8]
 c0010ae:	1c62      	adds	r2, r4, #1
 c0010b0:	d1aa      	bne.n	c001008 <sha256_update+0x38>
 c0010b2:	9801      	ldr	r0, [sp, #4]
 c0010b4:	b340      	cbz	r0, c001108 <sha256_update+0x138>
 c0010b6:	468b      	mov	fp, r1
 c0010b8:	9b02      	ldr	r3, [sp, #8]
 c0010ba:	9d01      	ldr	r5, [sp, #4]
 c0010bc:	f893 2086 	ldrb.w	r2, [r3, #134]	@ 0x86
 c0010c0:	f893 3087 	ldrb.w	r3, [r3, #135]	@ 0x87
 c0010c4:	f002 0201 	and.w	r2, r2, #1
 c0010c8:	08db      	lsrs	r3, r3, #3
 c0010ca:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 c0010ce:	1a18      	subs	r0, r3, r0
 c0010d0:	9303      	str	r3, [sp, #12]
 c0010d2:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 c0010d6:	9e02      	ldr	r6, [sp, #8]
 c0010d8:	e001      	b.n	c0010de <sha256_update+0x10e>
 c0010da:	2840      	cmp	r0, #64	@ 0x40
 c0010dc:	d018      	beq.n	c001110 <sha256_update+0x140>
 c0010de:	43c3      	mvns	r3, r0
 c0010e0:	f020 0203 	bic.w	r2, r0, #3
 c0010e4:	f81b 4b01 	ldrb.w	r4, [fp], #1
 c0010e8:	4432      	add	r2, r6
 c0010ea:	f003 0303 	and.w	r3, r3, #3
 c0010ee:	6a11      	ldr	r1, [r2, #32]
 c0010f0:	00db      	lsls	r3, r3, #3
 c0010f2:	fa04 f303 	lsl.w	r3, r4, r3
 c0010f6:	4319      	orrs	r1, r3
 c0010f8:	3d01      	subs	r5, #1
 c0010fa:	f100 0001 	add.w	r0, r0, #1
 c0010fe:	6211      	str	r1, [r2, #32]
 c001100:	d1eb      	bne.n	c0010da <sha256_update+0x10a>
 c001102:	2840      	cmp	r0, #64	@ 0x40
 c001104:	9501      	str	r5, [sp, #4]
 c001106:	d004      	beq.n	c001112 <sha256_update+0x142>
 c001108:	f50d 7d0f 	add.w	sp, sp, #572	@ 0x23c
 c00110c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c001110:	9501      	str	r5, [sp, #4]
 c001112:	f44f 7280 	mov.w	r2, #256	@ 0x100
 c001116:	499e      	ldr	r1, [pc, #632]	@ (c001390 <sha256_update+0x3c0>)
 c001118:	a84e      	add	r0, sp, #312	@ 0x138
 c00111a:	f00e fb58 	bl	c00f7ce <memcpy>
 c00111e:	9902      	ldr	r1, [sp, #8]
 c001120:	2300      	movs	r3, #0
 c001122:	6a8a      	ldr	r2, [r1, #40]	@ 0x28
 c001124:	2710      	movs	r7, #16
 c001126:	9200      	str	r2, [sp, #0]
 c001128:	e9d1 240b 	ldrd	r2, r4, [r1, #44]	@ 0x2c
 c00112c:	9404      	str	r4, [sp, #16]
 c00112e:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 c001130:	6a48      	ldr	r0, [r1, #36]	@ 0x24
 c001132:	9405      	str	r4, [sp, #20]
 c001134:	6b8c      	ldr	r4, [r1, #56]	@ 0x38
 c001136:	6a0e      	ldr	r6, [r1, #32]
 c001138:	9406      	str	r4, [sp, #24]
 c00113a:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 c00113c:	900f      	str	r0, [sp, #60]	@ 0x3c
 c00113e:	9407      	str	r4, [sp, #28]
 c001140:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 c001142:	9800      	ldr	r0, [sp, #0]
 c001144:	9408      	str	r4, [sp, #32]
 c001146:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 c001148:	960e      	str	r6, [sp, #56]	@ 0x38
 c00114a:	9409      	str	r4, [sp, #36]	@ 0x24
 c00114c:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 c00114e:	ad0e      	add	r5, sp, #56	@ 0x38
 c001150:	940a      	str	r4, [sp, #40]	@ 0x28
 c001152:	6ccc      	ldr	r4, [r1, #76]	@ 0x4c
 c001154:	940b      	str	r4, [sp, #44]	@ 0x2c
 c001156:	6d0c      	ldr	r4, [r1, #80]	@ 0x50
 c001158:	940c      	str	r4, [sp, #48]	@ 0x30
 c00115a:	6d4c      	ldr	r4, [r1, #84]	@ 0x54
 c00115c:	940d      	str	r4, [sp, #52]	@ 0x34
 c00115e:	e9d1 1416 	ldrd	r1, r4, [r1, #88]	@ 0x58
 c001162:	e9cd 0210 	strd	r0, r2, [sp, #64]	@ 0x40
 c001166:	9804      	ldr	r0, [sp, #16]
 c001168:	9a02      	ldr	r2, [sp, #8]
 c00116a:	9012      	str	r0, [sp, #72]	@ 0x48
 c00116c:	9805      	ldr	r0, [sp, #20]
 c00116e:	e9c2 3308 	strd	r3, r3, [r2, #32]
 c001172:	9013      	str	r0, [sp, #76]	@ 0x4c
 c001174:	9806      	ldr	r0, [sp, #24]
 c001176:	e9c2 330a 	strd	r3, r3, [r2, #40]	@ 0x28
 c00117a:	9014      	str	r0, [sp, #80]	@ 0x50
 c00117c:	9807      	ldr	r0, [sp, #28]
 c00117e:	e9c2 330c 	strd	r3, r3, [r2, #48]	@ 0x30
 c001182:	9015      	str	r0, [sp, #84]	@ 0x54
 c001184:	9808      	ldr	r0, [sp, #32]
 c001186:	e9c2 330e 	strd	r3, r3, [r2, #56]	@ 0x38
 c00118a:	9016      	str	r0, [sp, #88]	@ 0x58
 c00118c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 c00118e:	941d      	str	r4, [sp, #116]	@ 0x74
 c001190:	9017      	str	r0, [sp, #92]	@ 0x5c
 c001192:	980a      	ldr	r0, [sp, #40]	@ 0x28
 c001194:	9018      	str	r0, [sp, #96]	@ 0x60
 c001196:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c001198:	9019      	str	r0, [sp, #100]	@ 0x64
 c00119a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 c00119c:	901a      	str	r0, [sp, #104]	@ 0x68
 c00119e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 c0011a0:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
 c0011a4:	e9c2 3310 	strd	r3, r3, [r2, #64]	@ 0x40
 c0011a8:	e9c2 3312 	strd	r3, r3, [r2, #72]	@ 0x48
 c0011ac:	e9c2 3314 	strd	r3, r3, [r2, #80]	@ 0x50
 c0011b0:	e9c2 3316 	strd	r3, r3, [r2, #88]	@ 0x58
 c0011b4:	ea4f 43f1 	mov.w	r3, r1, ror #19
 c0011b8:	ea83 4371 	eor.w	r3, r3, r1, ror #17
 c0011bc:	686a      	ldr	r2, [r5, #4]
 c0011be:	ea83 2391 	eor.w	r3, r3, r1, lsr #10
 c0011c2:	6a69      	ldr	r1, [r5, #36]	@ 0x24
 c0011c4:	3702      	adds	r7, #2
 c0011c6:	440b      	add	r3, r1
 c0011c8:	ea4f 41b2 	mov.w	r1, r2, ror #18
 c0011cc:	ea81 11f2 	eor.w	r1, r1, r2, ror #7
 c0011d0:	ea81 01d2 	eor.w	r1, r1, r2, lsr #3
 c0011d4:	440b      	add	r3, r1
 c0011d6:	1999      	adds	r1, r3, r6
 c0011d8:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c0011da:	68ae      	ldr	r6, [r5, #8]
 c0011dc:	441a      	add	r2, r3
 c0011de:	ea4f 43f4 	mov.w	r3, r4, ror #19
 c0011e2:	ea83 4374 	eor.w	r3, r3, r4, ror #17
 c0011e6:	ea83 2394 	eor.w	r3, r3, r4, lsr #10
 c0011ea:	ea4f 44b6 	mov.w	r4, r6, ror #18
 c0011ee:	ea84 14f6 	eor.w	r4, r4, r6, ror #7
 c0011f2:	4413      	add	r3, r2
 c0011f4:	ea84 04d6 	eor.w	r4, r4, r6, lsr #3
 c0011f8:	441c      	add	r4, r3
 c0011fa:	2f3e      	cmp	r7, #62	@ 0x3e
 c0011fc:	6429      	str	r1, [r5, #64]	@ 0x40
 c0011fe:	646c      	str	r4, [r5, #68]	@ 0x44
 c001200:	f105 0508 	add.w	r5, r5, #8
 c001204:	d1d6      	bne.n	c0011b4 <sha256_update+0x1e4>
 c001206:	e9dd 753d 	ldrd	r7, r5, [sp, #244]	@ 0xf4
 c00120a:	9945      	ldr	r1, [sp, #276]	@ 0x114
 c00120c:	ea4f 40b7 	mov.w	r0, r7, ror #18
 c001210:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 c001212:	ea80 10f7 	eor.w	r0, r0, r7, ror #7
 c001216:	ea80 00d7 	eor.w	r0, r0, r7, lsr #3
 c00121a:	440b      	add	r3, r1
 c00121c:	1819      	adds	r1, r3, r0
 c00121e:	9e46      	ldr	r6, [sp, #280]	@ 0x118
 c001220:	ea4f 43b5 	mov.w	r3, r5, ror #18
 c001224:	ea83 13f5 	eor.w	r3, r3, r5, ror #7
 c001228:	443e      	add	r6, r7
 c00122a:	ea83 03d5 	eor.w	r3, r3, r5, lsr #3
 c00122e:	e9dd 424a 	ldrd	r4, r2, [sp, #296]	@ 0x128
 c001232:	18f0      	adds	r0, r6, r3
 c001234:	ea4f 43f4 	mov.w	r3, r4, ror #19
 c001238:	ea83 4374 	eor.w	r3, r3, r4, ror #17
 c00123c:	ea83 2394 	eor.w	r3, r3, r4, lsr #10
 c001240:	4419      	add	r1, r3
 c001242:	ea4f 43f2 	mov.w	r3, r2, ror #19
 c001246:	ea83 4372 	eor.w	r3, r3, r2, ror #17
 c00124a:	ea83 2392 	eor.w	r3, r3, r2, lsr #10
 c00124e:	4403      	add	r3, r0
 c001250:	934d      	str	r3, [sp, #308]	@ 0x134
 c001252:	9b02      	ldr	r3, [sp, #8]
 c001254:	914c      	str	r1, [sp, #304]	@ 0x130
 c001256:	6edc      	ldr	r4, [r3, #108]	@ 0x6c
 c001258:	6f5e      	ldr	r6, [r3, #116]	@ 0x74
 c00125a:	e9d3 1218 	ldrd	r1, r2, [r3, #96]	@ 0x60
 c00125e:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 c001260:	6f18      	ldr	r0, [r3, #112]	@ 0x70
 c001262:	6f9f      	ldr	r7, [r3, #120]	@ 0x78
 c001264:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 c001266:	46b6      	mov	lr, r6
 c001268:	4699      	mov	r9, r3
 c00126a:	9309      	str	r3, [sp, #36]	@ 0x24
 c00126c:	ab0d      	add	r3, sp, #52	@ 0x34
 c00126e:	46a0      	mov	r8, r4
 c001270:	9405      	str	r4, [sp, #20]
 c001272:	9607      	str	r6, [sp, #28]
 c001274:	460c      	mov	r4, r1
 c001276:	4616      	mov	r6, r2
 c001278:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 c00127c:	9504      	str	r5, [sp, #16]
 c00127e:	9006      	str	r0, [sp, #24]
 c001280:	9708      	str	r7, [sp, #32]
 c001282:	f50d 7c9a 	add.w	ip, sp, #308	@ 0x134
 c001286:	9300      	str	r3, [sp, #0]
 c001288:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 c00128c:	e005      	b.n	c00129a <sha256_update+0x2ca>
 c00128e:	4677      	mov	r7, lr
 c001290:	4635      	mov	r5, r6
 c001292:	4686      	mov	lr, r0
 c001294:	4626      	mov	r6, r4
 c001296:	4650      	mov	r0, sl
 c001298:	461c      	mov	r4, r3
 c00129a:	9900      	ldr	r1, [sp, #0]
 c00129c:	f85c af04 	ldr.w	sl, [ip, #4]!
 c0012a0:	f851 2f04 	ldr.w	r2, [r1, #4]!
 c0012a4:	ea4f 23f0 	mov.w	r3, r0, ror #11
 c0012a8:	ea83 13b0 	eor.w	r3, r3, r0, ror #6
 c0012ac:	4452      	add	r2, sl
 c0012ae:	ea83 6370 	eor.w	r3, r3, r0, ror #25
 c0012b2:	441a      	add	r2, r3
 c0012b4:	ea00 0a0e 	and.w	sl, r0, lr
 c0012b8:	ea27 0300 	bic.w	r3, r7, r0
 c0012bc:	ea83 030a 	eor.w	r3, r3, sl
 c0012c0:	4413      	add	r3, r2
 c0012c2:	9100      	str	r1, [sp, #0]
 c0012c4:	ea85 0206 	eor.w	r2, r5, r6
 c0012c8:	ea4f 3174 	mov.w	r1, r4, ror #13
 c0012cc:	ea81 01b4 	eor.w	r1, r1, r4, ror #2
 c0012d0:	4022      	ands	r2, r4
 c0012d2:	ea05 0b06 	and.w	fp, r5, r6
 c0012d6:	ea81 51b4 	eor.w	r1, r1, r4, ror #22
 c0012da:	ea82 020b 	eor.w	r2, r2, fp
 c0012de:	444b      	add	r3, r9
 c0012e0:	440a      	add	r2, r1
 c0012e2:	eb03 0a08 	add.w	sl, r3, r8
 c0012e6:	4413      	add	r3, r2
 c0012e8:	aa8d      	add	r2, sp, #564	@ 0x234
 c0012ea:	4562      	cmp	r2, ip
 c0012ec:	46b9      	mov	r9, r7
 c0012ee:	46a8      	mov	r8, r5
 c0012f0:	d1cd      	bne.n	c00128e <sha256_update+0x2be>
 c0012f2:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	@ 0x28
 c0012f6:	4419      	add	r1, r3
 c0012f8:	9b04      	ldr	r3, [sp, #16]
 c0012fa:	4414      	add	r4, r2
 c0012fc:	4433      	add	r3, r6
 c0012fe:	469c      	mov	ip, r3
 c001300:	9b07      	ldr	r3, [sp, #28]
 c001302:	9a05      	ldr	r2, [sp, #20]
 c001304:	4403      	add	r3, r0
 c001306:	4618      	mov	r0, r3
 c001308:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c00130a:	442a      	add	r2, r5
 c00130c:	443b      	add	r3, r7
 c00130e:	461f      	mov	r7, r3
 c001310:	9b02      	ldr	r3, [sp, #8]
 c001312:	9d06      	ldr	r5, [sp, #24]
 c001314:	9e08      	ldr	r6, [sp, #32]
 c001316:	e9c3 c21a 	strd	ip, r2, [r3, #104]	@ 0x68
 c00131a:	9a01      	ldr	r2, [sp, #4]
 c00131c:	4455      	add	r5, sl
 c00131e:	4476      	add	r6, lr
 c001320:	e9c3 1418 	strd	r1, r4, [r3, #96]	@ 0x60
 c001324:	e9c3 501c 	strd	r5, r0, [r3, #112]	@ 0x70
 c001328:	e9c3 671e 	strd	r6, r7, [r3, #120]	@ 0x78
 c00132c:	f8dd b030 	ldr.w	fp, [sp, #48]	@ 0x30
 c001330:	2a00      	cmp	r2, #0
 c001332:	f43f aee9 	beq.w	c001108 <sha256_update+0x138>
 c001336:	9b03      	ldr	r3, [sp, #12]
 c001338:	4615      	mov	r5, r2
 c00133a:	1a98      	subs	r0, r3, r2
 c00133c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 c001340:	e6c9      	b.n	c0010d6 <sha256_update+0x106>
 c001342:	442a      	add	r2, r5
 c001344:	721a      	strb	r2, [r3, #8]
 c001346:	2401      	movs	r4, #1
 c001348:	3608      	adds	r6, #8
 c00134a:	3b01      	subs	r3, #1
 c00134c:	e65e      	b.n	c00100c <sha256_update+0x3c>
 c00134e:	442a      	add	r2, r5
 c001350:	721a      	strb	r2, [r3, #8]
 c001352:	2402      	movs	r4, #2
 c001354:	3608      	adds	r6, #8
 c001356:	3b01      	subs	r3, #1
 c001358:	e658      	b.n	c00100c <sha256_update+0x3c>
 c00135a:	442a      	add	r2, r5
 c00135c:	721a      	strb	r2, [r3, #8]
 c00135e:	2403      	movs	r4, #3
 c001360:	3608      	adds	r6, #8
 c001362:	3b01      	subs	r3, #1
 c001364:	e652      	b.n	c00100c <sha256_update+0x3c>
 c001366:	442a      	add	r2, r5
 c001368:	721a      	strb	r2, [r3, #8]
 c00136a:	2404      	movs	r4, #4
 c00136c:	3608      	adds	r6, #8
 c00136e:	3b01      	subs	r3, #1
 c001370:	e64c      	b.n	c00100c <sha256_update+0x3c>
 c001372:	442a      	add	r2, r5
 c001374:	721a      	strb	r2, [r3, #8]
 c001376:	2405      	movs	r4, #5
 c001378:	3608      	adds	r6, #8
 c00137a:	3b01      	subs	r3, #1
 c00137c:	e646      	b.n	c00100c <sha256_update+0x3c>
 c00137e:	442a      	add	r2, r5
 c001380:	721a      	strb	r2, [r3, #8]
 c001382:	2406      	movs	r4, #6
 c001384:	3608      	adds	r6, #8
 c001386:	3b01      	subs	r3, #1
 c001388:	e640      	b.n	c00100c <sha256_update+0x3c>
 c00138a:	2500      	movs	r5, #0
 c00138c:	e68c      	b.n	c0010a8 <sha256_update+0xd8>
 c00138e:	bf00      	nop
 c001390:	0c0118ec 	.word	0x0c0118ec

0c001394 <sha256_finalize>:
 c001394:	b5f0      	push	{r4, r5, r6, r7, lr}
 c001396:	4615      	mov	r5, r2
 c001398:	2780      	movs	r7, #128	@ 0x80
 c00139a:	b093      	sub	sp, #76	@ 0x4c
 c00139c:	4604      	mov	r4, r0
 c00139e:	460e      	mov	r6, r1
 c0013a0:	2244      	movs	r2, #68	@ 0x44
 c0013a2:	2100      	movs	r1, #0
 c0013a4:	a801      	add	r0, sp, #4
 c0013a6:	9700      	str	r7, [sp, #0]
 c0013a8:	f00e f942 	bl	c00f630 <memset>
 c0013ac:	bb7d      	cbnz	r5, c00140e <sha256_finalize+0x7a>
 c0013ae:	f894 3086 	ldrb.w	r3, [r4, #134]	@ 0x86
 c0013b2:	f894 2087 	ldrb.w	r2, [r4, #135]	@ 0x87
 c0013b6:	f003 0301 	and.w	r3, r3, #1
 c0013ba:	f1c3 0302 	rsb	r3, r3, #2
 c0013be:	08d2      	lsrs	r2, r2, #3
 c0013c0:	ebc2 1243 	rsb	r2, r2, r3, lsl #5
 c0013c4:	2a08      	cmp	r2, #8
 c0013c6:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
 c0013ca:	bfd8      	it	le
 c0013cc:	3240      	addle	r2, #64	@ 0x40
 c0013ce:	f1a2 0308 	sub.w	r3, r2, #8
 c0013d2:	f84d 1003 	str.w	r1, [sp, r3]
 c0013d6:	eb0d 0503 	add.w	r5, sp, r3
 c0013da:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 c0013de:	4620      	mov	r0, r4
 c0013e0:	4669      	mov	r1, sp
 c0013e2:	606b      	str	r3, [r5, #4]
 c0013e4:	f7ff fdf4 	bl	c000fd0 <sha256_update>
 c0013e8:	2200      	movs	r2, #0
 c0013ea:	1e60      	subs	r0, r4, #1
 c0013ec:	43d3      	mvns	r3, r2
 c0013ee:	1091      	asrs	r1, r2, #2
 c0013f0:	3118      	adds	r1, #24
 c0013f2:	f854 1021 	ldr.w	r1, [r4, r1, lsl #2]
 c0013f6:	f003 0303 	and.w	r3, r3, #3
 c0013fa:	3201      	adds	r2, #1
 c0013fc:	00db      	lsls	r3, r3, #3
 c0013fe:	fa21 f303 	lsr.w	r3, r1, r3
 c001402:	2a20      	cmp	r2, #32
 c001404:	f800 3f01 	strb.w	r3, [r0, #1]!
 c001408:	d1f0      	bne.n	c0013ec <sha256_finalize+0x58>
 c00140a:	b013      	add	sp, #76	@ 0x4c
 c00140c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c00140e:	462a      	mov	r2, r5
 c001410:	4631      	mov	r1, r6
 c001412:	4620      	mov	r0, r4
 c001414:	f7ff fddc 	bl	c000fd0 <sha256_update>
 c001418:	e7c9      	b.n	c0013ae <sha256_finalize+0x1a>
 c00141a:	bf00      	nop

0c00141c <hmac_sha256_initialize>:
 c00141c:	2a40      	cmp	r2, #64	@ 0x40
 c00141e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c001422:	4604      	mov	r4, r0
 c001424:	4616      	mov	r6, r2
 c001426:	460d      	mov	r5, r1
 c001428:	f100 0860 	add.w	r8, r0, #96	@ 0x60
 c00142c:	dc28      	bgt.n	c001480 <hmac_sha256_initialize+0x64>
 c00142e:	2a00      	cmp	r2, #0
 c001430:	f340 80a3 	ble.w	c00157a <hmac_sha256_initialize+0x15e>
 c001434:	1e53      	subs	r3, r2, #1
 c001436:	2b04      	cmp	r3, #4
 c001438:	f100 0720 	add.w	r7, r0, #32
 c00143c:	d904      	bls.n	c001448 <hmac_sha256_initialize+0x2c>
 c00143e:	1c4b      	adds	r3, r1, #1
 c001440:	1afb      	subs	r3, r7, r3
 c001442:	2b02      	cmp	r3, #2
 c001444:	f200 809d 	bhi.w	c001582 <hmac_sha256_initialize+0x166>
 c001448:	1e69      	subs	r1, r5, #1
 c00144a:	f104 021f 	add.w	r2, r4, #31
 c00144e:	1988      	adds	r0, r1, r6
 c001450:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 c001454:	f083 0336 	eor.w	r3, r3, #54	@ 0x36
 c001458:	4288      	cmp	r0, r1
 c00145a:	f802 3f01 	strb.w	r3, [r2, #1]!
 c00145e:	d1f7      	bne.n	c001450 <hmac_sha256_initialize+0x34>
 c001460:	2e40      	cmp	r6, #64	@ 0x40
 c001462:	f000 810f 	beq.w	c001684 <hmac_sha256_initialize+0x268>
 c001466:	f106 0020 	add.w	r0, r6, #32
 c00146a:	2136      	movs	r1, #54	@ 0x36
 c00146c:	f1c6 0240 	rsb	r2, r6, #64	@ 0x40
 c001470:	4420      	add	r0, r4
 c001472:	f00e f8dd 	bl	c00f630 <memset>
 c001476:	f104 0980 	add.w	r9, r4, #128	@ 0x80
 c00147a:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
 c00147e:	e051      	b.n	c001524 <hmac_sha256_initialize+0x108>
 c001480:	f100 0980 	add.w	r9, r0, #128	@ 0x80
 c001484:	2244      	movs	r2, #68	@ 0x44
 c001486:	2100      	movs	r1, #0
 c001488:	4648      	mov	r0, r9
 c00148a:	f00e f8d1 	bl	c00f630 <memset>
 c00148e:	2300      	movs	r3, #0
 c001490:	4f80      	ldr	r7, [pc, #512]	@ (c001694 <hmac_sha256_initialize+0x278>)
 c001492:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
 c001496:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
 c00149a:	4b7f      	ldr	r3, [pc, #508]	@ (c001698 <hmac_sha256_initialize+0x27c>)
 c00149c:	4629      	mov	r1, r5
 c00149e:	e9c4 7334 	strd	r7, r3, [r4, #208]	@ 0xd0
 c0014a2:	4b7e      	ldr	r3, [pc, #504]	@ (c00169c <hmac_sha256_initialize+0x280>)
 c0014a4:	4d7e      	ldr	r5, [pc, #504]	@ (c0016a0 <hmac_sha256_initialize+0x284>)
 c0014a6:	487f      	ldr	r0, [pc, #508]	@ (c0016a4 <hmac_sha256_initialize+0x288>)
 c0014a8:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
 c0014ac:	f103 5374 	add.w	r3, r3, #1023410176	@ 0x3d000000
 c0014b0:	4632      	mov	r2, r6
 c0014b2:	e9c4 5030 	strd	r5, r0, [r4, #192]	@ 0xc0
 c0014b6:	4e7c      	ldr	r6, [pc, #496]	@ (c0016a8 <hmac_sha256_initialize+0x28c>)
 c0014b8:	487c      	ldr	r0, [pc, #496]	@ (c0016ac <hmac_sha256_initialize+0x290>)
 c0014ba:	f5a3 0323 	sub.w	r3, r3, #10682368	@ 0xa30000
 c0014be:	f6a3 4392 	subw	r3, r3, #3218	@ 0xc92
 c0014c2:	e9c4 6032 	strd	r6, r0, [r4, #200]	@ 0xc8
 c0014c6:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
 c0014ca:	4640      	mov	r0, r8
 c0014cc:	f7ff ff62 	bl	c001394 <sha256_finalize>
 c0014d0:	e9d4 2318 	ldrd	r2, r3, [r4, #96]	@ 0x60
 c0014d4:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0014d8:	f083 3336 	eor.w	r3, r3, #909522486	@ 0x36363636
 c0014dc:	e9c4 2308 	strd	r2, r3, [r4, #32]
 c0014e0:	e9d4 231a 	ldrd	r2, r3, [r4, #104]	@ 0x68
 c0014e4:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0014e8:	f083 3336 	eor.w	r3, r3, #909522486	@ 0x36363636
 c0014ec:	e9c4 230a 	strd	r2, r3, [r4, #40]	@ 0x28
 c0014f0:	e9d4 231c 	ldrd	r2, r3, [r4, #112]	@ 0x70
 c0014f4:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0014f8:	f083 3336 	eor.w	r3, r3, #909522486	@ 0x36363636
 c0014fc:	e9c4 230c 	strd	r2, r3, [r4, #48]	@ 0x30
 c001500:	e9d4 231e 	ldrd	r2, r3, [r4, #120]	@ 0x78
 c001504:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c001508:	f083 3336 	eor.w	r3, r3, #909522486	@ 0x36363636
 c00150c:	e9c4 230e 	strd	r2, r3, [r4, #56]	@ 0x38
 c001510:	2136      	movs	r1, #54	@ 0x36
 c001512:	2220      	movs	r2, #32
 c001514:	f104 0040 	add.w	r0, r4, #64	@ 0x40
 c001518:	f00e f88a 	bl	c00f630 <memset>
 c00151c:	f104 0720 	add.w	r7, r4, #32
 c001520:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
 c001524:	4648      	mov	r0, r9
 c001526:	2244      	movs	r2, #68	@ 0x44
 c001528:	2100      	movs	r1, #0
 c00152a:	f00e f881 	bl	c00f630 <memset>
 c00152e:	4b5c      	ldr	r3, [pc, #368]	@ (c0016a0 <hmac_sha256_initialize+0x284>)
 c001530:	f8df c174 	ldr.w	ip, [pc, #372]	@ c0016a8 <hmac_sha256_initialize+0x28c>
 c001534:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 c001538:	4b5a      	ldr	r3, [pc, #360]	@ (c0016a4 <hmac_sha256_initialize+0x288>)
 c00153a:	f8df e158 	ldr.w	lr, [pc, #344]	@ c001694 <hmac_sha256_initialize+0x278>
 c00153e:	f8c4 30c4 	str.w	r3, [r4, #196]	@ 0xc4
 c001542:	4b5a      	ldr	r3, [pc, #360]	@ (c0016ac <hmac_sha256_initialize+0x290>)
 c001544:	4639      	mov	r1, r7
 c001546:	e9c4 c332 	strd	ip, r3, [r4, #200]	@ 0xc8
 c00154a:	4b53      	ldr	r3, [pc, #332]	@ (c001698 <hmac_sha256_initialize+0x27c>)
 c00154c:	4640      	mov	r0, r8
 c00154e:	e9c4 e334 	strd	lr, r3, [r4, #208]	@ 0xd0
 c001552:	4b52      	ldr	r3, [pc, #328]	@ (c00169c <hmac_sha256_initialize+0x280>)
 c001554:	2240      	movs	r2, #64	@ 0x40
 c001556:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
 c00155a:	f103 5374 	add.w	r3, r3, #1023410176	@ 0x3d000000
 c00155e:	f5a3 0323 	sub.w	r3, r3, #10682368	@ 0xa30000
 c001562:	f6a3 4392 	subw	r3, r3, #3218	@ 0xc92
 c001566:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
 c00156a:	2300      	movs	r3, #0
 c00156c:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
 c001570:	606b      	str	r3, [r5, #4]
 c001572:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c001576:	f7ff bd2b 	b.w	c000fd0 <sha256_update>
 c00157a:	2600      	movs	r6, #0
 c00157c:	f100 0720 	add.w	r7, r0, #32
 c001580:	e771      	b.n	c001466 <hmac_sha256_initialize+0x4a>
 c001582:	680b      	ldr	r3, [r1, #0]
 c001584:	f083 3336 	eor.w	r3, r3, #909522486	@ 0x36363636
 c001588:	6203      	str	r3, [r0, #32]
 c00158a:	0893      	lsrs	r3, r2, #2
 c00158c:	2b01      	cmp	r3, #1
 c00158e:	d07e      	beq.n	c00168e <hmac_sha256_initialize+0x272>
 c001590:	684a      	ldr	r2, [r1, #4]
 c001592:	2b02      	cmp	r3, #2
 c001594:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c001598:	6242      	str	r2, [r0, #36]	@ 0x24
 c00159a:	d052      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c00159c:	688a      	ldr	r2, [r1, #8]
 c00159e:	2b03      	cmp	r3, #3
 c0015a0:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0015a4:	6282      	str	r2, [r0, #40]	@ 0x28
 c0015a6:	d04c      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c0015a8:	68ca      	ldr	r2, [r1, #12]
 c0015aa:	2b04      	cmp	r3, #4
 c0015ac:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0015b0:	62c2      	str	r2, [r0, #44]	@ 0x2c
 c0015b2:	d046      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c0015b4:	690a      	ldr	r2, [r1, #16]
 c0015b6:	2b05      	cmp	r3, #5
 c0015b8:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0015bc:	6302      	str	r2, [r0, #48]	@ 0x30
 c0015be:	d040      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c0015c0:	694a      	ldr	r2, [r1, #20]
 c0015c2:	2b06      	cmp	r3, #6
 c0015c4:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0015c8:	6342      	str	r2, [r0, #52]	@ 0x34
 c0015ca:	d03a      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c0015cc:	698a      	ldr	r2, [r1, #24]
 c0015ce:	2b07      	cmp	r3, #7
 c0015d0:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0015d4:	6382      	str	r2, [r0, #56]	@ 0x38
 c0015d6:	d034      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c0015d8:	69ca      	ldr	r2, [r1, #28]
 c0015da:	2b08      	cmp	r3, #8
 c0015dc:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0015e0:	63c2      	str	r2, [r0, #60]	@ 0x3c
 c0015e2:	d02e      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c0015e4:	6a0a      	ldr	r2, [r1, #32]
 c0015e6:	2b09      	cmp	r3, #9
 c0015e8:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0015ec:	6402      	str	r2, [r0, #64]	@ 0x40
 c0015ee:	d028      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c0015f0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 c0015f2:	2b0a      	cmp	r3, #10
 c0015f4:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c0015f8:	6442      	str	r2, [r0, #68]	@ 0x44
 c0015fa:	d022      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c0015fc:	6a8a      	ldr	r2, [r1, #40]	@ 0x28
 c0015fe:	2b0b      	cmp	r3, #11
 c001600:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c001604:	6482      	str	r2, [r0, #72]	@ 0x48
 c001606:	d01c      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c001608:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 c00160a:	2b0c      	cmp	r3, #12
 c00160c:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c001610:	64c2      	str	r2, [r0, #76]	@ 0x4c
 c001612:	d016      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c001614:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 c001616:	2b0d      	cmp	r3, #13
 c001618:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c00161c:	6502      	str	r2, [r0, #80]	@ 0x50
 c00161e:	d010      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c001620:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
 c001622:	2b0e      	cmp	r3, #14
 c001624:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c001628:	6542      	str	r2, [r0, #84]	@ 0x54
 c00162a:	d00a      	beq.n	c001642 <hmac_sha256_initialize+0x226>
 c00162c:	6b8a      	ldr	r2, [r1, #56]	@ 0x38
 c00162e:	2b10      	cmp	r3, #16
 c001630:	f082 3236 	eor.w	r2, r2, #909522486	@ 0x36363636
 c001634:	6582      	str	r2, [r0, #88]	@ 0x58
 c001636:	d104      	bne.n	c001642 <hmac_sha256_initialize+0x226>
 c001638:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 c00163a:	f083 3336 	eor.w	r3, r3, #909522486	@ 0x36363636
 c00163e:	65c3      	str	r3, [r0, #92]	@ 0x5c
 c001640:	e70e      	b.n	c001460 <hmac_sha256_initialize+0x44>
 c001642:	f026 0303 	bic.w	r3, r6, #3
 c001646:	429e      	cmp	r6, r3
 c001648:	461a      	mov	r2, r3
 c00164a:	f43f af09 	beq.w	c001460 <hmac_sha256_initialize+0x44>
 c00164e:	5caa      	ldrb	r2, [r5, r2]
 c001650:	18e1      	adds	r1, r4, r3
 c001652:	f082 0236 	eor.w	r2, r2, #54	@ 0x36
 c001656:	f881 2020 	strb.w	r2, [r1, #32]
 c00165a:	1c5a      	adds	r2, r3, #1
 c00165c:	42b2      	cmp	r2, r6
 c00165e:	f6bf aeff 	bge.w	c001460 <hmac_sha256_initialize+0x44>
 c001662:	5ca9      	ldrb	r1, [r5, r2]
 c001664:	3302      	adds	r3, #2
 c001666:	4422      	add	r2, r4
 c001668:	f081 0136 	eor.w	r1, r1, #54	@ 0x36
 c00166c:	429e      	cmp	r6, r3
 c00166e:	f882 1020 	strb.w	r1, [r2, #32]
 c001672:	f77f aef5 	ble.w	c001460 <hmac_sha256_initialize+0x44>
 c001676:	5cea      	ldrb	r2, [r5, r3]
 c001678:	4423      	add	r3, r4
 c00167a:	f082 0236 	eor.w	r2, r2, #54	@ 0x36
 c00167e:	f883 2020 	strb.w	r2, [r3, #32]
 c001682:	e6ed      	b.n	c001460 <hmac_sha256_initialize+0x44>
 c001684:	f104 0980 	add.w	r9, r4, #128	@ 0x80
 c001688:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
 c00168c:	e74a      	b.n	c001524 <hmac_sha256_initialize+0x108>
 c00168e:	2204      	movs	r2, #4
 c001690:	4613      	mov	r3, r2
 c001692:	e7dc      	b.n	c00164e <hmac_sha256_initialize+0x232>
 c001694:	510e527f 	.word	0x510e527f
 c001698:	9b05688c 	.word	0x9b05688c
 c00169c:	1f83d9ab 	.word	0x1f83d9ab
 c0016a0:	6a09e667 	.word	0x6a09e667
 c0016a4:	bb67ae85 	.word	0xbb67ae85
 c0016a8:	3c6ef372 	.word	0x3c6ef372
 c0016ac:	a54ff53a 	.word	0xa54ff53a

0c0016b0 <hmac_sha256_finalize>:
 c0016b0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c0016b4:	4604      	mov	r4, r0
 c0016b6:	f100 0560 	add.w	r5, r0, #96	@ 0x60
 c0016ba:	4628      	mov	r0, r5
 c0016bc:	f7ff fe6a 	bl	c001394 <sha256_finalize>
 c0016c0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 c0016c2:	f8d5 e004 	ldr.w	lr, [r5, #4]
 c0016c6:	f083 376a 	eor.w	r7, r3, #1785358954	@ 0x6a6a6a6a
 c0016ca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 c0016cc:	f8d5 c008 	ldr.w	ip, [r5, #8]
 c0016d0:	f083 386a 	eor.w	r8, r3, #1785358954	@ 0x6a6a6a6a
 c0016d4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 c0016d6:	f8d5 b00c 	ldr.w	fp, [r5, #12]
 c0016da:	6e26      	ldr	r6, [r4, #96]	@ 0x60
 c0016dc:	f083 396a 	eor.w	r9, r3, #1785358954	@ 0x6a6a6a6a
 c0016e0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 c0016e2:	f8c4 e004 	str.w	lr, [r4, #4]
 c0016e6:	6026      	str	r6, [r4, #0]
 c0016e8:	f8c4 c008 	str.w	ip, [r4, #8]
 c0016ec:	f8c4 b00c 	str.w	fp, [r4, #12]
 c0016f0:	6a20      	ldr	r0, [r4, #32]
 c0016f2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 c0016f4:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 c0016f6:	f083 3a6a 	eor.w	sl, r3, #1785358954	@ 0x6a6a6a6a
 c0016fa:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 c0016fc:	f8d5 e014 	ldr.w	lr, [r5, #20]
 c001700:	f8d5 c018 	ldr.w	ip, [r5, #24]
 c001704:	692e      	ldr	r6, [r5, #16]
 c001706:	f8d5 b01c 	ldr.w	fp, [r5, #28]
 c00170a:	f080 306a 	eor.w	r0, r0, #1785358954	@ 0x6a6a6a6a
 c00170e:	f081 316a 	eor.w	r1, r1, #1785358954	@ 0x6a6a6a6a
 c001712:	f082 326a 	eor.w	r2, r2, #1785358954	@ 0x6a6a6a6a
 c001716:	f083 336a 	eor.w	r3, r3, #1785358954	@ 0x6a6a6a6a
 c00171a:	f8c4 e014 	str.w	lr, [r4, #20]
 c00171e:	f8c4 c018 	str.w	ip, [r4, #24]
 c001722:	e9c4 0108 	strd	r0, r1, [r4, #32]
 c001726:	e9c4 a30e 	strd	sl, r3, [r4, #56]	@ 0x38
 c00172a:	e9c4 270a 	strd	r2, r7, [r4, #40]	@ 0x28
 c00172e:	e9c4 890c 	strd	r8, r9, [r4, #48]	@ 0x30
 c001732:	6126      	str	r6, [r4, #16]
 c001734:	f8c4 b01c 	str.w	fp, [r4, #28]
 c001738:	e9d4 1210 	ldrd	r1, r2, [r4, #64]	@ 0x40
 c00173c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 c00173e:	f081 306a 	eor.w	r0, r1, #1785358954	@ 0x6a6a6a6a
 c001742:	f082 326a 	eor.w	r2, r2, #1785358954	@ 0x6a6a6a6a
 c001746:	e9c4 0210 	strd	r0, r2, [r4, #64]	@ 0x40
 c00174a:	f083 316a 	eor.w	r1, r3, #1785358954	@ 0x6a6a6a6a
 c00174e:	e9d4 2313 	ldrd	r2, r3, [r4, #76]	@ 0x4c
 c001752:	f082 326a 	eor.w	r2, r2, #1785358954	@ 0x6a6a6a6a
 c001756:	e9c4 1212 	strd	r1, r2, [r4, #72]	@ 0x48
 c00175a:	e9d4 2115 	ldrd	r2, r1, [r4, #84]	@ 0x54
 c00175e:	f083 336a 	eor.w	r3, r3, #1785358954	@ 0x6a6a6a6a
 c001762:	f082 326a 	eor.w	r2, r2, #1785358954	@ 0x6a6a6a6a
 c001766:	e9c4 3214 	strd	r3, r2, [r4, #80]	@ 0x50
 c00176a:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 c00176c:	f081 316a 	eor.w	r1, r1, #1785358954	@ 0x6a6a6a6a
 c001770:	f083 336a 	eor.w	r3, r3, #1785358954	@ 0x6a6a6a6a
 c001774:	e9c4 1316 	strd	r1, r3, [r4, #88]	@ 0x58
 c001778:	2244      	movs	r2, #68	@ 0x44
 c00177a:	2100      	movs	r1, #0
 c00177c:	f104 0080 	add.w	r0, r4, #128	@ 0x80
 c001780:	f00d ff56 	bl	c00f630 <memset>
 c001784:	2300      	movs	r3, #0
 c001786:	4918      	ldr	r1, [pc, #96]	@ (c0017e8 <hmac_sha256_finalize+0x138>)
 c001788:	4a18      	ldr	r2, [pc, #96]	@ (c0017ec <hmac_sha256_finalize+0x13c>)
 c00178a:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
 c00178e:	e9c4 1230 	strd	r1, r2, [r4, #192]	@ 0xc0
 c001792:	4917      	ldr	r1, [pc, #92]	@ (c0017f0 <hmac_sha256_finalize+0x140>)
 c001794:	4a17      	ldr	r2, [pc, #92]	@ (c0017f4 <hmac_sha256_finalize+0x144>)
 c001796:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
 c00179a:	e9c4 1232 	strd	r1, r2, [r4, #200]	@ 0xc8
 c00179e:	4916      	ldr	r1, [pc, #88]	@ (c0017f8 <hmac_sha256_finalize+0x148>)
 c0017a0:	4a16      	ldr	r2, [pc, #88]	@ (c0017fc <hmac_sha256_finalize+0x14c>)
 c0017a2:	4628      	mov	r0, r5
 c0017a4:	e9c4 1234 	strd	r1, r2, [r4, #208]	@ 0xd0
 c0017a8:	4915      	ldr	r1, [pc, #84]	@ (c001800 <hmac_sha256_finalize+0x150>)
 c0017aa:	4a16      	ldr	r2, [pc, #88]	@ (c001804 <hmac_sha256_finalize+0x154>)
 c0017ac:	e9c4 1236 	strd	r1, r2, [r4, #216]	@ 0xd8
 c0017b0:	2240      	movs	r2, #64	@ 0x40
 c0017b2:	f104 0120 	add.w	r1, r4, #32
 c0017b6:	f7ff fc0b 	bl	c000fd0 <sha256_update>
 c0017ba:	2220      	movs	r2, #32
 c0017bc:	4621      	mov	r1, r4
 c0017be:	4628      	mov	r0, r5
 c0017c0:	f7ff fde8 	bl	c001394 <sha256_finalize>
 c0017c4:	6869      	ldr	r1, [r5, #4]
 c0017c6:	68aa      	ldr	r2, [r5, #8]
 c0017c8:	68eb      	ldr	r3, [r5, #12]
 c0017ca:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 c0017cc:	6061      	str	r1, [r4, #4]
 c0017ce:	6020      	str	r0, [r4, #0]
 c0017d0:	60a2      	str	r2, [r4, #8]
 c0017d2:	60e3      	str	r3, [r4, #12]
 c0017d4:	6928      	ldr	r0, [r5, #16]
 c0017d6:	6969      	ldr	r1, [r5, #20]
 c0017d8:	69aa      	ldr	r2, [r5, #24]
 c0017da:	69eb      	ldr	r3, [r5, #28]
 c0017dc:	6120      	str	r0, [r4, #16]
 c0017de:	6161      	str	r1, [r4, #20]
 c0017e0:	61a2      	str	r2, [r4, #24]
 c0017e2:	61e3      	str	r3, [r4, #28]
 c0017e4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0017e8:	6a09e667 	.word	0x6a09e667
 c0017ec:	bb67ae85 	.word	0xbb67ae85
 c0017f0:	3c6ef372 	.word	0x3c6ef372
 c0017f4:	a54ff53a 	.word	0xa54ff53a
 c0017f8:	510e527f 	.word	0x510e527f
 c0017fc:	9b05688c 	.word	0x9b05688c
 c001800:	1f83d9ab 	.word	0x1f83d9ab
 c001804:	5be0cd19 	.word	0x5be0cd19

0c001808 <MX_GPIO_Init>:
*/
void MX_GPIO_Init(void)
{

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOG_CLK_ENABLE();
 c001808:	4b06      	ldr	r3, [pc, #24]	@ (c001824 <MX_GPIO_Init+0x1c>)
{
 c00180a:	b082      	sub	sp, #8
  __HAL_RCC_GPIOG_CLK_ENABLE();
 c00180c:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 c00180e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 c001812:	64da      	str	r2, [r3, #76]	@ 0x4c
 c001814:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 c001816:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 c00181a:	9301      	str	r3, [sp, #4]
 c00181c:	9b01      	ldr	r3, [sp, #4]
  HAL_PWREx_EnableVddIO2();

}
 c00181e:	b002      	add	sp, #8
  HAL_PWREx_EnableVddIO2();
 c001820:	f00b bb10 	b.w	c00ce44 <HAL_PWREx_EnableVddIO2>
 c001824:	50021000 	.word	0x50021000

0c001828 <MX_GTZC_S_Init>:

/* USER CODE END 0 */

/* GTZC_S init function */
void MX_GTZC_S_Init(void)
{
 c001828:	b500      	push	{lr}
 c00182a:	b09d      	sub	sp, #116	@ 0x74

  /* USER CODE BEGIN GTZC_S_Init 0 */

  /* USER CODE END GTZC_S_Init 0 */

  MPCBB_ConfigTypeDef MPCBB_NonSecureArea_Desc = {0};
 c00182c:	2100      	movs	r1, #0
 c00182e:	226c      	movs	r2, #108	@ 0x6c
 c001830:	4668      	mov	r0, sp
 c001832:	f00d fefd 	bl	c00f630 <memset>

  /* USER CODE BEGIN GTZC_S_Init 1 */

  /* USER CODE END GTZC_S_Init 1 */
  if (HAL_GTZC_TZSC_ConfigPeriphAttributes(GTZC_PERIPH_TIM3, GTZC_TZSC_PERIPH_SEC|GTZC_TZSC_PERIPH_NPRIV) != HAL_OK)
 c001836:	f240 3101 	movw	r1, #769	@ 0x301
 c00183a:	2001      	movs	r0, #1
 c00183c:	f00b f938 	bl	c00cab0 <HAL_GTZC_TZSC_ConfigPeriphAttributes>
 c001840:	2800      	cmp	r0, #0
 c001842:	d149      	bne.n	c0018d8 <MX_GTZC_S_Init+0xb0>
  {
    Error_Handler();
  }
  if (HAL_GTZC_TZSC_ConfigPeriphAttributes(GTZC_PERIPH_TIM4, GTZC_TZSC_PERIPH_SEC|GTZC_TZSC_PERIPH_NPRIV) != HAL_OK)
 c001844:	f240 3101 	movw	r1, #769	@ 0x301
 c001848:	2002      	movs	r0, #2
 c00184a:	f00b f931 	bl	c00cab0 <HAL_GTZC_TZSC_ConfigPeriphAttributes>
 c00184e:	2800      	cmp	r0, #0
 c001850:	d14b      	bne.n	c0018ea <MX_GTZC_S_Init+0xc2>
  {
    Error_Handler();
  }
  if (HAL_GTZC_TZSC_ConfigPeriphAttributes(GTZC_PERIPH_LPUART1, GTZC_TZSC_PERIPH_SEC|GTZC_TZSC_PERIPH_NPRIV) != HAL_OK)
 c001852:	f240 3101 	movw	r1, #769	@ 0x301
 c001856:	2015      	movs	r0, #21
 c001858:	f00b f92a 	bl	c00cab0 <HAL_GTZC_TZSC_ConfigPeriphAttributes>
 c00185c:	2800      	cmp	r0, #0
 c00185e:	d14d      	bne.n	c0018fc <MX_GTZC_S_Init+0xd4>
  {
    Error_Handler();
  }
  MPCBB_NonSecureArea_Desc.SecureRWIllegalMode = GTZC_MPCBB_SRWILADIS_ENABLE;
 c001860:	2300      	movs	r3, #0
  MPCBB_NonSecureArea_Desc.InvertSecureState = GTZC_MPCBB_INVSECSTATE_NOT_INVERTED;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[0] =   0xFFFFFFFF;
 c001862:	f04f 32ff 	mov.w	r2, #4294967295
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[17] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[18] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[19] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[20] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[21] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[22] =   0x00000000;
 c001866:	ed9f 7b2c 	vldr	d7, [pc, #176]	@ c001918 <MX_GTZC_S_Init+0xf0>
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[23] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_LockConfig_array[0] =   0x00000000;
  if (HAL_GTZC_MPCBB_ConfigMem(SRAM1_BASE, &MPCBB_NonSecureArea_Desc) != HAL_OK)
 c00186a:	4669      	mov	r1, sp
 c00186c:	f04f 5040 	mov.w	r0, #805306368	@ 0x30000000
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[22] =   0x00000000;
 c001870:	ed8d 7b18 	vstr	d7, [sp, #96]	@ 0x60
  MPCBB_NonSecureArea_Desc.InvertSecureState = GTZC_MPCBB_INVSECSTATE_NOT_INVERTED;
 c001874:	e9cd 3300 	strd	r3, r3, [sp]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[1] =   0xFFFFFFFF;
 c001878:	e9cd 2202 	strd	r2, r2, [sp, #8]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[3] =   0xFFFFFFFF;
 c00187c:	e9cd 2204 	strd	r2, r2, [sp, #16]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[5] =   0xFFFFFFFF;
 c001880:	e9cd 2206 	strd	r2, r2, [sp, #24]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[7] =   0xFFFFFFFF;
 c001884:	e9cd 2208 	strd	r2, r2, [sp, #32]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[9] =   0xFFFFFFFF;
 c001888:	e9cd 220a 	strd	r2, r2, [sp, #40]	@ 0x28
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[11] =   0xFFFFFFFF;
 c00188c:	e9cd 220c 	strd	r2, r2, [sp, #48]	@ 0x30
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[13] =   0x00000000;
 c001890:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[15] =   0x00000000;
 c001894:	e9cd 3310 	strd	r3, r3, [sp, #64]	@ 0x40
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[17] =   0x00000000;
 c001898:	e9cd 3312 	strd	r3, r3, [sp, #72]	@ 0x48
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[19] =   0x00000000;
 c00189c:	e9cd 3314 	strd	r3, r3, [sp, #80]	@ 0x50
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[21] =   0x00000000;
 c0018a0:	e9cd 3316 	strd	r3, r3, [sp, #88]	@ 0x58
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_LockConfig_array[0] =   0x00000000;
 c0018a4:	931a      	str	r3, [sp, #104]	@ 0x68
  if (HAL_GTZC_MPCBB_ConfigMem(SRAM1_BASE, &MPCBB_NonSecureArea_Desc) != HAL_OK)
 c0018a6:	f00b f97f 	bl	c00cba8 <HAL_GTZC_MPCBB_ConfigMem>
 c0018aa:	bb90      	cbnz	r0, c001912 <MX_GTZC_S_Init+0xea>
  {
    Error_Handler();
  }
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[0] =   0x00000000;
 c0018ac:	2300      	movs	r3, #0
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[4] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[5] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[6] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[7] =   0x00000000;
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_LockConfig_array[0] =   0x00000000;
  if (HAL_GTZC_MPCBB_ConfigMem(SRAM2_BASE, &MPCBB_NonSecureArea_Desc) != HAL_OK)
 c0018ae:	4669      	mov	r1, sp
 c0018b0:	481b      	ldr	r0, [pc, #108]	@ (c001920 <MX_GTZC_S_Init+0xf8>)
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[1] =   0x00000000;
 c0018b2:	e9cd 3302 	strd	r3, r3, [sp, #8]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[3] =   0x00000000;
 c0018b6:	e9cd 3304 	strd	r3, r3, [sp, #16]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[5] =   0x00000000;
 c0018ba:	e9cd 3306 	strd	r3, r3, [sp, #24]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_SecConfig_array[7] =   0x00000000;
 c0018be:	e9cd 3308 	strd	r3, r3, [sp, #32]
  MPCBB_NonSecureArea_Desc.AttributeConfig.MPCBB_LockConfig_array[0] =   0x00000000;
 c0018c2:	931a      	str	r3, [sp, #104]	@ 0x68
  if (HAL_GTZC_MPCBB_ConfigMem(SRAM2_BASE, &MPCBB_NonSecureArea_Desc) != HAL_OK)
 c0018c4:	f00b f970 	bl	c00cba8 <HAL_GTZC_MPCBB_ConfigMem>
 c0018c8:	bb00      	cbnz	r0, c00190c <MX_GTZC_S_Init+0xe4>
  {
    Error_Handler();
  }
  /* USER CODE BEGIN GTZC_S_Init 2 */
  if (HAL_GTZC_TZIC_EnableIT(GTZC_PERIPH_LPUART1) != HAL_OK)
 c0018ca:	2015      	movs	r0, #21
 c0018cc:	f00b f9d6 	bl	c00cc7c <HAL_GTZC_TZIC_EnableIT>
 c0018d0:	b9b8      	cbnz	r0, c001902 <MX_GTZC_S_Init+0xda>
    Error_Handler();
  }

  /* USER CODE END GTZC_S_Init 2 */

}
 c0018d2:	b01d      	add	sp, #116	@ 0x74
 c0018d4:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 c0018d8:	f000 f8a8 	bl	c001a2c <Error_Handler>
  if (HAL_GTZC_TZSC_ConfigPeriphAttributes(GTZC_PERIPH_TIM4, GTZC_TZSC_PERIPH_SEC|GTZC_TZSC_PERIPH_NPRIV) != HAL_OK)
 c0018dc:	f240 3101 	movw	r1, #769	@ 0x301
 c0018e0:	2002      	movs	r0, #2
 c0018e2:	f00b f8e5 	bl	c00cab0 <HAL_GTZC_TZSC_ConfigPeriphAttributes>
 c0018e6:	2800      	cmp	r0, #0
 c0018e8:	d0b3      	beq.n	c001852 <MX_GTZC_S_Init+0x2a>
    Error_Handler();
 c0018ea:	f000 f89f 	bl	c001a2c <Error_Handler>
  if (HAL_GTZC_TZSC_ConfigPeriphAttributes(GTZC_PERIPH_LPUART1, GTZC_TZSC_PERIPH_SEC|GTZC_TZSC_PERIPH_NPRIV) != HAL_OK)
 c0018ee:	f240 3101 	movw	r1, #769	@ 0x301
 c0018f2:	2015      	movs	r0, #21
 c0018f4:	f00b f8dc 	bl	c00cab0 <HAL_GTZC_TZSC_ConfigPeriphAttributes>
 c0018f8:	2800      	cmp	r0, #0
 c0018fa:	d0b1      	beq.n	c001860 <MX_GTZC_S_Init+0x38>
    Error_Handler();
 c0018fc:	f000 f896 	bl	c001a2c <Error_Handler>
 c001900:	e7ae      	b.n	c001860 <MX_GTZC_S_Init+0x38>
    Error_Handler();
 c001902:	f000 f893 	bl	c001a2c <Error_Handler>
}
 c001906:	b01d      	add	sp, #116	@ 0x74
 c001908:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 c00190c:	f000 f88e 	bl	c001a2c <Error_Handler>
 c001910:	e7db      	b.n	c0018ca <MX_GTZC_S_Init+0xa2>
    Error_Handler();
 c001912:	f000 f88b 	bl	c001a2c <Error_Handler>
 c001916:	e7c9      	b.n	c0018ac <MX_GTZC_S_Init+0x84>
	...
 c001920:	30030000 	.word	0x30030000

0c001924 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 c001924:	b510      	push	{r4, lr}
 c001926:	b098      	sub	sp, #96	@ 0x60
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 c001928:	2248      	movs	r2, #72	@ 0x48
 c00192a:	2100      	movs	r1, #0
 c00192c:	a806      	add	r0, sp, #24
 c00192e:	f00d fe7f 	bl	c00f630 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 c001932:	2000      	movs	r0, #0
 c001934:	e9cd 0001 	strd	r0, r0, [sp, #4]
 c001938:	e9cd 0003 	strd	r0, r0, [sp, #12]
 c00193c:	9005      	str	r0, [sp, #20]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE0) != HAL_OK)
 c00193e:	f00b fa41 	bl	c00cdc4 <HAL_PWREx_ControlVoltageScaling>
 c001942:	b108      	cbz	r0, c001948 <SystemClock_Config+0x24>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 c001944:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 c001946:	e7fe      	b.n	c001946 <SystemClock_Config+0x22>
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 c001948:	f44f 7180 	mov.w	r1, #256	@ 0x100
 c00194c:	2240      	movs	r2, #64	@ 0x40
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 c00194e:	2302      	movs	r3, #2
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 c001950:	e9cd 1209 	strd	r1, r2, [sp, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLM = 4;
 c001954:	2404      	movs	r4, #4
  RCC_OscInitStruct.PLL.PLLN = 55;
 c001956:	2137      	movs	r1, #55	@ 0x37
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 c001958:	2207      	movs	r2, #7
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 c00195a:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 c00195c:	e9cd 3311 	strd	r3, r3, [sp, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 c001960:	e9cd 3316 	strd	r3, r3, [sp, #88]	@ 0x58
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 c001964:	9306      	str	r3, [sp, #24]
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 c001966:	e9cd 1214 	strd	r1, r2, [sp, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLM = 4;
 c00196a:	9413      	str	r4, [sp, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 c00196c:	f00b fb14 	bl	c00cf98 <HAL_RCC_OscConfig>
 c001970:	4603      	mov	r3, r0
 c001972:	b108      	cbz	r0, c001978 <SystemClock_Config+0x54>
 c001974:	b672      	cpsid	i
  while (1)
 c001976:	e7fe      	b.n	c001976 <SystemClock_Config+0x52>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 c001978:	240f      	movs	r4, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 c00197a:	2203      	movs	r2, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 c00197c:	2105      	movs	r1, #5
 c00197e:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 c001980:	e9cd 3303 	strd	r3, r3, [sp, #12]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 c001984:	e9cd 4201 	strd	r4, r2, [sp, #4]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 c001988:	9305      	str	r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 c00198a:	f00b fecb 	bl	c00d724 <HAL_RCC_ClockConfig>
 c00198e:	b108      	cbz	r0, c001994 <SystemClock_Config+0x70>
 c001990:	b672      	cpsid	i
  while (1)
 c001992:	e7fe      	b.n	c001992 <SystemClock_Config+0x6e>
}
 c001994:	b018      	add	sp, #96	@ 0x60
 c001996:	bd10      	pop	{r4, pc}

0c001998 <main>:
  SCB->SHCSR |= SCB_SHCSR_SECUREFAULTENA_Msk;
 c001998:	4a21      	ldr	r2, [pc, #132]	@ (c001a20 <main+0x88>)
{
 c00199a:	b508      	push	{r3, lr}
  SCB->SHCSR |= SCB_SHCSR_SECUREFAULTENA_Msk;
 c00199c:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 c00199e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 c0019a2:	6253      	str	r3, [r2, #36]	@ 0x24
  HAL_Init();
 c0019a4:	f00a feda 	bl	c00c75c <HAL_Init>
  SystemClock_Config();
 c0019a8:	f7ff ffbc 	bl	c001924 <SystemClock_Config>
  MX_GTZC_S_Init();
 c0019ac:	f7ff ff3c 	bl	c001828 <MX_GTZC_S_Init>
  MX_GPIO_Init();
 c0019b0:	f7ff ff2a 	bl	c001808 <MX_GPIO_Init>
  MX_LPUART1_UART_Init();
 c0019b4:	f000 fda8 	bl	c002508 <MX_LPUART1_UART_Init>
  MX_TIM3_Init();
 c0019b8:	f000 fcf4 	bl	c0023a4 <MX_TIM3_Init>
  MX_TIM4_Init();
 c0019bc:	f000 fd2c 	bl	c002418 <MX_TIM4_Init>
  SCB_NS->VTOR = VTOR_TABLE_NS_START_ADDR;
 c0019c0:	4b18      	ldr	r3, [pc, #96]	@ (c001a24 <main+0x8c>)
 c0019c2:	4919      	ldr	r1, [pc, #100]	@ (c001a28 <main+0x90>)
  \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 c0019c4:	681a      	ldr	r2, [r3, #0]
 c0019c6:	608b      	str	r3, [r1, #8]
 c0019c8:	f382 8888 	msr	MSP_NS, r2
  NonSecure_ResetHandler();
 c0019cc:	685c      	ldr	r4, [r3, #4]
 c0019ce:	0864      	lsrs	r4, r4, #1
 c0019d0:	0064      	lsls	r4, r4, #1
 c0019d2:	4620      	mov	r0, r4
 c0019d4:	4621      	mov	r1, r4
 c0019d6:	4622      	mov	r2, r4
 c0019d8:	4623      	mov	r3, r4
 c0019da:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c0019de:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 c0019e2:	eeb7 1a00 	vmov.f32	s2, #112	@ 0x3f800000  1.0
 c0019e6:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 c0019ea:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 c0019ee:	eef7 2a00 	vmov.f32	s5, #112	@ 0x3f800000  1.0
 c0019f2:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 c0019f6:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 c0019fa:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 c0019fe:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 c001a02:	eeb7 5a00 	vmov.f32	s10, #112	@ 0x3f800000  1.0
 c001a06:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c001a0a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 c001a0e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 c001a12:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c001a16:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 c001a1a:	f7fe fc0d 	bl	c000238 <__gnu_cmse_nonsecure_call>
  while (1)
 c001a1e:	e7fe      	b.n	c001a1e <main+0x86>
 c001a20:	e000ed00 	.word	0xe000ed00
 c001a24:	08040000 	.word	0x08040000
 c001a28:	e002ed00 	.word	0xe002ed00

0c001a2c <Error_Handler>:
  __ASM volatile ("cpsid i" : : : "memory");
 c001a2c:	b672      	cpsid	i
  while (1)
 c001a2e:	e7fe      	b.n	c001a2e <Error_Handler+0x2>

0c001a30 <__acle_se_SECURE_RegisterCallback>:
  * @param  func        pointer to non-secure function
  * @retval None
  */

CMSE_NS_ENTRY void SECURE_RegisterCallback(SECURE_CallbackIDTypeDef CallbackId, void *func){
  if(func != NULL)
 c001a30:	b111      	cbz	r1, c001a38 <__acle_se_SECURE_RegisterCallback+0x8>
  {
    switch(CallbackId)
 c001a32:	b3c0      	cbz	r0, c001aa6 <__acle_se_SECURE_RegisterCallback+0x76>
 c001a34:	2801      	cmp	r0, #1
 c001a36:	d033      	beq.n	c001aa0 <__acle_se_SECURE_RegisterCallback+0x70>
			break;
      default:
        break;
    }
  }
}
 c001a38:	4670      	mov	r0, lr
 c001a3a:	4671      	mov	r1, lr
 c001a3c:	4672      	mov	r2, lr
 c001a3e:	4673      	mov	r3, lr
 c001a40:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c001a44:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 c001a48:	eeb7 1a00 	vmov.f32	s2, #112	@ 0x3f800000  1.0
 c001a4c:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 c001a50:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 c001a54:	eef7 2a00 	vmov.f32	s5, #112	@ 0x3f800000  1.0
 c001a58:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 c001a5c:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 c001a60:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 c001a64:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 c001a68:	eeb7 5a00 	vmov.f32	s10, #112	@ 0x3f800000  1.0
 c001a6c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c001a70:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 c001a74:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 c001a78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c001a7c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 c001a80:	f38e 8c00 	msr	CPSR_fs, lr
 c001a84:	b410      	push	{r4}
 c001a86:	eef1 ca10 	vmrs	ip, fpscr
 c001a8a:	f64f 7460 	movw	r4, #65376	@ 0xff60
 c001a8e:	f6c0 74ff 	movt	r4, #4095	@ 0xfff
 c001a92:	ea0c 0c04 	and.w	ip, ip, r4
 c001a96:	eee1 ca10 	vmsr	fpscr, ip
 c001a9a:	bc10      	pop	{r4}
 c001a9c:	46f4      	mov	ip, lr
 c001a9e:	4774      	bxns	lr
			pSecureErrorCallback = func;
 c001aa0:	4b02      	ldr	r3, [pc, #8]	@ (c001aac <__acle_se_SECURE_RegisterCallback+0x7c>)
 c001aa2:	6019      	str	r1, [r3, #0]
}
 c001aa4:	e7c8      	b.n	c001a38 <__acle_se_SECURE_RegisterCallback+0x8>
			pSecureFaultCallback = func;
 c001aa6:	4b02      	ldr	r3, [pc, #8]	@ (c001ab0 <__acle_se_SECURE_RegisterCallback+0x80>)
 c001aa8:	6019      	str	r1, [r3, #0]
			break;
 c001aaa:	e7c5      	b.n	c001a38 <__acle_se_SECURE_RegisterCallback+0x8>
 c001aac:	3000024c 	.word	0x3000024c
 c001ab0:	30000250 	.word	0x30000250

0c001ab4 <__acle_se_SECURE_send>:

CMSE_NS_ENTRY void SECURE_send(uint8_t* message, int size){
 c001ab4:	4684      	mov	ip, r0
 c001ab6:	460a      	mov	r2, r1
 c001ab8:	b508      	push	{r3, lr}
	HAL_UART_Transmit(&hlpuart1, message, size, HAL_MAX_DELAY);
 c001aba:	4661      	mov	r1, ip
 c001abc:	f04f 33ff 	mov.w	r3, #4294967295
 c001ac0:	b292      	uxth	r2, r2
 c001ac2:	481c      	ldr	r0, [pc, #112]	@ (c001b34 <__acle_se_SECURE_send+0x80>)
 c001ac4:	f00d f952 	bl	c00ed6c <HAL_UART_Transmit>
};
 c001ac8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 c001acc:	4670      	mov	r0, lr
 c001ace:	4671      	mov	r1, lr
 c001ad0:	4672      	mov	r2, lr
 c001ad2:	4673      	mov	r3, lr
 c001ad4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c001ad8:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 c001adc:	eeb7 1a00 	vmov.f32	s2, #112	@ 0x3f800000  1.0
 c001ae0:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 c001ae4:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 c001ae8:	eef7 2a00 	vmov.f32	s5, #112	@ 0x3f800000  1.0
 c001aec:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 c001af0:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 c001af4:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 c001af8:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 c001afc:	eeb7 5a00 	vmov.f32	s10, #112	@ 0x3f800000  1.0
 c001b00:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c001b04:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 c001b08:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 c001b0c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c001b10:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 c001b14:	f38e 8c00 	msr	CPSR_fs, lr
 c001b18:	b410      	push	{r4}
 c001b1a:	eef1 ca10 	vmrs	ip, fpscr
 c001b1e:	f64f 7460 	movw	r4, #65376	@ 0xff60
 c001b22:	f6c0 74ff 	movt	r4, #4095	@ 0xfff
 c001b26:	ea0c 0c04 	and.w	ip, ip, r4
 c001b2a:	eee1 ca10 	vmsr	fpscr, ip
 c001b2e:	bc10      	pop	{r4}
 c001b30:	46f4      	mov	ip, lr
 c001b32:	4774      	bxns	lr
 c001b34:	30000300 	.word	0x30000300

0c001b38 <__acle_se_SECURE_recv>:

CMSE_NS_ENTRY void SECURE_recv(uint8_t* message, int size){
 c001b38:	4684      	mov	ip, r0
 c001b3a:	460a      	mov	r2, r1
 c001b3c:	b508      	push	{r3, lr}
	HAL_UART_Receive(&hlpuart1, message, size, HAL_MAX_DELAY);
 c001b3e:	4661      	mov	r1, ip
 c001b40:	f04f 33ff 	mov.w	r3, #4294967295
 c001b44:	b292      	uxth	r2, r2
 c001b46:	481c      	ldr	r0, [pc, #112]	@ (c001bb8 <__acle_se_SECURE_recv+0x80>)
 c001b48:	f00c fdae 	bl	c00e6a8 <HAL_UART_Receive>
};
 c001b4c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 c001b50:	4670      	mov	r0, lr
 c001b52:	4671      	mov	r1, lr
 c001b54:	4672      	mov	r2, lr
 c001b56:	4673      	mov	r3, lr
 c001b58:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c001b5c:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 c001b60:	eeb7 1a00 	vmov.f32	s2, #112	@ 0x3f800000  1.0
 c001b64:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 c001b68:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 c001b6c:	eef7 2a00 	vmov.f32	s5, #112	@ 0x3f800000  1.0
 c001b70:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 c001b74:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 c001b78:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 c001b7c:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 c001b80:	eeb7 5a00 	vmov.f32	s10, #112	@ 0x3f800000  1.0
 c001b84:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c001b88:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 c001b8c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 c001b90:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c001b94:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 c001b98:	f38e 8c00 	msr	CPSR_fs, lr
 c001b9c:	b410      	push	{r4}
 c001b9e:	eef1 ca10 	vmrs	ip, fpscr
 c001ba2:	f64f 7460 	movw	r4, #65376	@ 0xff60
 c001ba6:	f6c0 74ff 	movt	r4, #4095	@ 0xfff
 c001baa:	ea0c 0c04 	and.w	ip, ip, r4
 c001bae:	eee1 ca10 	vmsr	fpscr, ip
 c001bb2:	bc10      	pop	{r4}
 c001bb4:	46f4      	mov	ip, lr
 c001bb6:	4774      	bxns	lr
 c001bb8:	30000300 	.word	0x30000300

0c001bbc <sendline>:
#define SYM_KEY_SIZE 16
static uint8_t symkey[SYM_KEY_SIZE] = {0};

void sendline(char* s) {
	int i=0;
	while(s[i] != '\n') i++;
 c001bbc:	7803      	ldrb	r3, [r0, #0]
void sendline(char* s) {
 c001bbe:	4601      	mov	r1, r0
	while(s[i] != '\n') i++;
 c001bc0:	2b0a      	cmp	r3, #10
 c001bc2:	d00e      	beq.n	c001be2 <sendline+0x26>
 c001bc4:	4603      	mov	r3, r0
 c001bc6:	469c      	mov	ip, r3
 c001bc8:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 c001bcc:	2a0a      	cmp	r2, #10
 c001bce:	d1fa      	bne.n	c001bc6 <sendline+0xa>
	HAL_UART_Transmit(&hlpuart1, (uint8_t*)s, (i+1), HAL_MAX_DELAY);
 c001bd0:	ebac 0201 	sub.w	r2, ip, r1
 c001bd4:	3202      	adds	r2, #2
 c001bd6:	f04f 33ff 	mov.w	r3, #4294967295
 c001bda:	4805      	ldr	r0, [pc, #20]	@ (c001bf0 <sendline+0x34>)
 c001bdc:	b292      	uxth	r2, r2
 c001bde:	f00d b8c5 	b.w	c00ed6c <HAL_UART_Transmit>
	while(s[i] != '\n') i++;
 c001be2:	2201      	movs	r2, #1
	HAL_UART_Transmit(&hlpuart1, (uint8_t*)s, (i+1), HAL_MAX_DELAY);
 c001be4:	f04f 33ff 	mov.w	r3, #4294967295
 c001be8:	4801      	ldr	r0, [pc, #4]	@ (c001bf0 <sendline+0x34>)
 c001bea:	f00d b8bf 	b.w	c00ed6c <HAL_UART_Transmit>
 c001bee:	bf00      	nop
 c001bf0:	30000300 	.word	0x30000300

0c001bf4 <verify_req>:
}

uint32_t my_counter = 0;

int verify_req(pox_call_t *pox_fn, uint8_t *pox_token) {
	if(pox_fn->counter < my_counter) return 0;
 c001bf4:	4b22      	ldr	r3, [pc, #136]	@ (c001c80 <verify_req+0x8c>)
 c001bf6:	6942      	ldr	r2, [r0, #20]
 c001bf8:	681b      	ldr	r3, [r3, #0]
 c001bfa:	429a      	cmp	r2, r3
 c001bfc:	d201      	bcs.n	c001c02 <verify_req+0xe>
 c001bfe:	2000      	movs	r0, #0
			pox_fn->output[0] = 0xff;
			return 0;
		}
	pox_fn->output[0] = 0xaa;
	return 1;
}
 c001c00:	4770      	bx	lr
int verify_req(pox_call_t *pox_fn, uint8_t *pox_token) {
 c001c02:	b530      	push	{r4, r5, lr}
 c001c04:	4605      	mov	r5, r0
 c001c06:	460c      	mov	r4, r1
 c001c08:	b0dd      	sub	sp, #372	@ 0x174
	sha256_initialize(&hash);
 c001c0a:	4668      	mov	r0, sp
 c001c0c:	f7ff f9b2 	bl	c000f74 <sha256_initialize>
	sha256_update(&hash, pox_fn->command, pox_fn->command_size);
 c001c10:	4668      	mov	r0, sp
 c001c12:	7f2a      	ldrb	r2, [r5, #28]
 c001c14:	69a9      	ldr	r1, [r5, #24]
 c001c16:	f7ff f9db 	bl	c000fd0 <sha256_update>
	sha256_update(&hash, &(pox_fn->counter), 4);
 c001c1a:	2204      	movs	r2, #4
 c001c1c:	4668      	mov	r0, sp
 c001c1e:	f105 0114 	add.w	r1, r5, #20
 c001c22:	f7ff f9d5 	bl	c000fd0 <sha256_update>
	sha256_update(&hash, &(pox_fn->addr), 4);
 c001c26:	2204      	movs	r2, #4
 c001c28:	4629      	mov	r1, r5
 c001c2a:	4668      	mov	r0, sp
 c001c2c:	f7ff f9d0 	bl	c000fd0 <sha256_update>
	sha256_finalize(&hash, pox_fn->input, pox_fn->input_size);
 c001c30:	e9d5 1201 	ldrd	r1, r2, [r5, #4]
 c001c34:	4668      	mov	r0, sp
 c001c36:	f7ff fbad 	bl	c001394 <sha256_finalize>
	hmac_sha256_initialize(&hmac, symkey, 16);
 c001c3a:	2210      	movs	r2, #16
 c001c3c:	4911      	ldr	r1, [pc, #68]	@ (c001c84 <verify_req+0x90>)
 c001c3e:	a822      	add	r0, sp, #136	@ 0x88
 c001c40:	f7ff fbec 	bl	c00141c <hmac_sha256_initialize>
	hmac_sha256_finalize(&hmac, hash.hash, SHA256_DIGEST_SIZE);
 c001c44:	2220      	movs	r2, #32
 c001c46:	4669      	mov	r1, sp
 c001c48:	a822      	add	r0, sp, #136	@ 0x88
 c001c4a:	f7ff fd31 	bl	c0016b0 <hmac_sha256_finalize>
	for (int i = 0; i < SHA256_DIGEST_SIZE; ++i)
 c001c4e:	aa22      	add	r2, sp, #136	@ 0x88
 c001c50:	1e63      	subs	r3, r4, #1
 c001c52:	f104 011f 	add.w	r1, r4, #31
 c001c56:	e001      	b.n	c001c5c <verify_req+0x68>
 c001c58:	428b      	cmp	r3, r1
 c001c5a:	d00b      	beq.n	c001c74 <verify_req+0x80>
		if(pox_token[i] != hmac.digest[i]){
 c001c5c:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 c001c60:	f812 cb01 	ldrb.w	ip, [r2], #1
 c001c64:	45e6      	cmp	lr, ip
 c001c66:	d0f7      	beq.n	c001c58 <verify_req+0x64>
			pox_fn->output[0] = 0xff;
 c001c68:	22ff      	movs	r2, #255	@ 0xff
	if(pox_fn->counter < my_counter) return 0;
 c001c6a:	2000      	movs	r0, #0
			pox_fn->output[0] = 0xff;
 c001c6c:	68eb      	ldr	r3, [r5, #12]
 c001c6e:	701a      	strb	r2, [r3, #0]
}
 c001c70:	b05d      	add	sp, #372	@ 0x174
 c001c72:	bd30      	pop	{r4, r5, pc}
	pox_fn->output[0] = 0xaa;
 c001c74:	22aa      	movs	r2, #170	@ 0xaa
	return 1;
 c001c76:	2001      	movs	r0, #1
	pox_fn->output[0] = 0xaa;
 c001c78:	68eb      	ldr	r3, [r5, #12]
 c001c7a:	701a      	strb	r2, [r3, #0]
}
 c001c7c:	b05d      	add	sp, #372	@ 0x174
 c001c7e:	bd30      	pop	{r4, r5, pc}
 c001c80:	30000238 	.word	0x30000238
 c001c84:	3000023c 	.word	0x3000023c

0c001c88 <train>:
	s.input[s.curIdx] = 15;
	s.curIdx = (s.curIdx+1)%INPUT_SIZE;

}

void train(pox_call_t *pox_fn) {
 c001c88:	b5f0      	push	{r4, r5, r6, r7, lr}
 c001c8a:	4605      	mov	r5, r0
	float rate = *(float*)(pox_fn->input);
 c001c8c:	686b      	ldr	r3, [r5, #4]
void train(pox_call_t *pox_fn) {
 c001c8e:	ed2d 8b02 	vpush	{d8}
	int epochs = (int) (*(float*)(pox_fn->input+4));
 c001c92:	edd3 7a01 	vldr	s15, [r3, #4]
 c001c96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
void train(pox_call_t *pox_fn) {
 c001c9a:	b087      	sub	sp, #28
	int c, seed = 11, ulen = 1, vlen = 1, n_h_layers = 1, n_h_neurons = 8, model = 2, max_epoch = epochs, mbs = 4;
	int use_norm = 1, batch_len = 1000, n_threads = 1, cs = 10;
	float h_dropout = 0.0f, temp = 0.5f, lr = rate, grad_clip = 0.0f;
	tg_data_t *tg;
	kann_t *ann = 0;
	tg = tg_init_with_data(s.input, INPUT_SIZE);
 c001c9c:	2178      	movs	r1, #120	@ 0x78
 c001c9e:	481b      	ldr	r0, [pc, #108]	@ (c001d0c <train+0x84>)
	int epochs = (int) (*(float*)(pox_fn->input+4));
 c001ca0:	ee17 7a90 	vmov	r7, s15
	float rate = *(float*)(pox_fn->input);
 c001ca4:	edd3 8a00 	vldr	s17, [r3]
	tg = tg_init_with_data(s.input, INPUT_SIZE);
 c001ca8:	f000 fdc2 	bl	c002830 <tg_init_with_data>
	//sendline("INIT DONE\n");

	int n1 = tg->n_char;
	ann = model_gen(model, tg->n_char, n_h_layers, n_h_neurons, h_dropout, use_norm);
 c001cac:	2601      	movs	r6, #1
	tg = tg_init_with_data(s.input, INPUT_SIZE);
 c001cae:	4604      	mov	r4, r0
	ann = model_gen(model, tg->n_char, n_h_layers, n_h_neurons, h_dropout, use_norm);
 c001cb0:	ed9f 8a17 	vldr	s16, [pc, #92]	@ c001d10 <train+0x88>
 c001cb4:	6861      	ldr	r1, [r4, #4]
 c001cb6:	eeb0 0a48 	vmov.f32	s0, s16
 c001cba:	4632      	mov	r2, r6
 c001cbc:	2308      	movs	r3, #8
 c001cbe:	9600      	str	r6, [sp, #0]
 c001cc0:	2002      	movs	r0, #2
 c001cc2:	f001 f8ed 	bl	c002ea0 <model_gen>
	//sendline("MODEL_GEN DONE\n");

	tg_train(ann, tg, lr, ulen, vlen, cs, mbs, max_epoch, grad_clip, batch_len, n_threads);
 c001cc6:	9702      	str	r7, [sp, #8]
 c001cc8:	2304      	movs	r3, #4
 c001cca:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 c001cce:	270a      	movs	r7, #10
 c001cd0:	4621      	mov	r1, r4
 c001cd2:	eef0 0a48 	vmov.f32	s1, s16
 c001cd6:	eeb0 0a68 	vmov.f32	s0, s17
 c001cda:	9203      	str	r2, [sp, #12]
 c001cdc:	9301      	str	r3, [sp, #4]
 c001cde:	4632      	mov	r2, r6
 c001ce0:	4633      	mov	r3, r6
 c001ce2:	9604      	str	r6, [sp, #16]
 c001ce4:	9700      	str	r7, [sp, #0]
 c001ce6:	f000 feab 	bl	c002a40 <tg_train>
	//sendline("TG_TRAIN DONE\n");

	free(tg->data); free(tg);
 c001cea:	68a0      	ldr	r0, [r4, #8]
 c001cec:	f00d f9ce 	bl	c00f08c <free>
 c001cf0:	4620      	mov	r0, r4
 c001cf2:	f00d f9cb 	bl	c00f08c <free>

	memcpy(pox_fn->output, tg->c2i, pox_fn->output_size);
 c001cf6:	e9d5 0203 	ldrd	r0, r2, [r5, #12]
 c001cfa:	f104 010c 	add.w	r1, r4, #12
}
 c001cfe:	b007      	add	sp, #28
 c001d00:	ecbd 8b02 	vpop	{d8}
 c001d04:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	memcpy(pox_fn->output, tg->c2i, pox_fn->output_size);
 c001d08:	f00d bd61 	b.w	c00f7ce <memcpy>
 c001d0c:	300001bc 	.word	0x300001bc
 c001d10:	00000000 	.word	0x00000000

0c001d14 <__acle_se_SECURE_pox>:

CMSE_NS_ENTRY void SECURE_pox(pox_call_t *pox_fn, uint8_t *pox_token, uint8_t type) {
 c001d14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	uint8_t buff[30]={};
 c001d18:	2400      	movs	r4, #0
CMSE_NS_ENTRY void SECURE_pox(pox_call_t *pox_fn, uint8_t *pox_token, uint8_t type) {
 c001d1a:	b0e4      	sub	sp, #400	@ 0x190
 c001d1c:	4605      	mov	r5, r0
 c001d1e:	460e      	mov	r6, r1
	sprintf(buff, "type: %d\n", type);
 c001d20:	4668      	mov	r0, sp
 c001d22:	4976      	ldr	r1, [pc, #472]	@ (c001efc <__acle_se_SECURE_pox+0x1e8>)
CMSE_NS_ENTRY void SECURE_pox(pox_call_t *pox_fn, uint8_t *pox_token, uint8_t type) {
 c001d24:	4617      	mov	r7, r2
	uint8_t buff[30]={};
 c001d26:	e9cd 4400 	strd	r4, r4, [sp]
 c001d2a:	e9cd 4402 	strd	r4, r4, [sp, #8]
 c001d2e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 c001d32:	9406      	str	r4, [sp, #24]
 c001d34:	f8ad 401c 	strh.w	r4, [sp, #28]
	sprintf(buff, "type: %d\n", type);
 c001d38:	f00d fb68 	bl	c00f40c <siprintf>
	while(s[i] != '\n') i++;
 c001d3c:	f89d 3000 	ldrb.w	r3, [sp]
 c001d40:	2b0a      	cmp	r3, #10
 c001d42:	f000 8093 	beq.w	c001e6c <__acle_se_SECURE_pox+0x158>
	int i=0;
 c001d46:	4623      	mov	r3, r4
 c001d48:	4669      	mov	r1, sp
	while(s[i] != '\n') i++;
 c001d4a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 c001d4e:	3301      	adds	r3, #1
 c001d50:	2a0a      	cmp	r2, #10
 c001d52:	d1fa      	bne.n	c001d4a <__acle_se_SECURE_pox+0x36>
	HAL_UART_Transmit(&hlpuart1, (uint8_t*)s, (i+1), HAL_MAX_DELAY);
 c001d54:	3301      	adds	r3, #1
 c001d56:	b29a      	uxth	r2, r3
 c001d58:	4669      	mov	r1, sp
 c001d5a:	f04f 33ff 	mov.w	r3, #4294967295
 c001d5e:	4868      	ldr	r0, [pc, #416]	@ (c001f00 <__acle_se_SECURE_pox+0x1ec>)
	return (my_counter < pox_fn->counter) && verify_req(pox_fn, pox_token);
 c001d60:	4c68      	ldr	r4, [pc, #416]	@ (c001f04 <__acle_se_SECURE_pox+0x1f0>)
	HAL_UART_Transmit(&hlpuart1, (uint8_t*)s, (i+1), HAL_MAX_DELAY);
 c001d62:	f00d f803 	bl	c00ed6c <HAL_UART_Transmit>
	sendline(buff);
	HAL_UART_Transmit(&hlpuart1, "Phase2 start\n", 13, HAL_MAX_DELAY);
 c001d66:	f04f 33ff 	mov.w	r3, #4294967295
 c001d6a:	220d      	movs	r2, #13
 c001d6c:	4966      	ldr	r1, [pc, #408]	@ (c001f08 <__acle_se_SECURE_pox+0x1f4>)
 c001d6e:	4864      	ldr	r0, [pc, #400]	@ (c001f00 <__acle_se_SECURE_pox+0x1ec>)
 c001d70:	f00c fffc 	bl	c00ed6c <HAL_UART_Transmit>
	return (my_counter < pox_fn->counter) && verify_req(pox_fn, pox_token);
 c001d74:	696a      	ldr	r2, [r5, #20]
 c001d76:	6823      	ldr	r3, [r4, #0]
 c001d78:	429a      	cmp	r2, r3
 c001d7a:	d836      	bhi.n	c001dea <__acle_se_SECURE_pox+0xd6>
	__enable_irq();
	HAL_UART_Transmit(&hlpuart1, "Phase5 start\n", 13, HAL_MAX_DELAY);
	//HAL_UART_Transmit(&hlpuart1, "Success\n", 8, HAL_MAX_DELAY);
	//sprintf(buff, "Heap Usage: %d\n",heapSize);
	//sendline(buff);
}
 c001d7c:	b064      	add	sp, #400	@ 0x190
 c001d7e:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c001d82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 c001d86:	4670      	mov	r0, lr
 c001d88:	4671      	mov	r1, lr
 c001d8a:	4672      	mov	r2, lr
 c001d8c:	4673      	mov	r3, lr
 c001d8e:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 c001d92:	eeb7 1a00 	vmov.f32	s2, #112	@ 0x3f800000  1.0
 c001d96:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 c001d9a:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 c001d9e:	eef7 2a00 	vmov.f32	s5, #112	@ 0x3f800000  1.0
 c001da2:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 c001da6:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 c001daa:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 c001dae:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 c001db2:	eeb7 5a00 	vmov.f32	s10, #112	@ 0x3f800000  1.0
 c001db6:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c001dba:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 c001dbe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 c001dc2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c001dc6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 c001dca:	f38e 8c00 	msr	CPSR_fs, lr
 c001dce:	b410      	push	{r4}
 c001dd0:	eef1 ca10 	vmrs	ip, fpscr
 c001dd4:	f64f 7460 	movw	r4, #65376	@ 0xff60
 c001dd8:	f6c0 74ff 	movt	r4, #4095	@ 0xfff
 c001ddc:	ea0c 0c04 	and.w	ip, ip, r4
 c001de0:	eee1 ca10 	vmsr	fpscr, ip
 c001de4:	bc10      	pop	{r4}
 c001de6:	46f4      	mov	ip, lr
 c001de8:	4774      	bxns	lr
	return (my_counter < pox_fn->counter) && verify_req(pox_fn, pox_token);
 c001dea:	4631      	mov	r1, r6
 c001dec:	4628      	mov	r0, r5
 c001dee:	f7ff ff01 	bl	c001bf4 <verify_req>
 c001df2:	2800      	cmp	r0, #0
 c001df4:	d0c2      	beq.n	c001d7c <__acle_se_SECURE_pox+0x68>
	my_counter = pox_fn->counter;
 c001df6:	46a8      	mov	r8, r5
 c001df8:	f858 3f14 	ldr.w	r3, [r8, #20]!
	sha256_initialize(&hash);
 c001dfc:	a808      	add	r0, sp, #32
	my_counter = pox_fn->counter;
 c001dfe:	6023      	str	r3, [r4, #0]
	sha256_initialize(&hash);
 c001e00:	f7ff f8b8 	bl	c000f74 <sha256_initialize>
	sha256_update(&hash, &(pox_fn->counter), 4);
 c001e04:	4641      	mov	r1, r8
 c001e06:	a808      	add	r0, sp, #32
 c001e08:	2204      	movs	r2, #4
 c001e0a:	f7ff f8e1 	bl	c000fd0 <sha256_update>
	sha256_update(&hash, &(pox_fn->addr), 4);
 c001e0e:	4629      	mov	r1, r5
 c001e10:	a808      	add	r0, sp, #32
 c001e12:	2204      	movs	r2, #4
 c001e14:	f7ff f8dc 	bl	c000fd0 <sha256_update>
	sha256_update(&hash, mem, mem_len);
 c001e18:	a808      	add	r0, sp, #32
 c001e1a:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 c001e1e:	493b      	ldr	r1, [pc, #236]	@ (c001f0c <__acle_se_SECURE_pox+0x1f8>)
 c001e20:	f7ff f8d6 	bl	c000fd0 <sha256_update>
	sha256_update(&hash, pox_fn->input, pox_fn->input_size);
 c001e24:	68aa      	ldr	r2, [r5, #8]
 c001e26:	6869      	ldr	r1, [r5, #4]
 c001e28:	a808      	add	r0, sp, #32
 c001e2a:	f7ff f8d1 	bl	c000fd0 <sha256_update>
 c001e2e:	b672      	cpsid	i
	HAL_UART_Transmit(&hlpuart1, "Phase3 start\n", 13, HAL_MAX_DELAY);
 c001e30:	f04f 33ff 	mov.w	r3, #4294967295
 c001e34:	220d      	movs	r2, #13
 c001e36:	4936      	ldr	r1, [pc, #216]	@ (c001f10 <__acle_se_SECURE_pox+0x1fc>)
 c001e38:	4831      	ldr	r0, [pc, #196]	@ (c001f00 <__acle_se_SECURE_pox+0x1ec>)
 c001e3a:	f00c ff97 	bl	c00ed6c <HAL_UART_Transmit>
	if(type == 0) {
 c001e3e:	b9bf      	cbnz	r7, c001e70 <__acle_se_SECURE_pox+0x15c>
	char current_char = start_char;
 c001e40:	2341      	movs	r3, #65	@ 0x41
 c001e42:	4a34      	ldr	r2, [pc, #208]	@ (c001f14 <__acle_se_SECURE_pox+0x200>)
        s.input[j] = current_char;
 c001e44:	461c      	mov	r4, r3
 c001e46:	f102 0078 	add.w	r0, r2, #120	@ 0x78
 c001e4a:	e006      	b.n	c001e5a <__acle_se_SECURE_pox+0x146>
	for(int j=0; j<INPUT_SIZE; j++) {
 c001e4c:	4281      	cmp	r1, r0
 c001e4e:	d024      	beq.n	c001e9a <__acle_se_SECURE_pox+0x186>
        current_char++;
 c001e50:	2342      	movs	r3, #66	@ 0x42
        s.input[j] = current_char;
 c001e52:	f802 4f02 	strb.w	r4, [r2, #2]!
	for(int j=0; j<INPUT_SIZE; j++) {
 c001e56:	4282      	cmp	r2, r0
 c001e58:	d01f      	beq.n	c001e9a <__acle_se_SECURE_pox+0x186>
        current_char++;
 c001e5a:	1c59      	adds	r1, r3, #1
        s.input[j] = current_char;
 c001e5c:	7053      	strb	r3, [r2, #1]
        current_char++;
 c001e5e:	b2cb      	uxtb	r3, r1
        if (current_char > start_char+num_unique) {
 c001e60:	2b5a      	cmp	r3, #90	@ 0x5a
        s.input[j] = current_char;
 c001e62:	f102 0101 	add.w	r1, r2, #1
        if (current_char > start_char+num_unique) {
 c001e66:	d0f1      	beq.n	c001e4c <__acle_se_SECURE_pox+0x138>
        s.input[j] = current_char;
 c001e68:	460a      	mov	r2, r1
 c001e6a:	e7f4      	b.n	c001e56 <__acle_se_SECURE_pox+0x142>
	while(s[i] != '\n') i++;
 c001e6c:	2201      	movs	r2, #1
 c001e6e:	e773      	b.n	c001d58 <__acle_se_SECURE_pox+0x44>
	} else if (type == 1) {
 c001e70:	2f01      	cmp	r7, #1
 c001e72:	d13f      	bne.n	c001ef4 <__acle_se_SECURE_pox+0x1e0>
	s.input[s.curIdx] = 15;
 c001e74:	220f      	movs	r2, #15
 c001e76:	4928      	ldr	r1, [pc, #160]	@ (c001f18 <__acle_se_SECURE_pox+0x204>)
	s.curIdx = (s.curIdx+1)%INPUT_SIZE;
 c001e78:	4828      	ldr	r0, [pc, #160]	@ (c001f1c <__acle_se_SECURE_pox+0x208>)
	s.input[s.curIdx] = 15;
 c001e7a:	6f8b      	ldr	r3, [r1, #120]	@ 0x78
 c001e7c:	54ca      	strb	r2, [r1, r3]
	s.curIdx = (s.curIdx+1)%INPUT_SIZE;
 c001e7e:	3301      	adds	r3, #1
 c001e80:	fb80 2003 	smull	r2, r0, r0, r3
 c001e84:	17da      	asrs	r2, r3, #31
 c001e86:	ebc2 02a0 	rsb	r2, r2, r0, asr #2
 c001e8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 c001e8e:	eba3 03c2 	sub.w	r3, r3, r2, lsl #3
 c001e92:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 c001e96:	678b      	str	r3, [r1, #120]	@ 0x78
}
 c001e98:	e002      	b.n	c001ea0 <__acle_se_SECURE_pox+0x18c>
	s.curIdx = 0;
 c001e9a:	2200      	movs	r2, #0
 c001e9c:	4b1e      	ldr	r3, [pc, #120]	@ (c001f18 <__acle_se_SECURE_pox+0x204>)
 c001e9e:	679a      	str	r2, [r3, #120]	@ 0x78
	HAL_UART_Transmit(&hlpuart1, "Phase4 start\n", 13, HAL_MAX_DELAY);
 c001ea0:	f04f 33ff 	mov.w	r3, #4294967295
 c001ea4:	220d      	movs	r2, #13
 c001ea6:	491e      	ldr	r1, [pc, #120]	@ (c001f20 <__acle_se_SECURE_pox+0x20c>)
 c001ea8:	4815      	ldr	r0, [pc, #84]	@ (c001f00 <__acle_se_SECURE_pox+0x1ec>)
 c001eaa:	f00c ff5f 	bl	c00ed6c <HAL_UART_Transmit>
	sha256_finalize(&hash, pox_fn->output, pox_fn->output_size);
 c001eae:	e9d5 1203 	ldrd	r1, r2, [r5, #12]
 c001eb2:	a808      	add	r0, sp, #32
 c001eb4:	f7ff fa6e 	bl	c001394 <sha256_finalize>
	hmac_sha256_initialize(&hmac, symkey, SYM_KEY_SIZE);
 c001eb8:	a82a      	add	r0, sp, #168	@ 0xa8
 c001eba:	2210      	movs	r2, #16
 c001ebc:	4919      	ldr	r1, [pc, #100]	@ (c001f24 <__acle_se_SECURE_pox+0x210>)
 c001ebe:	f7ff faad 	bl	c00141c <hmac_sha256_initialize>
	memcpy(pox_token, hmac.digest, SHA256_DIGEST_SIZE);
 c001ec2:	ac2a      	add	r4, sp, #168	@ 0xa8
	hmac_sha256_finalize(&hmac, hash.hash, SHA256_DIGEST_SIZE);
 c001ec4:	a908      	add	r1, sp, #32
 c001ec6:	a82a      	add	r0, sp, #168	@ 0xa8
 c001ec8:	2220      	movs	r2, #32
 c001eca:	f7ff fbf1 	bl	c0016b0 <hmac_sha256_finalize>
	memcpy(pox_token, hmac.digest, SHA256_DIGEST_SIZE);
 c001ece:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 c001ed0:	6030      	str	r0, [r6, #0]
 c001ed2:	6071      	str	r1, [r6, #4]
 c001ed4:	60b2      	str	r2, [r6, #8]
 c001ed6:	60f3      	str	r3, [r6, #12]
 c001ed8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 c001eda:	6130      	str	r0, [r6, #16]
 c001edc:	6171      	str	r1, [r6, #20]
 c001ede:	61b2      	str	r2, [r6, #24]
 c001ee0:	61f3      	str	r3, [r6, #28]
  __ASM volatile ("cpsie i" : : : "memory");
 c001ee2:	b662      	cpsie	i
	HAL_UART_Transmit(&hlpuart1, "Phase5 start\n", 13, HAL_MAX_DELAY);
 c001ee4:	f04f 33ff 	mov.w	r3, #4294967295
 c001ee8:	220d      	movs	r2, #13
 c001eea:	490f      	ldr	r1, [pc, #60]	@ (c001f28 <__acle_se_SECURE_pox+0x214>)
 c001eec:	4804      	ldr	r0, [pc, #16]	@ (c001f00 <__acle_se_SECURE_pox+0x1ec>)
 c001eee:	f00c ff3d 	bl	c00ed6c <HAL_UART_Transmit>
 c001ef2:	e743      	b.n	c001d7c <__acle_se_SECURE_pox+0x68>
		train(pox_fn);
 c001ef4:	4628      	mov	r0, r5
 c001ef6:	f7ff fec7 	bl	c001c88 <train>
 c001efa:	e7d1      	b.n	c001ea0 <__acle_se_SECURE_pox+0x18c>
 c001efc:	0c0119ec 	.word	0x0c0119ec
 c001f00:	30000300 	.word	0x30000300
 c001f04:	30000238 	.word	0x30000238
 c001f08:	0c0119f8 	.word	0x0c0119f8
 c001f0c:	08040000 	.word	0x08040000
 c001f10:	0c011a08 	.word	0x0c011a08
 c001f14:	300001bb 	.word	0x300001bb
 c001f18:	300001bc 	.word	0x300001bc
 c001f1c:	2aaaaaab 	.word	0x2aaaaaab
 c001f20:	0c011a18 	.word	0x0c011a18
 c001f24:	3000023c 	.word	0x3000023c
 c001f28:	0c011a28 	.word	0x0c011a28

0c001f2c <HAL_MspInit>:

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* GTZC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(GTZC_IRQn, 0, 0);
 c001f2c:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 c001f2e:	4b2d      	ldr	r3, [pc, #180]	@ (c001fe4 <HAL_MspInit+0xb8>)
{
 c001f30:	b500      	push	{lr}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 c001f32:	6e19      	ldr	r1, [r3, #96]	@ 0x60
{
 c001f34:	b085      	sub	sp, #20
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 c001f36:	f041 0101 	orr.w	r1, r1, #1
 c001f3a:	6619      	str	r1, [r3, #96]	@ 0x60
 c001f3c:	6e19      	ldr	r1, [r3, #96]	@ 0x60
  HAL_NVIC_SetPriority(GTZC_IRQn, 0, 0);
 c001f3e:	2008      	movs	r0, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 c001f40:	f001 0101 	and.w	r1, r1, #1
 c001f44:	9101      	str	r1, [sp, #4]
 c001f46:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 c001f48:	6d99      	ldr	r1, [r3, #88]	@ 0x58
 c001f4a:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 c001f4e:	6599      	str	r1, [r3, #88]	@ 0x58
 c001f50:	6d99      	ldr	r1, [r3, #88]	@ 0x58
 c001f52:	f001 5180 	and.w	r1, r1, #268435456	@ 0x10000000
 c001f56:	9102      	str	r1, [sp, #8]
 c001f58:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GTZC_CLK_ENABLE();
 c001f5a:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 c001f5c:	f441 0180 	orr.w	r1, r1, #4194304	@ 0x400000
 c001f60:	6499      	str	r1, [r3, #72]	@ 0x48
 c001f62:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
  HAL_NVIC_SetPriority(GTZC_IRQn, 0, 0);
 c001f64:	4611      	mov	r1, r2
  __HAL_RCC_GTZC_CLK_ENABLE();
 c001f66:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 c001f6a:	9303      	str	r3, [sp, #12]
 c001f6c:	9b03      	ldr	r3, [sp, #12]
  HAL_NVIC_SetPriority(GTZC_IRQn, 0, 0);
 c001f6e:	f00a fc2b 	bl	c00c7c8 <HAL_NVIC_SetPriority>
  /* GTZC_IRQn interrupt configuration */
  HAL_NVIC_EnableIRQ(GTZC_IRQn);
 c001f72:	2008      	movs	r0, #8
 c001f74:	f00a fc64 	bl	c00c840 <HAL_NVIC_EnableIRQ>

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_PWREx_DisableUCPDDeadBattery();
 c001f78:	f00a ff6c 	bl	c00ce54 <HAL_PWREx_DisableUCPDDeadBattery>

  /** PWR Non-Privilege/Non-Secure Items Configurations
  */
  HAL_PWR_ConfigAttributes(PWR_WKUP1, PWR_NSEC |PWR_NPRIV);
 c001f7c:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001f80:	2001      	movs	r0, #1
 c001f82:	f00a feeb 	bl	c00cd5c <HAL_PWR_ConfigAttributes>
  HAL_PWR_ConfigAttributes(PWR_WKUP2, PWR_NSEC |PWR_NPRIV);
 c001f86:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001f8a:	2002      	movs	r0, #2
 c001f8c:	f00a fee6 	bl	c00cd5c <HAL_PWR_ConfigAttributes>
  HAL_PWR_ConfigAttributes(PWR_WKUP3, PWR_NSEC |PWR_NPRIV);
 c001f90:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001f94:	2004      	movs	r0, #4
 c001f96:	f00a fee1 	bl	c00cd5c <HAL_PWR_ConfigAttributes>
  HAL_PWR_ConfigAttributes(PWR_WKUP4, PWR_NSEC |PWR_NPRIV);
 c001f9a:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001f9e:	2008      	movs	r0, #8
 c001fa0:	f00a fedc 	bl	c00cd5c <HAL_PWR_ConfigAttributes>
  HAL_PWR_ConfigAttributes(PWR_WKUP5, PWR_NSEC |PWR_NPRIV);
 c001fa4:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001fa8:	2010      	movs	r0, #16
 c001faa:	f00a fed7 	bl	c00cd5c <HAL_PWR_ConfigAttributes>
  HAL_PWR_ConfigAttributes(PWR_VDM, PWR_NSEC |PWR_NPRIV);
 c001fae:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001fb2:	f44f 7000 	mov.w	r0, #512	@ 0x200
 c001fb6:	f00a fed1 	bl	c00cd5c <HAL_PWR_ConfigAttributes>
  HAL_PWR_ConfigAttributes(PWR_APC, PWR_NSEC |PWR_NPRIV);
 c001fba:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001fbe:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 c001fc2:	f00a fecb 	bl	c00cd5c <HAL_PWR_ConfigAttributes>
  HAL_PWR_ConfigAttributes(PWR_LPM, PWR_NSEC |PWR_NPRIV);
 c001fc6:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001fca:	f44f 7080 	mov.w	r0, #256	@ 0x100
 c001fce:	f00a fec5 	bl	c00cd5c <HAL_PWR_ConfigAttributes>
  HAL_PWR_ConfigAttributes(PWR_VB, PWR_NSEC |PWR_NPRIV);
 c001fd2:	f44f 7140 	mov.w	r1, #768	@ 0x300
 c001fd6:	f44f 6080 	mov.w	r0, #1024	@ 0x400

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 c001fda:	b005      	add	sp, #20
 c001fdc:	f85d eb04 	ldr.w	lr, [sp], #4
  HAL_PWR_ConfigAttributes(PWR_VB, PWR_NSEC |PWR_NPRIV);
 c001fe0:	f00a bebc 	b.w	c00cd5c <HAL_PWR_ConfigAttributes>
 c001fe4:	50021000 	.word	0x50021000

0c001fe8 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 c001fe8:	e7fe      	b.n	c001fe8 <NMI_Handler>
 c001fea:	bf00      	nop

0c001fec <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 c001fec:	e7fe      	b.n	c001fec <HardFault_Handler>
 c001fee:	bf00      	nop

0c001ff0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 c001ff0:	e7fe      	b.n	c001ff0 <MemManage_Handler>
 c001ff2:	bf00      	nop

0c001ff4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 c001ff4:	e7fe      	b.n	c001ff4 <BusFault_Handler>
 c001ff6:	bf00      	nop

0c001ff8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 c001ff8:	e7fe      	b.n	c001ff8 <UsageFault_Handler>
 c001ffa:	bf00      	nop

0c001ffc <SecureFault_Handler>:
void SecureFault_Handler(void)
{
  /* USER CODE BEGIN SecureFault_IRQn 0 */

  /* USER CODE END SecureFault_IRQn 0 */
  while (1)
 c001ffc:	e7fe      	b.n	c001ffc <SecureFault_Handler>
 c001ffe:	bf00      	nop

0c002000 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 c002000:	4770      	bx	lr
 c002002:	bf00      	nop

0c002004 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 c002004:	4770      	bx	lr
 c002006:	bf00      	nop

0c002008 <PendSV_Handler>:
}

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 c002008:	4770      	bx	lr
 c00200a:	bf00      	nop

0c00200c <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 c00200c:	f00a bbb8 	b.w	c00c780 <HAL_IncTick>

0c002010 <GTZC_IRQHandler>:
void GTZC_IRQHandler(void)
{
  /* USER CODE BEGIN GTZC_IRQn 0 */

  /* USER CODE END GTZC_IRQn 0 */
  HAL_GTZC_IRQHandler();
 c002010:	f00a be5c 	b.w	c00cccc <HAL_GTZC_IRQHandler>

0c002014 <TIM3_IRQHandler>:
void TIM3_IRQHandler(void)
{
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 c002014:	4801      	ldr	r0, [pc, #4]	@ (c00201c <TIM3_IRQHandler+0x8>)
 c002016:	f00c ba39 	b.w	c00e48c <HAL_TIM_IRQHandler>
 c00201a:	bf00      	nop
 c00201c:	300002b0 	.word	0x300002b0

0c002020 <TIM4_IRQHandler>:
void TIM4_IRQHandler(void)
{
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 c002020:	4801      	ldr	r0, [pc, #4]	@ (c002028 <TIM4_IRQHandler+0x8>)
 c002022:	f00c ba33 	b.w	c00e48c <HAL_TIM_IRQHandler>
 c002026:	bf00      	nop
 c002028:	30000260 	.word	0x30000260

0c00202c <_getpid>:
 c00202c:	2001      	movs	r0, #1
 c00202e:	4770      	bx	lr

0c002030 <_kill>:
 c002030:	b508      	push	{r3, lr}
 c002032:	f00d fb9f 	bl	c00f774 <__errno>
 c002036:	2216      	movs	r2, #22
 c002038:	4603      	mov	r3, r0
 c00203a:	f04f 30ff 	mov.w	r0, #4294967295
 c00203e:	601a      	str	r2, [r3, #0]
 c002040:	bd08      	pop	{r3, pc}
 c002042:	bf00      	nop

0c002044 <_exit>:
 c002044:	b508      	push	{r3, lr}
 c002046:	f00d fb95 	bl	c00f774 <__errno>
 c00204a:	2316      	movs	r3, #22
 c00204c:	6003      	str	r3, [r0, #0]
 c00204e:	e7fe      	b.n	c00204e <_exit+0xa>

0c002050 <_read>:
 c002050:	b570      	push	{r4, r5, r6, lr}
 c002052:	1e16      	subs	r6, r2, #0
 c002054:	dd07      	ble.n	c002066 <_read+0x16>
 c002056:	460c      	mov	r4, r1
 c002058:	198d      	adds	r5, r1, r6
 c00205a:	f3af 8000 	nop.w
 c00205e:	f804 0b01 	strb.w	r0, [r4], #1
 c002062:	42a5      	cmp	r5, r4
 c002064:	d1f9      	bne.n	c00205a <_read+0xa>
 c002066:	4630      	mov	r0, r6
 c002068:	bd70      	pop	{r4, r5, r6, pc}
 c00206a:	bf00      	nop

0c00206c <_write>:
 c00206c:	b570      	push	{r4, r5, r6, lr}
 c00206e:	1e16      	subs	r6, r2, #0
 c002070:	dd07      	ble.n	c002082 <_write+0x16>
 c002072:	460c      	mov	r4, r1
 c002074:	198d      	adds	r5, r1, r6
 c002076:	f814 0b01 	ldrb.w	r0, [r4], #1
 c00207a:	f3af 8000 	nop.w
 c00207e:	42ac      	cmp	r4, r5
 c002080:	d1f9      	bne.n	c002076 <_write+0xa>
 c002082:	4630      	mov	r0, r6
 c002084:	bd70      	pop	{r4, r5, r6, pc}
 c002086:	bf00      	nop

0c002088 <_close>:
 c002088:	f04f 30ff 	mov.w	r0, #4294967295
 c00208c:	4770      	bx	lr
 c00208e:	bf00      	nop

0c002090 <_fstat>:
 c002090:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 c002094:	2000      	movs	r0, #0
 c002096:	604b      	str	r3, [r1, #4]
 c002098:	4770      	bx	lr
 c00209a:	bf00      	nop

0c00209c <_isatty>:
 c00209c:	2001      	movs	r0, #1
 c00209e:	4770      	bx	lr

0c0020a0 <_lseek>:
 c0020a0:	2000      	movs	r0, #0
 c0020a2:	4770      	bx	lr

0c0020a4 <_sbrk>:
 c0020a4:	490d      	ldr	r1, [pc, #52]	@ (c0020dc <_sbrk+0x38>)
 c0020a6:	4603      	mov	r3, r0
 c0020a8:	b510      	push	{r4, lr}
 c0020aa:	4a0d      	ldr	r2, [pc, #52]	@ (c0020e0 <_sbrk+0x3c>)
 c0020ac:	4c0d      	ldr	r4, [pc, #52]	@ (c0020e4 <_sbrk+0x40>)
 c0020ae:	6808      	ldr	r0, [r1, #0]
 c0020b0:	1b12      	subs	r2, r2, r4
 c0020b2:	b120      	cbz	r0, c0020be <_sbrk+0x1a>
 c0020b4:	4403      	add	r3, r0
 c0020b6:	4293      	cmp	r3, r2
 c0020b8:	d807      	bhi.n	c0020ca <_sbrk+0x26>
 c0020ba:	600b      	str	r3, [r1, #0]
 c0020bc:	bd10      	pop	{r4, pc}
 c0020be:	4c0a      	ldr	r4, [pc, #40]	@ (c0020e8 <_sbrk+0x44>)
 c0020c0:	4620      	mov	r0, r4
 c0020c2:	4403      	add	r3, r0
 c0020c4:	4293      	cmp	r3, r2
 c0020c6:	600c      	str	r4, [r1, #0]
 c0020c8:	d9f7      	bls.n	c0020ba <_sbrk+0x16>
 c0020ca:	f00d fb53 	bl	c00f774 <__errno>
 c0020ce:	220c      	movs	r2, #12
 c0020d0:	4603      	mov	r3, r0
 c0020d2:	f04f 30ff 	mov.w	r0, #4294967295
 c0020d6:	601a      	str	r2, [r3, #0]
 c0020d8:	bd10      	pop	{r4, pc}
 c0020da:	bf00      	nop
 c0020dc:	30000258 	.word	0x30000258
 c0020e0:	30010000 	.word	0x30010000
 c0020e4:	00000800 	.word	0x00000800
 c0020e8:	300004e0 	.word	0x300004e0

0c0020ec <SystemInit>:
{

#if defined (__SAUREGION_PRESENT) && (__SAUREGION_PRESENT == 1U)

  #if defined (SAU_INIT_REGION0) && (SAU_INIT_REGION0 == 1U)
    SAU_INIT_REGION(0);
 c0020ec:	2200      	movs	r2, #0
  #endif

  #if defined (SAU_INIT_REGION1) && (SAU_INIT_REGION1 == 1U)
    SAU_INIT_REGION(1);
 c0020ee:	2101      	movs	r1, #1
  #endif

  #if defined (SAU_INIT_REGION2) && (SAU_INIT_REGION2 == 1U)
    SAU_INIT_REGION(2);
 c0020f0:	f04f 0c02 	mov.w	ip, #2
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 c0020f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  #endif

  #if defined (SAU_INIT_REGION3) && (SAU_INIT_REGION3 == 1U)
    SAU_INIT_REGION(3);
 c0020f8:	f04f 4680 	mov.w	r6, #1073741824	@ 0x40000000
 c0020fc:	2703      	movs	r7, #3
  #endif

  #if defined (SAU_INIT_REGION4) && (SAU_INIT_REGION4 == 1U)
    SAU_INIT_REGION(4);
 c0020fe:	f04f 40c0 	mov.w	r0, #1610612736	@ 0x60000000
 c002102:	2504      	movs	r5, #4
  #endif

  #if defined (SAU_INIT_REGION5) && (SAU_INIT_REGION5 == 1U)
    SAU_INIT_REGION(5);
 c002104:	2405      	movs	r4, #5
    SAU_INIT_REGION(0);
 c002106:	4b30      	ldr	r3, [pc, #192]	@ (c0021c8 <SystemInit+0xdc>)
 c002108:	f8df a0d8 	ldr.w	sl, [pc, #216]	@ c0021e4 <SystemInit+0xf8>
 c00210c:	f8df 90d8 	ldr.w	r9, [pc, #216]	@ c0021e8 <SystemInit+0xfc>
    SAU_INIT_REGION(1);
 c002110:	f8df 80d8 	ldr.w	r8, [pc, #216]	@ c0021ec <SystemInit+0x100>
 c002114:	f8df e0d8 	ldr.w	lr, [pc, #216]	@ c0021f0 <SystemInit+0x104>
    SAU_INIT_REGION(0);
 c002118:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
 c00211c:	f8c3 a0dc 	str.w	sl, [r3, #220]	@ 0xdc
 c002120:	f8c3 90e0 	str.w	r9, [r3, #224]	@ 0xe0
    SAU_INIT_REGION(1);
 c002124:	f8c3 10d8 	str.w	r1, [r3, #216]	@ 0xd8
 c002128:	f8c3 80dc 	str.w	r8, [r3, #220]	@ 0xdc
 c00212c:	f8c3 e0e0 	str.w	lr, [r3, #224]	@ 0xe0
    SAU_INIT_REGION(2);
 c002130:	f8c3 c0d8 	str.w	ip, [r3, #216]	@ 0xd8
 c002134:	f8df c0bc 	ldr.w	ip, [pc, #188]	@ c0021f4 <SystemInit+0x108>
 c002138:	f8c3 c0dc 	str.w	ip, [r3, #220]	@ 0xdc
 c00213c:	f50c 3c1f 	add.w	ip, ip, #162816	@ 0x27c00
 c002140:	f20c 3ce1 	addw	ip, ip, #993	@ 0x3e1
 c002144:	f8c3 c0e0 	str.w	ip, [r3, #224]	@ 0xe0
    SAU_INIT_REGION(3);
 c002148:	f8c3 70d8 	str.w	r7, [r3, #216]	@ 0xd8
 c00214c:	f8c3 60dc 	str.w	r6, [r3, #220]	@ 0xdc
 c002150:	4e1e      	ldr	r6, [pc, #120]	@ (c0021cc <SystemInit+0xe0>)
 c002152:	f8c3 60e0 	str.w	r6, [r3, #224]	@ 0xe0
    SAU_INIT_REGION(4);
 c002156:	f8c3 50d8 	str.w	r5, [r3, #216]	@ 0xd8
 c00215a:	f8c3 00dc 	str.w	r0, [r3, #220]	@ 0xdc
 c00215e:	481c      	ldr	r0, [pc, #112]	@ (c0021d0 <SystemInit+0xe4>)
 c002160:	f8c3 00e0 	str.w	r0, [r3, #224]	@ 0xe0
    SAU_INIT_REGION(5);
 c002164:	481b      	ldr	r0, [pc, #108]	@ (c0021d4 <SystemInit+0xe8>)
 c002166:	f8c3 40d8 	str.w	r4, [r3, #216]	@ 0xd8
 c00216a:	f8c3 00dc 	str.w	r0, [r3, #220]	@ 0xdc
 c00216e:	f500 30c7 	add.w	r0, r0, #101888	@ 0x18e00
 c002172:	f200 10e1 	addw	r0, r0, #481	@ 0x1e1
 c002176:	f8c3 00e0 	str.w	r0, [r3, #224]	@ 0xe0
  /* repeat this for all possible SAU regions */

#endif /* defined (__SAUREGION_PRESENT) && (__SAUREGION_PRESENT == 1U) */

  #if defined (SAU_INIT_CTRL) && (SAU_INIT_CTRL == 1U)
    SAU->CTRL = ((SAU_INIT_CTRL_ENABLE << SAU_CTRL_ENABLE_Pos) & SAU_CTRL_ENABLE_Msk) |
 c00217a:	f8c3 10d0 	str.w	r1, [r3, #208]	@ 0xd0
  #endif /* defined (SCB_CSR_AIRCR_INIT) && (SCB_CSR_AIRCR_INIT == 1U) */

  #if defined (__FPU_USED) && (__FPU_USED == 1U) && \
      defined (TZ_FPU_NS_USAGE) && (TZ_FPU_NS_USAGE == 1U)

    SCB->NSACR = (SCB->NSACR & ~(SCB_NSACR_CP10_Msk | SCB_NSACR_CP11_Msk)) |
 c00217e:	f8d3 108c 	ldr.w	r1, [r3, #140]	@ 0x8c
                   ((SCB_NSACR_CP10_11_VAL << SCB_NSACR_CP10_Pos) & (SCB_NSACR_CP10_Msk | SCB_NSACR_CP11_Msk));

    FPU->FPCCR = (FPU->FPCCR & ~(FPU_FPCCR_TS_Msk | FPU_FPCCR_CLRONRETS_Msk | FPU_FPCCR_CLRONRET_Msk)) |
 c002182:	4c15      	ldr	r4, [pc, #84]	@ (c0021d8 <SystemInit+0xec>)
    SCB->NSACR = (SCB->NSACR & ~(SCB_NSACR_CP10_Msk | SCB_NSACR_CP11_Msk)) |
 c002184:	f441 6140 	orr.w	r1, r1, #3072	@ 0xc00
 c002188:	f8c3 108c 	str.w	r1, [r3, #140]	@ 0x8c
    FPU->FPCCR = (FPU->FPCCR & ~(FPU_FPCCR_TS_Msk | FPU_FPCCR_CLRONRETS_Msk | FPU_FPCCR_CLRONRET_Msk)) |
 c00218c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
                   ((FPU_FPCCR_CLRONRETS_VAL << FPU_FPCCR_CLRONRETS_Pos) & FPU_FPCCR_CLRONRETS_Msk) |
                   ((FPU_FPCCR_CLRONRET_VAL  << FPU_FPCCR_CLRONRET_Pos ) & FPU_FPCCR_CLRONRET_Msk );
  #endif

  #if defined (NVIC_INIT_ITNS0) && (NVIC_INIT_ITNS0 == 1U)
    NVIC->ITNS[0] = NVIC_INIT_ITNS0_VAL;
 c00218e:	4813      	ldr	r0, [pc, #76]	@ (c0021dc <SystemInit+0xf0>)
                   ((FPU_FPCCR_TS_VAL        << FPU_FPCCR_TS_Pos       ) & FPU_FPCCR_TS_Msk       ) |
 c002190:	f021 51e0 	bic.w	r1, r1, #469762048	@ 0x1c000000
                   ((FPU_FPCCR_CLRONRETS_VAL << FPU_FPCCR_CLRONRETS_Pos) & FPU_FPCCR_CLRONRETS_Msk) |
 c002194:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
    FPU->FPCCR = (FPU->FPCCR & ~(FPU_FPCCR_TS_Msk | FPU_FPCCR_CLRONRETS_Msk | FPU_FPCCR_CLRONRET_Msk)) |
 c002198:	6361      	str	r1, [r4, #52]	@ 0x34
    NVIC->ITNS[0] = NVIC_INIT_ITNS0_VAL;
 c00219a:	f8c0 2280 	str.w	r2, [r0, #640]	@ 0x280
  #endif

  #if defined (NVIC_INIT_ITNS1) && (NVIC_INIT_ITNS1 == 1U)
    NVIC->ITNS[1] = NVIC_INIT_ITNS1_VAL;
 c00219e:	f8c0 2284 	str.w	r2, [r0, #644]	@ 0x284
  #endif

  #if defined (NVIC_INIT_ITNS2) && (NVIC_INIT_ITNS2 == 1U)
    NVIC->ITNS[2] = NVIC_INIT_ITNS2_VAL;
 c0021a2:	f8c0 2288 	str.w	r2, [r0, #648]	@ 0x288
  #endif

  #if defined (NVIC_INIT_ITNS3) && (NVIC_INIT_ITNS3 == 1U)
    NVIC->ITNS[3] = NVIC_INIT_ITNS3_VAL;
 c0021a6:	f8c0 228c 	str.w	r2, [r0, #652]	@ 0x28c
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 c0021aa:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88

  SCB_NS->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 c0021ae:	490c      	ldr	r1, [pc, #48]	@ (c0021e0 <SystemInit+0xf4>)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 c0021b0:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 c0021b4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  SCB_NS->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 c0021b8:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 c0021bc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 c0021c0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
#endif
}
 c0021c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c0021c8:	e000ed00 	.word	0xe000ed00
 c0021cc:	4fffffe1 	.word	0x4fffffe1
 c0021d0:	9fffffe1 	.word	0x9fffffe1
 c0021d4:	0bf90000 	.word	0x0bf90000
 c0021d8:	e000ef00 	.word	0xe000ef00
 c0021dc:	e000e100 	.word	0xe000e100
 c0021e0:	e002ed00 	.word	0xe002ed00
 c0021e4:	0c03e000 	.word	0x0c03e000
 c0021e8:	0c03ffe3 	.word	0x0c03ffe3
 c0021ec:	08040000 	.word	0x08040000
 c0021f0:	0807ffe1 	.word	0x0807ffe1
 c0021f4:	20018000 	.word	0x20018000

0c0021f8 <SystemCoreClockUpdate>:
void SystemCoreClockUpdate(void)
{
  uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;

  /* Get MSI Range frequency--------------------------------------------------*/
  if((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
 c0021f8:	4b23      	ldr	r3, [pc, #140]	@ (c002288 <SystemCoreClockUpdate+0x90>)
  }
  /*MSI frequency range in HZ*/
  msirange = MSIRangeTable[msirange];

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c0021fa:	4923      	ldr	r1, [pc, #140]	@ (c002288 <SystemCoreClockUpdate+0x90>)
  if((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
 c0021fc:	681a      	ldr	r2, [r3, #0]
  msirange = MSIRangeTable[msirange];
 c0021fe:	4823      	ldr	r0, [pc, #140]	@ (c00228c <SystemCoreClockUpdate+0x94>)
  if((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
 c002200:	0712      	lsls	r2, r2, #28
    msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
 c002202:	bf54      	ite	pl
 c002204:	f8d3 3094 	ldrpl.w	r3, [r3, #148]	@ 0x94
    msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 c002208:	681b      	ldrmi	r3, [r3, #0]
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c00220a:	688a      	ldr	r2, [r1, #8]
    msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
 c00220c:	bf58      	it	pl
 c00220e:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c002212:	f002 020c 	and.w	r2, r2, #12
    msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 c002216:	bf48      	it	mi
 c002218:	f3c3 1303 	ubfxmi	r3, r3, #4, #4
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c00221c:	2a08      	cmp	r2, #8
  msirange = MSIRangeTable[msirange];
 c00221e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c002222:	d00f      	beq.n	c002244 <SystemCoreClockUpdate+0x4c>
 c002224:	2a0c      	cmp	r2, #12
 c002226:	d00f      	beq.n	c002248 <SystemCoreClockUpdate+0x50>
 c002228:	4919      	ldr	r1, [pc, #100]	@ (c002290 <SystemCoreClockUpdate+0x98>)
 c00222a:	2a04      	cmp	r2, #4
 c00222c:	bf08      	it	eq
 c00222e:	460b      	moveq	r3, r1
      SystemCoreClock = msirange;
      break;
  }
  /* Compute HCLK clock frequency --------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 c002230:	4a15      	ldr	r2, [pc, #84]	@ (c002288 <SystemCoreClockUpdate+0x90>)
 c002232:	4818      	ldr	r0, [pc, #96]	@ (c002294 <SystemCoreClockUpdate+0x9c>)
 c002234:	6892      	ldr	r2, [r2, #8]
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;
 c002236:	4918      	ldr	r1, [pc, #96]	@ (c002298 <SystemCoreClockUpdate+0xa0>)
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 c002238:	f3c2 1203 	ubfx	r2, r2, #4, #4
 c00223c:	5c82      	ldrb	r2, [r0, r2]
  SystemCoreClock >>= tmp;
 c00223e:	40d3      	lsrs	r3, r2
 c002240:	600b      	str	r3, [r1, #0]
}
 c002242:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c002244:	4b12      	ldr	r3, [pc, #72]	@ (c002290 <SystemCoreClockUpdate+0x98>)
 c002246:	e7f3      	b.n	c002230 <SystemCoreClockUpdate+0x38>
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c002248:	68c8      	ldr	r0, [r1, #12]
      pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 c00224a:	68ca      	ldr	r2, [r1, #12]
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c00224c:	f000 0103 	and.w	r1, r0, #3
 c002250:	3902      	subs	r1, #2
 c002252:	2901      	cmp	r1, #1
          pllvco = (HSE_VALUE / pllm);
 c002254:	bf98      	it	ls
 c002256:	490e      	ldrls	r1, [pc, #56]	@ (c002290 <SystemCoreClockUpdate+0x98>)
      pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 c002258:	f3c2 1203 	ubfx	r2, r2, #4, #4
 c00225c:	f102 0201 	add.w	r2, r2, #1
          pllvco = (msirange / pllm);
 c002260:	bf8c      	ite	hi
 c002262:	fbb3 f1f2 	udivhi	r1, r3, r2
          pllvco = (HSE_VALUE / pllm);
 c002266:	fbb1 f1f2 	udivls	r1, r1, r2
      pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 c00226a:	4a07      	ldr	r2, [pc, #28]	@ (c002288 <SystemCoreClockUpdate+0x90>)
 c00226c:	68d3      	ldr	r3, [r2, #12]
      pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 c00226e:	68d2      	ldr	r2, [r2, #12]
      pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 c002270:	f3c3 2306 	ubfx	r3, r3, #8, #7
 c002274:	fb01 f303 	mul.w	r3, r1, r3
      pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 c002278:	f3c2 6241 	ubfx	r2, r2, #25, #2
 c00227c:	3201      	adds	r2, #1
 c00227e:	0052      	lsls	r2, r2, #1
      SystemCoreClock = pllvco/pllr;
 c002280:	fbb3 f3f2 	udiv	r3, r3, r2
      break;
 c002284:	e7d4      	b.n	c002230 <SystemCoreClockUpdate+0x38>
 c002286:	bf00      	nop
 c002288:	50021000 	.word	0x50021000
 c00228c:	0c011a38 	.word	0x0c011a38
 c002290:	00f42400 	.word	0x00f42400
 c002294:	0c011a80 	.word	0x0c011a80
 c002298:	30000000 	.word	0x30000000

0c00229c <__acle_se_SECURE_SystemCoreClockUpdate>:
  if((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
 c00229c:	4b3c      	ldr	r3, [pc, #240]	@ (c002390 <__acle_se_SECURE_SystemCoreClockUpdate+0xf4>)
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c00229e:	493c      	ldr	r1, [pc, #240]	@ (c002390 <__acle_se_SECURE_SystemCoreClockUpdate+0xf4>)
  if((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
 c0022a0:	681a      	ldr	r2, [r3, #0]
  msirange = MSIRangeTable[msirange];
 c0022a2:	483c      	ldr	r0, [pc, #240]	@ (c002394 <__acle_se_SECURE_SystemCoreClockUpdate+0xf8>)
  if((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
 c0022a4:	0712      	lsls	r2, r2, #28
    msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
 c0022a6:	bf54      	ite	pl
 c0022a8:	f8d3 2094 	ldrpl.w	r2, [r3, #148]	@ 0x94
    msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 c0022ac:	681a      	ldrmi	r2, [r3, #0]
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c0022ae:	688b      	ldr	r3, [r1, #8]
    msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
 c0022b0:	bf58      	it	pl
 c0022b2:	f3c2 2203 	ubfxpl	r2, r2, #8, #4
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c0022b6:	f003 030c 	and.w	r3, r3, #12
    msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 c0022ba:	bf48      	it	mi
 c0022bc:	f3c2 1203 	ubfxmi	r2, r2, #4, #4
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c0022c0:	2b08      	cmp	r3, #8
  msirange = MSIRangeTable[msirange];
 c0022c2:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c0022c6:	d041      	beq.n	c00234c <__acle_se_SECURE_SystemCoreClockUpdate+0xb0>
 c0022c8:	2b0c      	cmp	r3, #12
 c0022ca:	d041      	beq.n	c002350 <__acle_se_SECURE_SystemCoreClockUpdate+0xb4>
 c0022cc:	4a32      	ldr	r2, [pc, #200]	@ (c002398 <__acle_se_SECURE_SystemCoreClockUpdate+0xfc>)
 c0022ce:	2b04      	cmp	r3, #4
 c0022d0:	bf08      	it	eq
 c0022d2:	4610      	moveq	r0, r2
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 c0022d4:	4b2e      	ldr	r3, [pc, #184]	@ (c002390 <__acle_se_SECURE_SystemCoreClockUpdate+0xf4>)
 c0022d6:	4931      	ldr	r1, [pc, #196]	@ (c00239c <__acle_se_SECURE_SystemCoreClockUpdate+0x100>)
 c0022d8:	689b      	ldr	r3, [r3, #8]
  SystemCoreClock >>= tmp;
 c0022da:	4a31      	ldr	r2, [pc, #196]	@ (c0023a0 <__acle_se_SECURE_SystemCoreClockUpdate+0x104>)
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 c0022dc:	f3c3 1303 	ubfx	r3, r3, #4, #4
 c0022e0:	5ccb      	ldrb	r3, [r1, r3]
CMSE_NS_ENTRY uint32_t SECURE_SystemCoreClockUpdate(void)
{
  SystemCoreClockUpdate();
  
  return SystemCoreClock;
}
 c0022e2:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
  SystemCoreClock >>= tmp;
 c0022e6:	40d8      	lsrs	r0, r3
}
 c0022e8:	4671      	mov	r1, lr
 c0022ea:	4673      	mov	r3, lr
 c0022ec:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 c0022f0:	eeb7 1a00 	vmov.f32	s2, #112	@ 0x3f800000  1.0
 c0022f4:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 c0022f8:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 c0022fc:	eef7 2a00 	vmov.f32	s5, #112	@ 0x3f800000  1.0
 c002300:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 c002304:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 c002308:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 c00230c:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 c002310:	eeb7 5a00 	vmov.f32	s10, #112	@ 0x3f800000  1.0
 c002314:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c002318:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 c00231c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 c002320:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
  SystemCoreClock >>= tmp;
 c002324:	6010      	str	r0, [r2, #0]
}
 c002326:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 c00232a:	4672      	mov	r2, lr
 c00232c:	f38e 8c00 	msr	CPSR_fs, lr
 c002330:	b410      	push	{r4}
 c002332:	eef1 ca10 	vmrs	ip, fpscr
 c002336:	f64f 7460 	movw	r4, #65376	@ 0xff60
 c00233a:	f6c0 74ff 	movt	r4, #4095	@ 0xfff
 c00233e:	ea0c 0c04 	and.w	ip, ip, r4
 c002342:	eee1 ca10 	vmsr	fpscr, ip
 c002346:	bc10      	pop	{r4}
 c002348:	46f4      	mov	ip, lr
 c00234a:	4774      	bxns	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
 c00234c:	4812      	ldr	r0, [pc, #72]	@ (c002398 <__acle_se_SECURE_SystemCoreClockUpdate+0xfc>)
 c00234e:	e7c1      	b.n	c0022d4 <__acle_se_SECURE_SystemCoreClockUpdate+0x38>
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c002350:	68ca      	ldr	r2, [r1, #12]
      pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 c002352:	68cb      	ldr	r3, [r1, #12]
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c002354:	f002 0203 	and.w	r2, r2, #3
 c002358:	3a02      	subs	r2, #2
 c00235a:	2a01      	cmp	r2, #1
          pllvco = (HSE_VALUE / pllm);
 c00235c:	bf98      	it	ls
 c00235e:	4a0e      	ldrls	r2, [pc, #56]	@ (c002398 <__acle_se_SECURE_SystemCoreClockUpdate+0xfc>)
      pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 c002360:	f3c3 1303 	ubfx	r3, r3, #4, #4
 c002364:	f103 0301 	add.w	r3, r3, #1
          pllvco = (msirange / pllm);
 c002368:	bf8c      	ite	hi
 c00236a:	fbb0 f2f3 	udivhi	r2, r0, r3
          pllvco = (HSE_VALUE / pllm);
 c00236e:	fbb2 f2f3 	udivls	r2, r2, r3
      pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 c002372:	4b07      	ldr	r3, [pc, #28]	@ (c002390 <__acle_se_SECURE_SystemCoreClockUpdate+0xf4>)
 c002374:	68d8      	ldr	r0, [r3, #12]
      pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 c002376:	68db      	ldr	r3, [r3, #12]
      pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 c002378:	f3c0 2006 	ubfx	r0, r0, #8, #7
 c00237c:	fb02 f000 	mul.w	r0, r2, r0
      pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 c002380:	f3c3 6341 	ubfx	r3, r3, #25, #2
 c002384:	3301      	adds	r3, #1
 c002386:	005b      	lsls	r3, r3, #1
      SystemCoreClock = pllvco/pllr;
 c002388:	fbb0 f0f3 	udiv	r0, r0, r3
      break;
 c00238c:	e7a2      	b.n	c0022d4 <__acle_se_SECURE_SystemCoreClockUpdate+0x38>
 c00238e:	bf00      	nop
 c002390:	50021000 	.word	0x50021000
 c002394:	0c011a38 	.word	0x0c011a38
 c002398:	00f42400 	.word	0x00f42400
 c00239c:	0c011a80 	.word	0x0c011a80
 c0023a0:	30000000 	.word	0x30000000

0c0023a4 <MX_TIM3_Init>:

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 c0023a4:	2300      	movs	r3, #0

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
  htim3.Init.Prescaler = 0;
 c0023a6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
 c0023aa:	b500      	push	{lr}
  htim3.Instance = TIM3;
 c0023ac:	4818      	ldr	r0, [pc, #96]	@ (c002410 <MX_TIM3_Init+0x6c>)
 c0023ae:	4919      	ldr	r1, [pc, #100]	@ (c002414 <MX_TIM3_Init+0x70>)
{
 c0023b0:	b089      	sub	sp, #36	@ 0x24
  htim3.Init.Prescaler = 0;
 c0023b2:	e9c0 3301 	strd	r3, r3, [r0, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 c0023b6:	e9cd 3305 	strd	r3, r3, [sp, #20]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 c0023ba:	e9cd 3302 	strd	r3, r3, [sp, #8]
  htim3.Instance = TIM3;
 c0023be:	6001      	str	r1, [r0, #0]
  htim3.Init.Prescaler = 0;
 c0023c0:	60c2      	str	r2, [r0, #12]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 c0023c2:	9304      	str	r3, [sp, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 c0023c4:	9301      	str	r3, [sp, #4]
  htim3.Init.Prescaler = 0;
 c0023c6:	6103      	str	r3, [r0, #16]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim3.Init.Period = 65535;
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 c0023c8:	6183      	str	r3, [r0, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 c0023ca:	9307      	str	r3, [sp, #28]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 c0023cc:	f00b ff18 	bl	c00e200 <HAL_TIM_Base_Init>
 c0023d0:	b990      	cbnz	r0, c0023f8 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 c0023d2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 c0023d6:	480e      	ldr	r0, [pc, #56]	@ (c002410 <MX_TIM3_Init+0x6c>)
 c0023d8:	a904      	add	r1, sp, #16
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 c0023da:	9304      	str	r3, [sp, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 c0023dc:	f00b ff9e 	bl	c00e31c <HAL_TIM_ConfigClockSource>
 c0023e0:	b990      	cbnz	r0, c002408 <MX_TIM3_Init+0x64>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 c0023e2:	2300      	movs	r3, #0
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 c0023e4:	480a      	ldr	r0, [pc, #40]	@ (c002410 <MX_TIM3_Init+0x6c>)
 c0023e6:	a901      	add	r1, sp, #4
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 c0023e8:	9301      	str	r3, [sp, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 c0023ea:	9303      	str	r3, [sp, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 c0023ec:	f00c f906 	bl	c00e5fc <HAL_TIMEx_MasterConfigSynchronization>
 c0023f0:	b928      	cbnz	r0, c0023fe <MX_TIM3_Init+0x5a>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 c0023f2:	b009      	add	sp, #36	@ 0x24
 c0023f4:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 c0023f8:	f7ff fb18 	bl	c001a2c <Error_Handler>
 c0023fc:	e7e9      	b.n	c0023d2 <MX_TIM3_Init+0x2e>
    Error_Handler();
 c0023fe:	f7ff fb15 	bl	c001a2c <Error_Handler>
}
 c002402:	b009      	add	sp, #36	@ 0x24
 c002404:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 c002408:	f7ff fb10 	bl	c001a2c <Error_Handler>
 c00240c:	e7e9      	b.n	c0023e2 <MX_TIM3_Init+0x3e>
 c00240e:	bf00      	nop
 c002410:	300002b0 	.word	0x300002b0
 c002414:	50000400 	.word	0x50000400

0c002418 <MX_TIM4_Init>:

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 c002418:	2300      	movs	r3, #0

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
  htim4.Init.Prescaler = 0;
 c00241a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
 c00241e:	b500      	push	{lr}
  htim4.Instance = TIM4;
 c002420:	4818      	ldr	r0, [pc, #96]	@ (c002484 <MX_TIM4_Init+0x6c>)
 c002422:	4919      	ldr	r1, [pc, #100]	@ (c002488 <MX_TIM4_Init+0x70>)
{
 c002424:	b089      	sub	sp, #36	@ 0x24
  htim4.Init.Prescaler = 0;
 c002426:	e9c0 3301 	strd	r3, r3, [r0, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 c00242a:	e9cd 3305 	strd	r3, r3, [sp, #20]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 c00242e:	e9cd 3302 	strd	r3, r3, [sp, #8]
  htim4.Instance = TIM4;
 c002432:	6001      	str	r1, [r0, #0]
  htim4.Init.Prescaler = 0;
 c002434:	60c2      	str	r2, [r0, #12]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 c002436:	9304      	str	r3, [sp, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 c002438:	9301      	str	r3, [sp, #4]
  htim4.Init.Prescaler = 0;
 c00243a:	6103      	str	r3, [r0, #16]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim4.Init.Period = 65535;
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 c00243c:	6183      	str	r3, [r0, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 c00243e:	9307      	str	r3, [sp, #28]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 c002440:	f00b fede 	bl	c00e200 <HAL_TIM_Base_Init>
 c002444:	b990      	cbnz	r0, c00246c <MX_TIM4_Init+0x54>
  {
    Error_Handler();
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 c002446:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 c00244a:	480e      	ldr	r0, [pc, #56]	@ (c002484 <MX_TIM4_Init+0x6c>)
 c00244c:	a904      	add	r1, sp, #16
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 c00244e:	9304      	str	r3, [sp, #16]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 c002450:	f00b ff64 	bl	c00e31c <HAL_TIM_ConfigClockSource>
 c002454:	b990      	cbnz	r0, c00247c <MX_TIM4_Init+0x64>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 c002456:	2300      	movs	r3, #0
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 c002458:	480a      	ldr	r0, [pc, #40]	@ (c002484 <MX_TIM4_Init+0x6c>)
 c00245a:	a901      	add	r1, sp, #4
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 c00245c:	9301      	str	r3, [sp, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 c00245e:	9303      	str	r3, [sp, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 c002460:	f00c f8cc 	bl	c00e5fc <HAL_TIMEx_MasterConfigSynchronization>
 c002464:	b928      	cbnz	r0, c002472 <MX_TIM4_Init+0x5a>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 c002466:	b009      	add	sp, #36	@ 0x24
 c002468:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 c00246c:	f7ff fade 	bl	c001a2c <Error_Handler>
 c002470:	e7e9      	b.n	c002446 <MX_TIM4_Init+0x2e>
    Error_Handler();
 c002472:	f7ff fadb 	bl	c001a2c <Error_Handler>
}
 c002476:	b009      	add	sp, #36	@ 0x24
 c002478:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 c00247c:	f7ff fad6 	bl	c001a2c <Error_Handler>
 c002480:	e7e9      	b.n	c002456 <MX_TIM4_Init+0x3e>
 c002482:	bf00      	nop
 c002484:	30000260 	.word	0x30000260
 c002488:	50000800 	.word	0x50000800

0c00248c <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 c00248c:	b500      	push	{lr}

  if(tim_baseHandle->Instance==TIM3)
 c00248e:	4a1a      	ldr	r2, [pc, #104]	@ (c0024f8 <HAL_TIM_Base_MspInit+0x6c>)
 c002490:	6803      	ldr	r3, [r0, #0]
{
 c002492:	b083      	sub	sp, #12
  if(tim_baseHandle->Instance==TIM3)
 c002494:	4293      	cmp	r3, r2
 c002496:	d005      	beq.n	c0024a4 <HAL_TIM_Base_MspInit+0x18>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(tim_baseHandle->Instance==TIM4)
 c002498:	4a18      	ldr	r2, [pc, #96]	@ (c0024fc <HAL_TIM_Base_MspInit+0x70>)
 c00249a:	4293      	cmp	r3, r2
 c00249c:	d017      	beq.n	c0024ce <HAL_TIM_Base_MspInit+0x42>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 c00249e:	b003      	add	sp, #12
 c0024a0:	f85d fb04 	ldr.w	pc, [sp], #4
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 c0024a4:	2200      	movs	r2, #0
    __HAL_RCC_TIM3_CLK_ENABLE();
 c0024a6:	4b16      	ldr	r3, [pc, #88]	@ (c002500 <HAL_TIM_Base_MspInit+0x74>)
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 c0024a8:	202e      	movs	r0, #46	@ 0x2e
    __HAL_RCC_TIM3_CLK_ENABLE();
 c0024aa:	6d99      	ldr	r1, [r3, #88]	@ 0x58
 c0024ac:	f041 0102 	orr.w	r1, r1, #2
 c0024b0:	6599      	str	r1, [r3, #88]	@ 0x58
 c0024b2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 c0024b4:	4611      	mov	r1, r2
    __HAL_RCC_TIM3_CLK_ENABLE();
 c0024b6:	f003 0302 	and.w	r3, r3, #2
 c0024ba:	9300      	str	r3, [sp, #0]
 c0024bc:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 c0024be:	f00a f983 	bl	c00c7c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 c0024c2:	202e      	movs	r0, #46	@ 0x2e
}
 c0024c4:	b003      	add	sp, #12
 c0024c6:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 c0024ca:	f00a b9b9 	b.w	c00c840 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 c0024ce:	2200      	movs	r2, #0
    __HAL_RCC_TIM4_CLK_ENABLE();
 c0024d0:	4b0b      	ldr	r3, [pc, #44]	@ (c002500 <HAL_TIM_Base_MspInit+0x74>)
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 c0024d2:	202f      	movs	r0, #47	@ 0x2f
    __HAL_RCC_TIM4_CLK_ENABLE();
 c0024d4:	6d99      	ldr	r1, [r3, #88]	@ 0x58
 c0024d6:	f041 0104 	orr.w	r1, r1, #4
 c0024da:	6599      	str	r1, [r3, #88]	@ 0x58
 c0024dc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 c0024de:	4611      	mov	r1, r2
    __HAL_RCC_TIM4_CLK_ENABLE();
 c0024e0:	f003 0304 	and.w	r3, r3, #4
 c0024e4:	9301      	str	r3, [sp, #4]
 c0024e6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 c0024e8:	f00a f96e 	bl	c00c7c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 c0024ec:	202f      	movs	r0, #47	@ 0x2f
}
 c0024ee:	b003      	add	sp, #12
 c0024f0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 c0024f4:	f00a b9a4 	b.w	c00c840 <HAL_NVIC_EnableIRQ>
 c0024f8:	50000400 	.word	0x50000400
 c0024fc:	50000800 	.word	0x50000800
 c002500:	50021000 	.word	0x50021000
 c002504:	00000000 	.word	0x00000000

0c002508 <MX_LPUART1_UART_Init>:
UART_HandleTypeDef hlpuart1;

/* LPUART1 init function */

void MX_LPUART1_UART_Init(void)
{
 c002508:	b508      	push	{r3, lr}

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
  hlpuart1.Init.BaudRate = 921600;
 c00250a:	f44f 2161 	mov.w	r1, #921600	@ 0xe1000
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 c00250e:	2300      	movs	r3, #0
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
  hlpuart1.Init.Parity = UART_PARITY_NONE;
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 c002510:	220c      	movs	r2, #12
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 c002512:	ed9f 7b1f 	vldr	d7, [pc, #124]	@ c002590 <MX_LPUART1_UART_Init+0x88>
  hlpuart1.Instance = LPUART1;
 c002516:	4820      	ldr	r0, [pc, #128]	@ (c002598 <MX_LPUART1_UART_Init+0x90>)
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 c002518:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 c00251c:	e9c0 3303 	strd	r3, r3, [r0, #12]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 c002520:	e9c0 2305 	strd	r2, r3, [r0, #20]
  hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 c002524:	6283      	str	r3, [r0, #40]	@ 0x28
  hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 c002526:	6643      	str	r3, [r0, #100]	@ 0x64
  hlpuart1.Instance = LPUART1;
 c002528:	4b1c      	ldr	r3, [pc, #112]	@ (c00259c <MX_LPUART1_UART_Init+0x94>)
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 c00252a:	ed80 7b08 	vstr	d7, [r0, #32]
  hlpuart1.Instance = LPUART1;
 c00252e:	6003      	str	r3, [r0, #0]
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 c002530:	f00c fb92 	bl	c00ec58 <HAL_UART_Init>
 c002534:	b970      	cbnz	r0, c002554 <MX_LPUART1_UART_Init+0x4c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 c002536:	2100      	movs	r1, #0
 c002538:	4817      	ldr	r0, [pc, #92]	@ (c002598 <MX_LPUART1_UART_Init+0x90>)
 c00253a:	f00c fcd9 	bl	c00eef0 <HAL_UARTEx_SetTxFifoThreshold>
 c00253e:	b988      	cbnz	r0, c002564 <MX_LPUART1_UART_Init+0x5c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 c002540:	2100      	movs	r1, #0
 c002542:	4815      	ldr	r0, [pc, #84]	@ (c002598 <MX_LPUART1_UART_Init+0x90>)
 c002544:	f00c fd16 	bl	c00ef74 <HAL_UARTEx_SetRxFifoThreshold>
 c002548:	b9a0      	cbnz	r0, c002574 <MX_LPUART1_UART_Init+0x6c>
  {
    Error_Handler();
  }
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 c00254a:	4813      	ldr	r0, [pc, #76]	@ (c002598 <MX_LPUART1_UART_Init+0x90>)
 c00254c:	f00c fcb2 	bl	c00eeb4 <HAL_UARTEx_DisableFifoMode>
 c002550:	b9b8      	cbnz	r0, c002582 <MX_LPUART1_UART_Init+0x7a>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 c002552:	bd08      	pop	{r3, pc}
    Error_Handler();
 c002554:	f7ff fa6a 	bl	c001a2c <Error_Handler>
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 c002558:	2100      	movs	r1, #0
 c00255a:	480f      	ldr	r0, [pc, #60]	@ (c002598 <MX_LPUART1_UART_Init+0x90>)
 c00255c:	f00c fcc8 	bl	c00eef0 <HAL_UARTEx_SetTxFifoThreshold>
 c002560:	2800      	cmp	r0, #0
 c002562:	d0ed      	beq.n	c002540 <MX_LPUART1_UART_Init+0x38>
    Error_Handler();
 c002564:	f7ff fa62 	bl	c001a2c <Error_Handler>
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 c002568:	2100      	movs	r1, #0
 c00256a:	480b      	ldr	r0, [pc, #44]	@ (c002598 <MX_LPUART1_UART_Init+0x90>)
 c00256c:	f00c fd02 	bl	c00ef74 <HAL_UARTEx_SetRxFifoThreshold>
 c002570:	2800      	cmp	r0, #0
 c002572:	d0ea      	beq.n	c00254a <MX_LPUART1_UART_Init+0x42>
    Error_Handler();
 c002574:	f7ff fa5a 	bl	c001a2c <Error_Handler>
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 c002578:	4807      	ldr	r0, [pc, #28]	@ (c002598 <MX_LPUART1_UART_Init+0x90>)
 c00257a:	f00c fc9b 	bl	c00eeb4 <HAL_UARTEx_DisableFifoMode>
 c00257e:	2800      	cmp	r0, #0
 c002580:	d0e7      	beq.n	c002552 <MX_LPUART1_UART_Init+0x4a>
}
 c002582:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 c002586:	f7ff ba51 	b.w	c001a2c <Error_Handler>
 c00258a:	bf00      	nop
 c00258c:	f3af 8000 	nop.w
	...
 c002598:	30000300 	.word	0x30000300
 c00259c:	50008000 	.word	0x50008000

0c0025a0 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 c0025a0:	b510      	push	{r4, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 c0025a2:	2100      	movs	r1, #0
{
 c0025a4:	4604      	mov	r4, r0
 c0025a6:	b0ac      	sub	sp, #176	@ 0xb0
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 c0025a8:	2294      	movs	r2, #148	@ 0x94
 c0025aa:	a807      	add	r0, sp, #28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 c0025ac:	e9cd 1102 	strd	r1, r1, [sp, #8]
 c0025b0:	e9cd 1104 	strd	r1, r1, [sp, #16]
 c0025b4:	9106      	str	r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 c0025b6:	f00d f83b 	bl	c00f630 <memset>
  if(uartHandle->Instance==LPUART1)
 c0025ba:	4b1d      	ldr	r3, [pc, #116]	@ (c002630 <HAL_UART_MspInit+0x90>)
 c0025bc:	6822      	ldr	r2, [r4, #0]
 c0025be:	429a      	cmp	r2, r3
 c0025c0:	d001      	beq.n	c0025c6 <HAL_UART_MspInit+0x26>

  /* USER CODE BEGIN LPUART1_MspInit 1 */

  /* USER CODE END LPUART1_MspInit 1 */
  }
}
 c0025c2:	b02c      	add	sp, #176	@ 0xb0
 c0025c4:	bd10      	pop	{r4, pc}
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 c0025c6:	2320      	movs	r3, #32
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 c0025c8:	a807      	add	r0, sp, #28
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 c0025ca:	9307      	str	r3, [sp, #28]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 c0025cc:	f00b fb90 	bl	c00dcf0 <HAL_RCCEx_PeriphCLKConfig>
 c0025d0:	bb20      	cbnz	r0, c00261c <HAL_UART_MspInit+0x7c>
    __HAL_RCC_LPUART1_CLK_ENABLE();
 c0025d2:	4b18      	ldr	r3, [pc, #96]	@ (c002634 <HAL_UART_MspInit+0x94>)
 c0025d4:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 c0025d6:	f042 0201 	orr.w	r2, r2, #1
 c0025da:	65da      	str	r2, [r3, #92]	@ 0x5c
 c0025dc:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 c0025de:	f002 0201 	and.w	r2, r2, #1
 c0025e2:	9200      	str	r2, [sp, #0]
 c0025e4:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 c0025e6:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 c0025e8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 c0025ec:	64da      	str	r2, [r3, #76]	@ 0x4c
 c0025ee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 c0025f0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 c0025f4:	9301      	str	r3, [sp, #4]
 c0025f6:	9b01      	ldr	r3, [sp, #4]
    HAL_PWREx_EnableVddIO2();
 c0025f8:	f00a fc24 	bl	c00ce44 <HAL_PWREx_EnableVddIO2>
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 c0025fc:	2008      	movs	r0, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 c0025fe:	ed9f 7b0a 	vldr	d7, [pc, #40]	@ c002628 <HAL_UART_MspInit+0x88>
 c002602:	2200      	movs	r2, #0
 c002604:	2300      	movs	r3, #0
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 c002606:	9006      	str	r0, [sp, #24]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 c002608:	a902      	add	r1, sp, #8
 c00260a:	480b      	ldr	r0, [pc, #44]	@ (c002638 <HAL_UART_MspInit+0x98>)
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 c00260c:	ed8d 7b02 	vstr	d7, [sp, #8]
 c002610:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 c002614:	f00a f93c 	bl	c00c890 <HAL_GPIO_Init>
}
 c002618:	b02c      	add	sp, #176	@ 0xb0
 c00261a:	bd10      	pop	{r4, pc}
      Error_Handler();
 c00261c:	f7ff fa06 	bl	c001a2c <Error_Handler>
 c002620:	e7d7      	b.n	c0025d2 <HAL_UART_MspInit+0x32>
 c002622:	bf00      	nop
 c002624:	f3af 8000 	nop.w
 c002628:	00000180 	.word	0x00000180
 c00262c:	00000002 	.word	0x00000002
 c002630:	50008000 	.word	0x50008000
 c002634:	50021000 	.word	0x50021000
 c002638:	52021800 	.word	0x52021800

0c00263c <tg_gen.constprop.0>:
 c00263c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c002640:	ed2d 8b02 	vpush	{d8}
 c002644:	f6ad 0d24 	subw	sp, sp, #2084	@ 0x824
 c002648:	f10d 0820 	add.w	r8, sp, #32
 c00264c:	468b      	mov	fp, r1
 c00264e:	4682      	mov	sl, r0
 c002650:	2100      	movs	r1, #0
 c002652:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 c002656:	4640      	mov	r0, r8
 c002658:	f00c ffea 	bl	c00f630 <memset>
 c00265c:	2300      	movs	r3, #0
 c00265e:	f1ab 0104 	sub.w	r1, fp, #4
 c002662:	f851 2f04 	ldr.w	r2, [r1, #4]!
 c002666:	2a00      	cmp	r2, #0
 c002668:	bfa8      	it	ge
 c00266a:	f848 3022 	strge.w	r3, [r8, r2, lsl #2]
 c00266e:	3301      	adds	r3, #1
 c002670:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 c002674:	d1f5      	bne.n	c002662 <tg_gen.constprop.0+0x26>
 c002676:	2200      	movs	r2, #0
 c002678:	2101      	movs	r1, #1
 c00267a:	4650      	mov	r0, sl
 c00267c:	f000 feda 	bl	c003434 <kann_feed_dim>
 c002680:	f04f 32ff 	mov.w	r2, #4294967295
 c002684:	4604      	mov	r4, r0
 c002686:	2100      	movs	r1, #0
 c002688:	4650      	mov	r0, sl
 c00268a:	f000 fe0f 	bl	c0032ac <kann_find>
 c00268e:	1e05      	subs	r5, r0, #0
 c002690:	db06      	blt.n	c0026a0 <tg_gen.constprop.0+0x64>
 c002692:	f8da 3004 	ldr.w	r3, [sl, #4]
 c002696:	4a63      	ldr	r2, [pc, #396]	@ (c002824 <tg_gen.constprop.0+0x1e8>)
 c002698:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 c00269c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c00269e:	601a      	str	r2, [r3, #0]
 c0026a0:	4650      	mov	r0, sl
 c0026a2:	f000 ff11 	bl	c0034c8 <kann_rnn_start>
 c0026a6:	f8da 2000 	ldr.w	r2, [sl]
 c0026aa:	2a00      	cmp	r2, #0
 c0026ac:	dd43      	ble.n	c002736 <tg_gen.constprop.0+0xfa>
 c0026ae:	f04f 0900 	mov.w	r9, #0
 c0026b2:	e9cd 4500 	strd	r4, r5, [sp]
 c0026b6:	e003      	b.n	c0026c0 <tg_gen.constprop.0+0x84>
 c0026b8:	f109 0901 	add.w	r9, r9, #1
 c0026bc:	4591      	cmp	r9, r2
 c0026be:	da38      	bge.n	c002732 <tg_gen.constprop.0+0xf6>
 c0026c0:	f8da 3004 	ldr.w	r3, [sl, #4]
 c0026c4:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
 c0026c8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 c0026ca:	2b00      	cmp	r3, #0
 c0026cc:	d0f4      	beq.n	c0026b8 <tg_gen.constprop.0+0x7c>
 c0026ce:	7820      	ldrb	r0, [r4, #0]
 c0026d0:	2800      	cmp	r0, #0
 c0026d2:	f000 808b 	beq.w	c0027ec <tg_gen.constprop.0+0x1b0>
 c0026d6:	2801      	cmp	r0, #1
 c0026d8:	6925      	ldr	r5, [r4, #16]
 c0026da:	d00b      	beq.n	c0026f4 <tg_gen.constprop.0+0xb8>
 c0026dc:	6963      	ldr	r3, [r4, #20]
 c0026de:	2802      	cmp	r0, #2
 c0026e0:	fb03 f505 	mul.w	r5, r3, r5
 c0026e4:	d006      	beq.n	c0026f4 <tg_gen.constprop.0+0xb8>
 c0026e6:	69a3      	ldr	r3, [r4, #24]
 c0026e8:	2803      	cmp	r0, #3
 c0026ea:	fb03 f505 	mul.w	r5, r3, r5
 c0026ee:	bf1c      	itt	ne
 c0026f0:	69e3      	ldrne	r3, [r4, #28]
 c0026f2:	435d      	mulne	r5, r3
 c0026f4:	2d00      	cmp	r5, #0
 c0026f6:	dddf      	ble.n	c0026b8 <tg_gen.constprop.0+0x7c>
 c0026f8:	2600      	movs	r6, #0
 c0026fa:	2000      	movs	r0, #0
 c0026fc:	f009 fe1a 	bl	c00c334 <kad_drand>
 c002700:	ec53 2b10 	vmov	r2, r3, d0
 c002704:	4610      	mov	r0, r2
 c002706:	4619      	mov	r1, r3
 c002708:	f7fd fdca 	bl	c0002a0 <__adddf3>
 c00270c:	2200      	movs	r2, #0
 c00270e:	4b46      	ldr	r3, [pc, #280]	@ (c002828 <tg_gen.constprop.0+0x1ec>)
 c002710:	f7fd fdc4 	bl	c00029c <__aeabi_dsub>
 c002714:	f7fe fa52 	bl	c000bbc <__aeabi_d2f>
 c002718:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 c00271a:	eb07 0786 	add.w	r7, r7, r6, lsl #2
 c00271e:	3601      	adds	r6, #1
 c002720:	42ae      	cmp	r6, r5
 c002722:	6038      	str	r0, [r7, #0]
 c002724:	dbe9      	blt.n	c0026fa <tg_gen.constprop.0+0xbe>
 c002726:	f8da 2000 	ldr.w	r2, [sl]
 c00272a:	f109 0901 	add.w	r9, r9, #1
 c00272e:	4591      	cmp	r9, r2
 c002730:	dbc6      	blt.n	c0026c0 <tg_gen.constprop.0+0x84>
 c002732:	e9dd 4500 	ldrd	r4, r5, [sp]
 c002736:	2300      	movs	r3, #0
 c002738:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 c00273c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 c002740:	e9cd 3305 	strd	r3, r3, [sp, #20]
 c002744:	f8db 6080 	ldr.w	r6, [fp, #128]	@ 0x80
 c002748:	ea4f 0984 	mov.w	r9, r4, lsl #2
 c00274c:	f10d 0b0b 	add.w	fp, sp, #11
 c002750:	f10d 071f 	add.w	r7, sp, #31
 c002754:	9307      	str	r3, [sp, #28]
 c002756:	464a      	mov	r2, r9
 c002758:	2100      	movs	r1, #0
 c00275a:	f50d 6084 	add.w	r0, sp, #1056	@ 0x420
 c00275e:	f00c ff67 	bl	c00f630 <memset>
 c002762:	f50d 6184 	add.w	r1, sp, #1056	@ 0x420
 c002766:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 c00276a:	4650      	mov	r0, sl
 c00276c:	ed86 8a00 	vstr	s16, [r6]
 c002770:	f001 fb72 	bl	c003e58 <kann_apply1>
 c002774:	4606      	mov	r6, r0
 c002776:	2000      	movs	r0, #0
 c002778:	f009 fddc 	bl	c00c334 <kad_drand>
 c00277c:	ec51 0b10 	vmov	r0, r1, d0
 c002780:	f7fe fa1c 	bl	c000bbc <__aeabi_d2f>
 c002784:	2c00      	cmp	r4, #0
 c002786:	ee06 0a90 	vmov	s13, r0
 c00278a:	dd42      	ble.n	c002812 <tg_gen.constprop.0+0x1d6>
 c00278c:	4630      	mov	r0, r6
 c00278e:	eddf 7a27 	vldr	s15, [pc, #156]	@ c00282c <tg_gen.constprop.0+0x1f0>
 c002792:	2600      	movs	r6, #0
 c002794:	e002      	b.n	c00279c <tg_gen.constprop.0+0x160>
 c002796:	3601      	adds	r6, #1
 c002798:	42b4      	cmp	r4, r6
 c00279a:	d008      	beq.n	c0027ae <tg_gen.constprop.0+0x172>
 c00279c:	ecb0 7a01 	vldmia	r0!, {s14}
 c0027a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 c0027a4:	eef4 6ae7 	vcmpe.f32	s13, s15
 c0027a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0027ac:	d8f3      	bhi.n	c002796 <tg_gen.constprop.0+0x15a>
 c0027ae:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 c0027b2:	f80b 3f01 	strb.w	r3, [fp, #1]!
 c0027b6:	45bb      	cmp	fp, r7
 c0027b8:	d1cd      	bne.n	c002756 <tg_gen.constprop.0+0x11a>
 c0027ba:	230a      	movs	r3, #10
 c0027bc:	a803      	add	r0, sp, #12
 c0027be:	f88d 3020 	strb.w	r3, [sp, #32]
 c0027c2:	f7ff f9fb 	bl	c001bbc <sendline>
 c0027c6:	4650      	mov	r0, sl
 c0027c8:	f000 fed2 	bl	c003570 <kann_rnn_end>
 c0027cc:	2d00      	cmp	r5, #0
 c0027ce:	db07      	blt.n	c0027e0 <tg_gen.constprop.0+0x1a4>
 c0027d0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 c0027d4:	f8da 3004 	ldr.w	r3, [sl, #4]
 c0027d8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 c0027dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c0027de:	601a      	str	r2, [r3, #0]
 c0027e0:	f60d 0d24 	addw	sp, sp, #2084	@ 0x824
 c0027e4:	ecbd 8b02 	vpop	{d8}
 c0027e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0027ec:	f009 fda2 	bl	c00c334 <kad_drand>
 c0027f0:	ec53 2b10 	vmov	r2, r3, d0
 c0027f4:	4610      	mov	r0, r2
 c0027f6:	4619      	mov	r1, r3
 c0027f8:	f7fd fd52 	bl	c0002a0 <__adddf3>
 c0027fc:	2200      	movs	r2, #0
 c0027fe:	4b0a      	ldr	r3, [pc, #40]	@ (c002828 <tg_gen.constprop.0+0x1ec>)
 c002800:	f7fd fd4c 	bl	c00029c <__aeabi_dsub>
 c002804:	f7fe f9da 	bl	c000bbc <__aeabi_d2f>
 c002808:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 c00280a:	f8da 2000 	ldr.w	r2, [sl]
 c00280e:	6030      	str	r0, [r6, #0]
 c002810:	e78b      	b.n	c00272a <tg_gen.constprop.0+0xee>
 c002812:	2600      	movs	r6, #0
 c002814:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 c002818:	f80b 3f01 	strb.w	r3, [fp, #1]!
 c00281c:	45bb      	cmp	fp, r7
 c00281e:	d19a      	bne.n	c002756 <tg_gen.constprop.0+0x11a>
 c002820:	e7cb      	b.n	c0027ba <tg_gen.constprop.0+0x17e>
 c002822:	bf00      	nop
 c002824:	40200000 	.word	0x40200000
 c002828:	3ff00000 	.word	0x3ff00000
 c00282c:	00000000 	.word	0x00000000

0c002830 <tg_init_with_data>:
 c002830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c002834:	460e      	mov	r6, r1
 c002836:	4680      	mov	r8, r0
 c002838:	f240 410c 	movw	r1, #1036	@ 0x40c
 c00283c:	2001      	movs	r0, #1
 c00283e:	f00c fc01 	bl	c00f044 <calloc>
 c002842:	4604      	mov	r4, r0
 c002844:	4f22      	ldr	r7, [pc, #136]	@ (c0028d0 <tg_init_with_data+0xa0>)
 c002846:	2101      	movs	r1, #1
 c002848:	683b      	ldr	r3, [r7, #0]
 c00284a:	4630      	mov	r0, r6
 c00284c:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 c002850:	6026      	str	r6, [r4, #0]
 c002852:	603b      	str	r3, [r7, #0]
 c002854:	f00c fbf6 	bl	c00f044 <calloc>
 c002858:	683b      	ldr	r3, [r7, #0]
 c00285a:	4641      	mov	r1, r8
 c00285c:	4433      	add	r3, r6
 c00285e:	4632      	mov	r2, r6
 c002860:	60a0      	str	r0, [r4, #8]
 c002862:	4605      	mov	r5, r0
 c002864:	603b      	str	r3, [r7, #0]
 c002866:	f00c ffb2 	bl	c00f7ce <memcpy>
 c00286a:	2e00      	cmp	r6, #0
 c00286c:	dd0a      	ble.n	c002884 <tg_init_with_data+0x54>
 c00286e:	2001      	movs	r0, #1
 c002870:	1e71      	subs	r1, r6, #1
 c002872:	1e6a      	subs	r2, r5, #1
 c002874:	4429      	add	r1, r5
 c002876:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 c00287a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 c00287e:	428a      	cmp	r2, r1
 c002880:	60d8      	str	r0, [r3, #12]
 c002882:	d1f8      	bne.n	c002876 <tg_init_with_data+0x46>
 c002884:	2000      	movs	r0, #0
 c002886:	f104 0308 	add.w	r3, r4, #8
 c00288a:	f504 6c81 	add.w	ip, r4, #1032	@ 0x408
 c00288e:	e005      	b.n	c00289c <tg_init_with_data+0x6c>
 c002890:	4601      	mov	r1, r0
 c002892:	4563      	cmp	r3, ip
 c002894:	f100 0001 	add.w	r0, r0, #1
 c002898:	6019      	str	r1, [r3, #0]
 c00289a:	d008      	beq.n	c0028ae <tg_init_with_data+0x7e>
 c00289c:	f853 1f04 	ldr.w	r1, [r3, #4]!
 c0028a0:	2900      	cmp	r1, #0
 c0028a2:	d1f5      	bne.n	c002890 <tg_init_with_data+0x60>
 c0028a4:	f04f 31ff 	mov.w	r1, #4294967295
 c0028a8:	4563      	cmp	r3, ip
 c0028aa:	6019      	str	r1, [r3, #0]
 c0028ac:	d1f6      	bne.n	c00289c <tg_init_with_data+0x6c>
 c0028ae:	2e00      	cmp	r6, #0
 c0028b0:	6060      	str	r0, [r4, #4]
 c0028b2:	dd0a      	ble.n	c0028ca <tg_init_with_data+0x9a>
 c0028b4:	3e01      	subs	r6, #1
 c0028b6:	1e6b      	subs	r3, r5, #1
 c0028b8:	4435      	add	r5, r6
 c0028ba:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 c0028be:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 c0028c2:	68d2      	ldr	r2, [r2, #12]
 c0028c4:	42ab      	cmp	r3, r5
 c0028c6:	701a      	strb	r2, [r3, #0]
 c0028c8:	d1f7      	bne.n	c0028ba <tg_init_with_data+0x8a>
 c0028ca:	4620      	mov	r0, r4
 c0028cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c0028d0:	30000254 	.word	0x30000254

0c0028d4 <tg_urnn_start>:
 c0028d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c0028d8:	4607      	mov	r7, r0
 c0028da:	6800      	ldr	r0, [r0, #0]
 c0028dc:	4689      	mov	r9, r1
 c0028de:	2800      	cmp	r0, #0
 c0028e0:	6879      	ldr	r1, [r7, #4]
 c0028e2:	dd39      	ble.n	c002958 <tg_urnn_start+0x84>
 c0028e4:	1f0b      	subs	r3, r1, #4
 c0028e6:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 c0028ea:	e001      	b.n	c0028f0 <tg_urnn_start+0x1c>
 c0028ec:	4563      	cmp	r3, ip
 c0028ee:	d033      	beq.n	c002958 <tg_urnn_start+0x84>
 c0028f0:	f853 4f04 	ldr.w	r4, [r3, #4]!
 c0028f4:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 c0028f6:	2d00      	cmp	r5, #0
 c0028f8:	d0f8      	beq.n	c0028ec <tg_urnn_start+0x18>
 c0028fa:	7826      	ldrb	r6, [r4, #0]
 c0028fc:	2e01      	cmp	r6, #1
 c0028fe:	d9f5      	bls.n	c0028ec <tg_urnn_start+0x18>
 c002900:	f895 e000 	ldrb.w	lr, [r5]
 c002904:	4576      	cmp	r6, lr
 c002906:	d1f1      	bne.n	c0028ec <tg_urnn_start+0x18>
 c002908:	686a      	ldr	r2, [r5, #4]
 c00290a:	2a00      	cmp	r2, #0
 c00290c:	d1ee      	bne.n	c0028ec <tg_urnn_start+0x18>
 c00290e:	e9d4 8e04 	ldrd	r8, lr, [r4, #16]
 c002912:	2e02      	cmp	r6, #2
 c002914:	d00b      	beq.n	c00292e <tg_urnn_start+0x5a>
 c002916:	fb08 fe0e 	mul.w	lr, r8, lr
 c00291a:	69a2      	ldr	r2, [r4, #24]
 c00291c:	2e03      	cmp	r6, #3
 c00291e:	fb02 fe0e 	mul.w	lr, r2, lr
 c002922:	bf1c      	itt	ne
 c002924:	69e4      	ldrne	r4, [r4, #28]
 c002926:	fb04 fe0e 	mulne.w	lr, r4, lr
 c00292a:	fb9e fef8 	sdiv	lr, lr, r8
 c00292e:	e9d5 8404 	ldrd	r8, r4, [r5, #16]
 c002932:	2e02      	cmp	r6, #2
 c002934:	fb04 f408 	mul.w	r4, r4, r8
 c002938:	d006      	beq.n	c002948 <tg_urnn_start+0x74>
 c00293a:	69aa      	ldr	r2, [r5, #24]
 c00293c:	2e03      	cmp	r6, #3
 c00293e:	fb02 f404 	mul.w	r4, r2, r4
 c002942:	bf1c      	itt	ne
 c002944:	69ee      	ldrne	r6, [r5, #28]
 c002946:	4374      	mulne	r4, r6
 c002948:	fb94 f4f8 	sdiv	r4, r4, r8
 c00294c:	4574      	cmp	r4, lr
 c00294e:	bf04      	itt	eq
 c002950:	2400      	moveq	r4, #0
 c002952:	706c      	strbeq	r4, [r5, #1]
 c002954:	4563      	cmp	r3, ip
 c002956:	d1cb      	bne.n	c0028f0 <tg_urnn_start+0x1c>
 c002958:	f04f 0800 	mov.w	r8, #0
 c00295c:	464a      	mov	r2, r9
 c00295e:	f008 fd87 	bl	c00b470 <kad_sync_dim>
 c002962:	683a      	ldr	r2, [r7, #0]
 c002964:	2a00      	cmp	r2, #0
 c002966:	bfc8      	it	gt
 c002968:	4644      	movgt	r4, r8
 c00296a:	dc03      	bgt.n	c002974 <tg_urnn_start+0xa0>
 c00296c:	e04c      	b.n	c002a08 <tg_urnn_start+0x134>
 c00296e:	3401      	adds	r4, #1
 c002970:	4294      	cmp	r4, r2
 c002972:	da49      	bge.n	c002a08 <tg_urnn_start+0x134>
 c002974:	687b      	ldr	r3, [r7, #4]
 c002976:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
 c00297a:	6bee      	ldr	r6, [r5, #60]	@ 0x3c
 c00297c:	2e00      	cmp	r6, #0
 c00297e:	d0f6      	beq.n	c00296e <tg_urnn_start+0x9a>
 c002980:	782b      	ldrb	r3, [r5, #0]
 c002982:	2b01      	cmp	r3, #1
 c002984:	d9f3      	bls.n	c00296e <tg_urnn_start+0x9a>
 c002986:	7831      	ldrb	r1, [r6, #0]
 c002988:	428b      	cmp	r3, r1
 c00298a:	d1f0      	bne.n	c00296e <tg_urnn_start+0x9a>
 c00298c:	f8d6 9004 	ldr.w	r9, [r6, #4]
 c002990:	f1b9 0f00 	cmp.w	r9, #0
 c002994:	d1eb      	bne.n	c00296e <tg_urnn_start+0x9a>
 c002996:	e9d5 c104 	ldrd	ip, r1, [r5, #16]
 c00299a:	2b02      	cmp	r3, #2
 c00299c:	fb01 fe0c 	mul.w	lr, r1, ip
 c0029a0:	d035      	beq.n	c002a0e <tg_urnn_start+0x13a>
 c0029a2:	69a9      	ldr	r1, [r5, #24]
 c0029a4:	2b03      	cmp	r3, #3
 c0029a6:	fb01 fb0e 	mul.w	fp, r1, lr
 c0029aa:	bf1c      	itt	ne
 c0029ac:	69e8      	ldrne	r0, [r5, #28]
 c0029ae:	fb00 fb0b 	mulne.w	fp, r0, fp
 c0029b2:	6930      	ldr	r0, [r6, #16]
 c0029b4:	6971      	ldr	r1, [r6, #20]
 c0029b6:	2b02      	cmp	r3, #2
 c0029b8:	fb01 fa00 	mul.w	sl, r1, r0
 c0029bc:	d007      	beq.n	c0029ce <tg_urnn_start+0xfa>
 c0029be:	69b0      	ldr	r0, [r6, #24]
 c0029c0:	2b03      	cmp	r3, #3
 c0029c2:	fb00 fa0a 	mul.w	sl, r0, sl
 c0029c6:	bf1c      	itt	ne
 c0029c8:	69f0      	ldrne	r0, [r6, #28]
 c0029ca:	fb00 fa0a 	mulne.w	sl, r0, sl
 c0029ce:	45d3      	cmp	fp, sl
 c0029d0:	d1cd      	bne.n	c00296e <tg_urnn_start+0x9a>
 c0029d2:	2b02      	cmp	r3, #2
 c0029d4:	d007      	beq.n	c0029e6 <tg_urnn_start+0x112>
 c0029d6:	69aa      	ldr	r2, [r5, #24]
 c0029d8:	2b03      	cmp	r3, #3
 c0029da:	fb02 fe0e 	mul.w	lr, r2, lr
 c0029de:	bf1c      	itt	ne
 c0029e0:	69eb      	ldrne	r3, [r5, #28]
 c0029e2:	fb03 fe0e 	mulne.w	lr, r3, lr
 c0029e6:	fb9e fbfc 	sdiv	fp, lr, ip
 c0029ea:	fb0c f20b 	mul.w	r2, ip, fp
 c0029ee:	2100      	movs	r1, #0
 c0029f0:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 c0029f2:	0092      	lsls	r2, r2, #2
 c0029f4:	f00c fe1c 	bl	c00f630 <memset>
 c0029f8:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 c0029fa:	b959      	cbnz	r1, c002a14 <tg_urnn_start+0x140>
 c0029fc:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c0029fe:	683a      	ldr	r2, [r7, #0]
 c002a00:	f108 0801 	add.w	r8, r8, #1
 c002a04:	62b3      	str	r3, [r6, #40]	@ 0x28
 c002a06:	e7b2      	b.n	c00296e <tg_urnn_start+0x9a>
 c002a08:	4640      	mov	r0, r8
 c002a0a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c002a0e:	46f3      	mov	fp, lr
 c002a10:	6930      	ldr	r0, [r6, #16]
 c002a12:	e7cf      	b.n	c0029b4 <tg_urnn_start+0xe0>
 c002a14:	692b      	ldr	r3, [r5, #16]
 c002a16:	2b00      	cmp	r3, #0
 c002a18:	ddf0      	ble.n	c0029fc <tg_urnn_start+0x128>
 c002a1a:	f04f 0a00 	mov.w	sl, #0
 c002a1e:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 c002a22:	e000      	b.n	c002a26 <tg_urnn_start+0x152>
 c002a24:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 c002a26:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 c002a28:	465a      	mov	r2, fp
 c002a2a:	4450      	add	r0, sl
 c002a2c:	f00c fecf 	bl	c00f7ce <memcpy>
 c002a30:	692b      	ldr	r3, [r5, #16]
 c002a32:	f109 0901 	add.w	r9, r9, #1
 c002a36:	454b      	cmp	r3, r9
 c002a38:	44da      	add	sl, fp
 c002a3a:	dcf3      	bgt.n	c002a24 <tg_urnn_start+0x150>
 c002a3c:	e7de      	b.n	c0029fc <tg_urnn_start+0x128>
 c002a3e:	bf00      	nop

0c002a40 <tg_train>:
 c002a40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c002a44:	ed2d 8b04 	vpush	{d8-d9}
 c002a48:	460f      	mov	r7, r1
 c002a4a:	b09d      	sub	sp, #116	@ 0x74
 c002a4c:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 c002a4e:	4680      	mov	r8, r0
 c002a50:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 c002a52:	9507      	str	r5, [sp, #28]
 c002a54:	9d2c      	ldr	r5, [sp, #176]	@ 0xb0
 c002a56:	900a      	str	r0, [sp, #40]	@ 0x28
 c002a58:	487e      	ldr	r0, [pc, #504]	@ (c002c54 <tg_train+0x214>)
 c002a5a:	9c2d      	ldr	r4, [sp, #180]	@ 0xb4
 c002a5c:	eef0 8a40 	vmov.f32	s17, s0
 c002a60:	9513      	str	r5, [sp, #76]	@ 0x4c
 c002a62:	9112      	str	r1, [sp, #72]	@ 0x48
 c002a64:	4615      	mov	r5, r2
 c002a66:	9305      	str	r3, [sp, #20]
 c002a68:	f7ff f8a8 	bl	c001bbc <sendline>
 c002a6c:	683b      	ldr	r3, [r7, #0]
 c002a6e:	2200      	movs	r2, #0
 c002a70:	429c      	cmp	r4, r3
 c002a72:	bfa8      	it	ge
 c002a74:	461c      	movge	r4, r3
 c002a76:	2101      	movs	r1, #1
 c002a78:	4640      	mov	r0, r8
 c002a7a:	9410      	str	r4, [sp, #64]	@ 0x40
 c002a7c:	f000 fcda 	bl	c003434 <kann_feed_dim>
 c002a80:	4603      	mov	r3, r0
 c002a82:	2104      	movs	r1, #4
 c002a84:	00ac      	lsls	r4, r5, #2
 c002a86:	4628      	mov	r0, r5
 c002a88:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
 c002a8c:	f00c fada 	bl	c00f044 <calloc>
 c002a90:	4682      	mov	sl, r0
 c002a92:	4e71      	ldr	r6, [pc, #452]	@ (c002c58 <tg_train+0x218>)
 c002a94:	2104      	movs	r1, #4
 c002a96:	6833      	ldr	r3, [r6, #0]
 c002a98:	4628      	mov	r0, r5
 c002a9a:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 c002a9e:	6033      	str	r3, [r6, #0]
 c002aa0:	f8cd a008 	str.w	sl, [sp, #8]
 c002aa4:	f00c face 	bl	c00f044 <calloc>
 c002aa8:	6833      	ldr	r3, [r6, #0]
 c002aaa:	2d00      	cmp	r5, #0
 c002aac:	4423      	add	r3, r4
 c002aae:	6033      	str	r3, [r6, #0]
 c002ab0:	9003      	str	r0, [sp, #12]
 c002ab2:	dd22      	ble.n	c002afa <tg_train+0xba>
 c002ab4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 c002ab6:	9a07      	ldr	r2, [sp, #28]
 c002ab8:	9902      	ldr	r1, [sp, #8]
 c002aba:	fb02 f903 	mul.w	r9, r2, r3
 c002abe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c002ac0:	1f0f      	subs	r7, r1, #4
 c002ac2:	3b04      	subs	r3, #4
 c002ac4:	18ca      	adds	r2, r1, r3
 c002ac6:	4692      	mov	sl, r2
 c002ac8:	9b03      	ldr	r3, [sp, #12]
 c002aca:	ea4f 0489 	mov.w	r4, r9, lsl #2
 c002ace:	f1a3 0b04 	sub.w	fp, r3, #4
 c002ad2:	2104      	movs	r1, #4
 c002ad4:	4648      	mov	r0, r9
 c002ad6:	f00c fab5 	bl	c00f044 <calloc>
 c002ada:	6833      	ldr	r3, [r6, #0]
 c002adc:	f847 0f04 	str.w	r0, [r7, #4]!
 c002ae0:	4423      	add	r3, r4
 c002ae2:	2104      	movs	r1, #4
 c002ae4:	4648      	mov	r0, r9
 c002ae6:	6033      	str	r3, [r6, #0]
 c002ae8:	f00c faac 	bl	c00f044 <calloc>
 c002aec:	6833      	ldr	r3, [r6, #0]
 c002aee:	4557      	cmp	r7, sl
 c002af0:	4423      	add	r3, r4
 c002af2:	f84b 0f04 	str.w	r0, [fp, #4]!
 c002af6:	6033      	str	r3, [r6, #0]
 c002af8:	d1eb      	bne.n	c002ad2 <tg_train+0x92>
 c002afa:	e9d8 0100 	ldrd	r0, r1, [r8]
 c002afe:	f008 fe59 	bl	c00b7b4 <kad_size_var>
 c002b02:	2104      	movs	r1, #4
 c002b04:	9c07      	ldr	r4, [sp, #28]
 c002b06:	4607      	mov	r7, r0
 c002b08:	900c      	str	r0, [sp, #48]	@ 0x30
 c002b0a:	f00c fa9b 	bl	c00f044 <calloc>
 c002b0e:	4602      	mov	r2, r0
 c002b10:	6833      	ldr	r3, [r6, #0]
 c002b12:	2104      	movs	r1, #4
 c002b14:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 c002b18:	4620      	mov	r0, r4
 c002b1a:	6033      	str	r3, [r6, #0]
 c002b1c:	920b      	str	r2, [sp, #44]	@ 0x2c
 c002b1e:	f00c fa91 	bl	c00f044 <calloc>
 c002b22:	4602      	mov	r2, r0
 c002b24:	6833      	ldr	r3, [r6, #0]
 c002b26:	484d      	ldr	r0, [pc, #308]	@ (c002c5c <tg_train+0x21c>)
 c002b28:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 c002b2c:	9209      	str	r2, [sp, #36]	@ 0x24
 c002b2e:	6033      	str	r3, [r6, #0]
 c002b30:	f7ff f844 	bl	c001bbc <sendline>
 c002b34:	4629      	mov	r1, r5
 c002b36:	4640      	mov	r0, r8
 c002b38:	f000 fb70 	bl	c00321c <kann_unroll>
 c002b3c:	4603      	mov	r3, r0
 c002b3e:	461e      	mov	r6, r3
 c002b40:	4847      	ldr	r0, [pc, #284]	@ (c002c60 <tg_train+0x220>)
 c002b42:	9308      	str	r3, [sp, #32]
 c002b44:	f7ff f83a 	bl	c001bbc <sendline>
 c002b48:	4621      	mov	r1, r4
 c002b4a:	4630      	mov	r0, r6
 c002b4c:	f7ff fec2 	bl	c0028d4 <tg_urnn_start>
 c002b50:	2264      	movs	r2, #100	@ 0x64
 c002b52:	2101      	movs	r1, #1
 c002b54:	9b02      	ldr	r3, [sp, #8]
 c002b56:	4630      	mov	r0, r6
 c002b58:	f000 fc02 	bl	c003360 <kann_feed_bind>
 c002b5c:	9b03      	ldr	r3, [sp, #12]
 c002b5e:	2200      	movs	r2, #0
 c002b60:	2104      	movs	r1, #4
 c002b62:	4630      	mov	r0, r6
 c002b64:	f000 fbfc 	bl	c003360 <kann_feed_bind>
 c002b68:	483e      	ldr	r0, [pc, #248]	@ (c002c64 <tg_train+0x224>)
 c002b6a:	f7ff f827 	bl	c001bbc <sendline>
 c002b6e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 c002b70:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 c002b74:	2b00      	cmp	r3, #0
 c002b76:	f340 811e 	ble.w	c002db6 <tg_train+0x376>
 c002b7a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c002b7c:	9b07      	ldr	r3, [sp, #28]
 c002b7e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 c002b80:	fb02 f303 	mul.w	r3, r2, r3
 c002b84:	fb05 f303 	mul.w	r3, r5, r3
 c002b88:	9315      	str	r3, [sp, #84]	@ 0x54
 c002b8a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c002b8c:	fb01 f60b 	mul.w	r6, r1, fp
 c002b90:	1f1c      	subs	r4, r3, #4
 c002b92:	9b02      	ldr	r3, [sp, #8]
 c002b94:	9909      	ldr	r1, [sp, #36]	@ 0x24
 c002b96:	441c      	add	r4, r3
 c002b98:	f1ab 0304 	sub.w	r3, fp, #4
 c002b9c:	18cb      	adds	r3, r1, r3
 c002b9e:	930d      	str	r3, [sp, #52]	@ 0x34
 c002ba0:	9b05      	ldr	r3, [sp, #20]
 c002ba2:	f04f 0a00 	mov.w	sl, #0
 c002ba6:	42ab      	cmp	r3, r5
 c002ba8:	bfa8      	it	ge
 c002baa:	462b      	movge	r3, r5
 c002bac:	4699      	mov	r9, r3
 c002bae:	fb02 f305 	mul.w	r3, r2, r5
 c002bb2:	9314      	str	r3, [sp, #80]	@ 0x50
 c002bb4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 c002bb6:	ed9f 9a2c 	vldr	s18, [pc, #176]	@ c002c68 <tg_train+0x228>
 c002bba:	330c      	adds	r3, #12
 c002bbc:	e9cd 3916 	strd	r3, r9, [sp, #88]	@ 0x58
 c002bc0:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 c002bc4:	46d1      	mov	r9, sl
 c002bc6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 c002bc8:	2b00      	cmp	r3, #0
 c002bca:	f340 80ea 	ble.w	c002da2 <tg_train+0x362>
 c002bce:	2300      	movs	r3, #0
 c002bd0:	e9cd 9818 	strd	r9, r8, [sp, #96]	@ 0x60
 c002bd4:	f8dd b05c 	ldr.w	fp, [sp, #92]	@ 0x5c
 c002bd8:	9311      	str	r3, [sp, #68]	@ 0x44
 c002bda:	9b07      	ldr	r3, [sp, #28]
 c002bdc:	2b00      	cmp	r3, #0
 c002bde:	dd31      	ble.n	c002c44 <tg_train+0x204>
 c002be0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c002be2:	951a      	str	r5, [sp, #104]	@ 0x68
 c002be4:	3b04      	subs	r3, #4
 c002be6:	f04f 0a00 	mov.w	sl, #0
 c002bea:	461d      	mov	r5, r3
 c002bec:	f8cd b06c 	str.w	fp, [sp, #108]	@ 0x6c
 c002bf0:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
 c002bf4:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 c002bf8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 c002bfc:	9604      	str	r6, [sp, #16]
 c002bfe:	9406      	str	r4, [sp, #24]
 c002c00:	f8d8 3000 	ldr.w	r3, [r8]
 c002c04:	f10a 0a01 	add.w	sl, sl, #1
 c002c08:	eba3 0309 	sub.w	r3, r3, r9
 c002c0c:	1e58      	subs	r0, r3, #1
 c002c0e:	f7fd fc93 	bl	c000538 <__aeabi_i2d>
 c002c12:	4606      	mov	r6, r0
 c002c14:	2000      	movs	r0, #0
 c002c16:	460f      	mov	r7, r1
 c002c18:	f8d8 4008 	ldr.w	r4, [r8, #8]
 c002c1c:	f009 fb8a 	bl	c00c334 <kad_drand>
 c002c20:	4630      	mov	r0, r6
 c002c22:	ec53 2b10 	vmov	r2, r3, d0
 c002c26:	4639      	mov	r1, r7
 c002c28:	f7fd fcf0 	bl	c00060c <__aeabi_dmul>
 c002c2c:	f7fd ff9e 	bl	c000b6c <__aeabi_d2iz>
 c002c30:	1c43      	adds	r3, r0, #1
 c002c32:	441c      	add	r4, r3
 c002c34:	45d3      	cmp	fp, sl
 c002c36:	f845 4f04 	str.w	r4, [r5, #4]!
 c002c3a:	d1e1      	bne.n	c002c00 <tg_train+0x1c0>
 c002c3c:	e9dd 5b1a 	ldrd	r5, fp, [sp, #104]	@ 0x68
 c002c40:	9e04      	ldr	r6, [sp, #16]
 c002c42:	9c06      	ldr	r4, [sp, #24]
 c002c44:	9b08      	ldr	r3, [sp, #32]
 c002c46:	6819      	ldr	r1, [r3, #0]
 c002c48:	2900      	cmp	r1, #0
 c002c4a:	dd37      	ble.n	c002cbc <tg_train+0x27c>
 c002c4c:	4699      	mov	r9, r3
 c002c4e:	2700      	movs	r7, #0
 c002c50:	46a0      	mov	r8, r4
 c002c52:	e00e      	b.n	c002c72 <tg_train+0x232>
 c002c54:	0c011a90 	.word	0x0c011a90
 c002c58:	30000254 	.word	0x30000254
 c002c5c:	0c011a9c 	.word	0x0c011a9c
 c002c60:	0c011aa8 	.word	0x0c011aa8
 c002c64:	0c011ab4 	.word	0x0c011ab4
 c002c68:	3f666666 	.word	0x3f666666
 c002c6c:	3701      	adds	r7, #1
 c002c6e:	428f      	cmp	r7, r1
 c002c70:	da23      	bge.n	c002cba <tg_train+0x27a>
 c002c72:	f8d9 3004 	ldr.w	r3, [r9, #4]
 c002c76:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
 c002c7a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 c002c7c:	2a00      	cmp	r2, #0
 c002c7e:	d0f5      	beq.n	c002c6c <tg_train+0x22c>
 c002c80:	7819      	ldrb	r1, [r3, #0]
 c002c82:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 c002c84:	2900      	cmp	r1, #0
 c002c86:	f000 8106 	beq.w	c002e96 <tg_train+0x456>
 c002c8a:	2901      	cmp	r1, #1
 c002c8c:	691a      	ldr	r2, [r3, #16]
 c002c8e:	d00b      	beq.n	c002ca8 <tg_train+0x268>
 c002c90:	695c      	ldr	r4, [r3, #20]
 c002c92:	2902      	cmp	r1, #2
 c002c94:	fb04 f202 	mul.w	r2, r4, r2
 c002c98:	d006      	beq.n	c002ca8 <tg_train+0x268>
 c002c9a:	699c      	ldr	r4, [r3, #24]
 c002c9c:	2903      	cmp	r1, #3
 c002c9e:	fb04 f202 	mul.w	r2, r4, r2
 c002ca2:	bf1c      	itt	ne
 c002ca4:	69db      	ldrne	r3, [r3, #28]
 c002ca6:	435a      	mulne	r2, r3
 c002ca8:	0092      	lsls	r2, r2, #2
 c002caa:	2100      	movs	r1, #0
 c002cac:	f00c fcc0 	bl	c00f630 <memset>
 c002cb0:	f8d9 1000 	ldr.w	r1, [r9]
 c002cb4:	3701      	adds	r7, #1
 c002cb6:	428f      	cmp	r7, r1
 c002cb8:	dbdb      	blt.n	c002c72 <tg_train+0x232>
 c002cba:	4644      	mov	r4, r8
 c002cbc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c002cbe:	2b00      	cmp	r3, #0
 c002cc0:	dd65      	ble.n	c002d8e <tg_train+0x34e>
 c002cc2:	2700      	movs	r7, #0
 c002cc4:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 c002cc8:	2d00      	cmp	r5, #0
 c002cca:	dd13      	ble.n	c002cf4 <tg_train+0x2b4>
 c002ccc:	9b02      	ldr	r3, [sp, #8]
 c002cce:	f1a3 0904 	sub.w	r9, r3, #4
 c002cd2:	9b03      	ldr	r3, [sp, #12]
 c002cd4:	f1a3 0804 	sub.w	r8, r3, #4
 c002cd8:	2100      	movs	r1, #0
 c002cda:	4632      	mov	r2, r6
 c002cdc:	f859 0f04 	ldr.w	r0, [r9, #4]!
 c002ce0:	f00c fca6 	bl	c00f630 <memset>
 c002ce4:	4632      	mov	r2, r6
 c002ce6:	2100      	movs	r1, #0
 c002ce8:	f858 0f04 	ldr.w	r0, [r8, #4]!
 c002cec:	f00c fca0 	bl	c00f630 <memset>
 c002cf0:	45a1      	cmp	r9, r4
 c002cf2:	d1f1      	bne.n	c002cd8 <tg_train+0x298>
 c002cf4:	9b07      	ldr	r3, [sp, #28]
 c002cf6:	2b00      	cmp	r3, #0
 c002cf8:	dd2f      	ble.n	c002d5a <tg_train+0x31a>
 c002cfa:	2300      	movs	r3, #0
 c002cfc:	4639      	mov	r1, r7
 c002cfe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c002d00:	f8dd 9034 	ldr.w	r9, [sp, #52]	@ 0x34
 c002d04:	f1a2 0804 	sub.w	r8, r2, #4
 c002d08:	9606      	str	r6, [sp, #24]
 c002d0a:	2d00      	cmp	r5, #0
 c002d0c:	f858 7f04 	ldr.w	r7, [r8, #4]!
 c002d10:	dd1b      	ble.n	c002d4a <tg_train+0x30a>
 c002d12:	2900      	cmp	r1, #0
 c002d14:	d079      	beq.n	c002e0a <tg_train+0x3ca>
 c002d16:	9a02      	ldr	r2, [sp, #8]
 c002d18:	1e7e      	subs	r6, r7, #1
 c002d1a:	f1a2 0c04 	sub.w	ip, r2, #4
 c002d1e:	9a03      	ldr	r2, [sp, #12]
 c002d20:	f1a2 0e04 	sub.w	lr, r2, #4
 c002d24:	7830      	ldrb	r0, [r6, #0]
 c002d26:	f85c 2f04 	ldr.w	r2, [ip, #4]!
 c002d2a:	4418      	add	r0, r3
 c002d2c:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 c002d30:	ed82 8a00 	vstr	s16, [r2]
 c002d34:	f816 0f01 	ldrb.w	r0, [r6, #1]!
 c002d38:	f85e 2f04 	ldr.w	r2, [lr, #4]!
 c002d3c:	4418      	add	r0, r3
 c002d3e:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 c002d42:	45a4      	cmp	ip, r4
 c002d44:	ed82 8a00 	vstr	s16, [r2]
 c002d48:	d1ec      	bne.n	c002d24 <tg_train+0x2e4>
 c002d4a:	442f      	add	r7, r5
 c002d4c:	45c1      	cmp	r9, r8
 c002d4e:	f8c8 7000 	str.w	r7, [r8]
 c002d52:	4453      	add	r3, sl
 c002d54:	d1d9      	bne.n	c002d0a <tg_train+0x2ca>
 c002d56:	460f      	mov	r7, r1
 c002d58:	9e06      	ldr	r6, [sp, #24]
 c002d5a:	f8dd 8020 	ldr.w	r8, [sp, #32]
 c002d5e:	2201      	movs	r2, #1
 c002d60:	2100      	movs	r1, #0
 c002d62:	4640      	mov	r0, r8
 c002d64:	f000 fcb4 	bl	c0036d0 <kann_cost>
 c002d68:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 c002d6a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 c002d6e:	f8d8 200c 	ldr.w	r2, [r8, #12]
 c002d72:	eef0 0a49 	vmov.f32	s1, s18
 c002d76:	9100      	str	r1, [sp, #0]
 c002d78:	eeb0 0a68 	vmov.f32	s0, s17
 c002d7c:	2100      	movs	r1, #0
 c002d7e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 c002d80:	9304      	str	r3, [sp, #16]
 c002d82:	f000 ffd3 	bl	c003d2c <kann_RMSprop>
 c002d86:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c002d88:	3701      	adds	r7, #1
 c002d8a:	42bb      	cmp	r3, r7
 c002d8c:	d19c      	bne.n	c002cc8 <tg_train+0x288>
 c002d8e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c002d90:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 c002d92:	4413      	add	r3, r2
 c002d94:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 c002d96:	9311      	str	r3, [sp, #68]	@ 0x44
 c002d98:	429a      	cmp	r2, r3
 c002d9a:	f73f af1e 	bgt.w	c002bda <tg_train+0x19a>
 c002d9e:	e9dd 9818 	ldrd	r9, r8, [sp, #96]	@ 0x60
 c002da2:	4640      	mov	r0, r8
 c002da4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 c002da6:	f7ff fc49 	bl	c00263c <tg_gen.constprop.0>
 c002daa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 c002dac:	f109 0901 	add.w	r9, r9, #1
 c002db0:	454b      	cmp	r3, r9
 c002db2:	f47f af08 	bne.w	c002bc6 <tg_train+0x186>
 c002db6:	9808      	ldr	r0, [sp, #32]
 c002db8:	f000 fa6a 	bl	c003290 <kann_delete_unrolled>
 c002dbc:	4837      	ldr	r0, [pc, #220]	@ (c002e9c <tg_train+0x45c>)
 c002dbe:	f7fe fefd 	bl	c001bbc <sendline>
 c002dc2:	2d00      	cmp	r5, #0
 c002dc4:	dd10      	ble.n	c002de8 <tg_train+0x3a8>
 c002dc6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c002dc8:	1f1c      	subs	r4, r3, #4
 c002dca:	9b02      	ldr	r3, [sp, #8]
 c002dcc:	441c      	add	r4, r3
 c002dce:	1f1d      	subs	r5, r3, #4
 c002dd0:	9b03      	ldr	r3, [sp, #12]
 c002dd2:	1f1e      	subs	r6, r3, #4
 c002dd4:	f855 0f04 	ldr.w	r0, [r5, #4]!
 c002dd8:	f00c f958 	bl	c00f08c <free>
 c002ddc:	f856 0f04 	ldr.w	r0, [r6, #4]!
 c002de0:	f00c f954 	bl	c00f08c <free>
 c002de4:	42a5      	cmp	r5, r4
 c002de6:	d1f5      	bne.n	c002dd4 <tg_train+0x394>
 c002de8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c002dea:	f00c f94f 	bl	c00f08c <free>
 c002dee:	9803      	ldr	r0, [sp, #12]
 c002df0:	f00c f94c 	bl	c00f08c <free>
 c002df4:	9802      	ldr	r0, [sp, #8]
 c002df6:	f00c f949 	bl	c00f08c <free>
 c002dfa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 c002dfc:	b01d      	add	sp, #116	@ 0x74
 c002dfe:	ecbd 8b04 	vpop	{d8-d9}
 c002e02:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c002e06:	f00c b941 	b.w	c00f08c <free>
 c002e0a:	9a05      	ldr	r2, [sp, #20]
 c002e0c:	2a00      	cmp	r2, #0
 c002e0e:	460a      	mov	r2, r1
 c002e10:	dd12      	ble.n	c002e38 <tg_train+0x3f8>
 c002e12:	9802      	ldr	r0, [sp, #8]
 c002e14:	f1a7 0c02 	sub.w	ip, r7, #2
 c002e18:	f1a0 0e04 	sub.w	lr, r0, #4
 c002e1c:	f81c 6f01 	ldrb.w	r6, [ip, #1]!
 c002e20:	f85e 0f04 	ldr.w	r0, [lr, #4]!
 c002e24:	441e      	add	r6, r3
 c002e26:	3201      	adds	r2, #1
 c002e28:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 c002e2c:	4593      	cmp	fp, r2
 c002e2e:	ed80 8a00 	vstr	s16, [r0]
 c002e32:	dcf3      	bgt.n	c002e1c <tg_train+0x3dc>
 c002e34:	4295      	cmp	r5, r2
 c002e36:	dd88      	ble.n	c002d4a <tg_train+0x30a>
 c002e38:	9802      	ldr	r0, [sp, #8]
 c002e3a:	f102 4680 	add.w	r6, r2, #1073741824	@ 0x40000000
 c002e3e:	3e01      	subs	r6, #1
 c002e40:	eb00 0c86 	add.w	ip, r0, r6, lsl #2
 c002e44:	9803      	ldr	r0, [sp, #12]
 c002e46:	3a01      	subs	r2, #1
 c002e48:	443a      	add	r2, r7
 c002e4a:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 c002e4e:	f1c7 0e01 	rsb	lr, r7, #1
 c002e52:	f8cd 9010 	str.w	r9, [sp, #16]
 c002e56:	f892 9000 	ldrb.w	r9, [r2]
 c002e5a:	f85c 0f04 	ldr.w	r0, [ip, #4]!
 c002e5e:	4499      	add	r9, r3
 c002e60:	eb00 0089 	add.w	r0, r0, r9, lsl #2
 c002e64:	ed80 8a00 	vstr	s16, [r0]
 c002e68:	f812 9f01 	ldrb.w	r9, [r2, #1]!
 c002e6c:	f856 0f04 	ldr.w	r0, [r6, #4]!
 c002e70:	4499      	add	r9, r3
 c002e72:	eb00 0089 	add.w	r0, r0, r9, lsl #2
 c002e76:	ed80 8a00 	vstr	s16, [r0]
 c002e7a:	eb0e 0002 	add.w	r0, lr, r2
 c002e7e:	4285      	cmp	r5, r0
 c002e80:	dce9      	bgt.n	c002e56 <tg_train+0x416>
 c002e82:	f8dd 9010 	ldr.w	r9, [sp, #16]
 c002e86:	442f      	add	r7, r5
 c002e88:	45c1      	cmp	r9, r8
 c002e8a:	f8c8 7000 	str.w	r7, [r8]
 c002e8e:	4453      	add	r3, sl
 c002e90:	f47f af3b 	bne.w	c002d0a <tg_train+0x2ca>
 c002e94:	e75f      	b.n	c002d56 <tg_train+0x316>
 c002e96:	2204      	movs	r2, #4
 c002e98:	e707      	b.n	c002caa <tg_train+0x26a>
 c002e9a:	bf00      	nop
 c002e9c:	0c011ac0 	.word	0x0c011ac0

0c002ea0 <model_gen>:
 c002ea0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c002ea4:	9d06      	ldr	r5, [sp, #24]
 c002ea6:	4617      	mov	r7, r2
 c002ea8:	3d00      	subs	r5, #0
 c002eaa:	4608      	mov	r0, r1
 c002eac:	bf18      	it	ne
 c002eae:	2501      	movne	r5, #1
 c002eb0:	4698      	mov	r8, r3
 c002eb2:	460e      	mov	r6, r1
 c002eb4:	f000 fdb0 	bl	c003a18 <kann_layer_input>
 c002eb8:	2364      	movs	r3, #100	@ 0x64
 c002eba:	2f00      	cmp	r7, #0
 c002ebc:	6203      	str	r3, [r0, #32]
 c002ebe:	dd08      	ble.n	c002ed2 <model_gen+0x32>
 c002ec0:	2400      	movs	r4, #0
 c002ec2:	006d      	lsls	r5, r5, #1
 c002ec4:	462a      	mov	r2, r5
 c002ec6:	4641      	mov	r1, r8
 c002ec8:	3401      	adds	r4, #1
 c002eca:	f000 fdeb 	bl	c003aa4 <kann_layer_lstm>
 c002ece:	42a7      	cmp	r7, r4
 c002ed0:	d1f8      	bne.n	c002ec4 <model_gen+0x24>
 c002ed2:	4631      	mov	r1, r6
 c002ed4:	f000 fdac 	bl	c003a30 <kann_layer_dense>
 c002ed8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c002edc:	4604      	mov	r4, r0
 c002ede:	2002      	movs	r0, #2
 c002ee0:	f000 fd94 	bl	c003a0c <kann_new_scalar>
 c002ee4:	f04f 33ff 	mov.w	r3, #4294967295
 c002ee8:	4601      	mov	r1, r0
 c002eea:	4620      	mov	r0, r4
 c002eec:	620b      	str	r3, [r1, #32]
 c002eee:	f008 f849 	bl	c00af84 <kad_mul>
 c002ef2:	f008 f9cd 	bl	c00b290 <kad_softmax>
 c002ef6:	4604      	mov	r4, r0
 c002ef8:	2002      	movs	r0, #2
 c002efa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 c002efc:	4632      	mov	r2, r6
 c002efe:	4303      	orrs	r3, r0
 c002f00:	6263      	str	r3, [r4, #36]	@ 0x24
 c002f02:	2101      	movs	r1, #1
 c002f04:	f007 ff94 	bl	c00ae30 <kad_feed>
 c002f08:	4601      	mov	r1, r0
 c002f0a:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 c002f0c:	4620      	mov	r0, r4
 c002f0e:	f043 0304 	orr.w	r3, r3, #4
 c002f12:	624b      	str	r3, [r1, #36]	@ 0x24
 c002f14:	f008 f8d6 	bl	c00b0c4 <kad_ce_multi>
 c002f18:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 c002f1c:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 c002f1e:	2100      	movs	r1, #0
 c002f20:	f042 0208 	orr.w	r2, r2, #8
 c002f24:	6242      	str	r2, [r0, #36]	@ 0x24
 c002f26:	f000 b8ef 	b.w	c003108 <kann_new>
 c002f2a:	bf00      	nop

0c002f2c <kad_ext_collate>:
 c002f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c002f30:	b085      	sub	sp, #20
 c002f32:	4617      	mov	r7, r2
 c002f34:	4698      	mov	r8, r3
 c002f36:	4606      	mov	r6, r0
 c002f38:	460d      	mov	r5, r1
 c002f3a:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 c002f3e:	f008 fc39 	bl	c00b7b4 <kad_size_var>
 c002f42:	0084      	lsls	r4, r0, #2
 c002f44:	4621      	mov	r1, r4
 c002f46:	6838      	ldr	r0, [r7, #0]
 c002f48:	f00c f956 	bl	c00f1f8 <realloc>
 c002f4c:	6038      	str	r0, [r7, #0]
 c002f4e:	4621      	mov	r1, r4
 c002f50:	9001      	str	r0, [sp, #4]
 c002f52:	f8d8 0000 	ldr.w	r0, [r8]
 c002f56:	f00c f94f 	bl	c00f1f8 <realloc>
 c002f5a:	4607      	mov	r7, r0
 c002f5c:	4629      	mov	r1, r5
 c002f5e:	f8c8 7000 	str.w	r7, [r8]
 c002f62:	4630      	mov	r0, r6
 c002f64:	f8db 8000 	ldr.w	r8, [fp]
 c002f68:	f008 fc5e 	bl	c00b828 <kad_size_const>
 c002f6c:	4601      	mov	r1, r0
 c002f6e:	4640      	mov	r0, r8
 c002f70:	0089      	lsls	r1, r1, #2
 c002f72:	f00c f941 	bl	c00f1f8 <realloc>
 c002f76:	4682      	mov	sl, r0
 c002f78:	4622      	mov	r2, r4
 c002f7a:	2100      	movs	r1, #0
 c002f7c:	4638      	mov	r0, r7
 c002f7e:	f8cb a000 	str.w	sl, [fp]
 c002f82:	f00c fb55 	bl	c00f630 <memset>
 c002f86:	2e00      	cmp	r6, #0
 c002f88:	dd3e      	ble.n	c003008 <kad_ext_collate+0xdc>
 c002f8a:	f04f 0900 	mov.w	r9, #0
 c002f8e:	3d04      	subs	r5, #4
 c002f90:	46c8      	mov	r8, r9
 c002f92:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 c002f96:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 c002f9a:	e003      	b.n	c002fa4 <kad_ext_collate+0x78>
 c002f9c:	079b      	lsls	r3, r3, #30
 c002f9e:	d436      	bmi.n	c00300e <kad_ext_collate+0xe2>
 c002fa0:	42ae      	cmp	r6, r5
 c002fa2:	d031      	beq.n	c003008 <kad_ext_collate+0xdc>
 c002fa4:	f855 4f04 	ldr.w	r4, [r5, #4]!
 c002fa8:	6863      	ldr	r3, [r4, #4]
 c002faa:	2b00      	cmp	r3, #0
 c002fac:	d1f8      	bne.n	c002fa0 <kad_ext_collate+0x74>
 c002fae:	7863      	ldrb	r3, [r4, #1]
 c002fb0:	07da      	lsls	r2, r3, #31
 c002fb2:	d5f3      	bpl.n	c002f9c <kad_ext_collate+0x70>
 c002fb4:	7823      	ldrb	r3, [r4, #0]
 c002fb6:	2b00      	cmp	r3, #0
 c002fb8:	d049      	beq.n	c00304e <kad_ext_collate+0x122>
 c002fba:	2b01      	cmp	r3, #1
 c002fbc:	f8d4 b010 	ldr.w	fp, [r4, #16]
 c002fc0:	d00c      	beq.n	c002fdc <kad_ext_collate+0xb0>
 c002fc2:	6962      	ldr	r2, [r4, #20]
 c002fc4:	2b02      	cmp	r3, #2
 c002fc6:	fb02 fb0b 	mul.w	fp, r2, fp
 c002fca:	d007      	beq.n	c002fdc <kad_ext_collate+0xb0>
 c002fcc:	69a2      	ldr	r2, [r4, #24]
 c002fce:	2b03      	cmp	r3, #3
 c002fd0:	fb02 fb0b 	mul.w	fp, r2, fp
 c002fd4:	bf1c      	itt	ne
 c002fd6:	69e3      	ldrne	r3, [r4, #28]
 c002fd8:	fb03 fb0b 	mulne.w	fp, r3, fp
 c002fdc:	ea4f 028b 	mov.w	r2, fp, lsl #2
 c002fe0:	9b01      	ldr	r3, [sp, #4]
 c002fe2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 c002fe4:	eb03 0788 	add.w	r7, r3, r8, lsl #2
 c002fe8:	4638      	mov	r0, r7
 c002fea:	f00c fbf0 	bl	c00f7ce <memcpy>
 c002fee:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 c002ff0:	f00c f84c 	bl	c00f08c <free>
 c002ff4:	9b02      	ldr	r3, [sp, #8]
 c002ff6:	ea4f 0a88 	mov.w	sl, r8, lsl #2
 c002ffa:	eb03 020a 	add.w	r2, r3, sl
 c002ffe:	42ae      	cmp	r6, r5
 c003000:	44d8      	add	r8, fp
 c003002:	62a7      	str	r7, [r4, #40]	@ 0x28
 c003004:	62e2      	str	r2, [r4, #44]	@ 0x2c
 c003006:	d1cd      	bne.n	c002fa4 <kad_ext_collate+0x78>
 c003008:	b005      	add	sp, #20
 c00300a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00300e:	7822      	ldrb	r2, [r4, #0]
 c003010:	b30a      	cbz	r2, c003056 <kad_ext_collate+0x12a>
 c003012:	2a01      	cmp	r2, #1
 c003014:	6923      	ldr	r3, [r4, #16]
 c003016:	d00b      	beq.n	c003030 <kad_ext_collate+0x104>
 c003018:	6961      	ldr	r1, [r4, #20]
 c00301a:	2a02      	cmp	r2, #2
 c00301c:	fb01 f303 	mul.w	r3, r1, r3
 c003020:	d006      	beq.n	c003030 <kad_ext_collate+0x104>
 c003022:	69a1      	ldr	r1, [r4, #24]
 c003024:	2a03      	cmp	r2, #3
 c003026:	fb01 f303 	mul.w	r3, r1, r3
 c00302a:	bf1c      	itt	ne
 c00302c:	69e2      	ldrne	r2, [r4, #28]
 c00302e:	4353      	mulne	r3, r2
 c003030:	009a      	lsls	r2, r3, #2
 c003032:	9903      	ldr	r1, [sp, #12]
 c003034:	eb01 0b89 	add.w	fp, r1, r9, lsl #2
 c003038:	4658      	mov	r0, fp
 c00303a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 c00303c:	4499      	add	r9, r3
 c00303e:	f00c fbc6 	bl	c00f7ce <memcpy>
 c003042:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 c003044:	f00c f822 	bl	c00f08c <free>
 c003048:	f8c4 b028 	str.w	fp, [r4, #40]	@ 0x28
 c00304c:	e7a8      	b.n	c002fa0 <kad_ext_collate+0x74>
 c00304e:	2204      	movs	r2, #4
 c003050:	f04f 0b01 	mov.w	fp, #1
 c003054:	e7c4      	b.n	c002fe0 <kad_ext_collate+0xb4>
 c003056:	2204      	movs	r2, #4
 c003058:	2301      	movs	r3, #1
 c00305a:	e7ea      	b.n	c003032 <kad_ext_collate+0x106>

0c00305c <kann_new_leaf_array.constprop.0>:
 c00305c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c003060:	4605      	mov	r5, r0
 c003062:	ed2d 8b02 	vpush	{d8}
 c003066:	460e      	mov	r6, r1
 c003068:	4690      	mov	r8, r2
 c00306a:	eeb0 8a40 	vmov.f32	s16, s0
 c00306e:	b180      	cbz	r0, c003092 <kann_new_leaf_array.constprop.0+0x36>
 c003070:	b179      	cbz	r1, c003092 <kann_new_leaf_array.constprop.0+0x36>
 c003072:	f8d0 9000 	ldr.w	r9, [r0]
 c003076:	f1b9 0f00 	cmp.w	r9, #0
 c00307a:	db0c      	blt.n	c003096 <kann_new_leaf_array.constprop.0+0x3a>
 c00307c:	f851 4029 	ldr.w	r4, [r1, r9, lsl #2]
 c003080:	b14c      	cbz	r4, c003096 <kann_new_leaf_array.constprop.0+0x3a>
 c003082:	f109 0301 	add.w	r3, r9, #1
 c003086:	6003      	str	r3, [r0, #0]
 c003088:	4620      	mov	r0, r4
 c00308a:	ecbd 8b02 	vpop	{d8}
 c00308e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 c003092:	f04f 39ff 	mov.w	r9, #4294967295
 c003096:	2140      	movs	r1, #64	@ 0x40
 c003098:	2001      	movs	r0, #1
 c00309a:	f00b ffd3 	bl	c00f044 <calloc>
 c00309e:	2200      	movs	r2, #0
 c0030a0:	4604      	mov	r4, r0
 c0030a2:	4f0f      	ldr	r7, [pc, #60]	@ (c0030e0 <kann_new_leaf_array.constprop.0+0x84>)
 c0030a4:	2104      	movs	r1, #4
 c0030a6:	683b      	ldr	r3, [r7, #0]
 c0030a8:	2001      	movs	r0, #1
 c0030aa:	3340      	adds	r3, #64	@ 0x40
 c0030ac:	7022      	strb	r2, [r4, #0]
 c0030ae:	f884 8001 	strb.w	r8, [r4, #1]
 c0030b2:	603b      	str	r3, [r7, #0]
 c0030b4:	f00b ffc6 	bl	c00f044 <calloc>
 c0030b8:	683b      	ldr	r3, [r7, #0]
 c0030ba:	f1b9 0f00 	cmp.w	r9, #0
 c0030be:	f103 0304 	add.w	r3, r3, #4
 c0030c2:	ed80 8a00 	vstr	s16, [r0]
 c0030c6:	603b      	str	r3, [r7, #0]
 c0030c8:	62a0      	str	r0, [r4, #40]	@ 0x28
 c0030ca:	dbdd      	blt.n	c003088 <kann_new_leaf_array.constprop.0+0x2c>
 c0030cc:	ecbd 8b02 	vpop	{d8}
 c0030d0:	682b      	ldr	r3, [r5, #0]
 c0030d2:	4620      	mov	r0, r4
 c0030d4:	3301      	adds	r3, #1
 c0030d6:	f846 4029 	str.w	r4, [r6, r9, lsl #2]
 c0030da:	602b      	str	r3, [r5, #0]
 c0030dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 c0030e0:	30000254 	.word	0x30000254

0c0030e4 <kann_new_leaf.constprop.1>:
 c0030e4:	ee00 1a10 	vmov	s0, r1
 c0030e8:	2100      	movs	r1, #0
 c0030ea:	b40c      	push	{r2, r3}
 c0030ec:	b500      	push	{lr}
 c0030ee:	b087      	sub	sp, #28
 c0030f0:	4602      	mov	r2, r0
 c0030f2:	a809      	add	r0, sp, #36	@ 0x24
 c0030f4:	9001      	str	r0, [sp, #4]
 c0030f6:	ab02      	add	r3, sp, #8
 c0030f8:	4608      	mov	r0, r1
 c0030fa:	f7ff ffaf 	bl	c00305c <kann_new_leaf_array.constprop.0>
 c0030fe:	b007      	add	sp, #28
 c003100:	f85d eb04 	ldr.w	lr, [sp], #4
 c003104:	b002      	add	sp, #8
 c003106:	4770      	bx	lr

0c003108 <kann_new>:
 c003108:	b40e      	push	{r1, r2, r3}
 c00310a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 c00310e:	b086      	sub	sp, #24
 c003110:	9003      	str	r0, [sp, #12]
 c003112:	7803      	ldrb	r3, [r0, #0]
 c003114:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 c003116:	2b00      	cmp	r3, #0
 c003118:	d15c      	bne.n	c0031d4 <kann_new+0xcc>
 c00311a:	1cbe      	adds	r6, r7, #2
 c00311c:	00b6      	lsls	r6, r6, #2
 c00311e:	ab0e      	add	r3, sp, #56	@ 0x38
 c003120:	4630      	mov	r0, r6
 c003122:	9305      	str	r3, [sp, #20]
 c003124:	f00b ffaa 	bl	c00f07c <malloc>
 c003128:	2f00      	cmp	r7, #0
 c00312a:	4605      	mov	r5, r0
 c00312c:	dd72      	ble.n	c003214 <kann_new+0x10c>
 c00312e:	9b05      	ldr	r3, [sp, #20]
 c003130:	f1a6 0408 	sub.w	r4, r6, #8
 c003134:	1f02      	subs	r2, r0, #4
 c003136:	1918      	adds	r0, r3, r4
 c003138:	f853 1b04 	ldr.w	r1, [r3], #4
 c00313c:	4283      	cmp	r3, r0
 c00313e:	f842 1f04 	str.w	r1, [r2, #4]!
 c003142:	d1f9      	bne.n	c003138 <kann_new+0x30>
 c003144:	442c      	add	r4, r5
 c003146:	9b03      	ldr	r3, [sp, #12]
 c003148:	2118      	movs	r1, #24
 c00314a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 c00314c:	6023      	str	r3, [r4, #0]
 c00314e:	f042 0208 	orr.w	r2, r2, #8
 c003152:	625a      	str	r2, [r3, #36]	@ 0x24
 c003154:	2001      	movs	r0, #1
 c003156:	f00b ff75 	bl	c00f044 <calloc>
 c00315a:	492f      	ldr	r1, [pc, #188]	@ (c003218 <kann_new+0x110>)
 c00315c:	f107 0901 	add.w	r9, r7, #1
 c003160:	680b      	ldr	r3, [r1, #0]
 c003162:	462a      	mov	r2, r5
 c003164:	3318      	adds	r3, #24
 c003166:	600b      	str	r3, [r1, #0]
 c003168:	4649      	mov	r1, r9
 c00316a:	4604      	mov	r4, r0
 c00316c:	f008 f9ea 	bl	c00b544 <kad_compile_array>
 c003170:	4601      	mov	r1, r0
 c003172:	6820      	ldr	r0, [r4, #0]
 c003174:	6061      	str	r1, [r4, #4]
 c003176:	2800      	cmp	r0, #0
 c003178:	dd1a      	ble.n	c0031b0 <kann_new+0xa8>
 c00317a:	2200      	movs	r2, #0
 c00317c:	4690      	mov	r8, r2
 c00317e:	f1a1 0c04 	sub.w	ip, r1, #4
 c003182:	eb0c 0e80 	add.w	lr, ip, r0, lsl #2
 c003186:	f85c 3f04 	ldr.w	r3, [ip, #4]!
 c00318a:	6bdf      	ldr	r7, [r3, #60]	@ 0x3c
 c00318c:	2f00      	cmp	r7, #0
 c00318e:	685f      	ldr	r7, [r3, #4]
 c003190:	bf18      	it	ne
 c003192:	2201      	movne	r2, #1
 c003194:	2f01      	cmp	r7, #1
 c003196:	d105      	bne.n	c0031a4 <kann_new+0x9c>
 c003198:	785b      	ldrb	r3, [r3, #1]
 c00319a:	f013 0f04 	tst.w	r3, #4
 c00319e:	bf18      	it	ne
 c0031a0:	f04f 0801 	movne.w	r8, #1
 c0031a4:	45e6      	cmp	lr, ip
 c0031a6:	d1ee      	bne.n	c003186 <kann_new+0x7e>
 c0031a8:	b112      	cbz	r2, c0031b0 <kann_new+0xa8>
 c0031aa:	f1b8 0f00 	cmp.w	r8, #0
 c0031ae:	d013      	beq.n	c0031d8 <kann_new+0xd0>
 c0031b0:	f104 0310 	add.w	r3, r4, #16
 c0031b4:	9300      	str	r3, [sp, #0]
 c0031b6:	f104 0208 	add.w	r2, r4, #8
 c0031ba:	f104 030c 	add.w	r3, r4, #12
 c0031be:	f7ff feb5 	bl	c002f2c <kad_ext_collate>
 c0031c2:	4628      	mov	r0, r5
 c0031c4:	f00b ff62 	bl	c00f08c <free>
 c0031c8:	4620      	mov	r0, r4
 c0031ca:	b006      	add	sp, #24
 c0031cc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 c0031d0:	b003      	add	sp, #12
 c0031d2:	4770      	bx	lr
 c0031d4:	2400      	movs	r4, #0
 c0031d6:	e7f7      	b.n	c0031c8 <kann_new+0xc0>
 c0031d8:	9a03      	ldr	r2, [sp, #12]
 c0031da:	a903      	add	r1, sp, #12
 c0031dc:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 c0031de:	2001      	movs	r0, #1
 c0031e0:	f023 0308 	bic.w	r3, r3, #8
 c0031e4:	6253      	str	r3, [r2, #36]	@ 0x24
 c0031e6:	f008 f8e9 	bl	c00b3bc <kad_avg>
 c0031ea:	4603      	mov	r3, r0
 c0031ec:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 c0031ee:	442e      	add	r6, r5
 c0031f0:	f042 0208 	orr.w	r2, r2, #8
 c0031f4:	6860      	ldr	r0, [r4, #4]
 c0031f6:	f846 3c08 	str.w	r3, [r6, #-8]
 c0031fa:	625a      	str	r2, [r3, #36]	@ 0x24
 c0031fc:	9303      	str	r3, [sp, #12]
 c0031fe:	f00b ff45 	bl	c00f08c <free>
 c003202:	4649      	mov	r1, r9
 c003204:	462a      	mov	r2, r5
 c003206:	4620      	mov	r0, r4
 c003208:	f008 f99c 	bl	c00b544 <kad_compile_array>
 c00320c:	4601      	mov	r1, r0
 c00320e:	6820      	ldr	r0, [r4, #0]
 c003210:	6061      	str	r1, [r4, #4]
 c003212:	e7cd      	b.n	c0031b0 <kann_new+0xa8>
 c003214:	4604      	mov	r4, r0
 c003216:	e796      	b.n	c003146 <kann_new+0x3e>
 c003218:	30000254 	.word	0x30000254

0c00321c <kann_unroll>:
 c00321c:	b40f      	push	{r0, r1, r2, r3}
 c00321e:	b5f0      	push	{r4, r5, r6, r7, lr}
 c003220:	b083      	sub	sp, #12
 c003222:	af08      	add	r7, sp, #32
 c003224:	f857 5b04 	ldr.w	r5, [r7], #4
 c003228:	e9d5 0100 	ldrd	r0, r1, [r5]
 c00322c:	f008 fc12 	bl	c00ba54 <kad_n_pivots>
 c003230:	2104      	movs	r1, #4
 c003232:	4604      	mov	r4, r0
 c003234:	f00b ff06 	bl	c00f044 <calloc>
 c003238:	2c00      	cmp	r4, #0
 c00323a:	4606      	mov	r6, r0
 c00323c:	9701      	str	r7, [sp, #4]
 c00323e:	dd03      	ble.n	c003248 <kann_unroll+0x2c>
 c003240:	4639      	mov	r1, r7
 c003242:	00a2      	lsls	r2, r4, #2
 c003244:	f00c fac3 	bl	c00f7ce <memcpy>
 c003248:	2118      	movs	r1, #24
 c00324a:	2001      	movs	r0, #1
 c00324c:	f00b fefa 	bl	c00f044 <calloc>
 c003250:	4604      	mov	r4, r0
 c003252:	e9d5 0100 	ldrd	r0, r1, [r5]
 c003256:	4a0d      	ldr	r2, [pc, #52]	@ (c00328c <kann_unroll+0x70>)
 c003258:	f8d5 c008 	ldr.w	ip, [r5, #8]
 c00325c:	6813      	ldr	r3, [r2, #0]
 c00325e:	3318      	adds	r3, #24
 c003260:	6013      	str	r3, [r2, #0]
 c003262:	e9d5 7203 	ldrd	r7, r2, [r5, #12]
 c003266:	4633      	mov	r3, r6
 c003268:	e9c4 c702 	strd	ip, r7, [r4, #8]
 c00326c:	6122      	str	r2, [r4, #16]
 c00326e:	4622      	mov	r2, r4
 c003270:	f008 fcbe 	bl	c00bbf0 <kad_unroll>
 c003274:	4603      	mov	r3, r0
 c003276:	4630      	mov	r0, r6
 c003278:	6063      	str	r3, [r4, #4]
 c00327a:	f00b ff07 	bl	c00f08c <free>
 c00327e:	4620      	mov	r0, r4
 c003280:	b003      	add	sp, #12
 c003282:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 c003286:	b004      	add	sp, #16
 c003288:	4770      	bx	lr
 c00328a:	bf00      	nop
 c00328c:	30000254 	.word	0x30000254

0c003290 <kann_delete_unrolled>:
 c003290:	b510      	push	{r4, lr}
 c003292:	4604      	mov	r4, r0
 c003294:	b120      	cbz	r0, c0032a0 <kann_delete_unrolled+0x10>
 c003296:	6841      	ldr	r1, [r0, #4]
 c003298:	b111      	cbz	r1, c0032a0 <kann_delete_unrolled+0x10>
 c00329a:	6800      	ldr	r0, [r0, #0]
 c00329c:	f008 fa62 	bl	c00b764 <kad_delete>
 c0032a0:	4620      	mov	r0, r4
 c0032a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 c0032a6:	f00b bef1 	b.w	c00f08c <free>
 c0032aa:	bf00      	nop

0c0032ac <kann_find>:
 c0032ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 c0032ae:	6804      	ldr	r4, [r0, #0]
 c0032b0:	2c00      	cmp	r4, #0
 c0032b2:	dd51      	ble.n	c003358 <kann_find+0xac>
 c0032b4:	4603      	mov	r3, r0
 c0032b6:	b319      	cbz	r1, c003300 <kann_find+0x54>
 c0032b8:	2a00      	cmp	r2, #0
 c0032ba:	d03b      	beq.n	c003334 <kann_find+0x88>
 c0032bc:	f04f 0e00 	mov.w	lr, #0
 c0032c0:	6846      	ldr	r6, [r0, #4]
 c0032c2:	46f4      	mov	ip, lr
 c0032c4:	f04f 30ff 	mov.w	r0, #4294967295
 c0032c8:	4673      	mov	r3, lr
 c0032ca:	f856 500e 	ldr.w	r5, [r6, lr]
 c0032ce:	6a6f      	ldr	r7, [r5, #36]	@ 0x24
 c0032d0:	4239      	tst	r1, r7
 c0032d2:	d005      	beq.n	c0032e0 <kann_find+0x34>
 c0032d4:	6a2d      	ldr	r5, [r5, #32]
 c0032d6:	42aa      	cmp	r2, r5
 c0032d8:	d102      	bne.n	c0032e0 <kann_find+0x34>
 c0032da:	4618      	mov	r0, r3
 c0032dc:	f10c 0c01 	add.w	ip, ip, #1
 c0032e0:	3301      	adds	r3, #1
 c0032e2:	429c      	cmp	r4, r3
 c0032e4:	f10e 0e04 	add.w	lr, lr, #4
 c0032e8:	d1ef      	bne.n	c0032ca <kann_find+0x1e>
 c0032ea:	f1bc 0f01 	cmp.w	ip, #1
 c0032ee:	d006      	beq.n	c0032fe <kann_find+0x52>
 c0032f0:	f1bc 0f00 	cmp.w	ip, #0
 c0032f4:	bf14      	ite	ne
 c0032f6:	f06f 0001 	mvnne.w	r0, #1
 c0032fa:	f04f 30ff 	moveq.w	r0, #4294967295
 c0032fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c003300:	b192      	cbz	r2, c003328 <kann_find+0x7c>
 c003302:	685d      	ldr	r5, [r3, #4]
 c003304:	468c      	mov	ip, r1
 c003306:	f04f 30ff 	mov.w	r0, #4294967295
 c00330a:	460b      	mov	r3, r1
 c00330c:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
 c003310:	6a09      	ldr	r1, [r1, #32]
 c003312:	428a      	cmp	r2, r1
 c003314:	bf08      	it	eq
 c003316:	4618      	moveq	r0, r3
 c003318:	f103 0301 	add.w	r3, r3, #1
 c00331c:	bf08      	it	eq
 c00331e:	f10c 0c01 	addeq.w	ip, ip, #1
 c003322:	429c      	cmp	r4, r3
 c003324:	d1f2      	bne.n	c00330c <kann_find+0x60>
 c003326:	e7e0      	b.n	c0032ea <kann_find+0x3e>
 c003328:	2c01      	cmp	r4, #1
 c00332a:	bf14      	ite	ne
 c00332c:	f06f 0001 	mvnne.w	r0, #1
 c003330:	2000      	moveq	r0, #0
 c003332:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c003334:	6845      	ldr	r5, [r0, #4]
 c003336:	4694      	mov	ip, r2
 c003338:	f04f 30ff 	mov.w	r0, #4294967295
 c00333c:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
 c003340:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 c003342:	4219      	tst	r1, r3
 c003344:	bf18      	it	ne
 c003346:	4610      	movne	r0, r2
 c003348:	f102 0201 	add.w	r2, r2, #1
 c00334c:	bf18      	it	ne
 c00334e:	f10c 0c01 	addne.w	ip, ip, #1
 c003352:	42a2      	cmp	r2, r4
 c003354:	d1f2      	bne.n	c00333c <kann_find+0x90>
 c003356:	e7c8      	b.n	c0032ea <kann_find+0x3e>
 c003358:	f04f 30ff 	mov.w	r0, #4294967295
 c00335c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c00335e:	bf00      	nop

0c003360 <kann_feed_bind>:
 c003360:	2b00      	cmp	r3, #0
 c003362:	d062      	beq.n	c00342a <kann_feed_bind+0xca>
 c003364:	b570      	push	{r4, r5, r6, lr}
 c003366:	6805      	ldr	r5, [r0, #0]
 c003368:	2d00      	cmp	r5, #0
 c00336a:	dd60      	ble.n	c00342e <kann_feed_bind+0xce>
 c00336c:	6844      	ldr	r4, [r0, #4]
 c00336e:	b1da      	cbz	r2, c0033a8 <kann_feed_bind+0x48>
 c003370:	b391      	cbz	r1, c0033d8 <kann_feed_bind+0x78>
 c003372:	2000      	movs	r0, #0
 c003374:	f1a4 0c04 	sub.w	ip, r4, #4
 c003378:	eb0c 0585 	add.w	r5, ip, r5, lsl #2
 c00337c:	f85c 4f04 	ldr.w	r4, [ip, #4]!
 c003380:	6866      	ldr	r6, [r4, #4]
 c003382:	b976      	cbnz	r6, c0033a2 <kann_feed_bind+0x42>
 c003384:	f894 e001 	ldrb.w	lr, [r4, #1]
 c003388:	f01e 0f03 	tst.w	lr, #3
 c00338c:	d109      	bne.n	c0033a2 <kann_feed_bind+0x42>
 c00338e:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 c003390:	4231      	tst	r1, r6
 c003392:	d006      	beq.n	c0033a2 <kann_feed_bind+0x42>
 c003394:	6a26      	ldr	r6, [r4, #32]
 c003396:	42b2      	cmp	r2, r6
 c003398:	d103      	bne.n	c0033a2 <kann_feed_bind+0x42>
 c00339a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 c00339e:	3001      	adds	r0, #1
 c0033a0:	62a6      	str	r6, [r4, #40]	@ 0x28
 c0033a2:	4565      	cmp	r5, ip
 c0033a4:	d1ea      	bne.n	c00337c <kann_feed_bind+0x1c>
 c0033a6:	bd70      	pop	{r4, r5, r6, pc}
 c0033a8:	b369      	cbz	r1, c003406 <kann_feed_bind+0xa6>
 c0033aa:	4610      	mov	r0, r2
 c0033ac:	1f22      	subs	r2, r4, #4
 c0033ae:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 c0033b2:	f852 4f04 	ldr.w	r4, [r2, #4]!
 c0033b6:	6866      	ldr	r6, [r4, #4]
 c0033b8:	b95e      	cbnz	r6, c0033d2 <kann_feed_bind+0x72>
 c0033ba:	f894 c001 	ldrb.w	ip, [r4, #1]
 c0033be:	f01c 0f03 	tst.w	ip, #3
 c0033c2:	d106      	bne.n	c0033d2 <kann_feed_bind+0x72>
 c0033c4:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 c0033c6:	4231      	tst	r1, r6
 c0033c8:	d003      	beq.n	c0033d2 <kann_feed_bind+0x72>
 c0033ca:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 c0033ce:	3001      	adds	r0, #1
 c0033d0:	62a6      	str	r6, [r4, #40]	@ 0x28
 c0033d2:	4295      	cmp	r5, r2
 c0033d4:	d1ed      	bne.n	c0033b2 <kann_feed_bind+0x52>
 c0033d6:	bd70      	pop	{r4, r5, r6, pc}
 c0033d8:	4608      	mov	r0, r1
 c0033da:	1f21      	subs	r1, r4, #4
 c0033dc:	eb01 0585 	add.w	r5, r1, r5, lsl #2
 c0033e0:	f851 4f04 	ldr.w	r4, [r1, #4]!
 c0033e4:	6866      	ldr	r6, [r4, #4]
 c0033e6:	b95e      	cbnz	r6, c003400 <kann_feed_bind+0xa0>
 c0033e8:	f894 c001 	ldrb.w	ip, [r4, #1]
 c0033ec:	f01c 0f03 	tst.w	ip, #3
 c0033f0:	d106      	bne.n	c003400 <kann_feed_bind+0xa0>
 c0033f2:	6a26      	ldr	r6, [r4, #32]
 c0033f4:	42b2      	cmp	r2, r6
 c0033f6:	d103      	bne.n	c003400 <kann_feed_bind+0xa0>
 c0033f8:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 c0033fc:	3001      	adds	r0, #1
 c0033fe:	62a6      	str	r6, [r4, #40]	@ 0x28
 c003400:	428d      	cmp	r5, r1
 c003402:	d1ed      	bne.n	c0033e0 <kann_feed_bind+0x80>
 c003404:	bd70      	pop	{r4, r5, r6, pc}
 c003406:	4608      	mov	r0, r1
 c003408:	1f22      	subs	r2, r4, #4
 c00340a:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 c00340e:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c003412:	684c      	ldr	r4, [r1, #4]
 c003414:	b934      	cbnz	r4, c003424 <kann_feed_bind+0xc4>
 c003416:	784c      	ldrb	r4, [r1, #1]
 c003418:	07a4      	lsls	r4, r4, #30
 c00341a:	d103      	bne.n	c003424 <kann_feed_bind+0xc4>
 c00341c:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 c003420:	3001      	adds	r0, #1
 c003422:	628c      	str	r4, [r1, #40]	@ 0x28
 c003424:	42aa      	cmp	r2, r5
 c003426:	d1f2      	bne.n	c00340e <kann_feed_bind+0xae>
 c003428:	bd70      	pop	{r4, r5, r6, pc}
 c00342a:	4618      	mov	r0, r3
 c00342c:	4770      	bx	lr
 c00342e:	2000      	movs	r0, #0
 c003430:	bd70      	pop	{r4, r5, r6, pc}
 c003432:	bf00      	nop

0c003434 <kann_feed_dim>:
 c003434:	b5f0      	push	{r4, r5, r6, r7, lr}
 c003436:	6804      	ldr	r4, [r0, #0]
 c003438:	2c00      	cmp	r4, #0
 c00343a:	dd42      	ble.n	c0034c2 <kann_feed_dim+0x8e>
 c00343c:	4603      	mov	r3, r0
 c00343e:	2000      	movs	r0, #0
 c003440:	4605      	mov	r5, r0
 c003442:	685b      	ldr	r3, [r3, #4]
 c003444:	3b04      	subs	r3, #4
 c003446:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
 c00344a:	f853 4f04 	ldr.w	r4, [r3, #4]!
 c00344e:	6866      	ldr	r6, [r4, #4]
 c003450:	b966      	cbnz	r6, c00346c <kann_feed_dim+0x38>
 c003452:	f894 e001 	ldrb.w	lr, [r4, #1]
 c003456:	f01e 0f03 	tst.w	lr, #3
 c00345a:	d107      	bne.n	c00346c <kann_feed_dim+0x38>
 c00345c:	b111      	cbz	r1, c003464 <kann_feed_dim+0x30>
 c00345e:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 c003460:	4231      	tst	r1, r6
 c003462:	d003      	beq.n	c00346c <kann_feed_dim+0x38>
 c003464:	b16a      	cbz	r2, c003482 <kann_feed_dim+0x4e>
 c003466:	6a26      	ldr	r6, [r4, #32]
 c003468:	4296      	cmp	r6, r2
 c00346a:	d00a      	beq.n	c003482 <kann_feed_dim+0x4e>
 c00346c:	459c      	cmp	ip, r3
 c00346e:	d1ec      	bne.n	c00344a <kann_feed_dim+0x16>
 c003470:	2d01      	cmp	r5, #1
 c003472:	d005      	beq.n	c003480 <kann_feed_dim+0x4c>
 c003474:	2d00      	cmp	r5, #0
 c003476:	bf14      	ite	ne
 c003478:	f06f 0001 	mvnne.w	r0, #1
 c00347c:	f04f 30ff 	moveq.w	r0, #4294967295
 c003480:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c003482:	f894 e000 	ldrb.w	lr, [r4]
 c003486:	3501      	adds	r5, #1
 c003488:	f1be 0f01 	cmp.w	lr, #1
 c00348c:	d805      	bhi.n	c00349a <kann_feed_dim+0x66>
 c00348e:	bf14      	ite	ne
 c003490:	2001      	movne	r0, #1
 c003492:	6920      	ldreq	r0, [r4, #16]
 c003494:	459c      	cmp	ip, r3
 c003496:	d1d8      	bne.n	c00344a <kann_feed_dim+0x16>
 c003498:	e7ea      	b.n	c003470 <kann_feed_dim+0x3c>
 c00349a:	f1be 0f02 	cmp.w	lr, #2
 c00349e:	e9d4 6004 	ldrd	r6, r0, [r4, #16]
 c0034a2:	fb06 f000 	mul.w	r0, r6, r0
 c0034a6:	d007      	beq.n	c0034b8 <kann_feed_dim+0x84>
 c0034a8:	69a7      	ldr	r7, [r4, #24]
 c0034aa:	f1be 0f03 	cmp.w	lr, #3
 c0034ae:	fb07 f000 	mul.w	r0, r7, r0
 c0034b2:	bf1c      	itt	ne
 c0034b4:	69e4      	ldrne	r4, [r4, #28]
 c0034b6:	4360      	mulne	r0, r4
 c0034b8:	459c      	cmp	ip, r3
 c0034ba:	fb90 f0f6 	sdiv	r0, r0, r6
 c0034be:	d1c4      	bne.n	c00344a <kann_feed_dim+0x16>
 c0034c0:	e7d6      	b.n	c003470 <kann_feed_dim+0x3c>
 c0034c2:	f04f 30ff 	mov.w	r0, #4294967295
 c0034c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0c0034c8 <kann_rnn_start>:
 c0034c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c0034ca:	4607      	mov	r7, r0
 c0034cc:	e9d0 0100 	ldrd	r0, r1, [r0]
 c0034d0:	2201      	movs	r2, #1
 c0034d2:	f007 ffcd 	bl	c00b470 <kad_sync_dim>
 c0034d6:	683a      	ldr	r2, [r7, #0]
 c0034d8:	2a00      	cmp	r2, #0
 c0034da:	dd44      	ble.n	c003566 <kann_rnn_start+0x9e>
 c0034dc:	2600      	movs	r6, #0
 c0034de:	e020      	b.n	c003522 <kann_rnn_start+0x5a>
 c0034e0:	2b00      	cmp	r3, #0
 c0034e2:	d041      	beq.n	c003568 <kann_rnn_start+0xa0>
 c0034e4:	2b01      	cmp	r3, #1
 c0034e6:	6922      	ldr	r2, [r4, #16]
 c0034e8:	d00b      	beq.n	c003502 <kann_rnn_start+0x3a>
 c0034ea:	6960      	ldr	r0, [r4, #20]
 c0034ec:	2b02      	cmp	r3, #2
 c0034ee:	fb00 f202 	mul.w	r2, r0, r2
 c0034f2:	d006      	beq.n	c003502 <kann_rnn_start+0x3a>
 c0034f4:	69a0      	ldr	r0, [r4, #24]
 c0034f6:	2b03      	cmp	r3, #3
 c0034f8:	fb00 f202 	mul.w	r2, r0, r2
 c0034fc:	bf1c      	itt	ne
 c0034fe:	69e3      	ldrne	r3, [r4, #28]
 c003500:	435a      	mulne	r2, r3
 c003502:	0092      	lsls	r2, r2, #2
 c003504:	4660      	mov	r0, ip
 c003506:	f00c f962 	bl	c00f7ce <memcpy>
 c00350a:	686b      	ldr	r3, [r5, #4]
 c00350c:	2b00      	cmp	r3, #0
 c00350e:	dd02      	ble.n	c003516 <kann_rnn_start+0x4e>
 c003510:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 c003512:	f00b fdbb 	bl	c00f08c <free>
 c003516:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 c003518:	683a      	ldr	r2, [r7, #0]
 c00351a:	62ab      	str	r3, [r5, #40]	@ 0x28
 c00351c:	3601      	adds	r6, #1
 c00351e:	4296      	cmp	r6, r2
 c003520:	da21      	bge.n	c003566 <kann_rnn_start+0x9e>
 c003522:	687b      	ldr	r3, [r7, #4]
 c003524:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
 c003528:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
 c00352a:	2d00      	cmp	r5, #0
 c00352c:	d0f6      	beq.n	c00351c <kann_rnn_start+0x54>
 c00352e:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
 c003530:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 c003534:	7823      	ldrb	r3, [r4, #0]
 c003536:	2900      	cmp	r1, #0
 c003538:	d1d2      	bne.n	c0034e0 <kann_rnn_start+0x18>
 c00353a:	b1bb      	cbz	r3, c00356c <kann_rnn_start+0xa4>
 c00353c:	2b01      	cmp	r3, #1
 c00353e:	6922      	ldr	r2, [r4, #16]
 c003540:	d00b      	beq.n	c00355a <kann_rnn_start+0x92>
 c003542:	6961      	ldr	r1, [r4, #20]
 c003544:	2b02      	cmp	r3, #2
 c003546:	fb01 f202 	mul.w	r2, r1, r2
 c00354a:	d006      	beq.n	c00355a <kann_rnn_start+0x92>
 c00354c:	69a1      	ldr	r1, [r4, #24]
 c00354e:	2b03      	cmp	r3, #3
 c003550:	fb01 f202 	mul.w	r2, r1, r2
 c003554:	bf1c      	itt	ne
 c003556:	69e3      	ldrne	r3, [r4, #28]
 c003558:	435a      	mulne	r2, r3
 c00355a:	0092      	lsls	r2, r2, #2
 c00355c:	2100      	movs	r1, #0
 c00355e:	4660      	mov	r0, ip
 c003560:	f00c f866 	bl	c00f630 <memset>
 c003564:	e7d1      	b.n	c00350a <kann_rnn_start+0x42>
 c003566:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c003568:	2204      	movs	r2, #4
 c00356a:	e7cb      	b.n	c003504 <kann_rnn_start+0x3c>
 c00356c:	2204      	movs	r2, #4
 c00356e:	e7f5      	b.n	c00355c <kann_rnn_start+0x94>

0c003570 <kann_rnn_end>:
 c003570:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c003574:	e9d0 6500 	ldrd	r6, r5, [r0]
 c003578:	e9d0 8c02 	ldrd	r8, ip, [r0, #8]
 c00357c:	2e00      	cmp	r6, #0
 c00357e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 c003582:	dd6d      	ble.n	c003660 <kann_rnn_end+0xf0>
 c003584:	2400      	movs	r4, #0
 c003586:	3d04      	subs	r5, #4
 c003588:	462a      	mov	r2, r5
 c00358a:	4620      	mov	r0, r4
 c00358c:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 c003590:	e003      	b.n	c00359a <kann_rnn_end+0x2a>
 c003592:	0789      	lsls	r1, r1, #30
 c003594:	d466      	bmi.n	c003664 <kann_rnn_end+0xf4>
 c003596:	4296      	cmp	r6, r2
 c003598:	d028      	beq.n	c0035ec <kann_rnn_end+0x7c>
 c00359a:	f852 3f04 	ldr.w	r3, [r2, #4]!
 c00359e:	6859      	ldr	r1, [r3, #4]
 c0035a0:	2900      	cmp	r1, #0
 c0035a2:	d1f8      	bne.n	c003596 <kann_rnn_end+0x26>
 c0035a4:	7859      	ldrb	r1, [r3, #1]
 c0035a6:	07cf      	lsls	r7, r1, #31
 c0035a8:	d5f3      	bpl.n	c003592 <kann_rnn_end+0x22>
 c0035aa:	eb08 0180 	add.w	r1, r8, r0, lsl #2
 c0035ae:	f893 9000 	ldrb.w	r9, [r3]
 c0035b2:	6299      	str	r1, [r3, #40]	@ 0x28
 c0035b4:	eb0c 0180 	add.w	r1, ip, r0, lsl #2
 c0035b8:	62d9      	str	r1, [r3, #44]	@ 0x2c
 c0035ba:	f1b9 0f00 	cmp.w	r9, #0
 c0035be:	d07b      	beq.n	c0036b8 <kann_rnn_end+0x148>
 c0035c0:	f1b9 0f01 	cmp.w	r9, #1
 c0035c4:	6919      	ldr	r1, [r3, #16]
 c0035c6:	d00e      	beq.n	c0035e6 <kann_rnn_end+0x76>
 c0035c8:	695f      	ldr	r7, [r3, #20]
 c0035ca:	f1b9 0f02 	cmp.w	r9, #2
 c0035ce:	fb07 f101 	mul.w	r1, r7, r1
 c0035d2:	d008      	beq.n	c0035e6 <kann_rnn_end+0x76>
 c0035d4:	699f      	ldr	r7, [r3, #24]
 c0035d6:	f1b9 0f03 	cmp.w	r9, #3
 c0035da:	fb07 f101 	mul.w	r1, r7, r1
 c0035de:	d002      	beq.n	c0035e6 <kann_rnn_end+0x76>
 c0035e0:	69db      	ldr	r3, [r3, #28]
 c0035e2:	fb03 f101 	mul.w	r1, r3, r1
 c0035e6:	4408      	add	r0, r1
 c0035e8:	4296      	cmp	r6, r2
 c0035ea:	d1d6      	bne.n	c00359a <kann_rnn_end+0x2a>
 c0035ec:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ c0036cc <kann_rnn_end+0x15c>
 c0035f0:	e001      	b.n	c0035f6 <kann_rnn_end+0x86>
 c0035f2:	42b5      	cmp	r5, r6
 c0035f4:	d034      	beq.n	c003660 <kann_rnn_end+0xf0>
 c0035f6:	f855 3f04 	ldr.w	r3, [r5, #4]!
 c0035fa:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 c0035fc:	2c00      	cmp	r4, #0
 c0035fe:	d0f8      	beq.n	c0035f2 <kann_rnn_end+0x82>
 c003600:	6863      	ldr	r3, [r4, #4]
 c003602:	2b00      	cmp	r3, #0
 c003604:	ddf5      	ble.n	c0035f2 <kann_rnn_end+0x82>
 c003606:	f894 8000 	ldrb.w	r8, [r4]
 c00360a:	f1b8 0f00 	cmp.w	r8, #0
 c00360e:	d04c      	beq.n	c0036aa <kann_rnn_end+0x13a>
 c003610:	f1b8 0f01 	cmp.w	r8, #1
 c003614:	6927      	ldr	r7, [r4, #16]
 c003616:	d042      	beq.n	c00369e <kann_rnn_end+0x12e>
 c003618:	6963      	ldr	r3, [r4, #20]
 c00361a:	f1b8 0f02 	cmp.w	r8, #2
 c00361e:	fb03 f707 	mul.w	r7, r3, r7
 c003622:	d03c      	beq.n	c00369e <kann_rnn_end+0x12e>
 c003624:	69a0      	ldr	r0, [r4, #24]
 c003626:	f1b8 0f03 	cmp.w	r8, #3
 c00362a:	fb07 f000 	mul.w	r0, r7, r0
 c00362e:	d046      	beq.n	c0036be <kann_rnn_end+0x14e>
 c003630:	69e3      	ldr	r3, [r4, #28]
 c003632:	2104      	movs	r1, #4
 c003634:	fb03 f000 	mul.w	r0, r3, r0
 c003638:	f00b fd04 	bl	c00f044 <calloc>
 c00363c:	69a3      	ldr	r3, [r4, #24]
 c00363e:	f1b8 0f03 	cmp.w	r8, #3
 c003642:	fb03 f707 	mul.w	r7, r3, r7
 c003646:	bf18      	it	ne
 c003648:	69e3      	ldrne	r3, [r4, #28]
 c00364a:	62a0      	str	r0, [r4, #40]	@ 0x28
 c00364c:	bf18      	it	ne
 c00364e:	435f      	mulne	r7, r3
 c003650:	00bf      	lsls	r7, r7, #2
 c003652:	f8d9 3000 	ldr.w	r3, [r9]
 c003656:	42b5      	cmp	r5, r6
 c003658:	443b      	add	r3, r7
 c00365a:	f8c9 3000 	str.w	r3, [r9]
 c00365e:	d1ca      	bne.n	c0035f6 <kann_rnn_end+0x86>
 c003660:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 c003664:	f893 9000 	ldrb.w	r9, [r3]
 c003668:	eb0e 0184 	add.w	r1, lr, r4, lsl #2
 c00366c:	6299      	str	r1, [r3, #40]	@ 0x28
 c00366e:	f1b9 0f00 	cmp.w	r9, #0
 c003672:	d028      	beq.n	c0036c6 <kann_rnn_end+0x156>
 c003674:	f1b9 0f01 	cmp.w	r9, #1
 c003678:	6919      	ldr	r1, [r3, #16]
 c00367a:	d00e      	beq.n	c00369a <kann_rnn_end+0x12a>
 c00367c:	695f      	ldr	r7, [r3, #20]
 c00367e:	f1b9 0f02 	cmp.w	r9, #2
 c003682:	fb07 f101 	mul.w	r1, r7, r1
 c003686:	d008      	beq.n	c00369a <kann_rnn_end+0x12a>
 c003688:	699f      	ldr	r7, [r3, #24]
 c00368a:	f1b9 0f03 	cmp.w	r9, #3
 c00368e:	fb07 f101 	mul.w	r1, r7, r1
 c003692:	d002      	beq.n	c00369a <kann_rnn_end+0x12a>
 c003694:	69db      	ldr	r3, [r3, #28]
 c003696:	fb03 f101 	mul.w	r1, r3, r1
 c00369a:	440c      	add	r4, r1
 c00369c:	e77b      	b.n	c003596 <kann_rnn_end+0x26>
 c00369e:	2104      	movs	r1, #4
 c0036a0:	4638      	mov	r0, r7
 c0036a2:	f00b fccf 	bl	c00f044 <calloc>
 c0036a6:	62a0      	str	r0, [r4, #40]	@ 0x28
 c0036a8:	e7d2      	b.n	c003650 <kann_rnn_end+0xe0>
 c0036aa:	2104      	movs	r1, #4
 c0036ac:	2001      	movs	r0, #1
 c0036ae:	f00b fcc9 	bl	c00f044 <calloc>
 c0036b2:	2704      	movs	r7, #4
 c0036b4:	62a0      	str	r0, [r4, #40]	@ 0x28
 c0036b6:	e7cc      	b.n	c003652 <kann_rnn_end+0xe2>
 c0036b8:	2101      	movs	r1, #1
 c0036ba:	4408      	add	r0, r1
 c0036bc:	e794      	b.n	c0035e8 <kann_rnn_end+0x78>
 c0036be:	2104      	movs	r1, #4
 c0036c0:	f00b fcc0 	bl	c00f044 <calloc>
 c0036c4:	e7ba      	b.n	c00363c <kann_rnn_end+0xcc>
 c0036c6:	2101      	movs	r1, #1
 c0036c8:	440c      	add	r4, r1
 c0036ca:	e764      	b.n	c003596 <kann_rnn_end+0x26>
 c0036cc:	30000254 	.word	0x30000254

0c0036d0 <kann_cost>:
 c0036d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c0036d4:	4605      	mov	r5, r0
 c0036d6:	6800      	ldr	r0, [r0, #0]
 c0036d8:	ed2d 8b02 	vpush	{d8}
 c0036dc:	2800      	cmp	r0, #0
 c0036de:	dd1c      	ble.n	c00371a <kann_cost+0x4a>
 c0036e0:	460b      	mov	r3, r1
 c0036e2:	4616      	mov	r6, r2
 c0036e4:	6869      	ldr	r1, [r5, #4]
 c0036e6:	b1f3      	cbz	r3, c003726 <kann_cost+0x56>
 c0036e8:	f04f 0800 	mov.w	r8, #0
 c0036ec:	f04f 37ff 	mov.w	r7, #4294967295
 c0036f0:	46c4      	mov	ip, r8
 c0036f2:	f1a1 0e04 	sub.w	lr, r1, #4
 c0036f6:	f85e 4f04 	ldr.w	r4, [lr, #4]!
 c0036fa:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 c0036fc:	0712      	lsls	r2, r2, #28
 c0036fe:	d505      	bpl.n	c00370c <kann_cost+0x3c>
 c003700:	6a22      	ldr	r2, [r4, #32]
 c003702:	4293      	cmp	r3, r2
 c003704:	bf04      	itt	eq
 c003706:	4667      	moveq	r7, ip
 c003708:	f108 0801 	addeq.w	r8, r8, #1
 c00370c:	f10c 0c01 	add.w	ip, ip, #1
 c003710:	4560      	cmp	r0, ip
 c003712:	d1f0      	bne.n	c0036f6 <kann_cost+0x26>
 c003714:	f1b8 0f01 	cmp.w	r8, #1
 c003718:	d019      	beq.n	c00374e <kann_cost+0x7e>
 c00371a:	21be      	movs	r1, #190	@ 0xbe
 c00371c:	4b18      	ldr	r3, [pc, #96]	@ (c003780 <kann_cost+0xb0>)
 c00371e:	4a19      	ldr	r2, [pc, #100]	@ (c003784 <kann_cost+0xb4>)
 c003720:	4819      	ldr	r0, [pc, #100]	@ (c003788 <kann_cost+0xb8>)
 c003722:	f00b fc71 	bl	c00f008 <__assert_func>
 c003726:	4698      	mov	r8, r3
 c003728:	f04f 37ff 	mov.w	r7, #4294967295
 c00372c:	1f0c      	subs	r4, r1, #4
 c00372e:	f854 2f04 	ldr.w	r2, [r4, #4]!
 c003732:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 c003734:	0712      	lsls	r2, r2, #28
 c003736:	bf48      	it	mi
 c003738:	461f      	movmi	r7, r3
 c00373a:	f103 0301 	add.w	r3, r3, #1
 c00373e:	bf48      	it	mi
 c003740:	f108 0801 	addmi.w	r8, r8, #1
 c003744:	4298      	cmp	r0, r3
 c003746:	d1f2      	bne.n	c00372e <kann_cost+0x5e>
 c003748:	f1b8 0f01 	cmp.w	r8, #1
 c00374c:	d1e5      	bne.n	c00371a <kann_cost+0x4a>
 c00374e:	2f00      	cmp	r7, #0
 c003750:	dbe3      	blt.n	c00371a <kann_cost+0x4a>
 c003752:	463a      	mov	r2, r7
 c003754:	f008 f8a2 	bl	c00b89c <kad_eval_at>
 c003758:	ed90 8a00 	vldr	s16, [r0]
 c00375c:	b92e      	cbnz	r6, c00376a <kann_cost+0x9a>
 c00375e:	eeb0 0a48 	vmov.f32	s0, s16
 c003762:	ecbd 8b02 	vpop	{d8}
 c003766:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00376a:	463a      	mov	r2, r7
 c00376c:	e9d5 0100 	ldrd	r0, r1, [r5]
 c003770:	f008 f8e2 	bl	c00b938 <kad_grad>
 c003774:	eeb0 0a48 	vmov.f32	s0, s16
 c003778:	ecbd 8b02 	vpop	{d8}
 c00377c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c003780:	0c011ac8 	.word	0x0c011ac8
 c003784:	0c011aec 	.word	0x0c011aec
 c003788:	0c011ad4 	.word	0x0c011ad4

0c00378c <kann_new_leaf_array>:
 c00378c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c003790:	ed2d 8b02 	vpush	{d8}
 c003794:	4607      	mov	r7, r0
 c003796:	468a      	mov	sl, r1
 c003798:	4616      	mov	r6, r2
 c00379a:	eeb0 8a40 	vmov.f32	s16, s0
 c00379e:	4699      	mov	r9, r3
 c0037a0:	b083      	sub	sp, #12
 c0037a2:	b188      	cbz	r0, c0037c8 <kann_new_leaf_array+0x3c>
 c0037a4:	b181      	cbz	r1, c0037c8 <kann_new_leaf_array+0x3c>
 c0037a6:	f8d0 b000 	ldr.w	fp, [r0]
 c0037aa:	f1bb 0f00 	cmp.w	fp, #0
 c0037ae:	db0d      	blt.n	c0037cc <kann_new_leaf_array+0x40>
 c0037b0:	f851 402b 	ldr.w	r4, [r1, fp, lsl #2]
 c0037b4:	b154      	cbz	r4, c0037cc <kann_new_leaf_array+0x40>
 c0037b6:	f10b 0301 	add.w	r3, fp, #1
 c0037ba:	6003      	str	r3, [r0, #0]
 c0037bc:	4620      	mov	r0, r4
 c0037be:	b003      	add	sp, #12
 c0037c0:	ecbd 8b02 	vpop	{d8}
 c0037c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0037c8:	f04f 3bff 	mov.w	fp, #4294967295
 c0037cc:	2140      	movs	r1, #64	@ 0x40
 c0037ce:	2001      	movs	r0, #1
 c0037d0:	f00b fc38 	bl	c00f044 <calloc>
 c0037d4:	4d43      	ldr	r5, [pc, #268]	@ (c0038e4 <kann_new_leaf_array+0x158>)
 c0037d6:	fa5f f889 	uxtb.w	r8, r9
 c0037da:	682b      	ldr	r3, [r5, #0]
 c0037dc:	4604      	mov	r4, r0
 c0037de:	3340      	adds	r3, #64	@ 0x40
 c0037e0:	7046      	strb	r6, [r0, #1]
 c0037e2:	f880 8000 	strb.w	r8, [r0]
 c0037e6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 c0037e8:	ea4f 0289 	mov.w	r2, r9, lsl #2
 c0037ec:	3010      	adds	r0, #16
 c0037ee:	602b      	str	r3, [r5, #0]
 c0037f0:	f00b ffed 	bl	c00f7ce <memcpy>
 c0037f4:	f1b8 0f00 	cmp.w	r8, #0
 c0037f8:	d069      	beq.n	c0038ce <kann_new_leaf_array+0x142>
 c0037fa:	f019 0ffe 	tst.w	r9, #254	@ 0xfe
 c0037fe:	6926      	ldr	r6, [r4, #16]
 c003800:	d00d      	beq.n	c00381e <kann_new_leaf_array+0x92>
 c003802:	6963      	ldr	r3, [r4, #20]
 c003804:	f1b8 0f02 	cmp.w	r8, #2
 c003808:	fb03 f606 	mul.w	r6, r3, r6
 c00380c:	dd07      	ble.n	c00381e <kann_new_leaf_array+0x92>
 c00380e:	69a3      	ldr	r3, [r4, #24]
 c003810:	f019 0ffc 	tst.w	r9, #252	@ 0xfc
 c003814:	fb03 f606 	mul.w	r6, r3, r6
 c003818:	bf1c      	itt	ne
 c00381a:	69e3      	ldrne	r3, [r4, #28]
 c00381c:	435e      	mulne	r6, r3
 c00381e:	2104      	movs	r1, #4
 c003820:	4630      	mov	r0, r6
 c003822:	f00b fc0f 	bl	c00f044 <calloc>
 c003826:	682b      	ldr	r3, [r5, #0]
 c003828:	f1b8 0f01 	cmp.w	r8, #1
 c00382c:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 c003830:	602b      	str	r3, [r5, #0]
 c003832:	62a0      	str	r0, [r4, #40]	@ 0x28
 c003834:	ea4f 0386 	mov.w	r3, r6, lsl #2
 c003838:	d814      	bhi.n	c003864 <kann_new_leaf_array+0xd8>
 c00383a:	2e00      	cmp	r6, #0
 c00383c:	dd04      	ble.n	c003848 <kann_new_leaf_array+0xbc>
 c00383e:	4403      	add	r3, r0
 c003840:	eca0 8a01 	vstmia	r0!, {s16}
 c003844:	4283      	cmp	r3, r0
 c003846:	d1fb      	bne.n	c003840 <kann_new_leaf_array+0xb4>
 c003848:	f1bb 0f00 	cmp.w	fp, #0
 c00384c:	db04      	blt.n	c003858 <kann_new_leaf_array+0xcc>
 c00384e:	683b      	ldr	r3, [r7, #0]
 c003850:	f84a 402b 	str.w	r4, [sl, fp, lsl #2]
 c003854:	3301      	adds	r3, #1
 c003856:	603b      	str	r3, [r7, #0]
 c003858:	4620      	mov	r0, r4
 c00385a:	b003      	add	sp, #12
 c00385c:	ecbd 8b02 	vpop	{d8}
 c003860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c003864:	4630      	mov	r0, r6
 c003866:	f7fc fe67 	bl	c000538 <__aeabi_i2d>
 c00386a:	4680      	mov	r8, r0
 c00386c:	6920      	ldr	r0, [r4, #16]
 c00386e:	4689      	mov	r9, r1
 c003870:	f7fc fe62 	bl	c000538 <__aeabi_i2d>
 c003874:	4602      	mov	r2, r0
 c003876:	460b      	mov	r3, r1
 c003878:	4640      	mov	r0, r8
 c00387a:	4649      	mov	r1, r9
 c00387c:	f7fc fff0 	bl	c000860 <__aeabi_ddiv>
 c003880:	ec41 0b10 	vmov	d0, r0, r1
 c003884:	f00c fdba 	bl	c0103fc <sqrt>
 c003888:	2000      	movs	r0, #0
 c00388a:	ec53 2b10 	vmov	r2, r3, d0
 c00388e:	4916      	ldr	r1, [pc, #88]	@ (c0038e8 <kann_new_leaf_array+0x15c>)
 c003890:	f7fc ffe6 	bl	c000860 <__aeabi_ddiv>
 c003894:	2e00      	cmp	r6, #0
 c003896:	ddd7      	ble.n	c003848 <kann_new_leaf_array+0xbc>
 c003898:	f8cd a004 	str.w	sl, [sp, #4]
 c00389c:	2500      	movs	r5, #0
 c00389e:	4681      	mov	r9, r0
 c0038a0:	468a      	mov	sl, r1
 c0038a2:	2000      	movs	r0, #0
 c0038a4:	f008 fd8a 	bl	c00c3bc <kad_drand_normal>
 c0038a8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 c0038aa:	ec51 0b10 	vmov	r0, r1, d0
 c0038ae:	eb03 0885 	add.w	r8, r3, r5, lsl #2
 c0038b2:	464a      	mov	r2, r9
 c0038b4:	4653      	mov	r3, sl
 c0038b6:	f7fc fea9 	bl	c00060c <__aeabi_dmul>
 c0038ba:	f7fd f97f 	bl	c000bbc <__aeabi_d2f>
 c0038be:	3501      	adds	r5, #1
 c0038c0:	42b5      	cmp	r5, r6
 c0038c2:	f8c8 0000 	str.w	r0, [r8]
 c0038c6:	d1ec      	bne.n	c0038a2 <kann_new_leaf_array+0x116>
 c0038c8:	f8dd a004 	ldr.w	sl, [sp, #4]
 c0038cc:	e7bc      	b.n	c003848 <kann_new_leaf_array+0xbc>
 c0038ce:	2104      	movs	r1, #4
 c0038d0:	2001      	movs	r0, #1
 c0038d2:	f00b fbb7 	bl	c00f044 <calloc>
 c0038d6:	682b      	ldr	r3, [r5, #0]
 c0038d8:	62a0      	str	r0, [r4, #40]	@ 0x28
 c0038da:	3304      	adds	r3, #4
 c0038dc:	602b      	str	r3, [r5, #0]
 c0038de:	2304      	movs	r3, #4
 c0038e0:	e7ad      	b.n	c00383e <kann_new_leaf_array+0xb2>
 c0038e2:	bf00      	nop
 c0038e4:	30000254 	.word	0x30000254
 c0038e8:	3ff00000 	.word	0x3ff00000

0c0038ec <kann_new_leaf.constprop.0>:
 c0038ec:	b40c      	push	{r2, r3}
 c0038ee:	b530      	push	{r4, r5, lr}
 c0038f0:	ed2d 8b02 	vpush	{d8}
 c0038f4:	b089      	sub	sp, #36	@ 0x24
 c0038f6:	aa0e      	add	r2, sp, #56	@ 0x38
 c0038f8:	f852 4b04 	ldr.w	r4, [r2], #4
 c0038fc:	ee08 1a10 	vmov	s16, r1
 c003900:	2c00      	cmp	r4, #0
 c003902:	9203      	str	r2, [sp, #12]
 c003904:	ad04      	add	r5, sp, #16
 c003906:	dd04      	ble.n	c003912 <kann_new_leaf.constprop.0+0x26>
 c003908:	4611      	mov	r1, r2
 c00390a:	4628      	mov	r0, r5
 c00390c:	00a2      	lsls	r2, r4, #2
 c00390e:	f00b ff5e 	bl	c00f7ce <memcpy>
 c003912:	2100      	movs	r1, #0
 c003914:	4623      	mov	r3, r4
 c003916:	eeb0 0a48 	vmov.f32	s0, s16
 c00391a:	2201      	movs	r2, #1
 c00391c:	4608      	mov	r0, r1
 c00391e:	9500      	str	r5, [sp, #0]
 c003920:	f7ff ff34 	bl	c00378c <kann_new_leaf_array>
 c003924:	b009      	add	sp, #36	@ 0x24
 c003926:	ecbd 8b02 	vpop	{d8}
 c00392a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 c00392e:	b002      	add	sp, #8
 c003930:	4770      	bx	lr
 c003932:	bf00      	nop

0c003934 <kann_new_leaf2.constprop.0>:
 c003934:	b5f0      	push	{r4, r5, r6, r7, lr}
 c003936:	ed2d 8b02 	vpush	{d8}
 c00393a:	b089      	sub	sp, #36	@ 0x24
 c00393c:	aa10      	add	r2, sp, #64	@ 0x40
 c00393e:	f852 6b04 	ldr.w	r6, [r2], #4
 c003942:	4604      	mov	r4, r0
 c003944:	2e00      	cmp	r6, #0
 c003946:	460d      	mov	r5, r1
 c003948:	ee08 3a10 	vmov	s16, r3
 c00394c:	9203      	str	r2, [sp, #12]
 c00394e:	af04      	add	r7, sp, #16
 c003950:	dd04      	ble.n	c00395c <kann_new_leaf2.constprop.0+0x28>
 c003952:	4611      	mov	r1, r2
 c003954:	4638      	mov	r0, r7
 c003956:	00b2      	lsls	r2, r6, #2
 c003958:	f00b ff39 	bl	c00f7ce <memcpy>
 c00395c:	4633      	mov	r3, r6
 c00395e:	eeb0 0a48 	vmov.f32	s0, s16
 c003962:	2201      	movs	r2, #1
 c003964:	4629      	mov	r1, r5
 c003966:	4620      	mov	r0, r4
 c003968:	9700      	str	r7, [sp, #0]
 c00396a:	f7ff ff0f 	bl	c00378c <kann_new_leaf_array>
 c00396e:	b009      	add	sp, #36	@ 0x24
 c003970:	ecbd 8b02 	vpop	{d8}
 c003974:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c003976:	bf00      	nop

0c003978 <kann_layer_layernorm2>:
 c003978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00397c:	7813      	ldrb	r3, [r2, #0]
 c00397e:	4614      	mov	r4, r2
 c003980:	2b01      	cmp	r3, #1
 c003982:	4607      	mov	r7, r0
 c003984:	4688      	mov	r8, r1
 c003986:	b082      	sub	sp, #8
 c003988:	d930      	bls.n	c0039ec <kann_layer_layernorm2+0x74>
 c00398a:	e9d2 2504 	ldrd	r2, r5, [r2, #16]
 c00398e:	2b02      	cmp	r3, #2
 c003990:	fb02 f505 	mul.w	r5, r2, r5
 c003994:	d006      	beq.n	c0039a4 <kann_layer_layernorm2+0x2c>
 c003996:	69a1      	ldr	r1, [r4, #24]
 c003998:	2b03      	cmp	r3, #3
 c00399a:	fb01 f505 	mul.w	r5, r1, r5
 c00399e:	bf1c      	itt	ne
 c0039a0:	69e3      	ldrne	r3, [r4, #28]
 c0039a2:	435d      	mulne	r5, r3
 c0039a4:	fb95 f5f2 	sdiv	r5, r5, r2
 c0039a8:	2601      	movs	r6, #1
 c0039aa:	4641      	mov	r1, r8
 c0039ac:	4632      	mov	r2, r6
 c0039ae:	9501      	str	r5, [sp, #4]
 c0039b0:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 c0039b4:	4638      	mov	r0, r7
 c0039b6:	9600      	str	r6, [sp, #0]
 c0039b8:	f7ff ffbc 	bl	c003934 <kann_new_leaf2.constprop.0>
 c0039bc:	4684      	mov	ip, r0
 c0039be:	4641      	mov	r1, r8
 c0039c0:	4632      	mov	r2, r6
 c0039c2:	9501      	str	r5, [sp, #4]
 c0039c4:	4638      	mov	r0, r7
 c0039c6:	2300      	movs	r3, #0
 c0039c8:	9600      	str	r6, [sp, #0]
 c0039ca:	4665      	mov	r5, ip
 c0039cc:	f7ff ffb2 	bl	c003934 <kann_new_leaf2.constprop.0>
 c0039d0:	4603      	mov	r3, r0
 c0039d2:	4620      	mov	r0, r4
 c0039d4:	461c      	mov	r4, r3
 c0039d6:	f007 fca5 	bl	c00b324 <kad_stdnorm>
 c0039da:	4629      	mov	r1, r5
 c0039dc:	f007 fad2 	bl	c00af84 <kad_mul>
 c0039e0:	4621      	mov	r1, r4
 c0039e2:	b002      	add	sp, #8
 c0039e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 c0039e8:	f007 ba7a 	b.w	c00aee0 <kad_add>
 c0039ec:	b10b      	cbz	r3, c0039f2 <kann_layer_layernorm2+0x7a>
 c0039ee:	6925      	ldr	r5, [r4, #16]
 c0039f0:	e7da      	b.n	c0039a8 <kann_layer_layernorm2+0x30>
 c0039f2:	2501      	movs	r5, #1
 c0039f4:	e7d8      	b.n	c0039a8 <kann_layer_layernorm2+0x30>
 c0039f6:	bf00      	nop

0c0039f8 <kann_cmul_norm>:
 c0039f8:	b508      	push	{r3, lr}
 c0039fa:	f007 fb11 	bl	c00b020 <kad_cmul>
 c0039fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 c003a02:	2100      	movs	r1, #0
 c003a04:	4602      	mov	r2, r0
 c003a06:	4608      	mov	r0, r1
 c003a08:	f7ff bfb6 	b.w	c003978 <kann_layer_layernorm2>

0c003a0c <kann_new_scalar>:
 c003a0c:	ee10 1a10 	vmov	r1, s0
 c003a10:	2200      	movs	r2, #0
 c003a12:	f7ff bb67 	b.w	c0030e4 <kann_new_leaf.constprop.1>
 c003a16:	bf00      	nop

0c003a18 <kann_layer_input>:
 c003a18:	4602      	mov	r2, r0
 c003a1a:	2101      	movs	r1, #1
 c003a1c:	b508      	push	{r3, lr}
 c003a1e:	2002      	movs	r0, #2
 c003a20:	f007 fa06 	bl	c00ae30 <kad_feed>
 c003a24:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 c003a26:	f042 0201 	orr.w	r2, r2, #1
 c003a2a:	6242      	str	r2, [r0, #36]	@ 0x24
 c003a2c:	bd08      	pop	{r3, pc}
 c003a2e:	bf00      	nop

0c003a30 <kann_layer_dense>:
 c003a30:	b530      	push	{r4, r5, lr}
 c003a32:	7802      	ldrb	r2, [r0, #0]
 c003a34:	4604      	mov	r4, r0
 c003a36:	2a01      	cmp	r2, #1
 c003a38:	460d      	mov	r5, r1
 c003a3a:	b085      	sub	sp, #20
 c003a3c:	d92d      	bls.n	c003a9a <kann_layer_dense+0x6a>
 c003a3e:	e9d0 1304 	ldrd	r1, r3, [r0, #16]
 c003a42:	2a02      	cmp	r2, #2
 c003a44:	fb01 f303 	mul.w	r3, r1, r3
 c003a48:	d006      	beq.n	c003a58 <kann_layer_dense+0x28>
 c003a4a:	6980      	ldr	r0, [r0, #24]
 c003a4c:	2a03      	cmp	r2, #3
 c003a4e:	fb00 f303 	mul.w	r3, r0, r3
 c003a52:	bf1c      	itt	ne
 c003a54:	69e2      	ldrne	r2, [r4, #28]
 c003a56:	4353      	mulne	r3, r2
 c003a58:	fb93 f3f1 	sdiv	r3, r3, r1
 c003a5c:	2100      	movs	r1, #0
 c003a5e:	2002      	movs	r0, #2
 c003a60:	9302      	str	r3, [sp, #8]
 c003a62:	e9cd 0500 	strd	r0, r5, [sp]
 c003a66:	2201      	movs	r2, #1
 c003a68:	2300      	movs	r3, #0
 c003a6a:	4608      	mov	r0, r1
 c003a6c:	f7ff ff62 	bl	c003934 <kann_new_leaf2.constprop.0>
 c003a70:	2201      	movs	r2, #1
 c003a72:	2100      	movs	r1, #0
 c003a74:	9501      	str	r5, [sp, #4]
 c003a76:	9200      	str	r2, [sp, #0]
 c003a78:	4605      	mov	r5, r0
 c003a7a:	2300      	movs	r3, #0
 c003a7c:	4608      	mov	r0, r1
 c003a7e:	f7ff ff59 	bl	c003934 <kann_new_leaf2.constprop.0>
 c003a82:	4603      	mov	r3, r0
 c003a84:	4620      	mov	r0, r4
 c003a86:	461c      	mov	r4, r3
 c003a88:	4629      	mov	r1, r5
 c003a8a:	f007 fac9 	bl	c00b020 <kad_cmul>
 c003a8e:	4621      	mov	r1, r4
 c003a90:	b005      	add	sp, #20
 c003a92:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 c003a96:	f007 ba23 	b.w	c00aee0 <kad_add>
 c003a9a:	b10a      	cbz	r2, c003aa0 <kann_layer_dense+0x70>
 c003a9c:	6923      	ldr	r3, [r4, #16]
 c003a9e:	e7dd      	b.n	c003a5c <kann_layer_dense+0x2c>
 c003aa0:	2301      	movs	r3, #1
 c003aa2:	e7db      	b.n	c003a5c <kann_layer_dense+0x2c>

0c003aa4 <kann_layer_lstm>:
 c003aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c003aa8:	4f9d      	ldr	r7, [pc, #628]	@ (c003d20 <kann_layer_lstm+0x27c>)
 c003aaa:	7803      	ldrb	r3, [r0, #0]
 c003aac:	460c      	mov	r4, r1
 c003aae:	f012 0102 	ands.w	r1, r2, #2
 c003ab2:	4e9c      	ldr	r6, [pc, #624]	@ (c003d24 <kann_layer_lstm+0x280>)
 c003ab4:	b087      	sub	sp, #28
 c003ab6:	bf08      	it	eq
 c003ab8:	463e      	moveq	r6, r7
 c003aba:	2b01      	cmp	r3, #1
 c003abc:	4605      	mov	r5, r0
 c003abe:	9103      	str	r1, [sp, #12]
 c003ac0:	f240 8123 	bls.w	c003d0a <kann_layer_lstm+0x266>
 c003ac4:	e9d0 0704 	ldrd	r0, r7, [r0, #16]
 c003ac8:	2b02      	cmp	r3, #2
 c003aca:	fb00 f707 	mul.w	r7, r0, r7
 c003ace:	d006      	beq.n	c003ade <kann_layer_lstm+0x3a>
 c003ad0:	69a9      	ldr	r1, [r5, #24]
 c003ad2:	2b03      	cmp	r3, #3
 c003ad4:	fb01 f707 	mul.w	r7, r1, r7
 c003ad8:	bf1c      	itt	ne
 c003ada:	69eb      	ldrne	r3, [r5, #28]
 c003adc:	435f      	mulne	r7, r3
 c003ade:	fb97 f7f0 	sdiv	r7, r7, r0
 c003ae2:	f012 0901 	ands.w	r9, r2, #1
 c003ae6:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 c003aea:	f000 80f1 	beq.w	c003cd0 <kann_layer_lstm+0x22c>
 c003aee:	2100      	movs	r1, #0
 c003af0:	2301      	movs	r3, #1
 c003af2:	2202      	movs	r2, #2
 c003af4:	4608      	mov	r0, r1
 c003af6:	9400      	str	r4, [sp, #0]
 c003af8:	f007 f9c6 	bl	c00ae88 <kad_var>
 c003afc:	2104      	movs	r1, #4
 c003afe:	4680      	mov	r8, r0
 c003b00:	4620      	mov	r0, r4
 c003b02:	f00b fa9f 	bl	c00f044 <calloc>
 c003b06:	2100      	movs	r1, #0
 c003b08:	f8df a21c 	ldr.w	sl, [pc, #540]	@ c003d28 <kann_layer_lstm+0x284>
 c003b0c:	f8c8 0028 	str.w	r0, [r8, #40]	@ 0x28
 c003b10:	9400      	str	r4, [sp, #0]
 c003b12:	f8da 3000 	ldr.w	r3, [sl]
 c003b16:	2202      	movs	r2, #2
 c003b18:	445b      	add	r3, fp
 c003b1a:	f8ca 3000 	str.w	r3, [sl]
 c003b1e:	4608      	mov	r0, r1
 c003b20:	2301      	movs	r3, #1
 c003b22:	f007 f9b1 	bl	c00ae88 <kad_var>
 c003b26:	4681      	mov	r9, r0
 c003b28:	2104      	movs	r1, #4
 c003b2a:	4620      	mov	r0, r4
 c003b2c:	f00b fa8a 	bl	c00f044 <calloc>
 c003b30:	f8c9 0028 	str.w	r0, [r9, #40]	@ 0x28
 c003b34:	9700      	str	r7, [sp, #0]
 c003b36:	f8da 3000 	ldr.w	r3, [sl]
 c003b3a:	2202      	movs	r2, #2
 c003b3c:	445b      	add	r3, fp
 c003b3e:	f8ca 3000 	str.w	r3, [sl]
 c003b42:	2100      	movs	r1, #0
 c003b44:	4623      	mov	r3, r4
 c003b46:	2001      	movs	r0, #1
 c003b48:	f7ff fed0 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003b4c:	4623      	mov	r3, r4
 c003b4e:	4682      	mov	sl, r0
 c003b50:	2202      	movs	r2, #2
 c003b52:	2100      	movs	r1, #0
 c003b54:	9400      	str	r4, [sp, #0]
 c003b56:	2001      	movs	r0, #1
 c003b58:	f7ff fec8 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003b5c:	2201      	movs	r2, #1
 c003b5e:	4623      	mov	r3, r4
 c003b60:	4683      	mov	fp, r0
 c003b62:	2100      	movs	r1, #0
 c003b64:	4610      	mov	r0, r2
 c003b66:	f7ff fec1 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003b6a:	4603      	mov	r3, r0
 c003b6c:	4651      	mov	r1, sl
 c003b6e:	4628      	mov	r0, r5
 c003b70:	469a      	mov	sl, r3
 c003b72:	47b0      	blx	r6
 c003b74:	4603      	mov	r3, r0
 c003b76:	4659      	mov	r1, fp
 c003b78:	4640      	mov	r0, r8
 c003b7a:	469b      	mov	fp, r3
 c003b7c:	47b0      	blx	r6
 c003b7e:	4601      	mov	r1, r0
 c003b80:	4658      	mov	r0, fp
 c003b82:	f007 f9ad 	bl	c00aee0 <kad_add>
 c003b86:	4651      	mov	r1, sl
 c003b88:	f007 f9aa 	bl	c00aee0 <kad_add>
 c003b8c:	f007 faec 	bl	c00b168 <kad_sigm>
 c003b90:	4684      	mov	ip, r0
 c003b92:	4623      	mov	r3, r4
 c003b94:	2202      	movs	r2, #2
 c003b96:	2100      	movs	r1, #0
 c003b98:	9700      	str	r7, [sp, #0]
 c003b9a:	2001      	movs	r0, #1
 c003b9c:	f8cd c010 	str.w	ip, [sp, #16]
 c003ba0:	f7ff fea4 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003ba4:	4623      	mov	r3, r4
 c003ba6:	4682      	mov	sl, r0
 c003ba8:	2202      	movs	r2, #2
 c003baa:	2100      	movs	r1, #0
 c003bac:	9400      	str	r4, [sp, #0]
 c003bae:	2001      	movs	r0, #1
 c003bb0:	f7ff fe9c 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003bb4:	2201      	movs	r2, #1
 c003bb6:	4623      	mov	r3, r4
 c003bb8:	4683      	mov	fp, r0
 c003bba:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 c003bbe:	4610      	mov	r0, r2
 c003bc0:	f7ff fe94 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003bc4:	4603      	mov	r3, r0
 c003bc6:	4651      	mov	r1, sl
 c003bc8:	4628      	mov	r0, r5
 c003bca:	469a      	mov	sl, r3
 c003bcc:	47b0      	blx	r6
 c003bce:	4603      	mov	r3, r0
 c003bd0:	4659      	mov	r1, fp
 c003bd2:	4640      	mov	r0, r8
 c003bd4:	469b      	mov	fp, r3
 c003bd6:	47b0      	blx	r6
 c003bd8:	4601      	mov	r1, r0
 c003bda:	4658      	mov	r0, fp
 c003bdc:	f007 f980 	bl	c00aee0 <kad_add>
 c003be0:	4651      	mov	r1, sl
 c003be2:	f007 f97d 	bl	c00aee0 <kad_add>
 c003be6:	f007 fabf 	bl	c00b168 <kad_sigm>
 c003bea:	4684      	mov	ip, r0
 c003bec:	4623      	mov	r3, r4
 c003bee:	2202      	movs	r2, #2
 c003bf0:	2100      	movs	r1, #0
 c003bf2:	9700      	str	r7, [sp, #0]
 c003bf4:	2001      	movs	r0, #1
 c003bf6:	f8cd c014 	str.w	ip, [sp, #20]
 c003bfa:	f7ff fe77 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003bfe:	4623      	mov	r3, r4
 c003c00:	4682      	mov	sl, r0
 c003c02:	2202      	movs	r2, #2
 c003c04:	2100      	movs	r1, #0
 c003c06:	9400      	str	r4, [sp, #0]
 c003c08:	2001      	movs	r0, #1
 c003c0a:	f7ff fe6f 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003c0e:	2201      	movs	r2, #1
 c003c10:	4623      	mov	r3, r4
 c003c12:	4683      	mov	fp, r0
 c003c14:	2100      	movs	r1, #0
 c003c16:	4610      	mov	r0, r2
 c003c18:	f7ff fe68 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003c1c:	4603      	mov	r3, r0
 c003c1e:	4651      	mov	r1, sl
 c003c20:	4628      	mov	r0, r5
 c003c22:	469a      	mov	sl, r3
 c003c24:	47b0      	blx	r6
 c003c26:	4603      	mov	r3, r0
 c003c28:	4659      	mov	r1, fp
 c003c2a:	4640      	mov	r0, r8
 c003c2c:	469b      	mov	fp, r3
 c003c2e:	47b0      	blx	r6
 c003c30:	4601      	mov	r1, r0
 c003c32:	4658      	mov	r0, fp
 c003c34:	f007 f954 	bl	c00aee0 <kad_add>
 c003c38:	4651      	mov	r1, sl
 c003c3a:	f007 f951 	bl	c00aee0 <kad_add>
 c003c3e:	f007 fa93 	bl	c00b168 <kad_sigm>
 c003c42:	4684      	mov	ip, r0
 c003c44:	4623      	mov	r3, r4
 c003c46:	2202      	movs	r2, #2
 c003c48:	2100      	movs	r1, #0
 c003c4a:	9700      	str	r7, [sp, #0]
 c003c4c:	2001      	movs	r0, #1
 c003c4e:	4667      	mov	r7, ip
 c003c50:	f7ff fe4c 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003c54:	4623      	mov	r3, r4
 c003c56:	4682      	mov	sl, r0
 c003c58:	2202      	movs	r2, #2
 c003c5a:	2100      	movs	r1, #0
 c003c5c:	9400      	str	r4, [sp, #0]
 c003c5e:	2001      	movs	r0, #1
 c003c60:	f7ff fe44 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003c64:	2201      	movs	r2, #1
 c003c66:	4623      	mov	r3, r4
 c003c68:	2100      	movs	r1, #0
 c003c6a:	4604      	mov	r4, r0
 c003c6c:	4610      	mov	r0, r2
 c003c6e:	f7ff fe3d 	bl	c0038ec <kann_new_leaf.constprop.0>
 c003c72:	4603      	mov	r3, r0
 c003c74:	4651      	mov	r1, sl
 c003c76:	4628      	mov	r0, r5
 c003c78:	461d      	mov	r5, r3
 c003c7a:	47b0      	blx	r6
 c003c7c:	4603      	mov	r3, r0
 c003c7e:	4621      	mov	r1, r4
 c003c80:	4640      	mov	r0, r8
 c003c82:	461c      	mov	r4, r3
 c003c84:	47b0      	blx	r6
 c003c86:	4601      	mov	r1, r0
 c003c88:	4620      	mov	r0, r4
 c003c8a:	f007 f929 	bl	c00aee0 <kad_add>
 c003c8e:	4629      	mov	r1, r5
 c003c90:	f007 f926 	bl	c00aee0 <kad_add>
 c003c94:	f007 fab2 	bl	c00b1fc <kad_tanh>
 c003c98:	4649      	mov	r1, r9
 c003c9a:	4605      	mov	r5, r0
 c003c9c:	9805      	ldr	r0, [sp, #20]
 c003c9e:	f007 f971 	bl	c00af84 <kad_mul>
 c003ca2:	9904      	ldr	r1, [sp, #16]
 c003ca4:	4604      	mov	r4, r0
 c003ca6:	4628      	mov	r0, r5
 c003ca8:	f007 f96c 	bl	c00af84 <kad_mul>
 c003cac:	4601      	mov	r1, r0
 c003cae:	4620      	mov	r0, r4
 c003cb0:	f007 f916 	bl	c00aee0 <kad_add>
 c003cb4:	9b03      	ldr	r3, [sp, #12]
 c003cb6:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 c003cba:	bb4b      	cbnz	r3, c003d10 <kann_layer_lstm+0x26c>
 c003cbc:	f007 fa9e 	bl	c00b1fc <kad_tanh>
 c003cc0:	4639      	mov	r1, r7
 c003cc2:	f007 f95f 	bl	c00af84 <kad_mul>
 c003cc6:	f8c0 803c 	str.w	r8, [r0, #60]	@ 0x3c
 c003cca:	b007      	add	sp, #28
 c003ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c003cd0:	4623      	mov	r3, r4
 c003cd2:	2201      	movs	r2, #1
 c003cd4:	2102      	movs	r1, #2
 c003cd6:	4648      	mov	r0, r9
 c003cd8:	f007 f87e 	bl	c00add8 <kad_const>
 c003cdc:	2104      	movs	r1, #4
 c003cde:	4680      	mov	r8, r0
 c003ce0:	4620      	mov	r0, r4
 c003ce2:	f00b f9af 	bl	c00f044 <calloc>
 c003ce6:	4603      	mov	r3, r0
 c003ce8:	f8df a03c 	ldr.w	sl, [pc, #60]	@ c003d28 <kann_layer_lstm+0x284>
 c003cec:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
 c003cf0:	f8da 3000 	ldr.w	r3, [sl]
 c003cf4:	4648      	mov	r0, r9
 c003cf6:	445b      	add	r3, fp
 c003cf8:	f8ca 3000 	str.w	r3, [sl]
 c003cfc:	2201      	movs	r2, #1
 c003cfe:	4623      	mov	r3, r4
 c003d00:	2102      	movs	r1, #2
 c003d02:	f007 f869 	bl	c00add8 <kad_const>
 c003d06:	4681      	mov	r9, r0
 c003d08:	e70e      	b.n	c003b28 <kann_layer_lstm+0x84>
 c003d0a:	b13b      	cbz	r3, c003d1c <kann_layer_lstm+0x278>
 c003d0c:	692f      	ldr	r7, [r5, #16]
 c003d0e:	e6e8      	b.n	c003ae2 <kann_layer_lstm+0x3e>
 c003d10:	2100      	movs	r1, #0
 c003d12:	4602      	mov	r2, r0
 c003d14:	4608      	mov	r0, r1
 c003d16:	f7ff fe2f 	bl	c003978 <kann_layer_layernorm2>
 c003d1a:	e7cf      	b.n	c003cbc <kann_layer_lstm+0x218>
 c003d1c:	2701      	movs	r7, #1
 c003d1e:	e6e0      	b.n	c003ae2 <kann_layer_lstm+0x3e>
 c003d20:	0c00b021 	.word	0x0c00b021
 c003d24:	0c0039f9 	.word	0x0c0039f9
 c003d28:	30000254 	.word	0x30000254

0c003d2c <kann_RMSprop>:
 c003d2c:	2800      	cmp	r0, #0
 c003d2e:	dd60      	ble.n	c003df2 <kann_RMSprop+0xc6>
 c003d30:	b530      	push	{r4, r5, lr}
 c003d32:	ed2d 8b04 	vpush	{d8-d9}
 c003d36:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 c003d3a:	b085      	sub	sp, #20
 c003d3c:	ee78 8ae0 	vsub.f32	s17, s17, s1
 c003d40:	b359      	cbz	r1, c003d9a <kann_RMSprop+0x6e>
 c003d42:	ed9f 9a44 	vldr	s18, [pc, #272]	@ c003e54 <kann_RMSprop+0x128>
 c003d46:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 c003d48:	eb01 0580 	add.w	r5, r1, r0, lsl #2
 c003d4c:	ecb2 7a01 	vldmia	r2!, {s14}
 c003d50:	edd4 7a00 	vldr	s15, [r4]
 c003d54:	ee67 6a28 	vmul.f32	s13, s14, s17
 c003d58:	ee67 7aa0 	vmul.f32	s15, s15, s1
 c003d5c:	eee7 7a26 	vfma.f32	s15, s14, s13
 c003d60:	ee37 0a89 	vadd.f32	s0, s15, s18
 c003d64:	eeb5 0a40 	vcmp.f32	s0, #0.0
 c003d68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c003d6c:	ecb1 8a01 	vldmia	r1!, {s16}
 c003d70:	ece4 7a01 	vstmia	r4!, {s15}
 c003d74:	d43e      	bmi.n	c003df4 <kann_RMSprop+0xc8>
 c003d76:	eeb1 6ac0 	vsqrt.f32	s12, s0
 c003d7a:	edd3 7a00 	vldr	s15, [r3]
 c003d7e:	ed12 7a01 	vldr	s14, [r2, #-4]
 c003d82:	eec8 6a06 	vdiv.f32	s13, s16, s12
 c003d86:	eee6 7ac7 	vfms.f32	s15, s13, s14
 c003d8a:	42a9      	cmp	r1, r5
 c003d8c:	ece3 7a01 	vstmia	r3!, {s15}
 c003d90:	d1dc      	bne.n	c003d4c <kann_RMSprop+0x20>
 c003d92:	b005      	add	sp, #20
 c003d94:	ecbd 8b04 	vpop	{d8-d9}
 c003d98:	bd30      	pop	{r4, r5, pc}
 c003d9a:	eeb0 8a40 	vmov.f32	s16, s0
 c003d9e:	ed9f 9a2d 	vldr	s18, [pc, #180]	@ c003e54 <kann_RMSprop+0x128>
 c003da2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 c003da4:	eb02 0480 	add.w	r4, r2, r0, lsl #2
 c003da8:	ecb2 7a01 	vldmia	r2!, {s14}
 c003dac:	edd5 7a00 	vldr	s15, [r5]
 c003db0:	ee67 6a28 	vmul.f32	s13, s14, s17
 c003db4:	ee60 7aa7 	vmul.f32	s15, s1, s15
 c003db8:	eee6 7a87 	vfma.f32	s15, s13, s14
 c003dbc:	ee37 0a89 	vadd.f32	s0, s15, s18
 c003dc0:	eeb5 0a40 	vcmp.f32	s0, #0.0
 c003dc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c003dc8:	ece5 7a01 	vstmia	r5!, {s15}
 c003dcc:	d42b      	bmi.n	c003e26 <kann_RMSprop+0xfa>
 c003dce:	eeb1 6ac0 	vsqrt.f32	s12, s0
 c003dd2:	edd3 7a00 	vldr	s15, [r3]
 c003dd6:	ed52 6a01 	vldr	s13, [r2, #-4]
 c003dda:	ee88 7a06 	vdiv.f32	s14, s16, s12
 c003dde:	eee6 7ac7 	vfms.f32	s15, s13, s14
 c003de2:	42a2      	cmp	r2, r4
 c003de4:	ece3 7a01 	vstmia	r3!, {s15}
 c003de8:	d1de      	bne.n	c003da8 <kann_RMSprop+0x7c>
 c003dea:	b005      	add	sp, #20
 c003dec:	ecbd 8b04 	vpop	{d8-d9}
 c003df0:	bd30      	pop	{r4, r5, pc}
 c003df2:	4770      	bx	lr
 c003df4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 c003df8:	edcd 0a03 	vstr	s1, [sp, #12]
 c003dfc:	9100      	str	r1, [sp, #0]
 c003dfe:	f00c fb8d 	bl	c01051c <sqrtf>
 c003e02:	9b02      	ldr	r3, [sp, #8]
 c003e04:	9a01      	ldr	r2, [sp, #4]
 c003e06:	edd3 7a00 	vldr	s15, [r3]
 c003e0a:	ed12 7a01 	vldr	s14, [r2, #-4]
 c003e0e:	eec8 6a00 	vdiv.f32	s13, s16, s0
 c003e12:	eee6 7ac7 	vfms.f32	s15, s13, s14
 c003e16:	9900      	ldr	r1, [sp, #0]
 c003e18:	ece3 7a01 	vstmia	r3!, {s15}
 c003e1c:	42a9      	cmp	r1, r5
 c003e1e:	eddd 0a03 	vldr	s1, [sp, #12]
 c003e22:	d193      	bne.n	c003d4c <kann_RMSprop+0x20>
 c003e24:	e7b5      	b.n	c003d92 <kann_RMSprop+0x66>
 c003e26:	e9cd 2300 	strd	r2, r3, [sp]
 c003e2a:	edcd 0a02 	vstr	s1, [sp, #8]
 c003e2e:	f00c fb75 	bl	c01051c <sqrtf>
 c003e32:	9b01      	ldr	r3, [sp, #4]
 c003e34:	9a00      	ldr	r2, [sp, #0]
 c003e36:	edd3 7a00 	vldr	s15, [r3]
 c003e3a:	ed12 7a01 	vldr	s14, [r2, #-4]
 c003e3e:	eec8 6a00 	vdiv.f32	s13, s16, s0
 c003e42:	eee6 7ac7 	vfms.f32	s15, s13, s14
 c003e46:	42a2      	cmp	r2, r4
 c003e48:	ece3 7a01 	vstmia	r3!, {s15}
 c003e4c:	eddd 0a02 	vldr	s1, [sp, #8]
 c003e50:	d1aa      	bne.n	c003da8 <kann_RMSprop+0x7c>
 c003e52:	e79e      	b.n	c003d92 <kann_RMSprop+0x66>
 c003e54:	358637bd 	.word	0x358637bd

0c003e58 <kann_apply1>:
 c003e58:	b5f0      	push	{r4, r5, r6, r7, lr}
 c003e5a:	4605      	mov	r5, r0
 c003e5c:	6800      	ldr	r0, [r0, #0]
 c003e5e:	b083      	sub	sp, #12
 c003e60:	2800      	cmp	r0, #0
 c003e62:	9101      	str	r1, [sp, #4]
 c003e64:	dd14      	ble.n	c003e90 <kann_apply1+0x38>
 c003e66:	2200      	movs	r2, #0
 c003e68:	f04f 34ff 	mov.w	r4, #4294967295
 c003e6c:	4613      	mov	r3, r2
 c003e6e:	6869      	ldr	r1, [r5, #4]
 c003e70:	f1a1 0c04 	sub.w	ip, r1, #4
 c003e74:	f85c 6f04 	ldr.w	r6, [ip, #4]!
 c003e78:	6a76      	ldr	r6, [r6, #36]	@ 0x24
 c003e7a:	07b6      	lsls	r6, r6, #30
 c003e7c:	bf48      	it	mi
 c003e7e:	461c      	movmi	r4, r3
 c003e80:	f103 0301 	add.w	r3, r3, #1
 c003e84:	bf48      	it	mi
 c003e86:	3201      	addmi	r2, #1
 c003e88:	4298      	cmp	r0, r3
 c003e8a:	d1f3      	bne.n	c003e74 <kann_apply1+0x1c>
 c003e8c:	2a01      	cmp	r2, #1
 c003e8e:	d002      	beq.n	c003e96 <kann_apply1+0x3e>
 c003e90:	2000      	movs	r0, #0
 c003e92:	b003      	add	sp, #12
 c003e94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c003e96:	2c00      	cmp	r4, #0
 c003e98:	dbfa      	blt.n	c003e90 <kann_apply1+0x38>
 c003e9a:	f007 fae9 	bl	c00b470 <kad_sync_dim>
 c003e9e:	e9d5 0100 	ldrd	r0, r1, [r5]
 c003ea2:	2800      	cmp	r0, #0
 c003ea4:	dd1a      	ble.n	c003edc <kann_apply1+0x84>
 c003ea6:	f04f 0e00 	mov.w	lr, #0
 c003eaa:	1f0b      	subs	r3, r1, #4
 c003eac:	eb03 0680 	add.w	r6, r3, r0, lsl #2
 c003eb0:	f853 2f04 	ldr.w	r2, [r3, #4]!
 c003eb4:	6857      	ldr	r7, [r2, #4]
 c003eb6:	b97f      	cbnz	r7, c003ed8 <kann_apply1+0x80>
 c003eb8:	f892 c001 	ldrb.w	ip, [r2, #1]
 c003ebc:	f01c 0f03 	tst.w	ip, #3
 c003ec0:	d10a      	bne.n	c003ed8 <kann_apply1+0x80>
 c003ec2:	af02      	add	r7, sp, #8
 c003ec4:	eb07 0c8e 	add.w	ip, r7, lr, lsl #2
 c003ec8:	6a57      	ldr	r7, [r2, #36]	@ 0x24
 c003eca:	07ff      	lsls	r7, r7, #31
 c003ecc:	d504      	bpl.n	c003ed8 <kann_apply1+0x80>
 c003ece:	f85c 7c04 	ldr.w	r7, [ip, #-4]
 c003ed2:	f10e 0e01 	add.w	lr, lr, #1
 c003ed6:	6297      	str	r7, [r2, #40]	@ 0x28
 c003ed8:	429e      	cmp	r6, r3
 c003eda:	d1e9      	bne.n	c003eb0 <kann_apply1+0x58>
 c003edc:	4622      	mov	r2, r4
 c003ede:	f007 fcdd 	bl	c00b89c <kad_eval_at>
 c003ee2:	686b      	ldr	r3, [r5, #4]
 c003ee4:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 c003ee8:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 c003eea:	b003      	add	sp, #12
 c003eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c003eee:	bf00      	nop

0c003ef0 <kad_propagate_marks>:
 c003ef0:	2800      	cmp	r0, #0
 c003ef2:	dd2a      	ble.n	c003f4a <kad_propagate_marks+0x5a>
 c003ef4:	b510      	push	{r4, lr}
 c003ef6:	2401      	movs	r4, #1
 c003ef8:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 c003efc:	e00c      	b.n	c003f18 <kad_propagate_marks+0x28>
 c003efe:	785a      	ldrb	r2, [r3, #1]
 c003f00:	0752      	lsls	r2, r2, #29
 c003f02:	d411      	bmi.n	c003f28 <kad_propagate_marks+0x38>
 c003f04:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 c003f06:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 c003f08:	6812      	ldr	r2, [r2, #0]
 c003f0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 c003f0e:	689a      	ldr	r2, [r3, #8]
 c003f10:	b902      	cbnz	r2, c003f14 <kad_propagate_marks+0x24>
 c003f12:	609c      	str	r4, [r3, #8]
 c003f14:	4571      	cmp	r1, lr
 c003f16:	d017      	beq.n	c003f48 <kad_propagate_marks+0x58>
 c003f18:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 c003f1c:	689a      	ldr	r2, [r3, #8]
 c003f1e:	2a00      	cmp	r2, #0
 c003f20:	ddf8      	ble.n	c003f14 <kad_propagate_marks+0x24>
 c003f22:	885a      	ldrh	r2, [r3, #2]
 c003f24:	2a0c      	cmp	r2, #12
 c003f26:	d0ea      	beq.n	c003efe <kad_propagate_marks+0xe>
 c003f28:	685a      	ldr	r2, [r3, #4]
 c003f2a:	2a00      	cmp	r2, #0
 c003f2c:	ddf2      	ble.n	c003f14 <kad_propagate_marks+0x24>
 c003f2e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 c003f30:	3b04      	subs	r3, #4
 c003f32:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
 c003f36:	f853 2f04 	ldr.w	r2, [r3, #4]!
 c003f3a:	6890      	ldr	r0, [r2, #8]
 c003f3c:	b900      	cbnz	r0, c003f40 <kad_propagate_marks+0x50>
 c003f3e:	6094      	str	r4, [r2, #8]
 c003f40:	4563      	cmp	r3, ip
 c003f42:	d1f8      	bne.n	c003f36 <kad_propagate_marks+0x46>
 c003f44:	4571      	cmp	r1, lr
 c003f46:	d1e7      	bne.n	c003f18 <kad_propagate_marks+0x28>
 c003f48:	bd10      	pop	{r4, pc}
 c003f4a:	4770      	bx	lr
 c003f4c:	0000      	movs	r0, r0
	...

0c003f50 <kad_op_mse>:
 c003f50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 c003f54:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c003f56:	4680      	mov	r8, r0
 c003f58:	e9d3 5400 	ldrd	r5, r4, [r3]
 c003f5c:	7823      	ldrb	r3, [r4, #0]
 c003f5e:	b082      	sub	sp, #8
 c003f60:	b393      	cbz	r3, c003fc8 <kad_op_mse+0x78>
 c003f62:	2b01      	cmp	r3, #1
 c003f64:	6926      	ldr	r6, [r4, #16]
 c003f66:	d00c      	beq.n	c003f82 <kad_op_mse+0x32>
 c003f68:	6962      	ldr	r2, [r4, #20]
 c003f6a:	2b02      	cmp	r3, #2
 c003f6c:	fb02 f606 	mul.w	r6, r2, r6
 c003f70:	d007      	beq.n	c003f82 <kad_op_mse+0x32>
 c003f72:	69a2      	ldr	r2, [r4, #24]
 c003f74:	2b03      	cmp	r3, #3
 c003f76:	fb02 f606 	mul.w	r6, r2, r6
 c003f7a:	d002      	beq.n	c003f82 <kad_op_mse+0x32>
 c003f7c:	69e3      	ldr	r3, [r4, #28]
 c003f7e:	fb03 f606 	mul.w	r6, r3, r6
 c003f82:	2904      	cmp	r1, #4
 c003f84:	d007      	beq.n	c003f96 <kad_op_mse+0x46>
 c003f86:	2902      	cmp	r1, #2
 c003f88:	d024      	beq.n	c003fd4 <kad_op_mse+0x84>
 c003f8a:	2903      	cmp	r1, #3
 c003f8c:	d058      	beq.n	c004040 <kad_op_mse+0xf0>
 c003f8e:	2000      	movs	r0, #0
 c003f90:	b002      	add	sp, #8
 c003f92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c003f96:	782a      	ldrb	r2, [r5, #0]
 c003f98:	2a00      	cmp	r2, #0
 c003f9a:	d076      	beq.n	c00408a <kad_op_mse+0x13a>
 c003f9c:	2a01      	cmp	r2, #1
 c003f9e:	692b      	ldr	r3, [r5, #16]
 c003fa0:	d00c      	beq.n	c003fbc <kad_op_mse+0x6c>
 c003fa2:	6969      	ldr	r1, [r5, #20]
 c003fa4:	2a02      	cmp	r2, #2
 c003fa6:	fb01 f303 	mul.w	r3, r1, r3
 c003faa:	d007      	beq.n	c003fbc <kad_op_mse+0x6c>
 c003fac:	69a9      	ldr	r1, [r5, #24]
 c003fae:	2a03      	cmp	r2, #3
 c003fb0:	fb01 f303 	mul.w	r3, r1, r3
 c003fb4:	d002      	beq.n	c003fbc <kad_op_mse+0x6c>
 c003fb6:	69ea      	ldr	r2, [r5, #28]
 c003fb8:	fb02 f303 	mul.w	r3, r2, r3
 c003fbc:	429e      	cmp	r6, r3
 c003fbe:	d16f      	bne.n	c0040a0 <kad_op_mse+0x150>
 c003fc0:	2300      	movs	r3, #0
 c003fc2:	f888 3000 	strb.w	r3, [r8]
 c003fc6:	e7e2      	b.n	c003f8e <kad_op_mse+0x3e>
 c003fc8:	2904      	cmp	r1, #4
 c003fca:	d034      	beq.n	c004036 <kad_op_mse+0xe6>
 c003fcc:	2902      	cmp	r1, #2
 c003fce:	d05e      	beq.n	c00408e <kad_op_mse+0x13e>
 c003fd0:	2601      	movs	r6, #1
 c003fd2:	e7da      	b.n	c003f8a <kad_op_mse+0x3a>
 c003fd4:	4630      	mov	r0, r6
 c003fd6:	f7fc faaf 	bl	c000538 <__aeabi_i2d>
 c003fda:	2e00      	cmp	r6, #0
 c003fdc:	e9cd 0100 	strd	r0, r1, [sp]
 c003fe0:	dd5b      	ble.n	c00409a <kad_op_mse+0x14a>
 c003fe2:	f8d5 a028 	ldr.w	sl, [r5, #40]	@ 0x28
 c003fe6:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 c003fea:	2700      	movs	r7, #0
 c003fec:	2400      	movs	r4, #0
 c003fee:	2500      	movs	r5, #0
 c003ff0:	ecb9 7a01 	vldmia	r9!, {s14}
 c003ff4:	ecfa 7a01 	vldmia	sl!, {s15}
 c003ff8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c003ffc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 c004000:	ee17 0a90 	vmov	r0, s15
 c004004:	f7fc faaa 	bl	c00055c <__aeabi_f2d>
 c004008:	4602      	mov	r2, r0
 c00400a:	460b      	mov	r3, r1
 c00400c:	4620      	mov	r0, r4
 c00400e:	4629      	mov	r1, r5
 c004010:	f7fc f946 	bl	c0002a0 <__adddf3>
 c004014:	3701      	adds	r7, #1
 c004016:	42b7      	cmp	r7, r6
 c004018:	4604      	mov	r4, r0
 c00401a:	460d      	mov	r5, r1
 c00401c:	dbe8      	blt.n	c003ff0 <kad_op_mse+0xa0>
 c00401e:	e9dd 2300 	ldrd	r2, r3, [sp]
 c004022:	4620      	mov	r0, r4
 c004024:	4629      	mov	r1, r5
 c004026:	f7fc fc1b 	bl	c000860 <__aeabi_ddiv>
 c00402a:	f7fc fdc7 	bl	c000bbc <__aeabi_d2f>
 c00402e:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 c004032:	6018      	str	r0, [r3, #0]
 c004034:	e7ab      	b.n	c003f8e <kad_op_mse+0x3e>
 c004036:	782a      	ldrb	r2, [r5, #0]
 c004038:	2a00      	cmp	r2, #0
 c00403a:	d0c1      	beq.n	c003fc0 <kad_op_mse+0x70>
 c00403c:	2601      	movs	r6, #1
 c00403e:	e7ad      	b.n	c003f9c <kad_op_mse+0x4c>
 c004040:	786b      	ldrb	r3, [r5, #1]
 c004042:	07db      	lsls	r3, r3, #31
 c004044:	d5a3      	bpl.n	c003f8e <kad_op_mse+0x3e>
 c004046:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 c00404a:	ee07 6a10 	vmov	s14, r6
 c00404e:	edd3 7a00 	vldr	s15, [r3]
 c004052:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 c004056:	ee77 7aa7 	vadd.f32	s15, s15, s15
 c00405a:	2e00      	cmp	r6, #0
 c00405c:	ee87 6a87 	vdiv.f32	s12, s15, s14
 c004060:	dd95      	ble.n	c003f8e <kad_op_mse+0x3e>
 c004062:	e9d5 130a 	ldrd	r1, r3, [r5, #40]	@ 0x28
 c004066:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 c004068:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 c00406c:	ecb1 7a01 	vldmia	r1!, {s14}
 c004070:	ecf2 6a01 	vldmia	r2!, {s13}
 c004074:	edd3 7a00 	vldr	s15, [r3]
 c004078:	ee37 7a66 	vsub.f32	s14, s14, s13
 c00407c:	eee7 7a06 	vfma.f32	s15, s14, s12
 c004080:	ece3 7a01 	vstmia	r3!, {s15}
 c004084:	42b3      	cmp	r3, r6
 c004086:	d1f1      	bne.n	c00406c <kad_op_mse+0x11c>
 c004088:	e781      	b.n	c003f8e <kad_op_mse+0x3e>
 c00408a:	2301      	movs	r3, #1
 c00408c:	e796      	b.n	c003fbc <kad_op_mse+0x6c>
 c00408e:	ed9f 7b06 	vldr	d7, [pc, #24]	@ c0040a8 <kad_op_mse+0x158>
 c004092:	2601      	movs	r6, #1
 c004094:	ed8d 7b00 	vstr	d7, [sp]
 c004098:	e7a3      	b.n	c003fe2 <kad_op_mse+0x92>
 c00409a:	2400      	movs	r4, #0
 c00409c:	2500      	movs	r5, #0
 c00409e:	e7be      	b.n	c00401e <kad_op_mse+0xce>
 c0040a0:	f04f 30ff 	mov.w	r0, #4294967295
 c0040a4:	e774      	b.n	c003f90 <kad_op_mse+0x40>
 c0040a6:	bf00      	nop
 c0040a8:	00000000 	.word	0x00000000
 c0040ac:	3ff00000 	.word	0x3ff00000

0c0040b0 <conv2d_add_3to1>:
 c0040b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c0040b4:	f8d0 c000 	ldr.w	ip, [r0]
 c0040b8:	b089      	sub	sp, #36	@ 0x24
 c0040ba:	f1bc 0f00 	cmp.w	ip, #0
 c0040be:	9103      	str	r1, [sp, #12]
 c0040c0:	dd5d      	ble.n	c00417e <conv2d_add_3to1+0xce>
 c0040c2:	6843      	ldr	r3, [r0, #4]
 c0040c4:	4604      	mov	r4, r0
 c0040c6:	2b00      	cmp	r3, #0
 c0040c8:	9302      	str	r3, [sp, #8]
 c0040ca:	dd58      	ble.n	c00417e <conv2d_add_3to1+0xce>
 c0040cc:	4693      	mov	fp, r2
 c0040ce:	2200      	movs	r2, #0
 c0040d0:	4625      	mov	r5, r4
 c0040d2:	4611      	mov	r1, r2
 c0040d4:	4667      	mov	r7, ip
 c0040d6:	4614      	mov	r4, r2
 c0040d8:	6886      	ldr	r6, [r0, #8]
 c0040da:	0098      	lsls	r0, r3, #2
 c0040dc:	2e00      	cmp	r6, #0
 c0040de:	fb06 f301 	mul.w	r3, r6, r1
 c0040e2:	dd47      	ble.n	c004174 <conv2d_add_3to1+0xc4>
 c0040e4:	f04f 0900 	mov.w	r9, #0
 c0040e8:	f8d5 c00c 	ldr.w	ip, [r5, #12]
 c0040ec:	9a02      	ldr	r2, [sp, #8]
 c0040ee:	fb0c f303 	mul.w	r3, ip, r3
 c0040f2:	fb02 fe0c 	mul.w	lr, r2, ip
 c0040f6:	fb06 fa04 	mul.w	sl, r6, r4
 c0040fa:	fb02 f303 	mul.w	r3, r2, r3
 c0040fe:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 c004102:	ea4f 088c 	mov.w	r8, ip, lsl #2
 c004106:	f1bc 0f00 	cmp.w	ip, #0
 c00410a:	dd3b      	ble.n	c004184 <conv2d_add_3to1+0xd4>
 c00410c:	e9cd 1704 	strd	r1, r7, [sp, #16]
 c004110:	e9cd 4506 	strd	r4, r5, [sp, #24]
 c004114:	2500      	movs	r5, #0
 c004116:	fb0a f20c 	mul.w	r2, sl, ip
 c00411a:	9903      	ldr	r1, [sp, #12]
 c00411c:	eb03 0409 	add.w	r4, r3, r9
 c004120:	eb02 070c 	add.w	r7, r2, ip
 c004124:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 c004128:	f8cd 9004 	str.w	r9, [sp, #4]
 c00412c:	eb0b 0187 	add.w	r1, fp, r7, lsl #2
 c004130:	46a1      	mov	r9, r4
 c004132:	eb0b 0282 	add.w	r2, fp, r2, lsl #2
 c004136:	edd9 7a00 	vldr	s15, [r9]
 c00413a:	ed92 7a00 	vldr	s14, [r2]
 c00413e:	ee77 7a87 	vadd.f32	s15, s15, s14
 c004142:	ece2 7a01 	vstmia	r2!, {s15}
 c004146:	4291      	cmp	r1, r2
 c004148:	4481      	add	r9, r0
 c00414a:	d1f4      	bne.n	c004136 <conv2d_add_3to1+0x86>
 c00414c:	3501      	adds	r5, #1
 c00414e:	42b5      	cmp	r5, r6
 c004150:	463a      	mov	r2, r7
 c004152:	4474      	add	r4, lr
 c004154:	4441      	add	r1, r8
 c004156:	d001      	beq.n	c00415c <conv2d_add_3to1+0xac>
 c004158:	4467      	add	r7, ip
 c00415a:	e7e9      	b.n	c004130 <conv2d_add_3to1+0x80>
 c00415c:	f8dd 9004 	ldr.w	r9, [sp, #4]
 c004160:	9a02      	ldr	r2, [sp, #8]
 c004162:	f109 0901 	add.w	r9, r9, #1
 c004166:	454a      	cmp	r2, r9
 c004168:	44b2      	add	sl, r6
 c00416a:	d1d3      	bne.n	c004114 <conv2d_add_3to1+0x64>
 c00416c:	e9dd 1704 	ldrd	r1, r7, [sp, #16]
 c004170:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 c004174:	9b02      	ldr	r3, [sp, #8]
 c004176:	3101      	adds	r1, #1
 c004178:	42b9      	cmp	r1, r7
 c00417a:	441c      	add	r4, r3
 c00417c:	d1ae      	bne.n	c0040dc <conv2d_add_3to1+0x2c>
 c00417e:	b009      	add	sp, #36	@ 0x24
 c004180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c004184:	9a02      	ldr	r2, [sp, #8]
 c004186:	f109 0901 	add.w	r9, r9, #1
 c00418a:	4591      	cmp	r9, r2
 c00418c:	44b2      	add	sl, r6
 c00418e:	d1ba      	bne.n	c004106 <conv2d_add_3to1+0x56>
 c004190:	e7f0      	b.n	c004174 <conv2d_add_3to1+0xc4>
 c004192:	bf00      	nop

0c004194 <kad_op_max2d>:
 c004194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c004198:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 c00419a:	2904      	cmp	r1, #4
 c00419c:	4683      	mov	fp, r0
 c00419e:	f8d0 c030 	ldr.w	ip, [r0, #48]	@ 0x30
 c0041a2:	f8d2 8000 	ldr.w	r8, [r2]
 c0041a6:	b08f      	sub	sp, #60	@ 0x3c
 c0041a8:	d028      	beq.n	c0041fc <kad_op_max2d+0x68>
 c0041aa:	2901      	cmp	r1, #1
 c0041ac:	d008      	beq.n	c0041c0 <kad_op_max2d+0x2c>
 c0041ae:	2902      	cmp	r1, #2
 c0041b0:	f000 8081 	beq.w	c0042b6 <kad_op_max2d+0x122>
 c0041b4:	2903      	cmp	r1, #3
 c0041b6:	d050      	beq.n	c00425a <kad_op_max2d+0xc6>
 c0041b8:	2000      	movs	r0, #0
 c0041ba:	b00f      	add	sp, #60	@ 0x3c
 c0041bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0041c0:	7802      	ldrb	r2, [r0, #0]
 c0041c2:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 c0041c4:	2a00      	cmp	r2, #0
 c0041c6:	f000 814a 	beq.w	c00445e <kad_op_max2d+0x2ca>
 c0041ca:	2a01      	cmp	r2, #1
 c0041cc:	f8db 1010 	ldr.w	r1, [fp, #16]
 c0041d0:	d00e      	beq.n	c0041f0 <kad_op_max2d+0x5c>
 c0041d2:	f8db 3014 	ldr.w	r3, [fp, #20]
 c0041d6:	2a02      	cmp	r2, #2
 c0041d8:	fb03 f101 	mul.w	r1, r3, r1
 c0041dc:	d008      	beq.n	c0041f0 <kad_op_max2d+0x5c>
 c0041de:	f8db 3018 	ldr.w	r3, [fp, #24]
 c0041e2:	2a03      	cmp	r2, #3
 c0041e4:	fb03 f101 	mul.w	r1, r3, r1
 c0041e8:	bf1c      	itt	ne
 c0041ea:	f8db 201c 	ldrne.w	r2, [fp, #28]
 c0041ee:	4351      	mulne	r1, r2
 c0041f0:	0089      	lsls	r1, r1, #2
 c0041f2:	f00b f801 	bl	c00f1f8 <realloc>
 c0041f6:	f8cb 0034 	str.w	r0, [fp, #52]	@ 0x34
 c0041fa:	e7dd      	b.n	c0041b8 <kad_op_max2d+0x24>
 c0041fc:	f898 3000 	ldrb.w	r3, [r8]
 c004200:	2b04      	cmp	r3, #4
 c004202:	f040 812e 	bne.w	c004462 <kad_op_max2d+0x2ce>
 c004206:	7003      	strb	r3, [r0, #0]
 c004208:	e9d8 2304 	ldrd	r2, r3, [r8, #16]
 c00420c:	e9c0 2304 	strd	r2, r3, [r0, #16]
 c004210:	f8dc 1000 	ldr.w	r1, [ip]
 c004214:	f8d8 2018 	ldr.w	r2, [r8, #24]
 c004218:	f8d8 301c 	ldr.w	r3, [r8, #28]
 c00421c:	1a52      	subs	r2, r2, r1
 c00421e:	f8dc 1008 	ldr.w	r1, [ip, #8]
 c004222:	f8dc 001c 	ldr.w	r0, [ip, #28]
 c004226:	440a      	add	r2, r1
 c004228:	f8dc 100c 	ldr.w	r1, [ip, #12]
 c00422c:	440a      	add	r2, r1
 c00422e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 c004232:	fb92 f2f1 	sdiv	r2, r2, r1
 c004236:	f8dc 1010 	ldr.w	r1, [ip, #16]
 c00423a:	3201      	adds	r2, #1
 c00423c:	1a5b      	subs	r3, r3, r1
 c00423e:	f8dc 1018 	ldr.w	r1, [ip, #24]
 c004242:	440b      	add	r3, r1
 c004244:	f8dc 1014 	ldr.w	r1, [ip, #20]
 c004248:	4403      	add	r3, r0
 c00424a:	fb93 f3f1 	sdiv	r3, r3, r1
 c00424e:	3301      	adds	r3, #1
 c004250:	f8cb 2018 	str.w	r2, [fp, #24]
 c004254:	f8cb 301c 	str.w	r3, [fp, #28]
 c004258:	e7ae      	b.n	c0041b8 <kad_op_max2d+0x24>
 c00425a:	7801      	ldrb	r1, [r0, #0]
 c00425c:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 c00425e:	2900      	cmp	r1, #0
 c004260:	f000 80fb 	beq.w	c00445a <kad_op_max2d+0x2c6>
 c004264:	2901      	cmp	r1, #1
 c004266:	6903      	ldr	r3, [r0, #16]
 c004268:	d00d      	beq.n	c004286 <kad_op_max2d+0xf2>
 c00426a:	6940      	ldr	r0, [r0, #20]
 c00426c:	2902      	cmp	r1, #2
 c00426e:	fb00 f303 	mul.w	r3, r0, r3
 c004272:	d008      	beq.n	c004286 <kad_op_max2d+0xf2>
 c004274:	f8db 0018 	ldr.w	r0, [fp, #24]
 c004278:	2903      	cmp	r1, #3
 c00427a:	fb00 f303 	mul.w	r3, r0, r3
 c00427e:	bf1c      	itt	ne
 c004280:	f8db 101c 	ldrne.w	r1, [fp, #28]
 c004284:	434b      	mulne	r3, r1
 c004286:	2b00      	cmp	r3, #0
 c004288:	dd96      	ble.n	c0041b8 <kad_op_max2d+0x24>
 c00428a:	2000      	movs	r0, #0
 c00428c:	f8d8 502c 	ldr.w	r5, [r8, #44]	@ 0x2c
 c004290:	f8db 402c 	ldr.w	r4, [fp, #44]	@ 0x2c
 c004294:	3a04      	subs	r2, #4
 c004296:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00429a:	ecb4 7a01 	vldmia	r4!, {s14}
 c00429e:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 c0042a2:	edd1 7a00 	vldr	s15, [r1]
 c0042a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 c0042aa:	3001      	adds	r0, #1
 c0042ac:	4283      	cmp	r3, r0
 c0042ae:	edc1 7a00 	vstr	s15, [r1]
 c0042b2:	dcf0      	bgt.n	c004296 <kad_op_max2d+0x102>
 c0042b4:	e780      	b.n	c0041b8 <kad_op_max2d+0x24>
 c0042b6:	7801      	ldrb	r1, [r0, #0]
 c0042b8:	6b47      	ldr	r7, [r0, #52]	@ 0x34
 c0042ba:	2900      	cmp	r1, #0
 c0042bc:	f000 80e1 	beq.w	c004482 <kad_op_max2d+0x2ee>
 c0042c0:	2901      	cmp	r1, #1
 c0042c2:	6903      	ldr	r3, [r0, #16]
 c0042c4:	f000 80d9 	beq.w	c00447a <kad_op_max2d+0x2e6>
 c0042c8:	6944      	ldr	r4, [r0, #20]
 c0042ca:	2902      	cmp	r1, #2
 c0042cc:	fb04 f203 	mul.w	r2, r4, r3
 c0042d0:	f000 80ca 	beq.w	c004468 <kad_op_max2d+0x2d4>
 c0042d4:	6980      	ldr	r0, [r0, #24]
 c0042d6:	2903      	cmp	r1, #3
 c0042d8:	fb00 f202 	mul.w	r2, r0, r2
 c0042dc:	f000 80c9 	beq.w	c004472 <kad_op_max2d+0x2de>
 c0042e0:	f8db 001c 	ldr.w	r0, [fp, #28]
 c0042e4:	fb00 f202 	mul.w	r2, r0, r2
 c0042e8:	2a00      	cmp	r2, #0
 c0042ea:	dd13      	ble.n	c004314 <kad_op_max2d+0x180>
 c0042ec:	2300      	movs	r3, #0
 c0042ee:	f46f 0400 	mvn.w	r4, #8388608	@ 0x800000
 c0042f2:	f8db 0028 	ldr.w	r0, [fp, #40]	@ 0x28
 c0042f6:	3301      	adds	r3, #1
 c0042f8:	429a      	cmp	r2, r3
 c0042fa:	f840 4b04 	str.w	r4, [r0], #4
 c0042fe:	dcfa      	bgt.n	c0042f6 <kad_op_max2d+0x162>
 c004300:	1e8a      	subs	r2, r1, #2
 c004302:	2a00      	cmp	r2, #0
 c004304:	f340 80b3 	ble.w	c00446e <kad_op_max2d+0x2da>
 c004308:	2a02      	cmp	r2, #2
 c00430a:	f8db 3010 	ldr.w	r3, [fp, #16]
 c00430e:	d103      	bne.n	c004318 <kad_op_max2d+0x184>
 c004310:	f8db 4014 	ldr.w	r4, [fp, #20]
 c004314:	fb04 f303 	mul.w	r3, r4, r3
 c004318:	2b00      	cmp	r3, #0
 c00431a:	f77f af4d 	ble.w	c0041b8 <kad_op_max2d+0x24>
 c00431e:	eb0b 0281 	add.w	r2, fp, r1, lsl #2
 c004322:	e9d2 0a02 	ldrd	r0, sl, [r2, #8]
 c004326:	2800      	cmp	r0, #0
 c004328:	ea4f 0181 	mov.w	r1, r1, lsl #2
 c00432c:	f77f af44 	ble.w	c0041b8 <kad_op_max2d+0x24>
 c004330:	2400      	movs	r4, #0
 c004332:	f8dc 9000 	ldr.w	r9, [ip]
 c004336:	eb08 0201 	add.w	r2, r8, r1
 c00433a:	fb0a fe00 	mul.w	lr, sl, r0
 c00433e:	4619      	mov	r1, r3
 c004340:	9008      	str	r0, [sp, #32]
 c004342:	4623      	mov	r3, r4
 c004344:	4648      	mov	r0, r9
 c004346:	ea4f 068a 	mov.w	r6, sl, lsl #2
 c00434a:	9202      	str	r2, [sp, #8]
 c00434c:	9405      	str	r4, [sp, #20]
 c00434e:	f8cd 8004 	str.w	r8, [sp, #4]
 c004352:	9609      	str	r6, [sp, #36]	@ 0x24
 c004354:	f04f 0900 	mov.w	r9, #0
 c004358:	2800      	cmp	r0, #0
 c00435a:	461c      	mov	r4, r3
 c00435c:	46c8      	mov	r8, r9
 c00435e:	e9cd e70a 	strd	lr, r7, [sp, #40]	@ 0x28
 c004362:	e9cd 130c 	strd	r1, r3, [sp, #48]	@ 0x30
 c004366:	eb07 0683 	add.w	r6, r7, r3, lsl #2
 c00436a:	dd6a      	ble.n	c004442 <kad_op_max2d+0x2ae>
 c00436c:	ea4f 0984 	mov.w	r9, r4, lsl #2
 c004370:	e9cd 9406 	strd	r9, r4, [sp, #24]
 c004374:	2300      	movs	r3, #0
 c004376:	46c1      	mov	r9, r8
 c004378:	e002      	b.n	c004380 <kad_op_max2d+0x1ec>
 c00437a:	3301      	adds	r3, #1
 c00437c:	4283      	cmp	r3, r0
 c00437e:	da55      	bge.n	c00442c <kad_op_max2d+0x298>
 c004380:	f8dc 2004 	ldr.w	r2, [ip, #4]
 c004384:	f8dc 1008 	ldr.w	r1, [ip, #8]
 c004388:	fb02 3209 	mla	r2, r2, r9, r3
 c00438c:	1a52      	subs	r2, r2, r1
 c00438e:	d4f4      	bmi.n	c00437a <kad_op_max2d+0x1e6>
 c004390:	9c02      	ldr	r4, [sp, #8]
 c004392:	68a1      	ldr	r1, [r4, #8]
 c004394:	4291      	cmp	r1, r2
 c004396:	ddf0      	ble.n	c00437a <kad_op_max2d+0x1e6>
 c004398:	9d05      	ldr	r5, [sp, #20]
 c00439a:	f8d4 800c 	ldr.w	r8, [r4, #12]
 c00439e:	fb05 2201 	mla	r2, r5, r1, r2
 c0043a2:	fb08 fe02 	mul.w	lr, r8, r2
 c0043a6:	f8dc 4010 	ldr.w	r4, [ip, #16]
 c0043aa:	eb08 050e 	add.w	r5, r8, lr
 c0043ae:	2c00      	cmp	r4, #0
 c0043b0:	dde3      	ble.n	c00437a <kad_op_max2d+0x1e6>
 c0043b2:	2700      	movs	r7, #0
 c0043b4:	e9cd 9303 	strd	r9, r3, [sp, #12]
 c0043b8:	f8dd 9018 	ldr.w	r9, [sp, #24]
 c0043bc:	f8dc 2018 	ldr.w	r2, [ip, #24]
 c0043c0:	42ba      	cmp	r2, r7
 c0043c2:	bfb3      	iteet	lt
 c0043c4:	1aba      	sublt	r2, r7, r2
 c0043c6:	4673      	movge	r3, lr
 c0043c8:	2200      	movge	r2, #0
 c0043ca:	eb0e 0302 	addlt.w	r3, lr, r2
 c0043ce:	f1ba 0f00 	cmp.w	sl, #0
 c0043d2:	dd21      	ble.n	c004418 <kad_op_max2d+0x284>
 c0043d4:	4590      	cmp	r8, r2
 c0043d6:	dd1f      	ble.n	c004418 <kad_op_max2d+0x284>
 c0043d8:	f8db 1028 	ldr.w	r1, [fp, #40]	@ 0x28
 c0043dc:	9801      	ldr	r0, [sp, #4]
 c0043de:	2200      	movs	r2, #0
 c0043e0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 c0043e2:	4449      	add	r1, r9
 c0043e4:	e001      	b.n	c0043ea <kad_op_max2d+0x256>
 c0043e6:	429d      	cmp	r5, r3
 c0043e8:	dd14      	ble.n	c004414 <kad_op_max2d+0x280>
 c0043ea:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 c0043ee:	edd0 7a00 	vldr	s15, [r0]
 c0043f2:	ecb1 7a01 	vldmia	r1!, {s14}
 c0043f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 c0043fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0043fe:	bf44      	itt	mi
 c004400:	ed41 7a01 	vstrmi	s15, [r1, #-4]
 c004404:	f846 3022 	strmi.w	r3, [r6, r2, lsl #2]
 c004408:	f8dc 0014 	ldr.w	r0, [ip, #20]
 c00440c:	3201      	adds	r2, #1
 c00440e:	4592      	cmp	sl, r2
 c004410:	4403      	add	r3, r0
 c004412:	d1e8      	bne.n	c0043e6 <kad_op_max2d+0x252>
 c004414:	f8dc 4010 	ldr.w	r4, [ip, #16]
 c004418:	3701      	adds	r7, #1
 c00441a:	42bc      	cmp	r4, r7
 c00441c:	dcce      	bgt.n	c0043bc <kad_op_max2d+0x228>
 c00441e:	e9dd 9303 	ldrd	r9, r3, [sp, #12]
 c004422:	f8dc 0000 	ldr.w	r0, [ip]
 c004426:	3301      	adds	r3, #1
 c004428:	4283      	cmp	r3, r0
 c00442a:	dba9      	blt.n	c004380 <kad_op_max2d+0x1ec>
 c00442c:	9b08      	ldr	r3, [sp, #32]
 c00442e:	f109 0801 	add.w	r8, r9, #1
 c004432:	4543      	cmp	r3, r8
 c004434:	9c07      	ldr	r4, [sp, #28]
 c004436:	d004      	beq.n	c004442 <kad_op_max2d+0x2ae>
 c004438:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c00443a:	2800      	cmp	r0, #0
 c00443c:	4454      	add	r4, sl
 c00443e:	441e      	add	r6, r3
 c004440:	dc94      	bgt.n	c00436c <kad_op_max2d+0x1d8>
 c004442:	e9dd 130c 	ldrd	r1, r3, [sp, #48]	@ 0x30
 c004446:	e9dd e70a 	ldrd	lr, r7, [sp, #40]	@ 0x28
 c00444a:	9a05      	ldr	r2, [sp, #20]
 c00444c:	4473      	add	r3, lr
 c00444e:	3201      	adds	r2, #1
 c004450:	428a      	cmp	r2, r1
 c004452:	9205      	str	r2, [sp, #20]
 c004454:	f6ff af7e 	blt.w	c004354 <kad_op_max2d+0x1c0>
 c004458:	e6ae      	b.n	c0041b8 <kad_op_max2d+0x24>
 c00445a:	2301      	movs	r3, #1
 c00445c:	e715      	b.n	c00428a <kad_op_max2d+0xf6>
 c00445e:	2104      	movs	r1, #4
 c004460:	e6c7      	b.n	c0041f2 <kad_op_max2d+0x5e>
 c004462:	f04f 30ff 	mov.w	r0, #4294967295
 c004466:	e6a8      	b.n	c0041ba <kad_op_max2d+0x26>
 c004468:	2a00      	cmp	r2, #0
 c00446a:	f73f af3f 	bgt.w	c0042ec <kad_op_max2d+0x158>
 c00446e:	2301      	movs	r3, #1
 c004470:	e755      	b.n	c00431e <kad_op_max2d+0x18a>
 c004472:	2a00      	cmp	r2, #0
 c004474:	f73f af3a 	bgt.w	c0042ec <kad_op_max2d+0x158>
 c004478:	e74e      	b.n	c004318 <kad_op_max2d+0x184>
 c00447a:	2b00      	cmp	r3, #0
 c00447c:	ddf7      	ble.n	c00446e <kad_op_max2d+0x2da>
 c00447e:	461a      	mov	r2, r3
 c004480:	e734      	b.n	c0042ec <kad_op_max2d+0x158>
 c004482:	2201      	movs	r2, #1
 c004484:	e732      	b.n	c0042ec <kad_op_max2d+0x158>
 c004486:	bf00      	nop

0c004488 <kad_op_max1d>:
 c004488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00448c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c00448e:	2904      	cmp	r1, #4
 c004490:	4605      	mov	r5, r0
 c004492:	f8d3 8000 	ldr.w	r8, [r3]
 c004496:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 c004498:	b087      	sub	sp, #28
 c00449a:	d022      	beq.n	c0044e2 <kad_op_max1d+0x5a>
 c00449c:	2901      	cmp	r1, #1
 c00449e:	d007      	beq.n	c0044b0 <kad_op_max1d+0x28>
 c0044a0:	2902      	cmp	r1, #2
 c0044a2:	d061      	beq.n	c004568 <kad_op_max1d+0xe0>
 c0044a4:	2903      	cmp	r1, #3
 c0044a6:	d034      	beq.n	c004512 <kad_op_max1d+0x8a>
 c0044a8:	2000      	movs	r0, #0
 c0044aa:	b007      	add	sp, #28
 c0044ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0044b0:	782a      	ldrb	r2, [r5, #0]
 c0044b2:	6b68      	ldr	r0, [r5, #52]	@ 0x34
 c0044b4:	2a00      	cmp	r2, #0
 c0044b6:	f000 80ea 	beq.w	c00468e <kad_op_max1d+0x206>
 c0044ba:	2a01      	cmp	r2, #1
 c0044bc:	6929      	ldr	r1, [r5, #16]
 c0044be:	d00b      	beq.n	c0044d8 <kad_op_max1d+0x50>
 c0044c0:	696b      	ldr	r3, [r5, #20]
 c0044c2:	2a02      	cmp	r2, #2
 c0044c4:	fb03 f101 	mul.w	r1, r3, r1
 c0044c8:	d006      	beq.n	c0044d8 <kad_op_max1d+0x50>
 c0044ca:	69ab      	ldr	r3, [r5, #24]
 c0044cc:	2a03      	cmp	r2, #3
 c0044ce:	fb03 f101 	mul.w	r1, r3, r1
 c0044d2:	bf1c      	itt	ne
 c0044d4:	69ea      	ldrne	r2, [r5, #28]
 c0044d6:	4351      	mulne	r1, r2
 c0044d8:	0089      	lsls	r1, r1, #2
 c0044da:	f00a fe8d 	bl	c00f1f8 <realloc>
 c0044de:	6368      	str	r0, [r5, #52]	@ 0x34
 c0044e0:	e7e2      	b.n	c0044a8 <kad_op_max1d+0x20>
 c0044e2:	f898 3000 	ldrb.w	r3, [r8]
 c0044e6:	2b03      	cmp	r3, #3
 c0044e8:	f040 80e8 	bne.w	c0046bc <kad_op_max1d+0x234>
 c0044ec:	702b      	strb	r3, [r5, #0]
 c0044ee:	e9d8 2304 	ldrd	r2, r3, [r8, #16]
 c0044f2:	e9c5 2304 	strd	r2, r3, [r5, #16]
 c0044f6:	6801      	ldr	r1, [r0, #0]
 c0044f8:	f8d8 3018 	ldr.w	r3, [r8, #24]
 c0044fc:	6882      	ldr	r2, [r0, #8]
 c0044fe:	1a5b      	subs	r3, r3, r1
 c004500:	68c1      	ldr	r1, [r0, #12]
 c004502:	4413      	add	r3, r2
 c004504:	6842      	ldr	r2, [r0, #4]
 c004506:	440b      	add	r3, r1
 c004508:	fb93 f3f2 	sdiv	r3, r3, r2
 c00450c:	3301      	adds	r3, #1
 c00450e:	61ab      	str	r3, [r5, #24]
 c004510:	e7ca      	b.n	c0044a8 <kad_op_max1d+0x20>
 c004512:	782b      	ldrb	r3, [r5, #0]
 c004514:	6b69      	ldr	r1, [r5, #52]	@ 0x34
 c004516:	2b00      	cmp	r3, #0
 c004518:	f000 80cc 	beq.w	c0046b4 <kad_op_max1d+0x22c>
 c00451c:	2b01      	cmp	r3, #1
 c00451e:	692c      	ldr	r4, [r5, #16]
 c004520:	d00b      	beq.n	c00453a <kad_op_max1d+0xb2>
 c004522:	696a      	ldr	r2, [r5, #20]
 c004524:	2b02      	cmp	r3, #2
 c004526:	fb02 f404 	mul.w	r4, r2, r4
 c00452a:	d006      	beq.n	c00453a <kad_op_max1d+0xb2>
 c00452c:	69aa      	ldr	r2, [r5, #24]
 c00452e:	2b03      	cmp	r3, #3
 c004530:	fb02 f404 	mul.w	r4, r2, r4
 c004534:	bf1c      	itt	ne
 c004536:	69eb      	ldrne	r3, [r5, #28]
 c004538:	435c      	mulne	r4, r3
 c00453a:	2c00      	cmp	r4, #0
 c00453c:	ddb4      	ble.n	c0044a8 <kad_op_max1d+0x20>
 c00453e:	2200      	movs	r2, #0
 c004540:	f8d8 602c 	ldr.w	r6, [r8, #44]	@ 0x2c
 c004544:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
 c004546:	3904      	subs	r1, #4
 c004548:	f851 3f04 	ldr.w	r3, [r1, #4]!
 c00454c:	ecb0 7a01 	vldmia	r0!, {s14}
 c004550:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 c004554:	edd3 7a00 	vldr	s15, [r3]
 c004558:	ee77 7a87 	vadd.f32	s15, s15, s14
 c00455c:	3201      	adds	r2, #1
 c00455e:	4294      	cmp	r4, r2
 c004560:	edc3 7a00 	vstr	s15, [r3]
 c004564:	dcf0      	bgt.n	c004548 <kad_op_max1d+0xc0>
 c004566:	e79f      	b.n	c0044a8 <kad_op_max1d+0x20>
 c004568:	782f      	ldrb	r7, [r5, #0]
 c00456a:	6b6e      	ldr	r6, [r5, #52]	@ 0x34
 c00456c:	2f00      	cmp	r7, #0
 c00456e:	f000 8096 	beq.w	c00469e <kad_op_max1d+0x216>
 c004572:	2f01      	cmp	r7, #1
 c004574:	692a      	ldr	r2, [r5, #16]
 c004576:	f000 808e 	beq.w	c004696 <kad_op_max1d+0x20e>
 c00457a:	f8d5 c014 	ldr.w	ip, [r5, #20]
 c00457e:	2f02      	cmp	r7, #2
 c004580:	fb0c f302 	mul.w	r3, ip, r2
 c004584:	461c      	mov	r4, r3
 c004586:	f000 8090 	beq.w	c0046aa <kad_op_max1d+0x222>
 c00458a:	f8d5 e018 	ldr.w	lr, [r5, #24]
 c00458e:	2f03      	cmp	r7, #3
 c004590:	fb0e f403 	mul.w	r4, lr, r3
 c004594:	f000 8085 	beq.w	c0046a2 <kad_op_max1d+0x21a>
 c004598:	69ea      	ldr	r2, [r5, #28]
 c00459a:	fb02 f404 	mul.w	r4, r2, r4
 c00459e:	2c00      	cmp	r4, #0
 c0045a0:	f340 808f 	ble.w	c0046c2 <kad_op_max1d+0x23a>
 c0045a4:	2300      	movs	r3, #0
 c0045a6:	f46f 0100 	mvn.w	r1, #8388608	@ 0x800000
 c0045aa:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 c0045ac:	3301      	adds	r3, #1
 c0045ae:	429c      	cmp	r4, r3
 c0045b0:	f842 1b04 	str.w	r1, [r2], #4
 c0045b4:	dcfa      	bgt.n	c0045ac <kad_op_max1d+0x124>
 c0045b6:	1e79      	subs	r1, r7, #1
 c0045b8:	2900      	cmp	r1, #0
 c0045ba:	dd6a      	ble.n	c004692 <kad_op_max1d+0x20a>
 c0045bc:	2901      	cmp	r1, #1
 c0045be:	692a      	ldr	r2, [r5, #16]
 c0045c0:	d00a      	beq.n	c0045d8 <kad_op_max1d+0x150>
 c0045c2:	f8d5 c014 	ldr.w	ip, [r5, #20]
 c0045c6:	2903      	cmp	r1, #3
 c0045c8:	fb0c f202 	mul.w	r2, ip, r2
 c0045cc:	d174      	bne.n	c0046b8 <kad_op_max1d+0x230>
 c0045ce:	f8d5 e018 	ldr.w	lr, [r5, #24]
 c0045d2:	2103      	movs	r1, #3
 c0045d4:	fb0e f202 	mul.w	r2, lr, r2
 c0045d8:	2a00      	cmp	r2, #0
 c0045da:	f77f af65 	ble.w	c0044a8 <kad_op_max1d+0x20>
 c0045de:	2300      	movs	r3, #0
 c0045e0:	3104      	adds	r1, #4
 c0045e2:	f855 c021 	ldr.w	ip, [r5, r1, lsl #2]
 c0045e6:	f858 9021 	ldr.w	r9, [r8, r1, lsl #2]
 c0045ea:	ea4f 048c 	mov.w	r4, ip, lsl #2
 c0045ee:	9404      	str	r4, [sp, #16]
 c0045f0:	ea4f 0449 	mov.w	r4, r9, lsl #1
 c0045f4:	9405      	str	r4, [sp, #20]
 c0045f6:	46ce      	mov	lr, r9
 c0045f8:	461c      	mov	r4, r3
 c0045fa:	6801      	ldr	r1, [r0, #0]
 c0045fc:	f8cd 8000 	str.w	r8, [sp]
 c004600:	9203      	str	r2, [sp, #12]
 c004602:	2900      	cmp	r1, #0
 c004604:	ebae 0809 	sub.w	r8, lr, r9
 c004608:	f77f af4e 	ble.w	c0044a8 <kad_op_max1d+0x20>
 c00460c:	2700      	movs	r7, #0
 c00460e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 c004612:	ea4f 0a84 	mov.w	sl, r4, lsl #2
 c004616:	6882      	ldr	r2, [r0, #8]
 c004618:	42ba      	cmp	r2, r7
 c00461a:	bfb3      	iteet	lt
 c00461c:	1aba      	sublt	r2, r7, r2
 c00461e:	4643      	movge	r3, r8
 c004620:	2200      	movge	r2, #0
 c004622:	eb08 0302 	addlt.w	r3, r8, r2
 c004626:	f1bc 0f00 	cmp.w	ip, #0
 c00462a:	dd1f      	ble.n	c00466c <kad_op_max1d+0x1e4>
 c00462c:	4591      	cmp	r9, r2
 c00462e:	dd1d      	ble.n	c00466c <kad_op_max1d+0x1e4>
 c004630:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
 c004632:	9c00      	ldr	r4, [sp, #0]
 c004634:	2200      	movs	r2, #0
 c004636:	f8d4 b028 	ldr.w	fp, [r4, #40]	@ 0x28
 c00463a:	4451      	add	r1, sl
 c00463c:	e001      	b.n	c004642 <kad_op_max1d+0x1ba>
 c00463e:	4573      	cmp	r3, lr
 c004640:	da13      	bge.n	c00466a <kad_op_max1d+0x1e2>
 c004642:	eb0b 0483 	add.w	r4, fp, r3, lsl #2
 c004646:	edd4 7a00 	vldr	s15, [r4]
 c00464a:	ecb1 7a01 	vldmia	r1!, {s14}
 c00464e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 c004652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c004656:	bf44      	itt	mi
 c004658:	ed41 7a01 	vstrmi	s15, [r1, #-4]
 c00465c:	f846 3022 	strmi.w	r3, [r6, r2, lsl #2]
 c004660:	6844      	ldr	r4, [r0, #4]
 c004662:	3201      	adds	r2, #1
 c004664:	4594      	cmp	ip, r2
 c004666:	4423      	add	r3, r4
 c004668:	d1e9      	bne.n	c00463e <kad_op_max1d+0x1b6>
 c00466a:	6801      	ldr	r1, [r0, #0]
 c00466c:	3701      	adds	r7, #1
 c00466e:	42b9      	cmp	r1, r7
 c004670:	dcd1      	bgt.n	c004616 <kad_op_max1d+0x18e>
 c004672:	e9dd 3401 	ldrd	r3, r4, [sp, #4]
 c004676:	9a03      	ldr	r2, [sp, #12]
 c004678:	3301      	adds	r3, #1
 c00467a:	4293      	cmp	r3, r2
 c00467c:	f6bf af14 	bge.w	c0044a8 <kad_op_max1d+0x20>
 c004680:	9a05      	ldr	r2, [sp, #20]
 c004682:	4464      	add	r4, ip
 c004684:	eb02 0e08 	add.w	lr, r2, r8
 c004688:	9a04      	ldr	r2, [sp, #16]
 c00468a:	4416      	add	r6, r2
 c00468c:	e7b9      	b.n	c004602 <kad_op_max1d+0x17a>
 c00468e:	2104      	movs	r1, #4
 c004690:	e723      	b.n	c0044da <kad_op_max1d+0x52>
 c004692:	2201      	movs	r2, #1
 c004694:	e7a3      	b.n	c0045de <kad_op_max1d+0x156>
 c004696:	2a00      	cmp	r2, #0
 c004698:	dd15      	ble.n	c0046c6 <kad_op_max1d+0x23e>
 c00469a:	4614      	mov	r4, r2
 c00469c:	e782      	b.n	c0045a4 <kad_op_max1d+0x11c>
 c00469e:	2401      	movs	r4, #1
 c0046a0:	e780      	b.n	c0045a4 <kad_op_max1d+0x11c>
 c0046a2:	2c00      	cmp	r4, #0
 c0046a4:	f73f af7e 	bgt.w	c0045a4 <kad_op_max1d+0x11c>
 c0046a8:	e78d      	b.n	c0045c6 <kad_op_max1d+0x13e>
 c0046aa:	2b00      	cmp	r3, #0
 c0046ac:	f73f af7a 	bgt.w	c0045a4 <kad_op_max1d+0x11c>
 c0046b0:	2101      	movs	r1, #1
 c0046b2:	e791      	b.n	c0045d8 <kad_op_max1d+0x150>
 c0046b4:	2401      	movs	r4, #1
 c0046b6:	e742      	b.n	c00453e <kad_op_max1d+0xb6>
 c0046b8:	2102      	movs	r1, #2
 c0046ba:	e78d      	b.n	c0045d8 <kad_op_max1d+0x150>
 c0046bc:	f04f 30ff 	mov.w	r0, #4294967295
 c0046c0:	e6f3      	b.n	c0044aa <kad_op_max1d+0x22>
 c0046c2:	461a      	mov	r2, r3
 c0046c4:	e785      	b.n	c0045d2 <kad_op_max1d+0x14a>
 c0046c6:	463a      	mov	r2, r7
 c0046c8:	2100      	movs	r1, #0
 c0046ca:	e788      	b.n	c0045de <kad_op_max1d+0x156>

0c0046cc <kad_op_avg1d>:
 c0046cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c0046d0:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c0046d2:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 c0046d4:	681b      	ldr	r3, [r3, #0]
 c0046d6:	b093      	sub	sp, #76	@ 0x4c
 c0046d8:	2904      	cmp	r1, #4
 c0046da:	4681      	mov	r9, r0
 c0046dc:	9202      	str	r2, [sp, #8]
 c0046de:	9301      	str	r3, [sp, #4]
 c0046e0:	d028      	beq.n	c004734 <kad_op_avg1d+0x68>
 c0046e2:	2901      	cmp	r1, #1
 c0046e4:	d008      	beq.n	c0046f8 <kad_op_avg1d+0x2c>
 c0046e6:	2902      	cmp	r1, #2
 c0046e8:	f000 8188 	beq.w	c0049fc <kad_op_avg1d+0x330>
 c0046ec:	2903      	cmp	r1, #3
 c0046ee:	d03a      	beq.n	c004766 <kad_op_avg1d+0x9a>
 c0046f0:	2000      	movs	r0, #0
 c0046f2:	b013      	add	sp, #76	@ 0x4c
 c0046f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0046f8:	7802      	ldrb	r2, [r0, #0]
 c0046fa:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 c0046fc:	2a00      	cmp	r2, #0
 c0046fe:	f000 8249 	beq.w	c004b94 <kad_op_avg1d+0x4c8>
 c004702:	2a01      	cmp	r2, #1
 c004704:	f8d9 1010 	ldr.w	r1, [r9, #16]
 c004708:	d00e      	beq.n	c004728 <kad_op_avg1d+0x5c>
 c00470a:	f8d9 3014 	ldr.w	r3, [r9, #20]
 c00470e:	2a02      	cmp	r2, #2
 c004710:	fb03 f101 	mul.w	r1, r3, r1
 c004714:	d008      	beq.n	c004728 <kad_op_avg1d+0x5c>
 c004716:	f8d9 3018 	ldr.w	r3, [r9, #24]
 c00471a:	2a03      	cmp	r2, #3
 c00471c:	fb03 f101 	mul.w	r1, r3, r1
 c004720:	bf1c      	itt	ne
 c004722:	f8d9 201c 	ldrne.w	r2, [r9, #28]
 c004726:	4351      	mulne	r1, r2
 c004728:	0089      	lsls	r1, r1, #2
 c00472a:	f00a fd65 	bl	c00f1f8 <realloc>
 c00472e:	f8c9 0034 	str.w	r0, [r9, #52]	@ 0x34
 c004732:	e7dd      	b.n	c0046f0 <kad_op_avg1d+0x24>
 c004734:	4619      	mov	r1, r3
 c004736:	781b      	ldrb	r3, [r3, #0]
 c004738:	2b03      	cmp	r3, #3
 c00473a:	f040 8246 	bne.w	c004bca <kad_op_avg1d+0x4fe>
 c00473e:	7003      	strb	r3, [r0, #0]
 c004740:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 c004744:	e9c0 2304 	strd	r2, r3, [r0, #16]
 c004748:	9802      	ldr	r0, [sp, #8]
 c00474a:	698b      	ldr	r3, [r1, #24]
 c00474c:	6801      	ldr	r1, [r0, #0]
 c00474e:	6882      	ldr	r2, [r0, #8]
 c004750:	1a5b      	subs	r3, r3, r1
 c004752:	68c1      	ldr	r1, [r0, #12]
 c004754:	4413      	add	r3, r2
 c004756:	6842      	ldr	r2, [r0, #4]
 c004758:	440b      	add	r3, r1
 c00475a:	fb93 f3f2 	sdiv	r3, r3, r2
 c00475e:	3301      	adds	r3, #1
 c004760:	f8c9 3018 	str.w	r3, [r9, #24]
 c004764:	e7c4      	b.n	c0046f0 <kad_op_avg1d+0x24>
 c004766:	7803      	ldrb	r3, [r0, #0]
 c004768:	3b01      	subs	r3, #1
 c00476a:	2b00      	cmp	r3, #0
 c00476c:	f340 822a 	ble.w	c004bc4 <kad_op_avg1d+0x4f8>
 c004770:	2b01      	cmp	r3, #1
 c004772:	f8d0 c010 	ldr.w	ip, [r0, #16]
 c004776:	d00c      	beq.n	c004792 <kad_op_avg1d+0xc6>
 c004778:	6942      	ldr	r2, [r0, #20]
 c00477a:	2b02      	cmp	r3, #2
 c00477c:	fb02 fc0c 	mul.w	ip, r2, ip
 c004780:	d007      	beq.n	c004792 <kad_op_avg1d+0xc6>
 c004782:	6982      	ldr	r2, [r0, #24]
 c004784:	2b03      	cmp	r3, #3
 c004786:	fb02 fc0c 	mul.w	ip, r2, ip
 c00478a:	bf1c      	itt	ne
 c00478c:	69c2      	ldrne	r2, [r0, #28]
 c00478e:	fb02 fc0c 	mulne.w	ip, r2, ip
 c004792:	f1bc 0f00 	cmp.w	ip, #0
 c004796:	ddab      	ble.n	c0046f0 <kad_op_avg1d+0x24>
 c004798:	9902      	ldr	r1, [sp, #8]
 c00479a:	9801      	ldr	r0, [sp, #4]
 c00479c:	680a      	ldr	r2, [r1, #0]
 c00479e:	3304      	adds	r3, #4
 c0047a0:	2a00      	cmp	r2, #0
 c0047a2:	f859 b023 	ldr.w	fp, [r9, r3, lsl #2]
 c0047a6:	f850 8023 	ldr.w	r8, [r0, r3, lsl #2]
 c0047aa:	9210      	str	r2, [sp, #64]	@ 0x40
 c0047ac:	4613      	mov	r3, r2
 c0047ae:	dd9f      	ble.n	c0046f0 <kad_op_avg1d+0x24>
 c0047b0:	f8d1 e008 	ldr.w	lr, [r1, #8]
 c0047b4:	3b01      	subs	r3, #1
 c0047b6:	4573      	cmp	r3, lr
 c0047b8:	bfa8      	it	ge
 c0047ba:	4673      	movge	r3, lr
 c0047bc:	4676      	mov	r6, lr
 c0047be:	2200      	movs	r2, #0
 c0047c0:	930a      	str	r3, [sp, #40]	@ 0x28
 c0047c2:	f8d9 3034 	ldr.w	r3, [r9, #52]	@ 0x34
 c0047c6:	2e00      	cmp	r6, #0
 c0047c8:	f1a3 0304 	sub.w	r3, r3, #4
 c0047cc:	9311      	str	r3, [sp, #68]	@ 0x44
 c0047ce:	f1cb 0300 	rsb	r3, fp, #0
 c0047d2:	9305      	str	r3, [sp, #20]
 c0047d4:	465f      	mov	r7, fp
 c0047d6:	46c2      	mov	sl, r8
 c0047d8:	4613      	mov	r3, r2
 c0047da:	f04f 0e00 	mov.w	lr, #0
 c0047de:	9209      	str	r2, [sp, #36]	@ 0x24
 c0047e0:	f8cd 9010 	str.w	r9, [sp, #16]
 c0047e4:	da60      	bge.n	c0048a8 <kad_op_avg1d+0x1dc>
 c0047e6:	0091      	lsls	r1, r2, #2
 c0047e8:	9103      	str	r1, [sp, #12]
 c0047ea:	9909      	ldr	r1, [sp, #36]	@ 0x24
 c0047ec:	ebae 0406 	sub.w	r4, lr, r6
 c0047f0:	440c      	add	r4, r1
 c0047f2:	eb04 000b 	add.w	r0, r4, fp
 c0047f6:	900c      	str	r0, [sp, #48]	@ 0x30
 c0047f8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 c0047fa:	9803      	ldr	r0, [sp, #12]
 c0047fc:	e9cd 6c07 	strd	r6, ip, [sp, #28]
 c004800:	4405      	add	r5, r0
 c004802:	980c      	ldr	r0, [sp, #48]	@ 0x30
 c004804:	e9cd 270c 	strd	r2, r7, [sp, #48]	@ 0x30
 c004808:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 c00480c:	9506      	str	r5, [sp, #24]
 c00480e:	eba6 0901 	sub.w	r9, r6, r1
 c004812:	930b      	str	r3, [sp, #44]	@ 0x2c
 c004814:	f1bb 0f00 	cmp.w	fp, #0
 c004818:	4623      	mov	r3, r4
 c00481a:	dd27      	ble.n	c00486c <kad_op_avg1d+0x1a0>
 c00481c:	9a05      	ldr	r2, [sp, #20]
 c00481e:	1882      	adds	r2, r0, r2
 c004820:	4590      	cmp	r8, r2
 c004822:	dd23      	ble.n	c00486c <kad_op_avg1d+0x1a0>
 c004824:	9a02      	ldr	r2, [sp, #8]
 c004826:	9904      	ldr	r1, [sp, #16]
 c004828:	6856      	ldr	r6, [r2, #4]
 c00482a:	9a01      	ldr	r2, [sp, #4]
 c00482c:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
 c00482e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 c004830:	9d03      	ldr	r5, [sp, #12]
 c004832:	2e01      	cmp	r6, #1
 c004834:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 c004838:	4429      	add	r1, r5
 c00483a:	f040 8081 	bne.w	c004940 <kad_op_avg1d+0x274>
 c00483e:	9d06      	ldr	r5, [sp, #24]
 c004840:	e001      	b.n	c004846 <kad_op_avg1d+0x17a>
 c004842:	4553      	cmp	r3, sl
 c004844:	da12      	bge.n	c00486c <kad_op_avg1d+0x1a0>
 c004846:	ed95 7a01 	vldr	s14, [r5, #4]
 c00484a:	ecb1 6a01 	vldmia	r1!, {s12}
 c00484e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 c004852:	edd2 6a00 	vldr	s13, [r2]
 c004856:	eec6 7a07 	vdiv.f32	s15, s12, s14
 c00485a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 c00485e:	3301      	adds	r3, #1
 c004860:	4283      	cmp	r3, r0
 c004862:	f105 0504 	add.w	r5, r5, #4
 c004866:	ece2 7a01 	vstmia	r2!, {s15}
 c00486a:	d1ea      	bne.n	c004842 <kad_op_avg1d+0x176>
 c00486c:	3401      	adds	r4, #1
 c00486e:	eb09 0304 	add.w	r3, r9, r4
 c004872:	459e      	cmp	lr, r3
 c004874:	f100 0001 	add.w	r0, r0, #1
 c004878:	dccc      	bgt.n	c004814 <kad_op_avg1d+0x148>
 c00487a:	e9dd 6c07 	ldrd	r6, ip, [sp, #28]
 c00487e:	e9dd 320b 	ldrd	r3, r2, [sp, #44]	@ 0x2c
 c004882:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 c004884:	9909      	ldr	r1, [sp, #36]	@ 0x24
 c004886:	3301      	adds	r3, #1
 c004888:	4441      	add	r1, r8
 c00488a:	9109      	str	r1, [sp, #36]	@ 0x24
 c00488c:	9905      	ldr	r1, [sp, #20]
 c00488e:	459c      	cmp	ip, r3
 c004890:	eba1 0108 	sub.w	r1, r1, r8
 c004894:	9105      	str	r1, [sp, #20]
 c004896:	445a      	add	r2, fp
 c004898:	44c2      	add	sl, r8
 c00489a:	4447      	add	r7, r8
 c00489c:	f77f af28 	ble.w	c0046f0 <kad_op_avg1d+0x24>
 c0048a0:	2e00      	cmp	r6, #0
 c0048a2:	f04f 0e00 	mov.w	lr, #0
 c0048a6:	db9e      	blt.n	c0047e6 <kad_op_avg1d+0x11a>
 c0048a8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 c0048aa:	0089      	lsls	r1, r1, #2
 c0048ac:	910c      	str	r1, [sp, #48]	@ 0x30
 c0048ae:	0091      	lsls	r1, r2, #2
 c0048b0:	9103      	str	r1, [sp, #12]
 c0048b2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 c0048b4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 c0048b8:	910b      	str	r1, [sp, #44]	@ 0x2c
 c0048ba:	f1bb 0f00 	cmp.w	fp, #0
 c0048be:	f340 8097 	ble.w	c0049f0 <kad_op_avg1d+0x324>
 c0048c2:	4634      	mov	r4, r6
 c0048c4:	4618      	mov	r0, r3
 c0048c6:	4611      	mov	r1, r2
 c0048c8:	f1b8 0f00 	cmp.w	r8, #0
 c0048cc:	dd2b      	ble.n	c004926 <kad_op_avg1d+0x25a>
 c0048ce:	46f1      	mov	r9, lr
 c0048d0:	9b02      	ldr	r3, [sp, #8]
 c0048d2:	9a04      	ldr	r2, [sp, #16]
 c0048d4:	685d      	ldr	r5, [r3, #4]
 c0048d6:	9b01      	ldr	r3, [sp, #4]
 c0048d8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 c0048da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 c0048dc:	9108      	str	r1, [sp, #32]
 c0048de:	e9cd 2306 	strd	r2, r3, [sp, #24]
 c0048e2:	2d01      	cmp	r5, #1
 c0048e4:	d149      	bne.n	c00497a <kad_op_avg1d+0x2ae>
 c0048e6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 c0048ea:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 c0048ec:	46ce      	mov	lr, r9
 c0048ee:	442b      	add	r3, r5
 c0048f0:	9d03      	ldr	r5, [sp, #12]
 c0048f2:	9908      	ldr	r1, [sp, #32]
 c0048f4:	442a      	add	r2, r5
 c0048f6:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 c0048f8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 c0048fa:	e001      	b.n	c004900 <kad_op_avg1d+0x234>
 c0048fc:	4555      	cmp	r5, sl
 c0048fe:	da12      	bge.n	c004926 <kad_op_avg1d+0x25a>
 c004900:	ed96 7a01 	vldr	s14, [r6, #4]
 c004904:	ecb2 6a01 	vldmia	r2!, {s12}
 c004908:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 c00490c:	edd3 6a00 	vldr	s13, [r3]
 c004910:	eec6 7a07 	vdiv.f32	s15, s12, s14
 c004914:	ee77 7aa6 	vadd.f32	s15, s15, s13
 c004918:	3501      	adds	r5, #1
 c00491a:	42bd      	cmp	r5, r7
 c00491c:	f106 0604 	add.w	r6, r6, #4
 c004920:	ece3 7a01 	vstmia	r3!, {s15}
 c004924:	d1ea      	bne.n	c0048fc <kad_op_avg1d+0x230>
 c004926:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c004928:	f10e 0e01 	add.w	lr, lr, #1
 c00492c:	4573      	cmp	r3, lr
 c00492e:	dacb      	bge.n	c0048c8 <kad_op_avg1d+0x1fc>
 c004930:	4626      	mov	r6, r4
 c004932:	4603      	mov	r3, r0
 c004934:	460a      	mov	r2, r1
 c004936:	9910      	ldr	r1, [sp, #64]	@ 0x40
 c004938:	4571      	cmp	r1, lr
 c00493a:	f73f af56 	bgt.w	c0047ea <kad_op_avg1d+0x11e>
 c00493e:	e7a1      	b.n	c004884 <kad_op_avg1d+0x1b8>
 c004940:	2500      	movs	r5, #0
 c004942:	9f06      	ldr	r7, [sp, #24]
 c004944:	ea4f 0c86 	mov.w	ip, r6, lsl #2
 c004948:	e001      	b.n	c00494e <kad_op_avg1d+0x282>
 c00494a:	4553      	cmp	r3, sl
 c00494c:	da8e      	bge.n	c00486c <kad_op_avg1d+0x1a0>
 c00494e:	ed97 7a01 	vldr	s14, [r7, #4]
 c004952:	ecb1 6a01 	vldmia	r1!, {s12}
 c004956:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 c00495a:	edd2 7a00 	vldr	s15, [r2]
 c00495e:	eec6 6a07 	vdiv.f32	s13, s12, s14
 c004962:	ee77 7aa6 	vadd.f32	s15, s15, s13
 c004966:	3501      	adds	r5, #1
 c004968:	45ab      	cmp	fp, r5
 c00496a:	edc2 7a00 	vstr	s15, [r2]
 c00496e:	f107 0704 	add.w	r7, r7, #4
 c004972:	4433      	add	r3, r6
 c004974:	4462      	add	r2, ip
 c004976:	d1e8      	bne.n	c00494a <kad_op_avg1d+0x27e>
 c004978:	e778      	b.n	c00486c <kad_op_avg1d+0x1a0>
 c00497a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 c00497c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 c00497e:	930e      	str	r3, [sp, #56]	@ 0x38
 c004980:	2300      	movs	r3, #0
 c004982:	930d      	str	r3, [sp, #52]	@ 0x34
 c004984:	9b07      	ldr	r3, [sp, #28]
 c004986:	9903      	ldr	r1, [sp, #12]
 c004988:	4413      	add	r3, r2
 c00498a:	9a06      	ldr	r2, [sp, #24]
 c00498c:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 c004990:	eb02 0e01 	add.w	lr, r2, r1
 c004994:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 c004996:	2200      	movs	r2, #0
 c004998:	990e      	ldr	r1, [sp, #56]	@ 0x38
 c00499a:	ea4f 0885 	mov.w	r8, r5, lsl #2
 c00499e:	e001      	b.n	c0049a4 <kad_op_avg1d+0x2d8>
 c0049a0:	4556      	cmp	r6, sl
 c0049a2:	da20      	bge.n	c0049e6 <kad_op_avg1d+0x31a>
 c0049a4:	ed91 7a01 	vldr	s14, [r1, #4]
 c0049a8:	ecbe 6a01 	vldmia	lr!, {s12}
 c0049ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 c0049b0:	edd3 7a00 	vldr	s15, [r3]
 c0049b4:	eec6 6a07 	vdiv.f32	s13, s12, s14
 c0049b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 c0049bc:	3201      	adds	r2, #1
 c0049be:	4593      	cmp	fp, r2
 c0049c0:	edc3 7a00 	vstr	s15, [r3]
 c0049c4:	f101 0104 	add.w	r1, r1, #4
 c0049c8:	442e      	add	r6, r5
 c0049ca:	4443      	add	r3, r8
 c0049cc:	d1e8      	bne.n	c0049a0 <kad_op_avg1d+0x2d4>
 c0049ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c0049d0:	f109 0901 	add.w	r9, r9, #1
 c0049d4:	454b      	cmp	r3, r9
 c0049d6:	f8dd 803c 	ldr.w	r8, [sp, #60]	@ 0x3c
 c0049da:	da82      	bge.n	c0048e2 <kad_op_avg1d+0x216>
 c0049dc:	4626      	mov	r6, r4
 c0049de:	4603      	mov	r3, r0
 c0049e0:	46ce      	mov	lr, r9
 c0049e2:	9a08      	ldr	r2, [sp, #32]
 c0049e4:	e7a7      	b.n	c004936 <kad_op_avg1d+0x26a>
 c0049e6:	46ce      	mov	lr, r9
 c0049e8:	f8dd 803c 	ldr.w	r8, [sp, #60]	@ 0x3c
 c0049ec:	9908      	ldr	r1, [sp, #32]
 c0049ee:	e79a      	b.n	c004926 <kad_op_avg1d+0x25a>
 c0049f0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 c0049f2:	f10e 0e01 	add.w	lr, lr, #1
 c0049f6:	458e      	cmp	lr, r1
 c0049f8:	dc9d      	bgt.n	c004936 <kad_op_avg1d+0x26a>
 c0049fa:	e75e      	b.n	c0048ba <kad_op_avg1d+0x1ee>
 c0049fc:	7805      	ldrb	r5, [r0, #0]
 c0049fe:	f8d0 a034 	ldr.w	sl, [r0, #52]	@ 0x34
 c004a02:	2d00      	cmp	r5, #0
 c004a04:	f000 80cf 	beq.w	c004ba6 <kad_op_avg1d+0x4da>
 c004a08:	6904      	ldr	r4, [r0, #16]
 c004a0a:	2d01      	cmp	r5, #1
 c004a0c:	4620      	mov	r0, r4
 c004a0e:	f000 80c5 	beq.w	c004b9c <kad_op_avg1d+0x4d0>
 c004a12:	f8d9 3014 	ldr.w	r3, [r9, #20]
 c004a16:	2d02      	cmp	r5, #2
 c004a18:	fb03 f404 	mul.w	r4, r3, r4
 c004a1c:	f000 80cc 	beq.w	c004bb8 <kad_op_avg1d+0x4ec>
 c004a20:	f8d9 2018 	ldr.w	r2, [r9, #24]
 c004a24:	2d03      	cmp	r5, #3
 c004a26:	fb02 f404 	mul.w	r4, r2, r4
 c004a2a:	f000 80c0 	beq.w	c004bae <kad_op_avg1d+0x4e2>
 c004a2e:	f8d9 101c 	ldr.w	r1, [r9, #28]
 c004a32:	fb01 f404 	mul.w	r4, r1, r4
 c004a36:	2c00      	cmp	r4, #0
 c004a38:	f340 80d6 	ble.w	c004be8 <kad_op_avg1d+0x51c>
 c004a3c:	2c00      	cmp	r4, #0
 c004a3e:	ea4f 0684 	mov.w	r6, r4, lsl #2
 c004a42:	bfd8      	it	le
 c004a44:	2604      	movle	r6, #4
 c004a46:	f8d9 0028 	ldr.w	r0, [r9, #40]	@ 0x28
 c004a4a:	eb0a 0306 	add.w	r3, sl, r6
 c004a4e:	4298      	cmp	r0, r3
 c004a50:	d207      	bcs.n	c004a62 <kad_op_avg1d+0x396>
 c004a52:	1983      	adds	r3, r0, r6
 c004a54:	459a      	cmp	sl, r3
 c004a56:	bf34      	ite	cc
 c004a58:	2300      	movcc	r3, #0
 c004a5a:	2301      	movcs	r3, #1
 c004a5c:	2b00      	cmp	r3, #0
 c004a5e:	f000 80b7 	beq.w	c004bd0 <kad_op_avg1d+0x504>
 c004a62:	4632      	mov	r2, r6
 c004a64:	2100      	movs	r1, #0
 c004a66:	f00a fde3 	bl	c00f630 <memset>
 c004a6a:	4632      	mov	r2, r6
 c004a6c:	2100      	movs	r1, #0
 c004a6e:	4650      	mov	r0, sl
 c004a70:	f00a fdde 	bl	c00f630 <memset>
 c004a74:	1e69      	subs	r1, r5, #1
 c004a76:	2900      	cmp	r1, #0
 c004a78:	f340 808e 	ble.w	c004b98 <kad_op_avg1d+0x4cc>
 c004a7c:	2901      	cmp	r1, #1
 c004a7e:	f8d9 5010 	ldr.w	r5, [r9, #16]
 c004a82:	d00a      	beq.n	c004a9a <kad_op_avg1d+0x3ce>
 c004a84:	f8d9 3014 	ldr.w	r3, [r9, #20]
 c004a88:	2903      	cmp	r1, #3
 c004a8a:	fb03 f505 	mul.w	r5, r3, r5
 c004a8e:	f040 808c 	bne.w	c004baa <kad_op_avg1d+0x4de>
 c004a92:	f8d9 2018 	ldr.w	r2, [r9, #24]
 c004a96:	fb02 f505 	mul.w	r5, r2, r5
 c004a9a:	2d00      	cmp	r5, #0
 c004a9c:	dd62      	ble.n	c004b64 <kad_op_avg1d+0x498>
 c004a9e:	9a01      	ldr	r2, [sp, #4]
 c004aa0:	3104      	adds	r1, #4
 c004aa2:	f852 8021 	ldr.w	r8, [r2, r1, lsl #2]
 c004aa6:	2300      	movs	r3, #0
 c004aa8:	4647      	mov	r7, r8
 c004aaa:	9a02      	ldr	r2, [sp, #8]
 c004aac:	f859 6021 	ldr.w	r6, [r9, r1, lsl #2]
 c004ab0:	6811      	ldr	r1, [r2, #0]
 c004ab2:	ea4f 0048 	mov.w	r0, r8, lsl #1
 c004ab6:	f1aa 0204 	sub.w	r2, sl, #4
 c004aba:	2900      	cmp	r1, #0
 c004abc:	9007      	str	r0, [sp, #28]
 c004abe:	9506      	str	r5, [sp, #24]
 c004ac0:	4618      	mov	r0, r3
 c004ac2:	e9cd 4a08 	strd	r4, sl, [sp, #32]
 c004ac6:	9d02      	ldr	r5, [sp, #8]
 c004ac8:	9205      	str	r2, [sp, #20]
 c004aca:	eba7 0e08 	sub.w	lr, r7, r8
 c004ace:	dd47      	ble.n	c004b60 <kad_op_avg1d+0x494>
 c004ad0:	f04f 0c00 	mov.w	ip, #0
 c004ad4:	9a05      	ldr	r2, [sp, #20]
 c004ad6:	ea4f 0a83 	mov.w	sl, r3, lsl #2
 c004ada:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 c004ade:	e9cd 2302 	strd	r2, r3, [sp, #8]
 c004ae2:	9004      	str	r0, [sp, #16]
 c004ae4:	68aa      	ldr	r2, [r5, #8]
 c004ae6:	4562      	cmp	r2, ip
 c004ae8:	bfb3      	iteet	lt
 c004aea:	ebac 0202 	sublt.w	r2, ip, r2
 c004aee:	4673      	movge	r3, lr
 c004af0:	2200      	movge	r2, #0
 c004af2:	eb0e 0302 	addlt.w	r3, lr, r2
 c004af6:	2e00      	cmp	r6, #0
 c004af8:	dd20      	ble.n	c004b3c <kad_op_avg1d+0x470>
 c004afa:	4590      	cmp	r8, r2
 c004afc:	dd1e      	ble.n	c004b3c <kad_op_avg1d+0x470>
 c004afe:	f8d9 2028 	ldr.w	r2, [r9, #40]	@ 0x28
 c004b02:	9c01      	ldr	r4, [sp, #4]
 c004b04:	2100      	movs	r1, #0
 c004b06:	9802      	ldr	r0, [sp, #8]
 c004b08:	f8d4 b028 	ldr.w	fp, [r4, #40]	@ 0x28
 c004b0c:	4452      	add	r2, sl
 c004b0e:	e001      	b.n	c004b14 <kad_op_avg1d+0x448>
 c004b10:	42bb      	cmp	r3, r7
 c004b12:	da12      	bge.n	c004b3a <kad_op_avg1d+0x46e>
 c004b14:	eb0b 0483 	add.w	r4, fp, r3, lsl #2
 c004b18:	edd4 7a00 	vldr	s15, [r4]
 c004b1c:	ed92 7a00 	vldr	s14, [r2]
 c004b20:	ee77 7a87 	vadd.f32	s15, s15, s14
 c004b24:	f850 4f04 	ldr.w	r4, [r0, #4]!
 c004b28:	ece2 7a01 	vstmia	r2!, {s15}
 c004b2c:	3401      	adds	r4, #1
 c004b2e:	6004      	str	r4, [r0, #0]
 c004b30:	686c      	ldr	r4, [r5, #4]
 c004b32:	3101      	adds	r1, #1
 c004b34:	428e      	cmp	r6, r1
 c004b36:	4423      	add	r3, r4
 c004b38:	d1ea      	bne.n	c004b10 <kad_op_avg1d+0x444>
 c004b3a:	6829      	ldr	r1, [r5, #0]
 c004b3c:	f10c 0c01 	add.w	ip, ip, #1
 c004b40:	4561      	cmp	r1, ip
 c004b42:	dccf      	bgt.n	c004ae4 <kad_op_avg1d+0x418>
 c004b44:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 c004b48:	9a06      	ldr	r2, [sp, #24]
 c004b4a:	3001      	adds	r0, #1
 c004b4c:	4290      	cmp	r0, r2
 c004b4e:	da07      	bge.n	c004b60 <kad_op_avg1d+0x494>
 c004b50:	9a07      	ldr	r2, [sp, #28]
 c004b52:	2900      	cmp	r1, #0
 c004b54:	eb02 070e 	add.w	r7, r2, lr
 c004b58:	4433      	add	r3, r6
 c004b5a:	eba7 0e08 	sub.w	lr, r7, r8
 c004b5e:	dcb7      	bgt.n	c004ad0 <kad_op_avg1d+0x404>
 c004b60:	e9dd 4a08 	ldrd	r4, sl, [sp, #32]
 c004b64:	2c00      	cmp	r4, #0
 c004b66:	f77f adc3 	ble.w	c0046f0 <kad_op_avg1d+0x24>
 c004b6a:	f8d9 3028 	ldr.w	r3, [r9, #40]	@ 0x28
 c004b6e:	f1aa 0a04 	sub.w	sl, sl, #4
 c004b72:	eb03 0984 	add.w	r9, r3, r4, lsl #2
 c004b76:	edda 7a01 	vldr	s15, [sl, #4]
 c004b7a:	edd3 6a00 	vldr	s13, [r3]
 c004b7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c004b82:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 c004b86:	eca3 7a01 	vstmia	r3!, {s14}
 c004b8a:	454b      	cmp	r3, r9
 c004b8c:	f10a 0a04 	add.w	sl, sl, #4
 c004b90:	d1f1      	bne.n	c004b76 <kad_op_avg1d+0x4aa>
 c004b92:	e5ad      	b.n	c0046f0 <kad_op_avg1d+0x24>
 c004b94:	2104      	movs	r1, #4
 c004b96:	e5c8      	b.n	c00472a <kad_op_avg1d+0x5e>
 c004b98:	2501      	movs	r5, #1
 c004b9a:	e780      	b.n	c004a9e <kad_op_avg1d+0x3d2>
 c004b9c:	2c00      	cmp	r4, #0
 c004b9e:	f73f af4d 	bgt.w	c004a3c <kad_op_avg1d+0x370>
 c004ba2:	2100      	movs	r1, #0
 c004ba4:	e77b      	b.n	c004a9e <kad_op_avg1d+0x3d2>
 c004ba6:	2401      	movs	r4, #1
 c004ba8:	e748      	b.n	c004a3c <kad_op_avg1d+0x370>
 c004baa:	2102      	movs	r1, #2
 c004bac:	e775      	b.n	c004a9a <kad_op_avg1d+0x3ce>
 c004bae:	2c00      	cmp	r4, #0
 c004bb0:	f73f af44 	bgt.w	c004a3c <kad_op_avg1d+0x370>
 c004bb4:	4605      	mov	r5, r0
 c004bb6:	e767      	b.n	c004a88 <kad_op_avg1d+0x3bc>
 c004bb8:	2c00      	cmp	r4, #0
 c004bba:	f73f af3f 	bgt.w	c004a3c <kad_op_avg1d+0x370>
 c004bbe:	4605      	mov	r5, r0
 c004bc0:	2101      	movs	r1, #1
 c004bc2:	e76a      	b.n	c004a9a <kad_op_avg1d+0x3ce>
 c004bc4:	f04f 0c01 	mov.w	ip, #1
 c004bc8:	e5e6      	b.n	c004798 <kad_op_avg1d+0xcc>
 c004bca:	f04f 30ff 	mov.w	r0, #4294967295
 c004bce:	e590      	b.n	c0046f2 <kad_op_avg1d+0x26>
 c004bd0:	2600      	movs	r6, #0
 c004bd2:	4619      	mov	r1, r3
 c004bd4:	f1aa 0204 	sub.w	r2, sl, #4
 c004bd8:	3301      	adds	r3, #1
 c004bda:	429c      	cmp	r4, r3
 c004bdc:	f840 6b04 	str.w	r6, [r0], #4
 c004be0:	f842 1f04 	str.w	r1, [r2, #4]!
 c004be4:	dcf8      	bgt.n	c004bd8 <kad_op_avg1d+0x50c>
 c004be6:	e745      	b.n	c004a74 <kad_op_avg1d+0x3a8>
 c004be8:	1e69      	subs	r1, r5, #1
 c004bea:	fb03 f500 	mul.w	r5, r3, r0
 c004bee:	e752      	b.n	c004a96 <kad_op_avg1d+0x3ca>

0c004bf0 <kad_op_reduce_sum>:
 c004bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c004bf4:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 c004bf6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 c004bf8:	f8d2 9000 	ldr.w	r9, [r2]
 c004bfc:	b083      	sub	sp, #12
 c004bfe:	2b00      	cmp	r3, #0
 c004c00:	f000 8158 	beq.w	c004eb4 <kad_op_reduce_sum+0x2c4>
 c004c04:	681d      	ldr	r5, [r3, #0]
 c004c06:	2d00      	cmp	r5, #0
 c004c08:	f2c0 8145 	blt.w	c004e96 <kad_op_reduce_sum+0x2a6>
 c004c0c:	f899 3000 	ldrb.w	r3, [r9]
 c004c10:	42ab      	cmp	r3, r5
 c004c12:	f340 8140 	ble.w	c004e96 <kad_op_reduce_sum+0x2a6>
 c004c16:	4680      	mov	r8, r0
 c004c18:	2d00      	cmp	r5, #0
 c004c1a:	f000 80ca 	beq.w	c004db2 <kad_op_reduce_sum+0x1c2>
 c004c1e:	2d01      	cmp	r5, #1
 c004c20:	f8d9 6010 	ldr.w	r6, [r9, #16]
 c004c24:	d00f      	beq.n	c004c46 <kad_op_reduce_sum+0x56>
 c004c26:	f8d9 2014 	ldr.w	r2, [r9, #20]
 c004c2a:	2d02      	cmp	r5, #2
 c004c2c:	fb02 f606 	mul.w	r6, r2, r6
 c004c30:	d009      	beq.n	c004c46 <kad_op_reduce_sum+0x56>
 c004c32:	f8d9 2018 	ldr.w	r2, [r9, #24]
 c004c36:	2d03      	cmp	r5, #3
 c004c38:	fb02 f606 	mul.w	r6, r2, r6
 c004c3c:	d003      	beq.n	c004c46 <kad_op_reduce_sum+0x56>
 c004c3e:	f8d9 201c 	ldr.w	r2, [r9, #28]
 c004c42:	fb02 f606 	mul.w	r6, r2, r6
 c004c46:	1c6a      	adds	r2, r5, #1
 c004c48:	4293      	cmp	r3, r2
 c004c4a:	f340 8091 	ble.w	c004d70 <kad_op_reduce_sum+0x180>
 c004c4e:	1caa      	adds	r2, r5, #2
 c004c50:	eb09 0085 	add.w	r0, r9, r5, lsl #2
 c004c54:	4293      	cmp	r3, r2
 c004c56:	6944      	ldr	r4, [r0, #20]
 c004c58:	dd08      	ble.n	c004c6c <kad_op_reduce_sum+0x7c>
 c004c5a:	6982      	ldr	r2, [r0, #24]
 c004c5c:	fb02 f404 	mul.w	r4, r2, r4
 c004c60:	1cea      	adds	r2, r5, #3
 c004c62:	4293      	cmp	r3, r2
 c004c64:	dd02      	ble.n	c004c6c <kad_op_reduce_sum+0x7c>
 c004c66:	69c2      	ldr	r2, [r0, #28]
 c004c68:	fb02 f404 	mul.w	r4, r2, r4
 c004c6c:	2904      	cmp	r1, #4
 c004c6e:	d060      	beq.n	c004d32 <kad_op_reduce_sum+0x142>
 c004c70:	2902      	cmp	r1, #2
 c004c72:	d006      	beq.n	c004c82 <kad_op_reduce_sum+0x92>
 c004c74:	2903      	cmp	r1, #3
 c004c76:	f000 809e 	beq.w	c004db6 <kad_op_reduce_sum+0x1c6>
 c004c7a:	2000      	movs	r0, #0
 c004c7c:	b003      	add	sp, #12
 c004c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c004c82:	f898 2000 	ldrb.w	r2, [r8]
 c004c86:	f8d8 0028 	ldr.w	r0, [r8, #40]	@ 0x28
 c004c8a:	2a00      	cmp	r2, #0
 c004c8c:	f000 80fd 	beq.w	c004e8a <kad_op_reduce_sum+0x29a>
 c004c90:	2a01      	cmp	r2, #1
 c004c92:	f8d8 3010 	ldr.w	r3, [r8, #16]
 c004c96:	d00e      	beq.n	c004cb6 <kad_op_reduce_sum+0xc6>
 c004c98:	f8d8 1014 	ldr.w	r1, [r8, #20]
 c004c9c:	2a02      	cmp	r2, #2
 c004c9e:	fb01 f303 	mul.w	r3, r1, r3
 c004ca2:	d008      	beq.n	c004cb6 <kad_op_reduce_sum+0xc6>
 c004ca4:	f8d8 1018 	ldr.w	r1, [r8, #24]
 c004ca8:	2a03      	cmp	r2, #3
 c004caa:	fb01 f303 	mul.w	r3, r1, r3
 c004cae:	bf1c      	itt	ne
 c004cb0:	f8d8 201c 	ldrne.w	r2, [r8, #28]
 c004cb4:	4353      	mulne	r3, r2
 c004cb6:	009a      	lsls	r2, r3, #2
 c004cb8:	2100      	movs	r1, #0
 c004cba:	f00a fcb9 	bl	c00f630 <memset>
 c004cbe:	2e00      	cmp	r6, #0
 c004cc0:	dddb      	ble.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004cc2:	3504      	adds	r5, #4
 c004cc4:	f859 e025 	ldr.w	lr, [r9, r5, lsl #2]
 c004cc8:	f1be 0f00 	cmp.w	lr, #0
 c004ccc:	ddd5      	ble.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004cce:	2c00      	cmp	r4, #0
 c004cd0:	ddd3      	ble.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004cd2:	2300      	movs	r3, #0
 c004cd4:	00a2      	lsls	r2, r4, #2
 c004cd6:	4692      	mov	sl, r2
 c004cd8:	f8d8 b028 	ldr.w	fp, [r8, #40]	@ 0x28
 c004cdc:	f8d9 7028 	ldr.w	r7, [r9, #40]	@ 0x28
 c004ce0:	9201      	str	r2, [sp, #4]
 c004ce2:	4699      	mov	r9, r3
 c004ce4:	4698      	mov	r8, r3
 c004ce6:	4632      	mov	r2, r6
 c004ce8:	2600      	movs	r6, #0
 c004cea:	fb04 f509 	mul.w	r5, r4, r9
 c004cee:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
 c004cf2:	eb0b 000a 	add.w	r0, fp, sl
 c004cf6:	f8cd b000 	str.w	fp, [sp]
 c004cfa:	4661      	mov	r1, ip
 c004cfc:	eb07 0b85 	add.w	fp, r7, r5, lsl #2
 c004d00:	edd1 7a00 	vldr	s15, [r1]
 c004d04:	ecbb 7a01 	vldmia	fp!, {s14}
 c004d08:	ee77 7a87 	vadd.f32	s15, s15, s14
 c004d0c:	ece1 7a01 	vstmia	r1!, {s15}
 c004d10:	4281      	cmp	r1, r0
 c004d12:	d1f5      	bne.n	c004d00 <kad_op_reduce_sum+0x110>
 c004d14:	3601      	adds	r6, #1
 c004d16:	4576      	cmp	r6, lr
 c004d18:	4425      	add	r5, r4
 c004d1a:	d1ee      	bne.n	c004cfa <kad_op_reduce_sum+0x10a>
 c004d1c:	9901      	ldr	r1, [sp, #4]
 c004d1e:	f108 0801 	add.w	r8, r8, #1
 c004d22:	4590      	cmp	r8, r2
 c004d24:	f8dd b000 	ldr.w	fp, [sp]
 c004d28:	44f1      	add	r9, lr
 c004d2a:	4423      	add	r3, r4
 c004d2c:	448a      	add	sl, r1
 c004d2e:	d1db      	bne.n	c004ce8 <kad_op_reduce_sum+0xf8>
 c004d30:	e7a3      	b.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004d32:	3b01      	subs	r3, #1
 c004d34:	f888 3000 	strb.w	r3, [r8]
 c004d38:	f899 3000 	ldrb.w	r3, [r9]
 c004d3c:	2b00      	cmp	r3, #0
 c004d3e:	d09c      	beq.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004d40:	b1c5      	cbz	r5, c004d74 <kad_op_reduce_sum+0x184>
 c004d42:	f8d9 2010 	ldr.w	r2, [r9, #16]
 c004d46:	2b01      	cmp	r3, #1
 c004d48:	f8c8 2010 	str.w	r2, [r8, #16]
 c004d4c:	d095      	beq.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004d4e:	2d01      	cmp	r5, #1
 c004d50:	d16e      	bne.n	c004e30 <kad_op_reduce_sum+0x240>
 c004d52:	2b02      	cmp	r3, #2
 c004d54:	d091      	beq.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004d56:	f8d9 2018 	ldr.w	r2, [r9, #24]
 c004d5a:	2b03      	cmp	r3, #3
 c004d5c:	f8c8 2014 	str.w	r2, [r8, #20]
 c004d60:	d08b      	beq.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004d62:	f8d9 201c 	ldr.w	r2, [r9, #28]
 c004d66:	2b04      	cmp	r3, #4
 c004d68:	f8c8 2018 	str.w	r2, [r8, #24]
 c004d6c:	d173      	bne.n	c004e56 <kad_op_reduce_sum+0x266>
 c004d6e:	e784      	b.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004d70:	2401      	movs	r4, #1
 c004d72:	e77b      	b.n	c004c6c <kad_op_reduce_sum+0x7c>
 c004d74:	2b01      	cmp	r3, #1
 c004d76:	d080      	beq.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004d78:	f8d9 2014 	ldr.w	r2, [r9, #20]
 c004d7c:	2b02      	cmp	r3, #2
 c004d7e:	f8c8 2010 	str.w	r2, [r8, #16]
 c004d82:	f43f af7a 	beq.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004d86:	f8d9 2018 	ldr.w	r2, [r9, #24]
 c004d8a:	2b03      	cmp	r3, #3
 c004d8c:	f8c8 2014 	str.w	r2, [r8, #20]
 c004d90:	bf18      	it	ne
 c004d92:	2202      	movne	r2, #2
 c004d94:	f43f af71 	beq.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004d98:	f8d9 001c 	ldr.w	r0, [r9, #28]
 c004d9c:	1d11      	adds	r1, r2, #4
 c004d9e:	2b04      	cmp	r3, #4
 c004da0:	f848 0021 	str.w	r0, [r8, r1, lsl #2]
 c004da4:	f102 0201 	add.w	r2, r2, #1
 c004da8:	f77f af67 	ble.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004dac:	2d04      	cmp	r5, #4
 c004dae:	d059      	beq.n	c004e64 <kad_op_reduce_sum+0x274>
 c004db0:	e052      	b.n	c004e58 <kad_op_reduce_sum+0x268>
 c004db2:	2601      	movs	r6, #1
 c004db4:	e747      	b.n	c004c46 <kad_op_reduce_sum+0x56>
 c004db6:	f899 3001 	ldrb.w	r3, [r9, #1]
 c004dba:	07db      	lsls	r3, r3, #31
 c004dbc:	f57f af5d 	bpl.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004dc0:	2e00      	cmp	r6, #0
 c004dc2:	f77f af5a 	ble.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004dc6:	3504      	adds	r5, #4
 c004dc8:	f859 7025 	ldr.w	r7, [r9, r5, lsl #2]
 c004dcc:	2f00      	cmp	r7, #0
 c004dce:	f77f af54 	ble.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004dd2:	2c00      	cmp	r4, #0
 c004dd4:	f77f af51 	ble.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004dd8:	2300      	movs	r3, #0
 c004dda:	f8d9 e02c 	ldr.w	lr, [r9, #44]	@ 0x2c
 c004dde:	461a      	mov	r2, r3
 c004de0:	4699      	mov	r9, r3
 c004de2:	f8d8 a02c 	ldr.w	sl, [r8, #44]	@ 0x2c
 c004de6:	eb0e 0884 	add.w	r8, lr, r4, lsl #2
 c004dea:	f8cd a000 	str.w	sl, [sp]
 c004dee:	f04f 0a00 	mov.w	sl, #0
 c004df2:	fb04 fc09 	mul.w	ip, r4, r9
 c004df6:	9900      	ldr	r1, [sp, #0]
 c004df8:	eb01 0b83 	add.w	fp, r1, r3, lsl #2
 c004dfc:	4658      	mov	r0, fp
 c004dfe:	eb0e 018c 	add.w	r1, lr, ip, lsl #2
 c004e02:	eb08 058c 	add.w	r5, r8, ip, lsl #2
 c004e06:	edd1 7a00 	vldr	s15, [r1]
 c004e0a:	ecb0 7a01 	vldmia	r0!, {s14}
 c004e0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 c004e12:	ece1 7a01 	vstmia	r1!, {s15}
 c004e16:	428d      	cmp	r5, r1
 c004e18:	d1f5      	bne.n	c004e06 <kad_op_reduce_sum+0x216>
 c004e1a:	f10a 0a01 	add.w	sl, sl, #1
 c004e1e:	45ba      	cmp	sl, r7
 c004e20:	44a4      	add	ip, r4
 c004e22:	d1eb      	bne.n	c004dfc <kad_op_reduce_sum+0x20c>
 c004e24:	3201      	adds	r2, #1
 c004e26:	42b2      	cmp	r2, r6
 c004e28:	44b9      	add	r9, r7
 c004e2a:	4423      	add	r3, r4
 c004e2c:	d1df      	bne.n	c004dee <kad_op_reduce_sum+0x1fe>
 c004e2e:	e724      	b.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004e30:	f8d9 2014 	ldr.w	r2, [r9, #20]
 c004e34:	2b02      	cmp	r3, #2
 c004e36:	f8c8 2014 	str.w	r2, [r8, #20]
 c004e3a:	f43f af1e 	beq.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004e3e:	2d02      	cmp	r5, #2
 c004e40:	d12c      	bne.n	c004e9c <kad_op_reduce_sum+0x2ac>
 c004e42:	2b03      	cmp	r3, #3
 c004e44:	f43f af19 	beq.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004e48:	f8d9 201c 	ldr.w	r2, [r9, #28]
 c004e4c:	2b04      	cmp	r3, #4
 c004e4e:	f8c8 2018 	str.w	r2, [r8, #24]
 c004e52:	f43f af12 	beq.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004e56:	2203      	movs	r2, #3
 c004e58:	f8d9 0020 	ldr.w	r0, [r9, #32]
 c004e5c:	1d11      	adds	r1, r2, #4
 c004e5e:	f848 0021 	str.w	r0, [r8, r1, lsl #2]
 c004e62:	3201      	adds	r2, #1
 c004e64:	2b05      	cmp	r3, #5
 c004e66:	f77f af08 	ble.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004e6a:	2105      	movs	r1, #5
 c004e6c:	42a9      	cmp	r1, r5
 c004e6e:	d00e      	beq.n	c004e8e <kad_op_reduce_sum+0x29e>
 c004e70:	f109 0010 	add.w	r0, r9, #16
 c004e74:	f850 4021 	ldr.w	r4, [r0, r1, lsl #2]
 c004e78:	3101      	adds	r1, #1
 c004e7a:	1d10      	adds	r0, r2, #4
 c004e7c:	4299      	cmp	r1, r3
 c004e7e:	f848 4020 	str.w	r4, [r8, r0, lsl #2]
 c004e82:	f102 0201 	add.w	r2, r2, #1
 c004e86:	dbf1      	blt.n	c004e6c <kad_op_reduce_sum+0x27c>
 c004e88:	e6f7      	b.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004e8a:	2204      	movs	r2, #4
 c004e8c:	e714      	b.n	c004cb8 <kad_op_reduce_sum+0xc8>
 c004e8e:	3101      	adds	r1, #1
 c004e90:	4299      	cmp	r1, r3
 c004e92:	dbeb      	blt.n	c004e6c <kad_op_reduce_sum+0x27c>
 c004e94:	e6f1      	b.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004e96:	f04f 30ff 	mov.w	r0, #4294967295
 c004e9a:	e6ef      	b.n	c004c7c <kad_op_reduce_sum+0x8c>
 c004e9c:	f8d9 2018 	ldr.w	r2, [r9, #24]
 c004ea0:	2b03      	cmp	r3, #3
 c004ea2:	f8c8 2018 	str.w	r2, [r8, #24]
 c004ea6:	f43f aee8 	beq.w	c004c7a <kad_op_reduce_sum+0x8a>
 c004eaa:	2d03      	cmp	r5, #3
 c004eac:	d109      	bne.n	c004ec2 <kad_op_reduce_sum+0x2d2>
 c004eae:	2b04      	cmp	r3, #4
 c004eb0:	d1d1      	bne.n	c004e56 <kad_op_reduce_sum+0x266>
 c004eb2:	e6e2      	b.n	c004c7a <kad_op_reduce_sum+0x8a>
 c004eb4:	f240 41e3 	movw	r1, #1251	@ 0x4e3
 c004eb8:	4b03      	ldr	r3, [pc, #12]	@ (c004ec8 <kad_op_reduce_sum+0x2d8>)
 c004eba:	4a04      	ldr	r2, [pc, #16]	@ (c004ecc <kad_op_reduce_sum+0x2dc>)
 c004ebc:	4804      	ldr	r0, [pc, #16]	@ (c004ed0 <kad_op_reduce_sum+0x2e0>)
 c004ebe:	f00a f8a3 	bl	c00f008 <__assert_func>
 c004ec2:	2203      	movs	r2, #3
 c004ec4:	e768      	b.n	c004d98 <kad_op_reduce_sum+0x1a8>
 c004ec6:	bf00      	nop
 c004ec8:	0c011afc 	.word	0x0c011afc
 c004ecc:	0c011cb8 	.word	0x0c011cb8
 c004ed0:	0c011b04 	.word	0x0c011b04

0c004ed4 <kad_op_reduce_mean>:
 c004ed4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c004ed8:	ed2d 8b02 	vpush	{d8}
 c004edc:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 c004ede:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 c004ee0:	f8d2 8000 	ldr.w	r8, [r2]
 c004ee4:	b083      	sub	sp, #12
 c004ee6:	2b00      	cmp	r3, #0
 c004ee8:	f000 8160 	beq.w	c0051ac <kad_op_reduce_mean+0x2d8>
 c004eec:	681b      	ldr	r3, [r3, #0]
 c004eee:	2b00      	cmp	r3, #0
 c004ef0:	f2c0 814e 	blt.w	c005190 <kad_op_reduce_mean+0x2bc>
 c004ef4:	f898 2000 	ldrb.w	r2, [r8]
 c004ef8:	429a      	cmp	r2, r3
 c004efa:	f340 8149 	ble.w	c005190 <kad_op_reduce_mean+0x2bc>
 c004efe:	4605      	mov	r5, r0
 c004f00:	2b00      	cmp	r3, #0
 c004f02:	f000 80cb 	beq.w	c00509c <kad_op_reduce_mean+0x1c8>
 c004f06:	2b01      	cmp	r3, #1
 c004f08:	f8d8 6010 	ldr.w	r6, [r8, #16]
 c004f0c:	d00f      	beq.n	c004f2e <kad_op_reduce_mean+0x5a>
 c004f0e:	f8d8 0014 	ldr.w	r0, [r8, #20]
 c004f12:	2b02      	cmp	r3, #2
 c004f14:	fb00 f606 	mul.w	r6, r0, r6
 c004f18:	d009      	beq.n	c004f2e <kad_op_reduce_mean+0x5a>
 c004f1a:	f8d8 0018 	ldr.w	r0, [r8, #24]
 c004f1e:	2b03      	cmp	r3, #3
 c004f20:	fb00 f606 	mul.w	r6, r0, r6
 c004f24:	d003      	beq.n	c004f2e <kad_op_reduce_mean+0x5a>
 c004f26:	f8d8 001c 	ldr.w	r0, [r8, #28]
 c004f2a:	fb00 f606 	mul.w	r6, r0, r6
 c004f2e:	f103 0c01 	add.w	ip, r3, #1
 c004f32:	4562      	cmp	r2, ip
 c004f34:	f340 8092 	ble.w	c00505c <kad_op_reduce_mean+0x188>
 c004f38:	1c98      	adds	r0, r3, #2
 c004f3a:	eb08 0783 	add.w	r7, r8, r3, lsl #2
 c004f3e:	4282      	cmp	r2, r0
 c004f40:	697c      	ldr	r4, [r7, #20]
 c004f42:	dd08      	ble.n	c004f56 <kad_op_reduce_mean+0x82>
 c004f44:	69b8      	ldr	r0, [r7, #24]
 c004f46:	fb00 f404 	mul.w	r4, r0, r4
 c004f4a:	1cd8      	adds	r0, r3, #3
 c004f4c:	4282      	cmp	r2, r0
 c004f4e:	dd02      	ble.n	c004f56 <kad_op_reduce_mean+0x82>
 c004f50:	69f8      	ldr	r0, [r7, #28]
 c004f52:	fb00 f404 	mul.w	r4, r0, r4
 c004f56:	2904      	cmp	r1, #4
 c004f58:	d065      	beq.n	c005026 <kad_op_reduce_mean+0x152>
 c004f5a:	2902      	cmp	r1, #2
 c004f5c:	d008      	beq.n	c004f70 <kad_op_reduce_mean+0x9c>
 c004f5e:	2903      	cmp	r1, #3
 c004f60:	f000 809e 	beq.w	c0050a0 <kad_op_reduce_mean+0x1cc>
 c004f64:	2000      	movs	r0, #0
 c004f66:	b003      	add	sp, #12
 c004f68:	ecbd 8b02 	vpop	{d8}
 c004f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c004f70:	7829      	ldrb	r1, [r5, #0]
 c004f72:	eb08 0783 	add.w	r7, r8, r3, lsl #2
 c004f76:	ed97 8a04 	vldr	s16, [r7, #16]
 c004f7a:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 c004f7c:	2900      	cmp	r1, #0
 c004f7e:	f000 8101 	beq.w	c005184 <kad_op_reduce_mean+0x2b0>
 c004f82:	2901      	cmp	r1, #1
 c004f84:	692a      	ldr	r2, [r5, #16]
 c004f86:	d00b      	beq.n	c004fa0 <kad_op_reduce_mean+0xcc>
 c004f88:	696b      	ldr	r3, [r5, #20]
 c004f8a:	2902      	cmp	r1, #2
 c004f8c:	fb03 f202 	mul.w	r2, r3, r2
 c004f90:	d006      	beq.n	c004fa0 <kad_op_reduce_mean+0xcc>
 c004f92:	69ab      	ldr	r3, [r5, #24]
 c004f94:	2903      	cmp	r1, #3
 c004f96:	fb03 f202 	mul.w	r2, r3, r2
 c004f9a:	bf1c      	itt	ne
 c004f9c:	69eb      	ldrne	r3, [r5, #28]
 c004f9e:	435a      	mulne	r2, r3
 c004fa0:	0092      	lsls	r2, r2, #2
 c004fa2:	2100      	movs	r1, #0
 c004fa4:	f00a fb44 	bl	c00f630 <memset>
 c004fa8:	2e00      	cmp	r6, #0
 c004faa:	dddb      	ble.n	c004f64 <kad_op_reduce_mean+0x90>
 c004fac:	f8d7 e010 	ldr.w	lr, [r7, #16]
 c004fb0:	f1be 0f00 	cmp.w	lr, #0
 c004fb4:	ddd6      	ble.n	c004f64 <kad_op_reduce_mean+0x90>
 c004fb6:	2c00      	cmp	r4, #0
 c004fb8:	ddd4      	ble.n	c004f64 <kad_op_reduce_mean+0x90>
 c004fba:	2300      	movs	r3, #0
 c004fbc:	eef8 7ac8 	vcvt.f32.s32	s15, s16
 c004fc0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c004fc4:	00a2      	lsls	r2, r4, #2
 c004fc6:	4692      	mov	sl, r2
 c004fc8:	f8d8 7028 	ldr.w	r7, [r8, #40]	@ 0x28
 c004fcc:	9201      	str	r2, [sp, #4]
 c004fce:	eec7 6a27 	vdiv.f32	s13, s14, s15
 c004fd2:	4699      	mov	r9, r3
 c004fd4:	4698      	mov	r8, r3
 c004fd6:	4632      	mov	r2, r6
 c004fd8:	f8d5 b028 	ldr.w	fp, [r5, #40]	@ 0x28
 c004fdc:	2600      	movs	r6, #0
 c004fde:	fb04 f509 	mul.w	r5, r4, r9
 c004fe2:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
 c004fe6:	eb0b 000a 	add.w	r0, fp, sl
 c004fea:	f8cd b000 	str.w	fp, [sp]
 c004fee:	4661      	mov	r1, ip
 c004ff0:	eb07 0b85 	add.w	fp, r7, r5, lsl #2
 c004ff4:	edd1 7a00 	vldr	s15, [r1]
 c004ff8:	ecbb 7a01 	vldmia	fp!, {s14}
 c004ffc:	eee7 7a26 	vfma.f32	s15, s14, s13
 c005000:	ece1 7a01 	vstmia	r1!, {s15}
 c005004:	4281      	cmp	r1, r0
 c005006:	d1f5      	bne.n	c004ff4 <kad_op_reduce_mean+0x120>
 c005008:	3601      	adds	r6, #1
 c00500a:	4576      	cmp	r6, lr
 c00500c:	4425      	add	r5, r4
 c00500e:	d1ee      	bne.n	c004fee <kad_op_reduce_mean+0x11a>
 c005010:	9901      	ldr	r1, [sp, #4]
 c005012:	f108 0801 	add.w	r8, r8, #1
 c005016:	4590      	cmp	r8, r2
 c005018:	f8dd b000 	ldr.w	fp, [sp]
 c00501c:	44f1      	add	r9, lr
 c00501e:	4423      	add	r3, r4
 c005020:	448a      	add	sl, r1
 c005022:	d1db      	bne.n	c004fdc <kad_op_reduce_mean+0x108>
 c005024:	e79e      	b.n	c004f64 <kad_op_reduce_mean+0x90>
 c005026:	3a01      	subs	r2, #1
 c005028:	702a      	strb	r2, [r5, #0]
 c00502a:	f898 2000 	ldrb.w	r2, [r8]
 c00502e:	2a00      	cmp	r2, #0
 c005030:	d098      	beq.n	c004f64 <kad_op_reduce_mean+0x90>
 c005032:	b1ab      	cbz	r3, c005060 <kad_op_reduce_mean+0x18c>
 c005034:	f8d8 1010 	ldr.w	r1, [r8, #16]
 c005038:	2a01      	cmp	r2, #1
 c00503a:	6129      	str	r1, [r5, #16]
 c00503c:	d092      	beq.n	c004f64 <kad_op_reduce_mean+0x90>
 c00503e:	2b01      	cmp	r3, #1
 c005040:	d175      	bne.n	c00512e <kad_op_reduce_mean+0x25a>
 c005042:	2a02      	cmp	r2, #2
 c005044:	d08e      	beq.n	c004f64 <kad_op_reduce_mean+0x90>
 c005046:	f8d8 1018 	ldr.w	r1, [r8, #24]
 c00504a:	2a03      	cmp	r2, #3
 c00504c:	6169      	str	r1, [r5, #20]
 c00504e:	d089      	beq.n	c004f64 <kad_op_reduce_mean+0x90>
 c005050:	f8d8 101c 	ldr.w	r1, [r8, #28]
 c005054:	2a04      	cmp	r2, #4
 c005056:	61a9      	str	r1, [r5, #24]
 c005058:	d17a      	bne.n	c005150 <kad_op_reduce_mean+0x27c>
 c00505a:	e783      	b.n	c004f64 <kad_op_reduce_mean+0x90>
 c00505c:	2401      	movs	r4, #1
 c00505e:	e77a      	b.n	c004f56 <kad_op_reduce_mean+0x82>
 c005060:	2a01      	cmp	r2, #1
 c005062:	f43f af7f 	beq.w	c004f64 <kad_op_reduce_mean+0x90>
 c005066:	f8d8 1014 	ldr.w	r1, [r8, #20]
 c00506a:	2a02      	cmp	r2, #2
 c00506c:	6129      	str	r1, [r5, #16]
 c00506e:	f43f af79 	beq.w	c004f64 <kad_op_reduce_mean+0x90>
 c005072:	f8d8 1018 	ldr.w	r1, [r8, #24]
 c005076:	2a03      	cmp	r2, #3
 c005078:	6169      	str	r1, [r5, #20]
 c00507a:	bf18      	it	ne
 c00507c:	2102      	movne	r1, #2
 c00507e:	f43f af71 	beq.w	c004f64 <kad_op_reduce_mean+0x90>
 c005082:	f8d8 401c 	ldr.w	r4, [r8, #28]
 c005086:	1d08      	adds	r0, r1, #4
 c005088:	2a04      	cmp	r2, #4
 c00508a:	f845 4020 	str.w	r4, [r5, r0, lsl #2]
 c00508e:	f101 0101 	add.w	r1, r1, #1
 c005092:	f77f af67 	ble.w	c004f64 <kad_op_reduce_mean+0x90>
 c005096:	2b04      	cmp	r3, #4
 c005098:	d061      	beq.n	c00515e <kad_op_reduce_mean+0x28a>
 c00509a:	e05a      	b.n	c005152 <kad_op_reduce_mean+0x27e>
 c00509c:	2601      	movs	r6, #1
 c00509e:	e746      	b.n	c004f2e <kad_op_reduce_mean+0x5a>
 c0050a0:	f898 2001 	ldrb.w	r2, [r8, #1]
 c0050a4:	07d2      	lsls	r2, r2, #31
 c0050a6:	f57f af5d 	bpl.w	c004f64 <kad_op_reduce_mean+0x90>
 c0050aa:	3304      	adds	r3, #4
 c0050ac:	2e00      	cmp	r6, #0
 c0050ae:	f858 7023 	ldr.w	r7, [r8, r3, lsl #2]
 c0050b2:	f77f af57 	ble.w	c004f64 <kad_op_reduce_mean+0x90>
 c0050b6:	2f00      	cmp	r7, #0
 c0050b8:	f77f af54 	ble.w	c004f64 <kad_op_reduce_mean+0x90>
 c0050bc:	2c00      	cmp	r4, #0
 c0050be:	f77f af51 	ble.w	c004f64 <kad_op_reduce_mean+0x90>
 c0050c2:	ee07 7a90 	vmov	s15, r7
 c0050c6:	2300      	movs	r3, #0
 c0050c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c0050cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c0050d0:	f8d5 a02c 	ldr.w	sl, [r5, #44]	@ 0x2c
 c0050d4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 c0050d8:	4699      	mov	r9, r3
 c0050da:	461a      	mov	r2, r3
 c0050dc:	4651      	mov	r1, sl
 c0050de:	f8d8 e02c 	ldr.w	lr, [r8, #44]	@ 0x2c
 c0050e2:	eb0e 0884 	add.w	r8, lr, r4, lsl #2
 c0050e6:	f04f 0a00 	mov.w	sl, #0
 c0050ea:	fb04 fc09 	mul.w	ip, r4, r9
 c0050ee:	eb01 0b83 	add.w	fp, r1, r3, lsl #2
 c0050f2:	f8cd 9000 	str.w	r9, [sp]
 c0050f6:	465d      	mov	r5, fp
 c0050f8:	eb0e 008c 	add.w	r0, lr, ip, lsl #2
 c0050fc:	eb08 098c 	add.w	r9, r8, ip, lsl #2
 c005100:	edd0 7a00 	vldr	s15, [r0]
 c005104:	ecb5 7a01 	vldmia	r5!, {s14}
 c005108:	eee7 7a26 	vfma.f32	s15, s14, s13
 c00510c:	ece0 7a01 	vstmia	r0!, {s15}
 c005110:	4581      	cmp	r9, r0
 c005112:	d1f5      	bne.n	c005100 <kad_op_reduce_mean+0x22c>
 c005114:	f10a 0a01 	add.w	sl, sl, #1
 c005118:	4557      	cmp	r7, sl
 c00511a:	44a4      	add	ip, r4
 c00511c:	d1eb      	bne.n	c0050f6 <kad_op_reduce_mean+0x222>
 c00511e:	f8dd 9000 	ldr.w	r9, [sp]
 c005122:	3201      	adds	r2, #1
 c005124:	42b2      	cmp	r2, r6
 c005126:	44b9      	add	r9, r7
 c005128:	4423      	add	r3, r4
 c00512a:	d1dc      	bne.n	c0050e6 <kad_op_reduce_mean+0x212>
 c00512c:	e71a      	b.n	c004f64 <kad_op_reduce_mean+0x90>
 c00512e:	f8d8 1014 	ldr.w	r1, [r8, #20]
 c005132:	2a02      	cmp	r2, #2
 c005134:	6169      	str	r1, [r5, #20]
 c005136:	f43f af15 	beq.w	c004f64 <kad_op_reduce_mean+0x90>
 c00513a:	2b02      	cmp	r3, #2
 c00513c:	d12b      	bne.n	c005196 <kad_op_reduce_mean+0x2c2>
 c00513e:	2a03      	cmp	r2, #3
 c005140:	f43f af10 	beq.w	c004f64 <kad_op_reduce_mean+0x90>
 c005144:	f8d8 101c 	ldr.w	r1, [r8, #28]
 c005148:	2a04      	cmp	r2, #4
 c00514a:	61a9      	str	r1, [r5, #24]
 c00514c:	f43f af0a 	beq.w	c004f64 <kad_op_reduce_mean+0x90>
 c005150:	2103      	movs	r1, #3
 c005152:	f8d8 4020 	ldr.w	r4, [r8, #32]
 c005156:	1d08      	adds	r0, r1, #4
 c005158:	f845 4020 	str.w	r4, [r5, r0, lsl #2]
 c00515c:	3101      	adds	r1, #1
 c00515e:	2a05      	cmp	r2, #5
 c005160:	f77f af00 	ble.w	c004f64 <kad_op_reduce_mean+0x90>
 c005164:	2005      	movs	r0, #5
 c005166:	4283      	cmp	r3, r0
 c005168:	d00e      	beq.n	c005188 <kad_op_reduce_mean+0x2b4>
 c00516a:	f108 0410 	add.w	r4, r8, #16
 c00516e:	f854 6020 	ldr.w	r6, [r4, r0, lsl #2]
 c005172:	3001      	adds	r0, #1
 c005174:	1d0c      	adds	r4, r1, #4
 c005176:	4290      	cmp	r0, r2
 c005178:	f845 6024 	str.w	r6, [r5, r4, lsl #2]
 c00517c:	f101 0101 	add.w	r1, r1, #1
 c005180:	dbf1      	blt.n	c005166 <kad_op_reduce_mean+0x292>
 c005182:	e6ef      	b.n	c004f64 <kad_op_reduce_mean+0x90>
 c005184:	2204      	movs	r2, #4
 c005186:	e70c      	b.n	c004fa2 <kad_op_reduce_mean+0xce>
 c005188:	4594      	cmp	ip, r2
 c00518a:	4660      	mov	r0, ip
 c00518c:	dbeb      	blt.n	c005166 <kad_op_reduce_mean+0x292>
 c00518e:	e6e9      	b.n	c004f64 <kad_op_reduce_mean+0x90>
 c005190:	f04f 30ff 	mov.w	r0, #4294967295
 c005194:	e6e7      	b.n	c004f66 <kad_op_reduce_mean+0x92>
 c005196:	f8d8 1018 	ldr.w	r1, [r8, #24]
 c00519a:	2a03      	cmp	r2, #3
 c00519c:	61a9      	str	r1, [r5, #24]
 c00519e:	f43f aee1 	beq.w	c004f64 <kad_op_reduce_mean+0x90>
 c0051a2:	2b03      	cmp	r3, #3
 c0051a4:	d109      	bne.n	c0051ba <kad_op_reduce_mean+0x2e6>
 c0051a6:	2a04      	cmp	r2, #4
 c0051a8:	d1d2      	bne.n	c005150 <kad_op_reduce_mean+0x27c>
 c0051aa:	e6db      	b.n	c004f64 <kad_op_reduce_mean+0x90>
 c0051ac:	f44f 61a0 	mov.w	r1, #1280	@ 0x500
 c0051b0:	4b03      	ldr	r3, [pc, #12]	@ (c0051c0 <kad_op_reduce_mean+0x2ec>)
 c0051b2:	4a04      	ldr	r2, [pc, #16]	@ (c0051c4 <kad_op_reduce_mean+0x2f0>)
 c0051b4:	4804      	ldr	r0, [pc, #16]	@ (c0051c8 <kad_op_reduce_mean+0x2f4>)
 c0051b6:	f009 ff27 	bl	c00f008 <__assert_func>
 c0051ba:	2103      	movs	r1, #3
 c0051bc:	e761      	b.n	c005082 <kad_op_reduce_mean+0x1ae>
 c0051be:	bf00      	nop
 c0051c0:	0c011afc 	.word	0x0c011afc
 c0051c4:	0c011ca4 	.word	0x0c011ca4
 c0051c8:	0c011b04 	.word	0x0c011b04

0c0051cc <kad_op_square>:
 c0051cc:	b538      	push	{r3, r4, r5, lr}
 c0051ce:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c0051d0:	681c      	ldr	r4, [r3, #0]
 c0051d2:	7825      	ldrb	r5, [r4, #0]
 c0051d4:	b305      	cbz	r5, c005218 <kad_op_square+0x4c>
 c0051d6:	2d01      	cmp	r5, #1
 c0051d8:	6923      	ldr	r3, [r4, #16]
 c0051da:	d00c      	beq.n	c0051f6 <kad_op_square+0x2a>
 c0051dc:	6962      	ldr	r2, [r4, #20]
 c0051de:	2d02      	cmp	r5, #2
 c0051e0:	fb02 f303 	mul.w	r3, r2, r3
 c0051e4:	d007      	beq.n	c0051f6 <kad_op_square+0x2a>
 c0051e6:	69a2      	ldr	r2, [r4, #24]
 c0051e8:	2d03      	cmp	r5, #3
 c0051ea:	fb02 f303 	mul.w	r3, r2, r3
 c0051ee:	d002      	beq.n	c0051f6 <kad_op_square+0x2a>
 c0051f0:	69e2      	ldr	r2, [r4, #28]
 c0051f2:	fb02 f303 	mul.w	r3, r2, r3
 c0051f6:	2904      	cmp	r1, #4
 c0051f8:	d005      	beq.n	c005206 <kad_op_square+0x3a>
 c0051fa:	2902      	cmp	r1, #2
 c0051fc:	d017      	beq.n	c00522e <kad_op_square+0x62>
 c0051fe:	2903      	cmp	r1, #3
 c005200:	d027      	beq.n	c005252 <kad_op_square+0x86>
 c005202:	2000      	movs	r0, #0
 c005204:	bd38      	pop	{r3, r4, r5, pc}
 c005206:	00aa      	lsls	r2, r5, #2
 c005208:	f104 0110 	add.w	r1, r4, #16
 c00520c:	f800 5b10 	strb.w	r5, [r0], #16
 c005210:	f00a fadd 	bl	c00f7ce <memcpy>
 c005214:	2000      	movs	r0, #0
 c005216:	bd38      	pop	{r3, r4, r5, pc}
 c005218:	2904      	cmp	r1, #4
 c00521a:	d018      	beq.n	c00524e <kad_op_square+0x82>
 c00521c:	2902      	cmp	r1, #2
 c00521e:	d031      	beq.n	c005284 <kad_op_square+0xb8>
 c005220:	2903      	cmp	r1, #3
 c005222:	d1ee      	bne.n	c005202 <kad_op_square+0x36>
 c005224:	7863      	ldrb	r3, [r4, #1]
 c005226:	07d9      	lsls	r1, r3, #31
 c005228:	d5eb      	bpl.n	c005202 <kad_op_square+0x36>
 c00522a:	2301      	movs	r3, #1
 c00522c:	e016      	b.n	c00525c <kad_op_square+0x90>
 c00522e:	2b00      	cmp	r3, #0
 c005230:	dde7      	ble.n	c005202 <kad_op_square+0x36>
 c005232:	2200      	movs	r2, #0
 c005234:	6aa4      	ldr	r4, [r4, #40]	@ 0x28
 c005236:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 c005238:	ecf4 7a01 	vldmia	r4!, {s15}
 c00523c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 c005240:	3201      	adds	r2, #1
 c005242:	429a      	cmp	r2, r3
 c005244:	ece1 7a01 	vstmia	r1!, {s15}
 c005248:	dbf6      	blt.n	c005238 <kad_op_square+0x6c>
 c00524a:	2000      	movs	r0, #0
 c00524c:	bd38      	pop	{r3, r4, r5, pc}
 c00524e:	7005      	strb	r5, [r0, #0]
 c005250:	e7d7      	b.n	c005202 <kad_op_square+0x36>
 c005252:	7862      	ldrb	r2, [r4, #1]
 c005254:	07d2      	lsls	r2, r2, #31
 c005256:	d5d4      	bpl.n	c005202 <kad_op_square+0x36>
 c005258:	2b00      	cmp	r3, #0
 c00525a:	ddd2      	ble.n	c005202 <kad_op_square+0x36>
 c00525c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 c00525e:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 c005260:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 c005262:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 c005266:	ecf1 7a01 	vldmia	r1!, {s15}
 c00526a:	ed92 7a00 	vldr	s14, [r2]
 c00526e:	ecf0 6a01 	vldmia	r0!, {s13}
 c005272:	ee77 7aa7 	vadd.f32	s15, s15, s15
 c005276:	eea6 7aa7 	vfma.f32	s14, s13, s15
 c00527a:	eca2 7a01 	vstmia	r2!, {s14}
 c00527e:	4293      	cmp	r3, r2
 c005280:	d1f1      	bne.n	c005266 <kad_op_square+0x9a>
 c005282:	e7be      	b.n	c005202 <kad_op_square+0x36>
 c005284:	2301      	movs	r3, #1
 c005286:	e7d4      	b.n	c005232 <kad_op_square+0x66>

0c005288 <kad_op_relu>:
 c005288:	b570      	push	{r4, r5, r6, lr}
 c00528a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c00528c:	681c      	ldr	r4, [r3, #0]
 c00528e:	7825      	ldrb	r5, [r4, #0]
 c005290:	b305      	cbz	r5, c0052d4 <kad_op_relu+0x4c>
 c005292:	2d01      	cmp	r5, #1
 c005294:	6923      	ldr	r3, [r4, #16]
 c005296:	d00c      	beq.n	c0052b2 <kad_op_relu+0x2a>
 c005298:	6962      	ldr	r2, [r4, #20]
 c00529a:	2d02      	cmp	r5, #2
 c00529c:	fb02 f303 	mul.w	r3, r2, r3
 c0052a0:	d007      	beq.n	c0052b2 <kad_op_relu+0x2a>
 c0052a2:	69a2      	ldr	r2, [r4, #24]
 c0052a4:	2d03      	cmp	r5, #3
 c0052a6:	fb02 f303 	mul.w	r3, r2, r3
 c0052aa:	d002      	beq.n	c0052b2 <kad_op_relu+0x2a>
 c0052ac:	69e2      	ldr	r2, [r4, #28]
 c0052ae:	fb02 f303 	mul.w	r3, r2, r3
 c0052b2:	2904      	cmp	r1, #4
 c0052b4:	d005      	beq.n	c0052c2 <kad_op_relu+0x3a>
 c0052b6:	2902      	cmp	r1, #2
 c0052b8:	d017      	beq.n	c0052ea <kad_op_relu+0x62>
 c0052ba:	2903      	cmp	r1, #3
 c0052bc:	d02e      	beq.n	c00531c <kad_op_relu+0x94>
 c0052be:	2000      	movs	r0, #0
 c0052c0:	bd70      	pop	{r4, r5, r6, pc}
 c0052c2:	00aa      	lsls	r2, r5, #2
 c0052c4:	f104 0110 	add.w	r1, r4, #16
 c0052c8:	f800 5b10 	strb.w	r5, [r0], #16
 c0052cc:	f00a fa7f 	bl	c00f7ce <memcpy>
 c0052d0:	2000      	movs	r0, #0
 c0052d2:	bd70      	pop	{r4, r5, r6, pc}
 c0052d4:	2904      	cmp	r1, #4
 c0052d6:	d01f      	beq.n	c005318 <kad_op_relu+0x90>
 c0052d8:	2902      	cmp	r1, #2
 c0052da:	d041      	beq.n	c005360 <kad_op_relu+0xd8>
 c0052dc:	2903      	cmp	r1, #3
 c0052de:	d1ee      	bne.n	c0052be <kad_op_relu+0x36>
 c0052e0:	7863      	ldrb	r3, [r4, #1]
 c0052e2:	07d9      	lsls	r1, r3, #31
 c0052e4:	d5eb      	bpl.n	c0052be <kad_op_relu+0x36>
 c0052e6:	2301      	movs	r3, #1
 c0052e8:	e01d      	b.n	c005326 <kad_op_relu+0x9e>
 c0052ea:	2b00      	cmp	r3, #0
 c0052ec:	dde7      	ble.n	c0052be <kad_op_relu+0x36>
 c0052ee:	2200      	movs	r2, #0
 c0052f0:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ c005364 <kad_op_relu+0xdc>
 c0052f4:	6aa4      	ldr	r4, [r4, #40]	@ 0x28
 c0052f6:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 c0052f8:	ecf4 7a01 	vldmia	r4!, {s15}
 c0052fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 c005300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c005304:	bfd8      	it	le
 c005306:	eef0 7a47 	vmovle.f32	s15, s14
 c00530a:	3201      	adds	r2, #1
 c00530c:	429a      	cmp	r2, r3
 c00530e:	ece1 7a01 	vstmia	r1!, {s15}
 c005312:	dbf1      	blt.n	c0052f8 <kad_op_relu+0x70>
 c005314:	2000      	movs	r0, #0
 c005316:	bd70      	pop	{r4, r5, r6, pc}
 c005318:	7005      	strb	r5, [r0, #0]
 c00531a:	e7d0      	b.n	c0052be <kad_op_relu+0x36>
 c00531c:	7862      	ldrb	r2, [r4, #1]
 c00531e:	07d2      	lsls	r2, r2, #31
 c005320:	d5cd      	bpl.n	c0052be <kad_op_relu+0x36>
 c005322:	2b00      	cmp	r3, #0
 c005324:	ddcb      	ble.n	c0052be <kad_op_relu+0x36>
 c005326:	2200      	movs	r2, #0
 c005328:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 c00532a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 c00532e:	ecf1 7a01 	vldmia	r1!, {s15}
 c005332:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 c005336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c00533a:	dd0c      	ble.n	c005356 <kad_op_relu+0xce>
 c00533c:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
 c00533e:	6ac6      	ldr	r6, [r0, #44]	@ 0x2c
 c005340:	4415      	add	r5, r2
 c005342:	eb06 0c02 	add.w	ip, r6, r2
 c005346:	edd5 7a00 	vldr	s15, [r5]
 c00534a:	ed9c 7a00 	vldr	s14, [ip]
 c00534e:	ee77 7a87 	vadd.f32	s15, s15, s14
 c005352:	edc5 7a00 	vstr	s15, [r5]
 c005356:	4299      	cmp	r1, r3
 c005358:	f102 0204 	add.w	r2, r2, #4
 c00535c:	d1e7      	bne.n	c00532e <kad_op_relu+0xa6>
 c00535e:	e7ae      	b.n	c0052be <kad_op_relu+0x36>
 c005360:	2301      	movs	r3, #1
 c005362:	e7c4      	b.n	c0052ee <kad_op_relu+0x66>
 c005364:	00000000 	.word	0x00000000

0c005368 <kad_op_max>:
 c005368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00536c:	4605      	mov	r5, r0
 c00536e:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 c005370:	6806      	ldr	r6, [r0, #0]
 c005372:	f896 8000 	ldrb.w	r8, [r6]
 c005376:	f1b8 0f00 	cmp.w	r8, #0
 c00537a:	d048      	beq.n	c00540e <kad_op_max+0xa6>
 c00537c:	f1b8 0f01 	cmp.w	r8, #1
 c005380:	6934      	ldr	r4, [r6, #16]
 c005382:	d00e      	beq.n	c0053a2 <kad_op_max+0x3a>
 c005384:	6973      	ldr	r3, [r6, #20]
 c005386:	f1b8 0f02 	cmp.w	r8, #2
 c00538a:	fb03 f404 	mul.w	r4, r3, r4
 c00538e:	d008      	beq.n	c0053a2 <kad_op_max+0x3a>
 c005390:	69b3      	ldr	r3, [r6, #24]
 c005392:	f1b8 0f03 	cmp.w	r8, #3
 c005396:	fb03 f404 	mul.w	r4, r3, r4
 c00539a:	d002      	beq.n	c0053a2 <kad_op_max+0x3a>
 c00539c:	69f3      	ldr	r3, [r6, #28]
 c00539e:	fb03 f404 	mul.w	r4, r3, r4
 c0053a2:	2904      	cmp	r1, #4
 c0053a4:	d007      	beq.n	c0053b6 <kad_op_max+0x4e>
 c0053a6:	2902      	cmp	r1, #2
 c0053a8:	d03a      	beq.n	c005420 <kad_op_max+0xb8>
 c0053aa:	2903      	cmp	r1, #3
 c0053ac:	f000 8086 	beq.w	c0054bc <kad_op_max+0x154>
 c0053b0:	2000      	movs	r0, #0
 c0053b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c0053b6:	686f      	ldr	r7, [r5, #4]
 c0053b8:	2f01      	cmp	r7, #1
 c0053ba:	f340 809b 	ble.w	c0054f4 <kad_op_max+0x18c>
 c0053be:	4686      	mov	lr, r0
 c0053c0:	f04f 0c01 	mov.w	ip, #1
 c0053c4:	e015      	b.n	c0053f2 <kad_op_max+0x8a>
 c0053c6:	2a01      	cmp	r2, #1
 c0053c8:	690b      	ldr	r3, [r1, #16]
 c0053ca:	d00c      	beq.n	c0053e6 <kad_op_max+0x7e>
 c0053cc:	6948      	ldr	r0, [r1, #20]
 c0053ce:	2a02      	cmp	r2, #2
 c0053d0:	fb00 f303 	mul.w	r3, r0, r3
 c0053d4:	d007      	beq.n	c0053e6 <kad_op_max+0x7e>
 c0053d6:	6988      	ldr	r0, [r1, #24]
 c0053d8:	2a03      	cmp	r2, #3
 c0053da:	fb00 f303 	mul.w	r3, r0, r3
 c0053de:	d002      	beq.n	c0053e6 <kad_op_max+0x7e>
 c0053e0:	69ca      	ldr	r2, [r1, #28]
 c0053e2:	fb02 f303 	mul.w	r3, r2, r3
 c0053e6:	429c      	cmp	r4, r3
 c0053e8:	f10c 0c01 	add.w	ip, ip, #1
 c0053ec:	d10b      	bne.n	c005406 <kad_op_max+0x9e>
 c0053ee:	45bc      	cmp	ip, r7
 c0053f0:	da54      	bge.n	c00549c <kad_op_max+0x134>
 c0053f2:	f85e 1f04 	ldr.w	r1, [lr, #4]!
 c0053f6:	780a      	ldrb	r2, [r1, #0]
 c0053f8:	2a00      	cmp	r2, #0
 c0053fa:	d1e4      	bne.n	c0053c6 <kad_op_max+0x5e>
 c0053fc:	2301      	movs	r3, #1
 c0053fe:	429c      	cmp	r4, r3
 c005400:	f10c 0c01 	add.w	ip, ip, #1
 c005404:	d0f3      	beq.n	c0053ee <kad_op_max+0x86>
 c005406:	f04f 30ff 	mov.w	r0, #4294967295
 c00540a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00540e:	2904      	cmp	r1, #4
 c005410:	d03a      	beq.n	c005488 <kad_op_max+0x120>
 c005412:	2902      	cmp	r1, #2
 c005414:	d079      	beq.n	c00550a <kad_op_max+0x1a2>
 c005416:	2903      	cmp	r1, #3
 c005418:	d1ca      	bne.n	c0053b0 <kad_op_max+0x48>
 c00541a:	2401      	movs	r4, #1
 c00541c:	6b6e      	ldr	r6, [r5, #52]	@ 0x34
 c00541e:	e051      	b.n	c0054c4 <kad_op_max+0x15c>
 c005420:	6b6f      	ldr	r7, [r5, #52]	@ 0x34
 c005422:	ea4f 0884 	mov.w	r8, r4, lsl #2
 c005426:	2100      	movs	r1, #0
 c005428:	4642      	mov	r2, r8
 c00542a:	4638      	mov	r0, r7
 c00542c:	f00a f900 	bl	c00f630 <memset>
 c005430:	4642      	mov	r2, r8
 c005432:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 c005434:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 c005436:	f00a f9ca 	bl	c00f7ce <memcpy>
 c00543a:	686b      	ldr	r3, [r5, #4]
 c00543c:	2b01      	cmp	r3, #1
 c00543e:	ddb7      	ble.n	c0053b0 <kad_op_max+0x48>
 c005440:	2c00      	cmp	r4, #0
 c005442:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c005444:	ddb4      	ble.n	c0053b0 <kad_op_max+0x48>
 c005446:	2401      	movs	r4, #1
 c005448:	6aae      	ldr	r6, [r5, #40]	@ 0x28
 c00544a:	1f15      	subs	r5, r2, #4
 c00544c:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 c005450:	4638      	mov	r0, r7
 c005452:	4631      	mov	r1, r6
 c005454:	f852 3f04 	ldr.w	r3, [r2, #4]!
 c005458:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c00545a:	eb08 0c03 	add.w	ip, r8, r3
 c00545e:	ecf3 7a01 	vldmia	r3!, {s15}
 c005462:	ecb1 7a01 	vldmia	r1!, {s14}
 c005466:	eef4 7ac7 	vcmpe.f32	s15, s14
 c00546a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c00546e:	bfc4      	itt	gt
 c005470:	ed41 7a01 	vstrgt	s15, [r1, #-4]
 c005474:	6004      	strgt	r4, [r0, #0]
 c005476:	4563      	cmp	r3, ip
 c005478:	f100 0004 	add.w	r0, r0, #4
 c00547c:	d1ef      	bne.n	c00545e <kad_op_max+0xf6>
 c00547e:	4295      	cmp	r5, r2
 c005480:	f104 0401 	add.w	r4, r4, #1
 c005484:	d1e4      	bne.n	c005450 <kad_op_max+0xe8>
 c005486:	e793      	b.n	c0053b0 <kad_op_max+0x48>
 c005488:	686f      	ldr	r7, [r5, #4]
 c00548a:	2f01      	cmp	r7, #1
 c00548c:	bfc8      	it	gt
 c00548e:	2401      	movgt	r4, #1
 c005490:	dc95      	bgt.n	c0053be <kad_op_max+0x56>
 c005492:	460e      	mov	r6, r1
 c005494:	2001      	movs	r0, #1
 c005496:	f885 8000 	strb.w	r8, [r5]
 c00549a:	e006      	b.n	c0054aa <kad_op_max+0x142>
 c00549c:	f885 8000 	strb.w	r8, [r5]
 c0054a0:	f1b8 0f00 	cmp.w	r8, #0
 c0054a4:	d128      	bne.n	c0054f8 <kad_op_max+0x190>
 c0054a6:	4620      	mov	r0, r4
 c0054a8:	00a6      	lsls	r6, r4, #2
 c0054aa:	2104      	movs	r1, #4
 c0054ac:	f009 fdca 	bl	c00f044 <calloc>
 c0054b0:	4a1d      	ldr	r2, [pc, #116]	@ (c005528 <kad_op_max+0x1c0>)
 c0054b2:	6368      	str	r0, [r5, #52]	@ 0x34
 c0054b4:	6813      	ldr	r3, [r2, #0]
 c0054b6:	4433      	add	r3, r6
 c0054b8:	6013      	str	r3, [r2, #0]
 c0054ba:	e779      	b.n	c0053b0 <kad_op_max+0x48>
 c0054bc:	2c00      	cmp	r4, #0
 c0054be:	6b6e      	ldr	r6, [r5, #52]	@ 0x34
 c0054c0:	f77f af76 	ble.w	c0053b0 <kad_op_max+0x48>
 c0054c4:	1f32      	subs	r2, r6, #4
 c0054c6:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 c0054c8:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 c0054cc:	f1c6 0604 	rsb	r6, r6, #4
 c0054d0:	18b5      	adds	r5, r6, r2
 c0054d2:	f852 3f04 	ldr.w	r3, [r2, #4]!
 c0054d6:	ecb1 7a01 	vldmia	r1!, {s14}
 c0054da:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 c0054de:	4294      	cmp	r4, r2
 c0054e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 c0054e2:	442b      	add	r3, r5
 c0054e4:	edd3 7a00 	vldr	s15, [r3]
 c0054e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 c0054ec:	edc3 7a00 	vstr	s15, [r3]
 c0054f0:	d1ee      	bne.n	c0054d0 <kad_op_max+0x168>
 c0054f2:	e75d      	b.n	c0053b0 <kad_op_max+0x48>
 c0054f4:	f885 8000 	strb.w	r8, [r5]
 c0054f8:	ea4f 0288 	mov.w	r2, r8, lsl #2
 c0054fc:	f106 0110 	add.w	r1, r6, #16
 c005500:	f105 0010 	add.w	r0, r5, #16
 c005504:	f00a f963 	bl	c00f7ce <memcpy>
 c005508:	e7cd      	b.n	c0054a6 <kad_op_max+0x13e>
 c00550a:	6b6f      	ldr	r7, [r5, #52]	@ 0x34
 c00550c:	f8c7 8000 	str.w	r8, [r7]
 c005510:	6ab2      	ldr	r2, [r6, #40]	@ 0x28
 c005512:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c005514:	6812      	ldr	r2, [r2, #0]
 c005516:	601a      	str	r2, [r3, #0]
 c005518:	686b      	ldr	r3, [r5, #4]
 c00551a:	2b01      	cmp	r3, #1
 c00551c:	f77f af48 	ble.w	c0053b0 <kad_op_max+0x48>
 c005520:	f04f 0804 	mov.w	r8, #4
 c005524:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c005526:	e78e      	b.n	c005446 <kad_op_max+0xde>
 c005528:	30000254 	.word	0x30000254

0c00552c <kad_op_mul>:
 c00552c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c005530:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c005532:	4680      	mov	r8, r0
 c005534:	681e      	ldr	r6, [r3, #0]
 c005536:	b083      	sub	sp, #12
 c005538:	7832      	ldrb	r2, [r6, #0]
 c00553a:	2a00      	cmp	r2, #0
 c00553c:	d079      	beq.n	c005632 <kad_op_mul+0x106>
 c00553e:	2a01      	cmp	r2, #1
 c005540:	6935      	ldr	r5, [r6, #16]
 c005542:	d00c      	beq.n	c00555e <kad_op_mul+0x32>
 c005544:	6970      	ldr	r0, [r6, #20]
 c005546:	2a02      	cmp	r2, #2
 c005548:	fb00 f505 	mul.w	r5, r0, r5
 c00554c:	d007      	beq.n	c00555e <kad_op_mul+0x32>
 c00554e:	69b0      	ldr	r0, [r6, #24]
 c005550:	2a03      	cmp	r2, #3
 c005552:	fb00 f505 	mul.w	r5, r0, r5
 c005556:	d002      	beq.n	c00555e <kad_op_mul+0x32>
 c005558:	69f0      	ldr	r0, [r6, #28]
 c00555a:	fb00 f505 	mul.w	r5, r0, r5
 c00555e:	685f      	ldr	r7, [r3, #4]
 c005560:	783b      	ldrb	r3, [r7, #0]
 c005562:	2b00      	cmp	r3, #0
 c005564:	d061      	beq.n	c00562a <kad_op_mul+0xfe>
 c005566:	2b01      	cmp	r3, #1
 c005568:	693c      	ldr	r4, [r7, #16]
 c00556a:	d00c      	beq.n	c005586 <kad_op_mul+0x5a>
 c00556c:	6978      	ldr	r0, [r7, #20]
 c00556e:	2b02      	cmp	r3, #2
 c005570:	fb00 f404 	mul.w	r4, r0, r4
 c005574:	d007      	beq.n	c005586 <kad_op_mul+0x5a>
 c005576:	69b8      	ldr	r0, [r7, #24]
 c005578:	2b03      	cmp	r3, #3
 c00557a:	fb00 f404 	mul.w	r4, r0, r4
 c00557e:	d002      	beq.n	c005586 <kad_op_mul+0x5a>
 c005580:	69fb      	ldr	r3, [r7, #28]
 c005582:	fb03 f404 	mul.w	r4, r3, r4
 c005586:	2904      	cmp	r1, #4
 c005588:	d03d      	beq.n	c005606 <kad_op_mul+0xda>
 c00558a:	2902      	cmp	r1, #2
 c00558c:	d005      	beq.n	c00559a <kad_op_mul+0x6e>
 c00558e:	2903      	cmp	r1, #3
 c005590:	d051      	beq.n	c005636 <kad_op_mul+0x10a>
 c005592:	2000      	movs	r0, #0
 c005594:	b003      	add	sp, #12
 c005596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00559a:	42a5      	cmp	r5, r4
 c00559c:	f2c0 80b8 	blt.w	c005710 <kad_op_mul+0x1e4>
 c0055a0:	2100      	movs	r1, #0
 c0055a2:	f8d8 0028 	ldr.w	r0, [r8, #40]	@ 0x28
 c0055a6:	00aa      	lsls	r2, r5, #2
 c0055a8:	f00a f842 	bl	c00f630 <memset>
 c0055ac:	f8d6 e028 	ldr.w	lr, [r6, #40]	@ 0x28
 c0055b0:	f1be 0f00 	cmp.w	lr, #0
 c0055b4:	d0ed      	beq.n	c005592 <kad_op_mul+0x66>
 c0055b6:	f8d7 9028 	ldr.w	r9, [r7, #40]	@ 0x28
 c0055ba:	f1b9 0f00 	cmp.w	r9, #0
 c0055be:	d0e8      	beq.n	c005592 <kad_op_mul+0x66>
 c0055c0:	2d00      	cmp	r5, #0
 c0055c2:	dde6      	ble.n	c005592 <kad_op_mul+0x66>
 c0055c4:	2c00      	cmp	r4, #0
 c0055c6:	f8d8 8028 	ldr.w	r8, [r8, #40]	@ 0x28
 c0055ca:	dde2      	ble.n	c005592 <kad_op_mul+0x66>
 c0055cc:	2600      	movs	r6, #0
 c0055ce:	4637      	mov	r7, r6
 c0055d0:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 c0055d4:	eb08 0084 	add.w	r0, r8, r4, lsl #2
 c0055d8:	4649      	mov	r1, r9
 c0055da:	eb08 0306 	add.w	r3, r8, r6
 c0055de:	eb0e 0206 	add.w	r2, lr, r6
 c0055e2:	edd3 7a00 	vldr	s15, [r3]
 c0055e6:	ecf2 6a01 	vldmia	r2!, {s13}
 c0055ea:	ecb1 7a01 	vldmia	r1!, {s14}
 c0055ee:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0055f2:	ece3 7a01 	vstmia	r3!, {s15}
 c0055f6:	4298      	cmp	r0, r3
 c0055f8:	d1f3      	bne.n	c0055e2 <kad_op_mul+0xb6>
 c0055fa:	4427      	add	r7, r4
 c0055fc:	42bd      	cmp	r5, r7
 c0055fe:	4466      	add	r6, ip
 c005600:	4460      	add	r0, ip
 c005602:	dce9      	bgt.n	c0055d8 <kad_op_mul+0xac>
 c005604:	e7c5      	b.n	c005592 <kad_op_mul+0x66>
 c005606:	fb95 f3f4 	sdiv	r3, r5, r4
 c00560a:	fb04 5313 	mls	r3, r4, r3, r5
 c00560e:	2b00      	cmp	r3, #0
 c005610:	d17b      	bne.n	c00570a <kad_op_mul+0x1de>
 c005612:	f888 2000 	strb.w	r2, [r8]
 c005616:	2a00      	cmp	r2, #0
 c005618:	d0bb      	beq.n	c005592 <kad_op_mul+0x66>
 c00561a:	0092      	lsls	r2, r2, #2
 c00561c:	f106 0110 	add.w	r1, r6, #16
 c005620:	f108 0010 	add.w	r0, r8, #16
 c005624:	f00a f8d3 	bl	c00f7ce <memcpy>
 c005628:	e7b3      	b.n	c005592 <kad_op_mul+0x66>
 c00562a:	2904      	cmp	r1, #4
 c00562c:	d0f1      	beq.n	c005612 <kad_op_mul+0xe6>
 c00562e:	2401      	movs	r4, #1
 c005630:	e7ab      	b.n	c00558a <kad_op_mul+0x5e>
 c005632:	2501      	movs	r5, #1
 c005634:	e793      	b.n	c00555e <kad_op_mul+0x32>
 c005636:	7872      	ldrb	r2, [r6, #1]
 c005638:	787b      	ldrb	r3, [r7, #1]
 c00563a:	07d2      	lsls	r2, r2, #31
 c00563c:	f003 0301 	and.w	r3, r3, #1
 c005640:	d534      	bpl.n	c0056ac <kad_op_mul+0x180>
 c005642:	f8d7 a028 	ldr.w	sl, [r7, #40]	@ 0x28
 c005646:	f1ba 0f00 	cmp.w	sl, #0
 c00564a:	d02f      	beq.n	c0056ac <kad_op_mul+0x180>
 c00564c:	2d00      	cmp	r5, #0
 c00564e:	dda0      	ble.n	c005592 <kad_op_mul+0x66>
 c005650:	2c00      	cmp	r4, #0
 c005652:	f8d8 802c 	ldr.w	r8, [r8, #44]	@ 0x2c
 c005656:	f8d6 b02c 	ldr.w	fp, [r6, #44]	@ 0x2c
 c00565a:	dd1e      	ble.n	c00569a <kad_op_mul+0x16e>
 c00565c:	f04f 0c00 	mov.w	ip, #0
 c005660:	46e6      	mov	lr, ip
 c005662:	ea4f 0984 	mov.w	r9, r4, lsl #2
 c005666:	eb0b 0084 	add.w	r0, fp, r4, lsl #2
 c00566a:	9601      	str	r6, [sp, #4]
 c00566c:	4656      	mov	r6, sl
 c00566e:	eb0b 020c 	add.w	r2, fp, ip
 c005672:	eb08 010c 	add.w	r1, r8, ip
 c005676:	edd2 7a00 	vldr	s15, [r2]
 c00567a:	ecf1 6a01 	vldmia	r1!, {s13}
 c00567e:	ecb6 7a01 	vldmia	r6!, {s14}
 c005682:	eee6 7a87 	vfma.f32	s15, s13, s14
 c005686:	ece2 7a01 	vstmia	r2!, {s15}
 c00568a:	4290      	cmp	r0, r2
 c00568c:	d1f3      	bne.n	c005676 <kad_op_mul+0x14a>
 c00568e:	44a6      	add	lr, r4
 c005690:	4575      	cmp	r5, lr
 c005692:	44cc      	add	ip, r9
 c005694:	4448      	add	r0, r9
 c005696:	dce9      	bgt.n	c00566c <kad_op_mul+0x140>
 c005698:	9e01      	ldr	r6, [sp, #4]
 c00569a:	2b00      	cmp	r3, #0
 c00569c:	f43f af79 	beq.w	c005592 <kad_op_mul+0x66>
 c0056a0:	f8d6 c028 	ldr.w	ip, [r6, #40]	@ 0x28
 c0056a4:	f1bc 0f00 	cmp.w	ip, #0
 c0056a8:	d10e      	bne.n	c0056c8 <kad_op_mul+0x19c>
 c0056aa:	e772      	b.n	c005592 <kad_op_mul+0x66>
 c0056ac:	2b00      	cmp	r3, #0
 c0056ae:	f43f af70 	beq.w	c005592 <kad_op_mul+0x66>
 c0056b2:	f8d6 c028 	ldr.w	ip, [r6, #40]	@ 0x28
 c0056b6:	f1bc 0f00 	cmp.w	ip, #0
 c0056ba:	f43f af6a 	beq.w	c005592 <kad_op_mul+0x66>
 c0056be:	2d00      	cmp	r5, #0
 c0056c0:	f77f af67 	ble.w	c005592 <kad_op_mul+0x66>
 c0056c4:	f8d8 802c 	ldr.w	r8, [r8, #44]	@ 0x2c
 c0056c8:	2c00      	cmp	r4, #0
 c0056ca:	f8d7 e02c 	ldr.w	lr, [r7, #44]	@ 0x2c
 c0056ce:	f77f af60 	ble.w	c005592 <kad_op_mul+0x66>
 c0056d2:	2600      	movs	r6, #0
 c0056d4:	4637      	mov	r7, r6
 c0056d6:	ea4f 0984 	mov.w	r9, r4, lsl #2
 c0056da:	eb0e 0084 	add.w	r0, lr, r4, lsl #2
 c0056de:	4673      	mov	r3, lr
 c0056e0:	eb08 0106 	add.w	r1, r8, r6
 c0056e4:	eb0c 0206 	add.w	r2, ip, r6
 c0056e8:	edd3 7a00 	vldr	s15, [r3]
 c0056ec:	ecf1 6a01 	vldmia	r1!, {s13}
 c0056f0:	ecb2 7a01 	vldmia	r2!, {s14}
 c0056f4:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0056f8:	ece3 7a01 	vstmia	r3!, {s15}
 c0056fc:	4298      	cmp	r0, r3
 c0056fe:	d1f3      	bne.n	c0056e8 <kad_op_mul+0x1bc>
 c005700:	4427      	add	r7, r4
 c005702:	42bd      	cmp	r5, r7
 c005704:	444e      	add	r6, r9
 c005706:	dcea      	bgt.n	c0056de <kad_op_mul+0x1b2>
 c005708:	e743      	b.n	c005592 <kad_op_mul+0x66>
 c00570a:	f04f 30ff 	mov.w	r0, #4294967295
 c00570e:	e741      	b.n	c005594 <kad_op_mul+0x68>
 c005710:	f240 4159 	movw	r1, #1113	@ 0x459
 c005714:	4b02      	ldr	r3, [pc, #8]	@ (c005720 <kad_op_mul+0x1f4>)
 c005716:	4a03      	ldr	r2, [pc, #12]	@ (c005724 <kad_op_mul+0x1f8>)
 c005718:	4803      	ldr	r0, [pc, #12]	@ (c005728 <kad_op_mul+0x1fc>)
 c00571a:	f009 fc75 	bl	c00f008 <__assert_func>
 c00571e:	bf00      	nop
 c005720:	0c011b24 	.word	0x0c011b24
 c005724:	0c011ccc 	.word	0x0c011ccc
 c005728:	0c011b04 	.word	0x0c011b04

0c00572c <kad_op_add>:
 c00572c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c005730:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c005732:	4680      	mov	r8, r0
 c005734:	6818      	ldr	r0, [r3, #0]
 c005736:	7802      	ldrb	r2, [r0, #0]
 c005738:	2a00      	cmp	r2, #0
 c00573a:	d06d      	beq.n	c005818 <kad_op_add+0xec>
 c00573c:	2a01      	cmp	r2, #1
 c00573e:	6905      	ldr	r5, [r0, #16]
 c005740:	d00c      	beq.n	c00575c <kad_op_add+0x30>
 c005742:	6944      	ldr	r4, [r0, #20]
 c005744:	2a02      	cmp	r2, #2
 c005746:	fb04 f505 	mul.w	r5, r4, r5
 c00574a:	d007      	beq.n	c00575c <kad_op_add+0x30>
 c00574c:	6984      	ldr	r4, [r0, #24]
 c00574e:	2a03      	cmp	r2, #3
 c005750:	fb04 f505 	mul.w	r5, r4, r5
 c005754:	d002      	beq.n	c00575c <kad_op_add+0x30>
 c005756:	69c4      	ldr	r4, [r0, #28]
 c005758:	fb04 f505 	mul.w	r5, r4, r5
 c00575c:	685f      	ldr	r7, [r3, #4]
 c00575e:	783b      	ldrb	r3, [r7, #0]
 c005760:	2b00      	cmp	r3, #0
 c005762:	d055      	beq.n	c005810 <kad_op_add+0xe4>
 c005764:	2b01      	cmp	r3, #1
 c005766:	693c      	ldr	r4, [r7, #16]
 c005768:	d00c      	beq.n	c005784 <kad_op_add+0x58>
 c00576a:	697e      	ldr	r6, [r7, #20]
 c00576c:	2b02      	cmp	r3, #2
 c00576e:	fb06 f404 	mul.w	r4, r6, r4
 c005772:	d007      	beq.n	c005784 <kad_op_add+0x58>
 c005774:	69be      	ldr	r6, [r7, #24]
 c005776:	2b03      	cmp	r3, #3
 c005778:	fb06 f404 	mul.w	r4, r6, r4
 c00577c:	d002      	beq.n	c005784 <kad_op_add+0x58>
 c00577e:	69fb      	ldr	r3, [r7, #28]
 c005780:	fb03 f404 	mul.w	r4, r3, r4
 c005784:	2904      	cmp	r1, #4
 c005786:	d031      	beq.n	c0057ec <kad_op_add+0xc0>
 c005788:	2902      	cmp	r1, #2
 c00578a:	d004      	beq.n	c005796 <kad_op_add+0x6a>
 c00578c:	2903      	cmp	r1, #3
 c00578e:	d045      	beq.n	c00581c <kad_op_add+0xf0>
 c005790:	2000      	movs	r0, #0
 c005792:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c005796:	42ac      	cmp	r4, r5
 c005798:	dc7a      	bgt.n	c005890 <kad_op_add+0x164>
 c00579a:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 c00579c:	00aa      	lsls	r2, r5, #2
 c00579e:	f8d8 0028 	ldr.w	r0, [r8, #40]	@ 0x28
 c0057a2:	f00a f814 	bl	c00f7ce <memcpy>
 c0057a6:	2d00      	cmp	r5, #0
 c0057a8:	ddf2      	ble.n	c005790 <kad_op_add+0x64>
 c0057aa:	2c00      	cmp	r4, #0
 c0057ac:	6abf      	ldr	r7, [r7, #40]	@ 0x28
 c0057ae:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 c0057b2:	dded      	ble.n	c005790 <kad_op_add+0x64>
 c0057b4:	2000      	movs	r0, #0
 c0057b6:	ebc4 7e44 	rsb	lr, r4, r4, lsl #29
 c0057ba:	00a6      	lsls	r6, r4, #2
 c0057bc:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 c0057c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 c0057c4:	eba1 0c06 	sub.w	ip, r1, r6
 c0057c8:	463a      	mov	r2, r7
 c0057ca:	4663      	mov	r3, ip
 c0057cc:	edd3 7a00 	vldr	s15, [r3]
 c0057d0:	ecb2 7a01 	vldmia	r2!, {s14}
 c0057d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 c0057d8:	ece3 7a01 	vstmia	r3!, {s15}
 c0057dc:	428b      	cmp	r3, r1
 c0057de:	d1f5      	bne.n	c0057cc <kad_op_add+0xa0>
 c0057e0:	4420      	add	r0, r4
 c0057e2:	42a8      	cmp	r0, r5
 c0057e4:	ebac 010e 	sub.w	r1, ip, lr
 c0057e8:	dbec      	blt.n	c0057c4 <kad_op_add+0x98>
 c0057ea:	e7d1      	b.n	c005790 <kad_op_add+0x64>
 c0057ec:	fb95 f3f4 	sdiv	r3, r5, r4
 c0057f0:	fb04 5313 	mls	r3, r4, r3, r5
 c0057f4:	2b00      	cmp	r3, #0
 c0057f6:	d148      	bne.n	c00588a <kad_op_add+0x15e>
 c0057f8:	f888 2000 	strb.w	r2, [r8]
 c0057fc:	2a00      	cmp	r2, #0
 c0057fe:	d0c7      	beq.n	c005790 <kad_op_add+0x64>
 c005800:	f100 0110 	add.w	r1, r0, #16
 c005804:	0092      	lsls	r2, r2, #2
 c005806:	f108 0010 	add.w	r0, r8, #16
 c00580a:	f009 ffe0 	bl	c00f7ce <memcpy>
 c00580e:	e7bf      	b.n	c005790 <kad_op_add+0x64>
 c005810:	2904      	cmp	r1, #4
 c005812:	d0f1      	beq.n	c0057f8 <kad_op_add+0xcc>
 c005814:	2401      	movs	r4, #1
 c005816:	e7b7      	b.n	c005788 <kad_op_add+0x5c>
 c005818:	2501      	movs	r5, #1
 c00581a:	e79f      	b.n	c00575c <kad_op_add+0x30>
 c00581c:	7843      	ldrb	r3, [r0, #1]
 c00581e:	07d9      	lsls	r1, r3, #31
 c005820:	d52b      	bpl.n	c00587a <kad_op_add+0x14e>
 c005822:	2d00      	cmp	r5, #0
 c005824:	f8d8 602c 	ldr.w	r6, [r8, #44]	@ 0x2c
 c005828:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 c00582a:	ddb1      	ble.n	c005790 <kad_op_add+0x64>
 c00582c:	4632      	mov	r2, r6
 c00582e:	eb03 0185 	add.w	r1, r3, r5, lsl #2
 c005832:	edd3 7a00 	vldr	s15, [r3]
 c005836:	ecb2 7a01 	vldmia	r2!, {s14}
 c00583a:	ee77 7a87 	vadd.f32	s15, s15, s14
 c00583e:	ece3 7a01 	vstmia	r3!, {s15}
 c005842:	4299      	cmp	r1, r3
 c005844:	d1f5      	bne.n	c005832 <kad_op_add+0x106>
 c005846:	787b      	ldrb	r3, [r7, #1]
 c005848:	07db      	lsls	r3, r3, #31
 c00584a:	d5a1      	bpl.n	c005790 <kad_op_add+0x64>
 c00584c:	2c00      	cmp	r4, #0
 c00584e:	6aff      	ldr	r7, [r7, #44]	@ 0x2c
 c005850:	dd9e      	ble.n	c005790 <kad_op_add+0x64>
 c005852:	2000      	movs	r0, #0
 c005854:	eb07 0184 	add.w	r1, r7, r4, lsl #2
 c005858:	463b      	mov	r3, r7
 c00585a:	eb06 0280 	add.w	r2, r6, r0, lsl #2
 c00585e:	edd3 7a00 	vldr	s15, [r3]
 c005862:	ecb2 7a01 	vldmia	r2!, {s14}
 c005866:	ee77 7a87 	vadd.f32	s15, s15, s14
 c00586a:	ece3 7a01 	vstmia	r3!, {s15}
 c00586e:	4299      	cmp	r1, r3
 c005870:	d1f5      	bne.n	c00585e <kad_op_add+0x132>
 c005872:	4420      	add	r0, r4
 c005874:	42a8      	cmp	r0, r5
 c005876:	dbef      	blt.n	c005858 <kad_op_add+0x12c>
 c005878:	e78a      	b.n	c005790 <kad_op_add+0x64>
 c00587a:	787b      	ldrb	r3, [r7, #1]
 c00587c:	07da      	lsls	r2, r3, #31
 c00587e:	d587      	bpl.n	c005790 <kad_op_add+0x64>
 c005880:	2d00      	cmp	r5, #0
 c005882:	dd85      	ble.n	c005790 <kad_op_add+0x64>
 c005884:	f8d8 602c 	ldr.w	r6, [r8, #44]	@ 0x2c
 c005888:	e7e0      	b.n	c00584c <kad_op_add+0x120>
 c00588a:	f04f 30ff 	mov.w	r0, #4294967295
 c00588e:	e780      	b.n	c005792 <kad_op_add+0x66>
 c005890:	f240 4129 	movw	r1, #1065	@ 0x429
 c005894:	4b02      	ldr	r3, [pc, #8]	@ (c0058a0 <kad_op_add+0x174>)
 c005896:	4a03      	ldr	r2, [pc, #12]	@ (c0058a4 <kad_op_add+0x178>)
 c005898:	4803      	ldr	r0, [pc, #12]	@ (c0058a8 <kad_op_add+0x17c>)
 c00589a:	f009 fbb5 	bl	c00f008 <__assert_func>
 c00589e:	bf00      	nop
 c0058a0:	0c011b24 	.word	0x0c011b24
 c0058a4:	0c011ce4 	.word	0x0c011ce4
 c0058a8:	0c011b04 	.word	0x0c011b04

0c0058ac <kad_op_sub>:
 c0058ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c0058b0:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c0058b2:	4680      	mov	r8, r0
 c0058b4:	6818      	ldr	r0, [r3, #0]
 c0058b6:	7802      	ldrb	r2, [r0, #0]
 c0058b8:	2a00      	cmp	r2, #0
 c0058ba:	d06d      	beq.n	c005998 <kad_op_sub+0xec>
 c0058bc:	2a01      	cmp	r2, #1
 c0058be:	6905      	ldr	r5, [r0, #16]
 c0058c0:	d00c      	beq.n	c0058dc <kad_op_sub+0x30>
 c0058c2:	6944      	ldr	r4, [r0, #20]
 c0058c4:	2a02      	cmp	r2, #2
 c0058c6:	fb04 f505 	mul.w	r5, r4, r5
 c0058ca:	d007      	beq.n	c0058dc <kad_op_sub+0x30>
 c0058cc:	6984      	ldr	r4, [r0, #24]
 c0058ce:	2a03      	cmp	r2, #3
 c0058d0:	fb04 f505 	mul.w	r5, r4, r5
 c0058d4:	d002      	beq.n	c0058dc <kad_op_sub+0x30>
 c0058d6:	69c4      	ldr	r4, [r0, #28]
 c0058d8:	fb04 f505 	mul.w	r5, r4, r5
 c0058dc:	685f      	ldr	r7, [r3, #4]
 c0058de:	783b      	ldrb	r3, [r7, #0]
 c0058e0:	2b00      	cmp	r3, #0
 c0058e2:	d055      	beq.n	c005990 <kad_op_sub+0xe4>
 c0058e4:	2b01      	cmp	r3, #1
 c0058e6:	693c      	ldr	r4, [r7, #16]
 c0058e8:	d00c      	beq.n	c005904 <kad_op_sub+0x58>
 c0058ea:	697e      	ldr	r6, [r7, #20]
 c0058ec:	2b02      	cmp	r3, #2
 c0058ee:	fb06 f404 	mul.w	r4, r6, r4
 c0058f2:	d007      	beq.n	c005904 <kad_op_sub+0x58>
 c0058f4:	69be      	ldr	r6, [r7, #24]
 c0058f6:	2b03      	cmp	r3, #3
 c0058f8:	fb06 f404 	mul.w	r4, r6, r4
 c0058fc:	d002      	beq.n	c005904 <kad_op_sub+0x58>
 c0058fe:	69fb      	ldr	r3, [r7, #28]
 c005900:	fb03 f404 	mul.w	r4, r3, r4
 c005904:	2904      	cmp	r1, #4
 c005906:	d031      	beq.n	c00596c <kad_op_sub+0xc0>
 c005908:	2902      	cmp	r1, #2
 c00590a:	d004      	beq.n	c005916 <kad_op_sub+0x6a>
 c00590c:	2903      	cmp	r1, #3
 c00590e:	d045      	beq.n	c00599c <kad_op_sub+0xf0>
 c005910:	2000      	movs	r0, #0
 c005912:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c005916:	42ac      	cmp	r4, r5
 c005918:	dc7a      	bgt.n	c005a10 <kad_op_sub+0x164>
 c00591a:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 c00591c:	00aa      	lsls	r2, r5, #2
 c00591e:	f8d8 0028 	ldr.w	r0, [r8, #40]	@ 0x28
 c005922:	f009 ff54 	bl	c00f7ce <memcpy>
 c005926:	2d00      	cmp	r5, #0
 c005928:	ddf2      	ble.n	c005910 <kad_op_sub+0x64>
 c00592a:	2c00      	cmp	r4, #0
 c00592c:	6abf      	ldr	r7, [r7, #40]	@ 0x28
 c00592e:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 c005932:	dded      	ble.n	c005910 <kad_op_sub+0x64>
 c005934:	2000      	movs	r0, #0
 c005936:	ebc4 7e44 	rsb	lr, r4, r4, lsl #29
 c00593a:	00a6      	lsls	r6, r4, #2
 c00593c:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 c005940:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 c005944:	eba1 0c06 	sub.w	ip, r1, r6
 c005948:	463a      	mov	r2, r7
 c00594a:	4663      	mov	r3, ip
 c00594c:	edd3 7a00 	vldr	s15, [r3]
 c005950:	ecb2 7a01 	vldmia	r2!, {s14}
 c005954:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c005958:	ece3 7a01 	vstmia	r3!, {s15}
 c00595c:	428b      	cmp	r3, r1
 c00595e:	d1f5      	bne.n	c00594c <kad_op_sub+0xa0>
 c005960:	4420      	add	r0, r4
 c005962:	42a8      	cmp	r0, r5
 c005964:	ebac 010e 	sub.w	r1, ip, lr
 c005968:	dbec      	blt.n	c005944 <kad_op_sub+0x98>
 c00596a:	e7d1      	b.n	c005910 <kad_op_sub+0x64>
 c00596c:	fb95 f3f4 	sdiv	r3, r5, r4
 c005970:	fb04 5313 	mls	r3, r4, r3, r5
 c005974:	2b00      	cmp	r3, #0
 c005976:	d148      	bne.n	c005a0a <kad_op_sub+0x15e>
 c005978:	f888 2000 	strb.w	r2, [r8]
 c00597c:	2a00      	cmp	r2, #0
 c00597e:	d0c7      	beq.n	c005910 <kad_op_sub+0x64>
 c005980:	f100 0110 	add.w	r1, r0, #16
 c005984:	0092      	lsls	r2, r2, #2
 c005986:	f108 0010 	add.w	r0, r8, #16
 c00598a:	f009 ff20 	bl	c00f7ce <memcpy>
 c00598e:	e7bf      	b.n	c005910 <kad_op_sub+0x64>
 c005990:	2904      	cmp	r1, #4
 c005992:	d0f1      	beq.n	c005978 <kad_op_sub+0xcc>
 c005994:	2401      	movs	r4, #1
 c005996:	e7b7      	b.n	c005908 <kad_op_sub+0x5c>
 c005998:	2501      	movs	r5, #1
 c00599a:	e79f      	b.n	c0058dc <kad_op_sub+0x30>
 c00599c:	7843      	ldrb	r3, [r0, #1]
 c00599e:	07d9      	lsls	r1, r3, #31
 c0059a0:	d52b      	bpl.n	c0059fa <kad_op_sub+0x14e>
 c0059a2:	2d00      	cmp	r5, #0
 c0059a4:	f8d8 602c 	ldr.w	r6, [r8, #44]	@ 0x2c
 c0059a8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 c0059aa:	ddb1      	ble.n	c005910 <kad_op_sub+0x64>
 c0059ac:	4632      	mov	r2, r6
 c0059ae:	eb03 0185 	add.w	r1, r3, r5, lsl #2
 c0059b2:	edd3 7a00 	vldr	s15, [r3]
 c0059b6:	ecb2 7a01 	vldmia	r2!, {s14}
 c0059ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 c0059be:	ece3 7a01 	vstmia	r3!, {s15}
 c0059c2:	4299      	cmp	r1, r3
 c0059c4:	d1f5      	bne.n	c0059b2 <kad_op_sub+0x106>
 c0059c6:	787b      	ldrb	r3, [r7, #1]
 c0059c8:	07db      	lsls	r3, r3, #31
 c0059ca:	d5a1      	bpl.n	c005910 <kad_op_sub+0x64>
 c0059cc:	2c00      	cmp	r4, #0
 c0059ce:	6aff      	ldr	r7, [r7, #44]	@ 0x2c
 c0059d0:	dd9e      	ble.n	c005910 <kad_op_sub+0x64>
 c0059d2:	2000      	movs	r0, #0
 c0059d4:	eb07 0184 	add.w	r1, r7, r4, lsl #2
 c0059d8:	463b      	mov	r3, r7
 c0059da:	eb06 0280 	add.w	r2, r6, r0, lsl #2
 c0059de:	edd3 7a00 	vldr	s15, [r3]
 c0059e2:	ecb2 7a01 	vldmia	r2!, {s14}
 c0059e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c0059ea:	ece3 7a01 	vstmia	r3!, {s15}
 c0059ee:	4299      	cmp	r1, r3
 c0059f0:	d1f5      	bne.n	c0059de <kad_op_sub+0x132>
 c0059f2:	4420      	add	r0, r4
 c0059f4:	42a8      	cmp	r0, r5
 c0059f6:	dbef      	blt.n	c0059d8 <kad_op_sub+0x12c>
 c0059f8:	e78a      	b.n	c005910 <kad_op_sub+0x64>
 c0059fa:	787b      	ldrb	r3, [r7, #1]
 c0059fc:	07da      	lsls	r2, r3, #31
 c0059fe:	d587      	bpl.n	c005910 <kad_op_sub+0x64>
 c005a00:	2d00      	cmp	r5, #0
 c005a02:	dd85      	ble.n	c005910 <kad_op_sub+0x64>
 c005a04:	f8d8 602c 	ldr.w	r6, [r8, #44]	@ 0x2c
 c005a08:	e7e0      	b.n	c0059cc <kad_op_sub+0x120>
 c005a0a:	f04f 30ff 	mov.w	r0, #4294967295
 c005a0e:	e780      	b.n	c005912 <kad_op_sub+0x66>
 c005a10:	f240 4141 	movw	r1, #1089	@ 0x441
 c005a14:	4b02      	ldr	r3, [pc, #8]	@ (c005a20 <kad_op_sub+0x174>)
 c005a16:	4a03      	ldr	r2, [pc, #12]	@ (c005a24 <kad_op_sub+0x178>)
 c005a18:	4803      	ldr	r0, [pc, #12]	@ (c005a28 <kad_op_sub+0x17c>)
 c005a1a:	f009 faf5 	bl	c00f008 <__assert_func>
 c005a1e:	bf00      	nop
 c005a20:	0c011b24 	.word	0x0c011b24
 c005a24:	0c011cd8 	.word	0x0c011cd8
 c005a28:	0c011b04 	.word	0x0c011b04

0c005a2c <kad_op_1minus>:
 c005a2c:	b538      	push	{r3, r4, r5, lr}
 c005a2e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c005a30:	681c      	ldr	r4, [r3, #0]
 c005a32:	7825      	ldrb	r5, [r4, #0]
 c005a34:	b305      	cbz	r5, c005a78 <kad_op_1minus+0x4c>
 c005a36:	2d01      	cmp	r5, #1
 c005a38:	6923      	ldr	r3, [r4, #16]
 c005a3a:	d00c      	beq.n	c005a56 <kad_op_1minus+0x2a>
 c005a3c:	6962      	ldr	r2, [r4, #20]
 c005a3e:	2d02      	cmp	r5, #2
 c005a40:	fb02 f303 	mul.w	r3, r2, r3
 c005a44:	d007      	beq.n	c005a56 <kad_op_1minus+0x2a>
 c005a46:	69a2      	ldr	r2, [r4, #24]
 c005a48:	2d03      	cmp	r5, #3
 c005a4a:	fb02 f303 	mul.w	r3, r2, r3
 c005a4e:	d002      	beq.n	c005a56 <kad_op_1minus+0x2a>
 c005a50:	69e2      	ldr	r2, [r4, #28]
 c005a52:	fb02 f303 	mul.w	r3, r2, r3
 c005a56:	2904      	cmp	r1, #4
 c005a58:	d005      	beq.n	c005a66 <kad_op_1minus+0x3a>
 c005a5a:	2902      	cmp	r1, #2
 c005a5c:	d013      	beq.n	c005a86 <kad_op_1minus+0x5a>
 c005a5e:	2903      	cmp	r1, #3
 c005a60:	d025      	beq.n	c005aae <kad_op_1minus+0x82>
 c005a62:	2000      	movs	r0, #0
 c005a64:	bd38      	pop	{r3, r4, r5, pc}
 c005a66:	00aa      	lsls	r2, r5, #2
 c005a68:	f104 0110 	add.w	r1, r4, #16
 c005a6c:	f800 5b10 	strb.w	r5, [r0], #16
 c005a70:	f009 fead 	bl	c00f7ce <memcpy>
 c005a74:	2000      	movs	r0, #0
 c005a76:	bd38      	pop	{r3, r4, r5, pc}
 c005a78:	2904      	cmp	r1, #4
 c005a7a:	d016      	beq.n	c005aaa <kad_op_1minus+0x7e>
 c005a7c:	2902      	cmp	r1, #2
 c005a7e:	f04f 0301 	mov.w	r3, #1
 c005a82:	d1ec      	bne.n	c005a5e <kad_op_1minus+0x32>
 c005a84:	e001      	b.n	c005a8a <kad_op_1minus+0x5e>
 c005a86:	2b00      	cmp	r3, #0
 c005a88:	ddeb      	ble.n	c005a62 <kad_op_1minus+0x36>
 c005a8a:	2200      	movs	r2, #0
 c005a8c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c005a90:	6aa4      	ldr	r4, [r4, #40]	@ 0x28
 c005a92:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 c005a94:	ecf4 7a01 	vldmia	r4!, {s15}
 c005a98:	ee77 7a67 	vsub.f32	s15, s14, s15
 c005a9c:	3201      	adds	r2, #1
 c005a9e:	429a      	cmp	r2, r3
 c005aa0:	ece1 7a01 	vstmia	r1!, {s15}
 c005aa4:	dbf6      	blt.n	c005a94 <kad_op_1minus+0x68>
 c005aa6:	2000      	movs	r0, #0
 c005aa8:	bd38      	pop	{r3, r4, r5, pc}
 c005aaa:	7005      	strb	r5, [r0, #0]
 c005aac:	e7d9      	b.n	c005a62 <kad_op_1minus+0x36>
 c005aae:	7862      	ldrb	r2, [r4, #1]
 c005ab0:	07d2      	lsls	r2, r2, #31
 c005ab2:	d5d6      	bpl.n	c005a62 <kad_op_1minus+0x36>
 c005ab4:	2b00      	cmp	r3, #0
 c005ab6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 c005ab8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 c005aba:	ddd2      	ble.n	c005a62 <kad_op_1minus+0x36>
 c005abc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 c005ac0:	edd2 7a00 	vldr	s15, [r2]
 c005ac4:	ecb1 7a01 	vldmia	r1!, {s14}
 c005ac8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c005acc:	ece2 7a01 	vstmia	r2!, {s15}
 c005ad0:	4293      	cmp	r3, r2
 c005ad2:	d1f5      	bne.n	c005ac0 <kad_op_1minus+0x94>
 c005ad4:	e7c5      	b.n	c005a62 <kad_op_1minus+0x36>
 c005ad6:	bf00      	nop

0c005ad8 <kad_op_slice>:
 c005ad8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 c005adc:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c005ade:	f8d0 a030 	ldr.w	sl, [r0, #48]	@ 0x30
 c005ae2:	681d      	ldr	r5, [r3, #0]
 c005ae4:	f1ba 0f00 	cmp.w	sl, #0
 c005ae8:	f000 80b7 	beq.w	c005c5a <kad_op_slice+0x182>
 c005aec:	f8da 4000 	ldr.w	r4, [sl]
 c005af0:	2c00      	cmp	r4, #0
 c005af2:	f2c0 80af 	blt.w	c005c54 <kad_op_slice+0x17c>
 c005af6:	782f      	ldrb	r7, [r5, #0]
 c005af8:	42a7      	cmp	r7, r4
 c005afa:	f340 80ab 	ble.w	c005c54 <kad_op_slice+0x17c>
 c005afe:	4606      	mov	r6, r0
 c005b00:	2c00      	cmp	r4, #0
 c005b02:	d06d      	beq.n	c005be0 <kad_op_slice+0x108>
 c005b04:	2c01      	cmp	r4, #1
 c005b06:	f8d5 9010 	ldr.w	r9, [r5, #16]
 c005b0a:	d00c      	beq.n	c005b26 <kad_op_slice+0x4e>
 c005b0c:	696b      	ldr	r3, [r5, #20]
 c005b0e:	2c02      	cmp	r4, #2
 c005b10:	fb03 f909 	mul.w	r9, r3, r9
 c005b14:	d007      	beq.n	c005b26 <kad_op_slice+0x4e>
 c005b16:	69ab      	ldr	r3, [r5, #24]
 c005b18:	2c03      	cmp	r4, #3
 c005b1a:	fb03 f909 	mul.w	r9, r3, r9
 c005b1e:	d002      	beq.n	c005b26 <kad_op_slice+0x4e>
 c005b20:	69eb      	ldr	r3, [r5, #28]
 c005b22:	fb03 f909 	mul.w	r9, r3, r9
 c005b26:	1c63      	adds	r3, r4, #1
 c005b28:	429f      	cmp	r7, r3
 c005b2a:	dd56      	ble.n	c005bda <kad_op_slice+0x102>
 c005b2c:	1ca3      	adds	r3, r4, #2
 c005b2e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
 c005b32:	429f      	cmp	r7, r3
 c005b34:	f8d2 8014 	ldr.w	r8, [r2, #20]
 c005b38:	dd08      	ble.n	c005b4c <kad_op_slice+0x74>
 c005b3a:	6993      	ldr	r3, [r2, #24]
 c005b3c:	fb03 f808 	mul.w	r8, r3, r8
 c005b40:	1ce3      	adds	r3, r4, #3
 c005b42:	429f      	cmp	r7, r3
 c005b44:	dd02      	ble.n	c005b4c <kad_op_slice+0x74>
 c005b46:	69d3      	ldr	r3, [r2, #28]
 c005b48:	fb03 f808 	mul.w	r8, r3, r8
 c005b4c:	2904      	cmp	r1, #4
 c005b4e:	d02b      	beq.n	c005ba8 <kad_op_slice+0xd0>
 c005b50:	2902      	cmp	r1, #2
 c005b52:	d004      	beq.n	c005b5e <kad_op_slice+0x86>
 c005b54:	2903      	cmp	r1, #3
 c005b56:	d046      	beq.n	c005be6 <kad_op_slice+0x10e>
 c005b58:	2000      	movs	r0, #0
 c005b5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c005b5e:	f1b9 0f00 	cmp.w	r9, #0
 c005b62:	ddf9      	ble.n	c005b58 <kad_op_slice+0x80>
 c005b64:	2700      	movs	r7, #0
 c005b66:	3404      	adds	r4, #4
 c005b68:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 c005b6c:	f8da 1004 	ldr.w	r1, [sl, #4]
 c005b70:	fb07 f000 	mul.w	r0, r7, r0
 c005b74:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 c005b78:	f8da 2008 	ldr.w	r2, [sl, #8]
 c005b7c:	fb03 1307 	mla	r3, r3, r7, r1
 c005b80:	fb08 f000 	mul.w	r0, r8, r0
 c005b84:	1a52      	subs	r2, r2, r1
 c005b86:	fb08 f303 	mul.w	r3, r8, r3
 c005b8a:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 c005b8c:	fb08 f202 	mul.w	r2, r8, r2
 c005b90:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 c005b94:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
 c005b96:	3701      	adds	r7, #1
 c005b98:	0092      	lsls	r2, r2, #2
 c005b9a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 c005b9e:	f009 fe16 	bl	c00f7ce <memcpy>
 c005ba2:	454f      	cmp	r7, r9
 c005ba4:	d1e0      	bne.n	c005b68 <kad_op_slice+0x90>
 c005ba6:	e7d7      	b.n	c005b58 <kad_op_slice+0x80>
 c005ba8:	e9da 2301 	ldrd	r2, r3, [sl, #4]
 c005bac:	429a      	cmp	r2, r3
 c005bae:	da51      	bge.n	c005c54 <kad_op_slice+0x17c>
 c005bb0:	2a00      	cmp	r2, #0
 c005bb2:	db4f      	blt.n	c005c54 <kad_op_slice+0x17c>
 c005bb4:	3404      	adds	r4, #4
 c005bb6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 c005bba:	4293      	cmp	r3, r2
 c005bbc:	dc4a      	bgt.n	c005c54 <kad_op_slice+0x17c>
 c005bbe:	4630      	mov	r0, r6
 c005bc0:	00ba      	lsls	r2, r7, #2
 c005bc2:	f105 0110 	add.w	r1, r5, #16
 c005bc6:	f800 7b10 	strb.w	r7, [r0], #16
 c005bca:	f009 fe00 	bl	c00f7ce <memcpy>
 c005bce:	e9da 2301 	ldrd	r2, r3, [sl, #4]
 c005bd2:	1a9b      	subs	r3, r3, r2
 c005bd4:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 c005bd8:	e7be      	b.n	c005b58 <kad_op_slice+0x80>
 c005bda:	f04f 0801 	mov.w	r8, #1
 c005bde:	e7b5      	b.n	c005b4c <kad_op_slice+0x74>
 c005be0:	f04f 0901 	mov.w	r9, #1
 c005be4:	e79f      	b.n	c005b26 <kad_op_slice+0x4e>
 c005be6:	786b      	ldrb	r3, [r5, #1]
 c005be8:	07db      	lsls	r3, r3, #31
 c005bea:	d5b5      	bpl.n	c005b58 <kad_op_slice+0x80>
 c005bec:	f1b9 0f00 	cmp.w	r9, #0
 c005bf0:	ddb2      	ble.n	c005b58 <kad_op_slice+0x80>
 c005bf2:	e9da 2301 	ldrd	r2, r3, [sl, #4]
 c005bf6:	1a9b      	subs	r3, r3, r2
 c005bf8:	fb08 f303 	mul.w	r3, r8, r3
 c005bfc:	3404      	adds	r4, #4
 c005bfe:	2b00      	cmp	r3, #0
 c005c00:	6af7      	ldr	r7, [r6, #44]	@ 0x2c
 c005c02:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 c005c06:	f855 1024 	ldr.w	r1, [r5, r4, lsl #2]
 c005c0a:	6aee      	ldr	r6, [r5, #44]	@ 0x2c
 c005c0c:	dda4      	ble.n	c005b58 <kad_op_slice+0x80>
 c005c0e:	2400      	movs	r4, #0
 c005c10:	4625      	mov	r5, r4
 c005c12:	fb08 f202 	mul.w	r2, r8, r2
 c005c16:	fb08 f101 	mul.w	r1, r8, r1
 c005c1a:	fb08 fe00 	mul.w	lr, r8, r0
 c005c1e:	4413      	add	r3, r2
 c005c20:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 c005c24:	0090      	lsls	r0, r2, #2
 c005c26:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 c005c2a:	eb06 0183 	add.w	r1, r6, r3, lsl #2
 c005c2e:	1833      	adds	r3, r6, r0
 c005c30:	193a      	adds	r2, r7, r4
 c005c32:	edd3 7a00 	vldr	s15, [r3]
 c005c36:	ecb2 7a01 	vldmia	r2!, {s14}
 c005c3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 c005c3e:	ece3 7a01 	vstmia	r3!, {s15}
 c005c42:	4299      	cmp	r1, r3
 c005c44:	d1f5      	bne.n	c005c32 <kad_op_slice+0x15a>
 c005c46:	3501      	adds	r5, #1
 c005c48:	454d      	cmp	r5, r9
 c005c4a:	4460      	add	r0, ip
 c005c4c:	4474      	add	r4, lr
 c005c4e:	4461      	add	r1, ip
 c005c50:	d1ed      	bne.n	c005c2e <kad_op_slice+0x156>
 c005c52:	e781      	b.n	c005b58 <kad_op_slice+0x80>
 c005c54:	f04f 30ff 	mov.w	r0, #4294967295
 c005c58:	e77f      	b.n	c005b5a <kad_op_slice+0x82>
 c005c5a:	f44f 61ab 	mov.w	r1, #1368	@ 0x558
 c005c5e:	4b02      	ldr	r3, [pc, #8]	@ (c005c68 <kad_op_slice+0x190>)
 c005c60:	4a02      	ldr	r2, [pc, #8]	@ (c005c6c <kad_op_slice+0x194>)
 c005c62:	4803      	ldr	r0, [pc, #12]	@ (c005c70 <kad_op_slice+0x198>)
 c005c64:	f009 f9d0 	bl	c00f008 <__assert_func>
 c005c68:	0c011afc 	.word	0x0c011afc
 c005c6c:	0c011c84 	.word	0x0c011c84
 c005c70:	0c011b04 	.word	0x0c011b04

0c005c74 <kad_op_concat>:
 c005c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c005c78:	4604      	mov	r4, r0
 c005c7a:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 c005c7c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 c005c7e:	6803      	ldr	r3, [r0, #0]
 c005c80:	b083      	sub	sp, #12
 c005c82:	2a00      	cmp	r2, #0
 c005c84:	f000 817c 	beq.w	c005f80 <kad_op_concat+0x30c>
 c005c88:	6815      	ldr	r5, [r2, #0]
 c005c8a:	2d00      	cmp	r5, #0
 c005c8c:	f340 8114 	ble.w	c005eb8 <kad_op_concat+0x244>
 c005c90:	2d01      	cmp	r5, #1
 c005c92:	f8d3 c010 	ldr.w	ip, [r3, #16]
 c005c96:	d00c      	beq.n	c005cb2 <kad_op_concat+0x3e>
 c005c98:	695a      	ldr	r2, [r3, #20]
 c005c9a:	2d02      	cmp	r5, #2
 c005c9c:	fb02 fc0c 	mul.w	ip, r2, ip
 c005ca0:	d007      	beq.n	c005cb2 <kad_op_concat+0x3e>
 c005ca2:	699a      	ldr	r2, [r3, #24]
 c005ca4:	2d03      	cmp	r5, #3
 c005ca6:	fb02 fc0c 	mul.w	ip, r2, ip
 c005caa:	d002      	beq.n	c005cb2 <kad_op_concat+0x3e>
 c005cac:	69da      	ldr	r2, [r3, #28]
 c005cae:	fb02 fc0c 	mul.w	ip, r2, ip
 c005cb2:	781a      	ldrb	r2, [r3, #0]
 c005cb4:	1c6e      	adds	r6, r5, #1
 c005cb6:	4296      	cmp	r6, r2
 c005cb8:	f280 80fc 	bge.w	c005eb4 <kad_op_concat+0x240>
 c005cbc:	1caf      	adds	r7, r5, #2
 c005cbe:	eb03 0e85 	add.w	lr, r3, r5, lsl #2
 c005cc2:	42ba      	cmp	r2, r7
 c005cc4:	f8de 6014 	ldr.w	r6, [lr, #20]
 c005cc8:	dd11      	ble.n	c005cee <kad_op_concat+0x7a>
 c005cca:	f8de 7018 	ldr.w	r7, [lr, #24]
 c005cce:	fb07 f606 	mul.w	r6, r7, r6
 c005cd2:	1cef      	adds	r7, r5, #3
 c005cd4:	42ba      	cmp	r2, r7
 c005cd6:	dd0a      	ble.n	c005cee <kad_op_concat+0x7a>
 c005cd8:	f8de 701c 	ldr.w	r7, [lr, #28]
 c005cdc:	fb07 f606 	mul.w	r6, r7, r6
 c005ce0:	1d2f      	adds	r7, r5, #4
 c005ce2:	42ba      	cmp	r2, r7
 c005ce4:	dd03      	ble.n	c005cee <kad_op_concat+0x7a>
 c005ce6:	f8de 7020 	ldr.w	r7, [lr, #32]
 c005cea:	fb07 f606 	mul.w	r6, r7, r6
 c005cee:	2904      	cmp	r1, #4
 c005cf0:	d042      	beq.n	c005d78 <kad_op_concat+0x104>
 c005cf2:	2902      	cmp	r1, #2
 c005cf4:	d006      	beq.n	c005d04 <kad_op_concat+0x90>
 c005cf6:	2903      	cmp	r1, #3
 c005cf8:	f000 80e1 	beq.w	c005ebe <kad_op_concat+0x24a>
 c005cfc:	2000      	movs	r0, #0
 c005cfe:	b003      	add	sp, #12
 c005d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c005d04:	f1bc 0f00 	cmp.w	ip, #0
 c005d08:	ddf8      	ble.n	c005cfc <kad_op_concat+0x88>
 c005d0a:	6863      	ldr	r3, [r4, #4]
 c005d0c:	f04f 0900 	mov.w	r9, #0
 c005d10:	461a      	mov	r2, r3
 c005d12:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 c005d16:	f105 0b04 	add.w	fp, r5, #4
 c005d1a:	f8cd c004 	str.w	ip, [sp, #4]
 c005d1e:	2a00      	cmp	r2, #0
 c005d20:	ddec      	ble.n	c005cfc <kad_op_concat+0x88>
 c005d22:	2700      	movs	r7, #0
 c005d24:	463d      	mov	r5, r7
 c005d26:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 c005d28:	f854 202b 	ldr.w	r2, [r4, fp, lsl #2]
 c005d2c:	f851 1025 	ldr.w	r1, [r1, r5, lsl #2]
 c005d30:	fb02 7c09 	mla	ip, r2, r9, r7
 c005d34:	eb01 080a 	add.w	r8, r1, sl
 c005d38:	f8d8 2010 	ldr.w	r2, [r8, #16]
 c005d3c:	6a88      	ldr	r0, [r1, #40]	@ 0x28
 c005d3e:	fb09 f102 	mul.w	r1, r9, r2
 c005d42:	fb06 f101 	mul.w	r1, r6, r1
 c005d46:	fb06 fc0c 	mul.w	ip, r6, ip
 c005d4a:	fb06 f202 	mul.w	r2, r6, r2
 c005d4e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 c005d52:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 c005d54:	0092      	lsls	r2, r2, #2
 c005d56:	eb00 008c 	add.w	r0, r0, ip, lsl #2
 c005d5a:	f009 fd38 	bl	c00f7ce <memcpy>
 c005d5e:	6862      	ldr	r2, [r4, #4]
 c005d60:	f8d8 1010 	ldr.w	r1, [r8, #16]
 c005d64:	3501      	adds	r5, #1
 c005d66:	42aa      	cmp	r2, r5
 c005d68:	440f      	add	r7, r1
 c005d6a:	dcdc      	bgt.n	c005d26 <kad_op_concat+0xb2>
 c005d6c:	9b01      	ldr	r3, [sp, #4]
 c005d6e:	f109 0901 	add.w	r9, r9, #1
 c005d72:	4599      	cmp	r9, r3
 c005d74:	d1d3      	bne.n	c005d1e <kad_op_concat+0xaa>
 c005d76:	e7c1      	b.n	c005cfc <kad_op_concat+0x88>
 c005d78:	6866      	ldr	r6, [r4, #4]
 c005d7a:	2e01      	cmp	r6, #1
 c005d7c:	f340 80ea 	ble.w	c005f54 <kad_op_concat+0x2e0>
 c005d80:	4684      	mov	ip, r0
 c005d82:	f04f 0e01 	mov.w	lr, #1
 c005d86:	46a0      	mov	r8, r4
 c005d88:	4607      	mov	r7, r0
 c005d8a:	f85c 1f04 	ldr.w	r1, [ip, #4]!
 c005d8e:	7808      	ldrb	r0, [r1, #0]
 c005d90:	4290      	cmp	r0, r2
 c005d92:	d128      	bne.n	c005de6 <kad_op_concat+0x172>
 c005d94:	2a00      	cmp	r2, #0
 c005d96:	d051      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005d98:	b355      	cbz	r5, c005df0 <kad_op_concat+0x17c>
 c005d9a:	690c      	ldr	r4, [r1, #16]
 c005d9c:	6918      	ldr	r0, [r3, #16]
 c005d9e:	4284      	cmp	r4, r0
 c005da0:	d121      	bne.n	c005de6 <kad_op_concat+0x172>
 c005da2:	2a01      	cmp	r2, #1
 c005da4:	d04a      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005da6:	2d01      	cmp	r5, #1
 c005da8:	d063      	beq.n	c005e72 <kad_op_concat+0x1fe>
 c005daa:	694c      	ldr	r4, [r1, #20]
 c005dac:	6958      	ldr	r0, [r3, #20]
 c005dae:	4284      	cmp	r4, r0
 c005db0:	d119      	bne.n	c005de6 <kad_op_concat+0x172>
 c005db2:	2a02      	cmp	r2, #2
 c005db4:	d042      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005db6:	2d02      	cmp	r5, #2
 c005db8:	d122      	bne.n	c005e00 <kad_op_concat+0x18c>
 c005dba:	2a03      	cmp	r2, #3
 c005dbc:	d03e      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005dbe:	69cc      	ldr	r4, [r1, #28]
 c005dc0:	69d8      	ldr	r0, [r3, #28]
 c005dc2:	4284      	cmp	r4, r0
 c005dc4:	d10f      	bne.n	c005de6 <kad_op_concat+0x172>
 c005dc6:	2a04      	cmp	r2, #4
 c005dc8:	d038      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005dca:	6a0c      	ldr	r4, [r1, #32]
 c005dcc:	6a18      	ldr	r0, [r3, #32]
 c005dce:	4284      	cmp	r4, r0
 c005dd0:	d109      	bne.n	c005de6 <kad_op_concat+0x172>
 c005dd2:	2a05      	cmp	r2, #5
 c005dd4:	dd32      	ble.n	c005e3c <kad_op_concat+0x1c8>
 c005dd6:	2d05      	cmp	r5, #5
 c005dd8:	d122      	bne.n	c005e20 <kad_op_concat+0x1ac>
 c005dda:	2a06      	cmp	r2, #6
 c005ddc:	d02e      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005dde:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 c005de0:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 c005de2:	4284      	cmp	r4, r0
 c005de4:	d024      	beq.n	c005e30 <kad_op_concat+0x1bc>
 c005de6:	f04f 30ff 	mov.w	r0, #4294967295
 c005dea:	b003      	add	sp, #12
 c005dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c005df0:	2a01      	cmp	r2, #1
 c005df2:	d023      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005df4:	694c      	ldr	r4, [r1, #20]
 c005df6:	6958      	ldr	r0, [r3, #20]
 c005df8:	4284      	cmp	r4, r0
 c005dfa:	d1f4      	bne.n	c005de6 <kad_op_concat+0x172>
 c005dfc:	2a02      	cmp	r2, #2
 c005dfe:	d01d      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005e00:	699c      	ldr	r4, [r3, #24]
 c005e02:	6988      	ldr	r0, [r1, #24]
 c005e04:	4284      	cmp	r4, r0
 c005e06:	d1ee      	bne.n	c005de6 <kad_op_concat+0x172>
 c005e08:	2a03      	cmp	r2, #3
 c005e0a:	dd17      	ble.n	c005e3c <kad_op_concat+0x1c8>
 c005e0c:	2d03      	cmp	r5, #3
 c005e0e:	d138      	bne.n	c005e82 <kad_op_concat+0x20e>
 c005e10:	2a04      	cmp	r2, #4
 c005e12:	d013      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005e14:	6a1c      	ldr	r4, [r3, #32]
 c005e16:	6a08      	ldr	r0, [r1, #32]
 c005e18:	4284      	cmp	r4, r0
 c005e1a:	d1e4      	bne.n	c005de6 <kad_op_concat+0x172>
 c005e1c:	2a05      	cmp	r2, #5
 c005e1e:	d00d      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005e20:	6a4c      	ldr	r4, [r1, #36]	@ 0x24
 c005e22:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 c005e24:	4284      	cmp	r4, r0
 c005e26:	d1de      	bne.n	c005de6 <kad_op_concat+0x172>
 c005e28:	2a06      	cmp	r2, #6
 c005e2a:	dd07      	ble.n	c005e3c <kad_op_concat+0x1c8>
 c005e2c:	2d06      	cmp	r5, #6
 c005e2e:	d138      	bne.n	c005ea2 <kad_op_concat+0x22e>
 c005e30:	2a07      	cmp	r2, #7
 c005e32:	d003      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005e34:	6ac8      	ldr	r0, [r1, #44]	@ 0x2c
 c005e36:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 c005e38:	4288      	cmp	r0, r1
 c005e3a:	d1d4      	bne.n	c005de6 <kad_op_concat+0x172>
 c005e3c:	f10e 0e01 	add.w	lr, lr, #1
 c005e40:	4576      	cmp	r6, lr
 c005e42:	d1a2      	bne.n	c005d8a <kad_op_concat+0x116>
 c005e44:	4644      	mov	r4, r8
 c005e46:	4638      	mov	r0, r7
 c005e48:	f888 2000 	strb.w	r2, [r8]
 c005e4c:	2a00      	cmp	r2, #0
 c005e4e:	f040 808d 	bne.w	c005f6c <kad_op_concat+0x2f8>
 c005e52:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 c005e56:	1f01      	subs	r1, r0, #4
 c005e58:	6923      	ldr	r3, [r4, #16]
 c005e5a:	1d2f      	adds	r7, r5, #4
 c005e5c:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 c005e60:	f850 2f04 	ldr.w	r2, [r0, #4]!
 c005e64:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 c005e68:	4288      	cmp	r0, r1
 c005e6a:	4413      	add	r3, r2
 c005e6c:	6123      	str	r3, [r4, #16]
 c005e6e:	d1f7      	bne.n	c005e60 <kad_op_concat+0x1ec>
 c005e70:	e744      	b.n	c005cfc <kad_op_concat+0x88>
 c005e72:	2a02      	cmp	r2, #2
 c005e74:	d0e2      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005e76:	698c      	ldr	r4, [r1, #24]
 c005e78:	6998      	ldr	r0, [r3, #24]
 c005e7a:	4284      	cmp	r4, r0
 c005e7c:	d1b3      	bne.n	c005de6 <kad_op_concat+0x172>
 c005e7e:	2a03      	cmp	r2, #3
 c005e80:	d0dc      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005e82:	69cc      	ldr	r4, [r1, #28]
 c005e84:	69d8      	ldr	r0, [r3, #28]
 c005e86:	4284      	cmp	r4, r0
 c005e88:	d1ad      	bne.n	c005de6 <kad_op_concat+0x172>
 c005e8a:	2a04      	cmp	r2, #4
 c005e8c:	ddd6      	ble.n	c005e3c <kad_op_concat+0x1c8>
 c005e8e:	2d04      	cmp	r5, #4
 c005e90:	d19b      	bne.n	c005dca <kad_op_concat+0x156>
 c005e92:	2a05      	cmp	r2, #5
 c005e94:	d0d2      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005e96:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 c005e98:	6a48      	ldr	r0, [r1, #36]	@ 0x24
 c005e9a:	4284      	cmp	r4, r0
 c005e9c:	d1a3      	bne.n	c005de6 <kad_op_concat+0x172>
 c005e9e:	2a06      	cmp	r2, #6
 c005ea0:	d0cc      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005ea2:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 c005ea4:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 c005ea6:	4284      	cmp	r4, r0
 c005ea8:	d19d      	bne.n	c005de6 <kad_op_concat+0x172>
 c005eaa:	2a07      	cmp	r2, #7
 c005eac:	ddc6      	ble.n	c005e3c <kad_op_concat+0x1c8>
 c005eae:	2d07      	cmp	r5, #7
 c005eb0:	d0c4      	beq.n	c005e3c <kad_op_concat+0x1c8>
 c005eb2:	e7bf      	b.n	c005e34 <kad_op_concat+0x1c0>
 c005eb4:	2601      	movs	r6, #1
 c005eb6:	e71a      	b.n	c005cee <kad_op_concat+0x7a>
 c005eb8:	f04f 0c01 	mov.w	ip, #1
 c005ebc:	e6f9      	b.n	c005cb2 <kad_op_concat+0x3e>
 c005ebe:	f1bc 0f00 	cmp.w	ip, #0
 c005ec2:	f77f af1b 	ble.w	c005cfc <kad_op_concat+0x88>
 c005ec6:	6862      	ldr	r2, [r4, #4]
 c005ec8:	2a00      	cmp	r2, #0
 c005eca:	f77f af17 	ble.w	c005cfc <kad_op_concat+0x88>
 c005ece:	1f03      	subs	r3, r0, #4
 c005ed0:	f04f 0800 	mov.w	r8, #0
 c005ed4:	469e      	mov	lr, r3
 c005ed6:	eb03 0982 	add.w	r9, r3, r2, lsl #2
 c005eda:	f105 0a04 	add.w	sl, r5, #4
 c005ede:	f8cd c004 	str.w	ip, [sp, #4]
 c005ee2:	4677      	mov	r7, lr
 c005ee4:	f04f 0c00 	mov.w	ip, #0
 c005ee8:	e001      	b.n	c005eee <kad_op_concat+0x27a>
 c005eea:	45b9      	cmp	r9, r7
 c005eec:	d02c      	beq.n	c005f48 <kad_op_concat+0x2d4>
 c005eee:	f857 3f04 	ldr.w	r3, [r7, #4]!
 c005ef2:	785a      	ldrb	r2, [r3, #1]
 c005ef4:	07d2      	lsls	r2, r2, #31
 c005ef6:	d5f8      	bpl.n	c005eea <kad_op_concat+0x276>
 c005ef8:	f853 502a 	ldr.w	r5, [r3, sl, lsl #2]
 c005efc:	f854 202a 	ldr.w	r2, [r4, sl, lsl #2]
 c005f00:	fb08 fb05 	mul.w	fp, r8, r5
 c005f04:	fb02 c008 	mla	r0, r2, r8, ip
 c005f08:	fb06 f105 	mul.w	r1, r6, r5
 c005f0c:	fb06 f000 	mul.w	r0, r6, r0
 c005f10:	fb06 fb0b 	mul.w	fp, r6, fp
 c005f14:	2900      	cmp	r1, #0
 c005f16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 c005f18:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 c005f1a:	ea4f 0080 	mov.w	r0, r0, lsl #2
 c005f1e:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 c005f22:	dd0e      	ble.n	c005f42 <kad_op_concat+0x2ce>
 c005f24:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 c005f28:	4402      	add	r2, r0
 c005f2a:	445b      	add	r3, fp
 c005f2c:	4459      	add	r1, fp
 c005f2e:	edd3 7a00 	vldr	s15, [r3]
 c005f32:	ecb2 7a01 	vldmia	r2!, {s14}
 c005f36:	ee77 7a87 	vadd.f32	s15, s15, s14
 c005f3a:	ece3 7a01 	vstmia	r3!, {s15}
 c005f3e:	4299      	cmp	r1, r3
 c005f40:	d1f5      	bne.n	c005f2e <kad_op_concat+0x2ba>
 c005f42:	45b9      	cmp	r9, r7
 c005f44:	44ac      	add	ip, r5
 c005f46:	d1d2      	bne.n	c005eee <kad_op_concat+0x27a>
 c005f48:	9b01      	ldr	r3, [sp, #4]
 c005f4a:	f108 0801 	add.w	r8, r8, #1
 c005f4e:	4598      	cmp	r8, r3
 c005f50:	d1c7      	bne.n	c005ee2 <kad_op_concat+0x26e>
 c005f52:	e6d3      	b.n	c005cfc <kad_op_concat+0x88>
 c005f54:	7022      	strb	r2, [r4, #0]
 c005f56:	2a00      	cmp	r2, #0
 c005f58:	f43f aed0 	beq.w	c005cfc <kad_op_concat+0x88>
 c005f5c:	0092      	lsls	r2, r2, #2
 c005f5e:	f103 0110 	add.w	r1, r3, #16
 c005f62:	f104 0010 	add.w	r0, r4, #16
 c005f66:	f009 fc32 	bl	c00f7ce <memcpy>
 c005f6a:	e6c7      	b.n	c005cfc <kad_op_concat+0x88>
 c005f6c:	0092      	lsls	r2, r2, #2
 c005f6e:	f103 0110 	add.w	r1, r3, #16
 c005f72:	f108 0010 	add.w	r0, r8, #16
 c005f76:	f009 fc2a 	bl	c00f7ce <memcpy>
 c005f7a:	f8d8 0038 	ldr.w	r0, [r8, #56]	@ 0x38
 c005f7e:	e768      	b.n	c005e52 <kad_op_concat+0x1de>
 c005f80:	f240 5171 	movw	r1, #1393	@ 0x571
 c005f84:	4b02      	ldr	r3, [pc, #8]	@ (c005f90 <kad_op_concat+0x31c>)
 c005f86:	4a03      	ldr	r2, [pc, #12]	@ (c005f94 <kad_op_concat+0x320>)
 c005f88:	4803      	ldr	r0, [pc, #12]	@ (c005f98 <kad_op_concat+0x324>)
 c005f8a:	f009 f83d 	bl	c00f008 <__assert_func>
 c005f8e:	bf00      	nop
 c005f90:	0c011afc 	.word	0x0c011afc
 c005f94:	0c011c74 	.word	0x0c011c74
 c005f98:	0c011b04 	.word	0x0c011b04

0c005f9c <kad_op_reshape>:
 c005f9c:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 c005f9e:	2904      	cmp	r1, #4
 c005fa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c005fa4:	4603      	mov	r3, r0
 c005fa6:	6815      	ldr	r5, [r2, #0]
 c005fa8:	d01f      	beq.n	c005fea <kad_op_reshape+0x4e>
 c005faa:	2902      	cmp	r1, #2
 c005fac:	d004      	beq.n	c005fb8 <kad_op_reshape+0x1c>
 c005fae:	2903      	cmp	r1, #3
 c005fb0:	d06f      	beq.n	c006092 <kad_op_reshape+0xf6>
 c005fb2:	2000      	movs	r0, #0
 c005fb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c005fb8:	7804      	ldrb	r4, [r0, #0]
 c005fba:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
 c005fbc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 c005fbe:	2c00      	cmp	r4, #0
 c005fc0:	f000 8112 	beq.w	c0061e8 <kad_op_reshape+0x24c>
 c005fc4:	2c01      	cmp	r4, #1
 c005fc6:	691a      	ldr	r2, [r3, #16]
 c005fc8:	d00b      	beq.n	c005fe2 <kad_op_reshape+0x46>
 c005fca:	695d      	ldr	r5, [r3, #20]
 c005fcc:	2c02      	cmp	r4, #2
 c005fce:	fb05 f202 	mul.w	r2, r5, r2
 c005fd2:	d006      	beq.n	c005fe2 <kad_op_reshape+0x46>
 c005fd4:	699d      	ldr	r5, [r3, #24]
 c005fd6:	2c03      	cmp	r4, #3
 c005fd8:	fb05 f202 	mul.w	r2, r5, r2
 c005fdc:	bf1c      	itt	ne
 c005fde:	69db      	ldrne	r3, [r3, #28]
 c005fe0:	435a      	mulne	r2, r3
 c005fe2:	0092      	lsls	r2, r2, #2
 c005fe4:	f009 fbf3 	bl	c00f7ce <memcpy>
 c005fe8:	e7e3      	b.n	c005fb2 <kad_op_reshape+0x16>
 c005fea:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 c005fec:	2900      	cmp	r1, #0
 c005fee:	d079      	beq.n	c0060e4 <kad_op_reshape+0x148>
 c005ff0:	68c2      	ldr	r2, [r0, #12]
 c005ff2:	2a00      	cmp	r2, #0
 c005ff4:	bfb8      	it	lt
 c005ff6:	3203      	addlt	r2, #3
 c005ff8:	1092      	asrs	r2, r2, #2
 c005ffa:	f012 0cff 	ands.w	ip, r2, #255	@ 0xff
 c005ffe:	7002      	strb	r2, [r0, #0]
 c006000:	f000 80d7 	beq.w	c0061b2 <kad_op_reshape+0x216>
 c006004:	680c      	ldr	r4, [r1, #0]
 c006006:	f012 06fe 	ands.w	r6, r2, #254	@ 0xfe
 c00600a:	6104      	str	r4, [r0, #16]
 c00600c:	f000 8170 	beq.w	c0062f0 <kad_op_reshape+0x354>
 c006010:	6848      	ldr	r0, [r1, #4]
 c006012:	f1bc 0f02 	cmp.w	ip, #2
 c006016:	6158      	str	r0, [r3, #20]
 c006018:	dd70      	ble.n	c0060fc <kad_op_reshape+0x160>
 c00601a:	688f      	ldr	r7, [r1, #8]
 c00601c:	f012 0efc 	ands.w	lr, r2, #252	@ 0xfc
 c006020:	619f      	str	r7, [r3, #24]
 c006022:	d06b      	beq.n	c0060fc <kad_op_reshape+0x160>
 c006024:	68c9      	ldr	r1, [r1, #12]
 c006026:	2c00      	cmp	r4, #0
 c006028:	61d9      	str	r1, [r3, #28]
 c00602a:	dd69      	ble.n	c006100 <kad_op_reshape+0x164>
 c00602c:	2800      	cmp	r0, #0
 c00602e:	f340 80f1 	ble.w	c006214 <kad_op_reshape+0x278>
 c006032:	2700      	movs	r7, #0
 c006034:	fb04 f000 	mul.w	r0, r4, r0
 c006038:	6999      	ldr	r1, [r3, #24]
 c00603a:	2900      	cmp	r1, #0
 c00603c:	f340 8131 	ble.w	c0062a2 <kad_op_reshape+0x306>
 c006040:	fb01 f000 	mul.w	r0, r1, r0
 c006044:	f1be 0f00 	cmp.w	lr, #0
 c006048:	d005      	beq.n	c006056 <kad_op_reshape+0xba>
 c00604a:	69d9      	ldr	r1, [r3, #28]
 c00604c:	2900      	cmp	r1, #0
 c00604e:	f340 816c 	ble.w	c00632a <kad_op_reshape+0x38e>
 c006052:	fb01 f000 	mul.w	r0, r1, r0
 c006056:	2f00      	cmp	r7, #0
 c006058:	f000 80ac 	beq.w	c0061b4 <kad_op_reshape+0x218>
 c00605c:	4639      	mov	r1, r7
 c00605e:	2901      	cmp	r1, #1
 c006060:	d059      	beq.n	c006116 <kad_op_reshape+0x17a>
 c006062:	2c00      	cmp	r4, #0
 c006064:	f340 812a 	ble.w	c0062bc <kad_op_reshape+0x320>
 c006068:	695c      	ldr	r4, [r3, #20]
 c00606a:	2c00      	cmp	r4, #0
 c00606c:	f340 8133 	ble.w	c0062d6 <kad_op_reshape+0x33a>
 c006070:	f1bc 0f02 	cmp.w	ip, #2
 c006074:	dd0a      	ble.n	c00608c <kad_op_reshape+0xf0>
 c006076:	699c      	ldr	r4, [r3, #24]
 c006078:	2c00      	cmp	r4, #0
 c00607a:	f340 813d 	ble.w	c0062f8 <kad_op_reshape+0x35c>
 c00607e:	f012 0ffc 	tst.w	r2, #252	@ 0xfc
 c006082:	d003      	beq.n	c00608c <kad_op_reshape+0xf0>
 c006084:	69dc      	ldr	r4, [r3, #28]
 c006086:	2c00      	cmp	r4, #0
 c006088:	f340 8143 	ble.w	c006312 <kad_op_reshape+0x376>
 c00608c:	f04f 30ff 	mov.w	r0, #4294967295
 c006090:	e790      	b.n	c005fb4 <kad_op_reshape+0x18>
 c006092:	786a      	ldrb	r2, [r5, #1]
 c006094:	07d2      	lsls	r2, r2, #31
 c006096:	d58c      	bpl.n	c005fb2 <kad_op_reshape+0x16>
 c006098:	7804      	ldrb	r4, [r0, #0]
 c00609a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 c00609c:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
 c00609e:	2c00      	cmp	r4, #0
 c0060a0:	f000 8161 	beq.w	c006366 <kad_op_reshape+0x3ca>
 c0060a4:	2c01      	cmp	r4, #1
 c0060a6:	6900      	ldr	r0, [r0, #16]
 c0060a8:	d00b      	beq.n	c0060c2 <kad_op_reshape+0x126>
 c0060aa:	695d      	ldr	r5, [r3, #20]
 c0060ac:	2c02      	cmp	r4, #2
 c0060ae:	fb05 f000 	mul.w	r0, r5, r0
 c0060b2:	d006      	beq.n	c0060c2 <kad_op_reshape+0x126>
 c0060b4:	699d      	ldr	r5, [r3, #24]
 c0060b6:	2c03      	cmp	r4, #3
 c0060b8:	fb05 f000 	mul.w	r0, r5, r0
 c0060bc:	bf1c      	itt	ne
 c0060be:	69db      	ldrne	r3, [r3, #28]
 c0060c0:	4358      	mulne	r0, r3
 c0060c2:	2800      	cmp	r0, #0
 c0060c4:	f77f af75 	ble.w	c005fb2 <kad_op_reshape+0x16>
 c0060c8:	4613      	mov	r3, r2
 c0060ca:	2200      	movs	r2, #0
 c0060cc:	edd3 7a00 	vldr	s15, [r3]
 c0060d0:	ecb1 7a01 	vldmia	r1!, {s14}
 c0060d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 c0060d8:	3201      	adds	r2, #1
 c0060da:	4282      	cmp	r2, r0
 c0060dc:	ece3 7a01 	vstmia	r3!, {s15}
 c0060e0:	dbf4      	blt.n	c0060cc <kad_op_reshape+0x130>
 c0060e2:	e766      	b.n	c005fb2 <kad_op_reshape+0x16>
 c0060e4:	782a      	ldrb	r2, [r5, #0]
 c0060e6:	7002      	strb	r2, [r0, #0]
 c0060e8:	2a00      	cmp	r2, #0
 c0060ea:	f43f af62 	beq.w	c005fb2 <kad_op_reshape+0x16>
 c0060ee:	0092      	lsls	r2, r2, #2
 c0060f0:	f105 0110 	add.w	r1, r5, #16
 c0060f4:	3010      	adds	r0, #16
 c0060f6:	f009 fb6a 	bl	c00f7ce <memcpy>
 c0060fa:	e75a      	b.n	c005fb2 <kad_op_reshape+0x16>
 c0060fc:	2c00      	cmp	r4, #0
 c0060fe:	dc75      	bgt.n	c0061ec <kad_op_reshape+0x250>
 c006100:	2800      	cmp	r0, #0
 c006102:	dd78      	ble.n	c0061f6 <kad_op_reshape+0x25a>
 c006104:	2701      	movs	r7, #1
 c006106:	4639      	mov	r1, r7
 c006108:	f1bc 0f02 	cmp.w	ip, #2
 c00610c:	fb01 f000 	mul.w	r0, r1, r0
 c006110:	dc77      	bgt.n	c006202 <kad_op_reshape+0x266>
 c006112:	2f00      	cmp	r7, #0
 c006114:	d04e      	beq.n	c0061b4 <kad_op_reshape+0x218>
 c006116:	7829      	ldrb	r1, [r5, #0]
 c006118:	2900      	cmp	r1, #0
 c00611a:	f000 8132 	beq.w	c006382 <kad_op_reshape+0x3e6>
 c00611e:	2901      	cmp	r1, #1
 c006120:	692f      	ldr	r7, [r5, #16]
 c006122:	f000 8122 	beq.w	c00636a <kad_op_reshape+0x3ce>
 c006126:	f8d5 e014 	ldr.w	lr, [r5, #20]
 c00612a:	2902      	cmp	r1, #2
 c00612c:	fb0e f807 	mul.w	r8, lr, r7
 c006130:	f000 80ff 	beq.w	c006332 <kad_op_reshape+0x396>
 c006134:	69ac      	ldr	r4, [r5, #24]
 c006136:	2903      	cmp	r1, #3
 c006138:	fb04 f808 	mul.w	r8, r4, r8
 c00613c:	f000 80f9 	beq.w	c006332 <kad_op_reshape+0x396>
 c006140:	69ec      	ldr	r4, [r5, #28]
 c006142:	fb04 f408 	mul.w	r4, r4, r8
 c006146:	fb94 f8f0 	sdiv	r8, r4, r0
 c00614a:	fb00 4418 	mls	r4, r0, r8, r4
 c00614e:	2c00      	cmp	r4, #0
 c006150:	d19c      	bne.n	c00608c <kad_op_reshape+0xf0>
 c006152:	691c      	ldr	r4, [r3, #16]
 c006154:	2c00      	cmp	r4, #0
 c006156:	dd60      	ble.n	c00621a <kad_op_reshape+0x27e>
 c006158:	2e00      	cmp	r6, #0
 c00615a:	f43f af2a 	beq.w	c005fb2 <kad_op_reshape+0x16>
 c00615e:	695c      	ldr	r4, [r3, #20]
 c006160:	2c00      	cmp	r4, #0
 c006162:	dd71      	ble.n	c006248 <kad_op_reshape+0x2ac>
 c006164:	f1bc 0f02 	cmp.w	ip, #2
 c006168:	f77f af23 	ble.w	c005fb2 <kad_op_reshape+0x16>
 c00616c:	699c      	ldr	r4, [r3, #24]
 c00616e:	2c00      	cmp	r4, #0
 c006170:	f340 810f 	ble.w	c006392 <kad_op_reshape+0x3f6>
 c006174:	f012 0ffc 	tst.w	r2, #252	@ 0xfc
 c006178:	f43f af1b 	beq.w	c005fb2 <kad_op_reshape+0x16>
 c00617c:	69da      	ldr	r2, [r3, #28]
 c00617e:	2a00      	cmp	r2, #0
 c006180:	f73f af17 	bgt.w	c005fb2 <kad_op_reshape+0x16>
 c006184:	2900      	cmp	r1, #0
 c006186:	f000 812b 	beq.w	c0063e0 <kad_op_reshape+0x444>
 c00618a:	2901      	cmp	r1, #1
 c00618c:	692a      	ldr	r2, [r5, #16]
 c00618e:	d00c      	beq.n	c0061aa <kad_op_reshape+0x20e>
 c006190:	696c      	ldr	r4, [r5, #20]
 c006192:	2902      	cmp	r1, #2
 c006194:	fb04 f202 	mul.w	r2, r4, r2
 c006198:	d007      	beq.n	c0061aa <kad_op_reshape+0x20e>
 c00619a:	69ac      	ldr	r4, [r5, #24]
 c00619c:	2903      	cmp	r1, #3
 c00619e:	fb04 f202 	mul.w	r2, r4, r2
 c0061a2:	d002      	beq.n	c0061aa <kad_op_reshape+0x20e>
 c0061a4:	69e9      	ldr	r1, [r5, #28]
 c0061a6:	fb01 f202 	mul.w	r2, r1, r2
 c0061aa:	fb92 f2f0 	sdiv	r2, r2, r0
 c0061ae:	61da      	str	r2, [r3, #28]
 c0061b0:	e6ff      	b.n	c005fb2 <kad_op_reshape+0x16>
 c0061b2:	2001      	movs	r0, #1
 c0061b4:	782a      	ldrb	r2, [r5, #0]
 c0061b6:	2a00      	cmp	r2, #0
 c0061b8:	f000 80b9 	beq.w	c00632e <kad_op_reshape+0x392>
 c0061bc:	2a01      	cmp	r2, #1
 c0061be:	692b      	ldr	r3, [r5, #16]
 c0061c0:	d00c      	beq.n	c0061dc <kad_op_reshape+0x240>
 c0061c2:	6969      	ldr	r1, [r5, #20]
 c0061c4:	2a02      	cmp	r2, #2
 c0061c6:	fb01 f303 	mul.w	r3, r1, r3
 c0061ca:	d007      	beq.n	c0061dc <kad_op_reshape+0x240>
 c0061cc:	69a9      	ldr	r1, [r5, #24]
 c0061ce:	2a03      	cmp	r2, #3
 c0061d0:	fb01 f303 	mul.w	r3, r1, r3
 c0061d4:	d002      	beq.n	c0061dc <kad_op_reshape+0x240>
 c0061d6:	69ea      	ldr	r2, [r5, #28]
 c0061d8:	fb02 f303 	mul.w	r3, r2, r3
 c0061dc:	1ac0      	subs	r0, r0, r3
 c0061de:	bf18      	it	ne
 c0061e0:	f04f 30ff 	movne.w	r0, #4294967295
 c0061e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c0061e8:	2204      	movs	r2, #4
 c0061ea:	e6fb      	b.n	c005fe4 <kad_op_reshape+0x48>
 c0061ec:	2800      	cmp	r0, #0
 c0061ee:	dd0b      	ble.n	c006208 <kad_op_reshape+0x26c>
 c0061f0:	4621      	mov	r1, r4
 c0061f2:	2700      	movs	r7, #0
 c0061f4:	e788      	b.n	c006108 <kad_op_reshape+0x16c>
 c0061f6:	f1bc 0f02 	cmp.w	ip, #2
 c0061fa:	f340 80cd 	ble.w	c006398 <kad_op_reshape+0x3fc>
 c0061fe:	2702      	movs	r7, #2
 c006200:	2001      	movs	r0, #1
 c006202:	f002 0efc 	and.w	lr, r2, #252	@ 0xfc
 c006206:	e717      	b.n	c006038 <kad_op_reshape+0x9c>
 c006208:	f1bc 0f02 	cmp.w	ip, #2
 c00620c:	f340 80df 	ble.w	c0063ce <kad_op_reshape+0x432>
 c006210:	f002 0efc 	and.w	lr, r2, #252	@ 0xfc
 c006214:	4620      	mov	r0, r4
 c006216:	2701      	movs	r7, #1
 c006218:	e70e      	b.n	c006038 <kad_op_reshape+0x9c>
 c00621a:	2902      	cmp	r1, #2
 c00621c:	fb0e fe07 	mul.w	lr, lr, r7
 c006220:	d007      	beq.n	c006232 <kad_op_reshape+0x296>
 c006222:	69ac      	ldr	r4, [r5, #24]
 c006224:	2903      	cmp	r1, #3
 c006226:	fb04 fe0e 	mul.w	lr, r4, lr
 c00622a:	bf1c      	itt	ne
 c00622c:	69ec      	ldrne	r4, [r5, #28]
 c00622e:	fb04 fe0e 	mulne.w	lr, r4, lr
 c006232:	fb9e fef0 	sdiv	lr, lr, r0
 c006236:	f8c3 e010 	str.w	lr, [r3, #16]
 c00623a:	2e00      	cmp	r6, #0
 c00623c:	f43f aeb9 	beq.w	c005fb2 <kad_op_reshape+0x16>
 c006240:	695c      	ldr	r4, [r3, #20]
 c006242:	2c00      	cmp	r4, #0
 c006244:	dc8e      	bgt.n	c006164 <kad_op_reshape+0x1c8>
 c006246:	692f      	ldr	r7, [r5, #16]
 c006248:	2901      	cmp	r1, #1
 c00624a:	463e      	mov	r6, r7
 c00624c:	d00b      	beq.n	c006266 <kad_op_reshape+0x2ca>
 c00624e:	696e      	ldr	r6, [r5, #20]
 c006250:	2902      	cmp	r1, #2
 c006252:	fb07 f606 	mul.w	r6, r7, r6
 c006256:	d006      	beq.n	c006266 <kad_op_reshape+0x2ca>
 c006258:	69ac      	ldr	r4, [r5, #24]
 c00625a:	2903      	cmp	r1, #3
 c00625c:	fb04 f606 	mul.w	r6, r4, r6
 c006260:	bf1c      	itt	ne
 c006262:	69ec      	ldrne	r4, [r5, #28]
 c006264:	4366      	mulne	r6, r4
 c006266:	fb96 f6f0 	sdiv	r6, r6, r0
 c00626a:	f1bc 0f02 	cmp.w	ip, #2
 c00626e:	615e      	str	r6, [r3, #20]
 c006270:	f77f ae9f 	ble.w	c005fb2 <kad_op_reshape+0x16>
 c006274:	699c      	ldr	r4, [r3, #24]
 c006276:	2c00      	cmp	r4, #0
 c006278:	f73f af7c 	bgt.w	c006174 <kad_op_reshape+0x1d8>
 c00627c:	2901      	cmp	r1, #1
 c00627e:	d00c      	beq.n	c00629a <kad_op_reshape+0x2fe>
 c006280:	696c      	ldr	r4, [r5, #20]
 c006282:	2902      	cmp	r1, #2
 c006284:	fb04 f707 	mul.w	r7, r4, r7
 c006288:	d007      	beq.n	c00629a <kad_op_reshape+0x2fe>
 c00628a:	69ac      	ldr	r4, [r5, #24]
 c00628c:	2903      	cmp	r1, #3
 c00628e:	fb04 f707 	mul.w	r7, r4, r7
 c006292:	d002      	beq.n	c00629a <kad_op_reshape+0x2fe>
 c006294:	69ec      	ldr	r4, [r5, #28]
 c006296:	fb04 f707 	mul.w	r7, r4, r7
 c00629a:	fb97 f7f0 	sdiv	r7, r7, r0
 c00629e:	619f      	str	r7, [r3, #24]
 c0062a0:	e768      	b.n	c006174 <kad_op_reshape+0x1d8>
 c0062a2:	1c79      	adds	r1, r7, #1
 c0062a4:	f1be 0f00 	cmp.w	lr, #0
 c0062a8:	f43f aed9 	beq.w	c00605e <kad_op_reshape+0xc2>
 c0062ac:	f8d3 e01c 	ldr.w	lr, [r3, #28]
 c0062b0:	f1be 0f00 	cmp.w	lr, #0
 c0062b4:	dd45      	ble.n	c006342 <kad_op_reshape+0x3a6>
 c0062b6:	fb0e f000 	mul.w	r0, lr, r0
 c0062ba:	e6d0      	b.n	c00605e <kad_op_reshape+0xc2>
 c0062bc:	782c      	ldrb	r4, [r5, #0]
 c0062be:	2c00      	cmp	r4, #0
 c0062c0:	f43f aed2 	beq.w	c006068 <kad_op_reshape+0xcc>
 c0062c4:	692c      	ldr	r4, [r5, #16]
 c0062c6:	3901      	subs	r1, #1
 c0062c8:	2901      	cmp	r1, #1
 c0062ca:	fb04 f000 	mul.w	r0, r4, r0
 c0062ce:	611c      	str	r4, [r3, #16]
 c0062d0:	f47f aeca 	bne.w	c006068 <kad_op_reshape+0xcc>
 c0062d4:	e71f      	b.n	c006116 <kad_op_reshape+0x17a>
 c0062d6:	782c      	ldrb	r4, [r5, #0]
 c0062d8:	2c01      	cmp	r4, #1
 c0062da:	f67f aec9 	bls.w	c006070 <kad_op_reshape+0xd4>
 c0062de:	696c      	ldr	r4, [r5, #20]
 c0062e0:	3901      	subs	r1, #1
 c0062e2:	2901      	cmp	r1, #1
 c0062e4:	fb04 f000 	mul.w	r0, r4, r0
 c0062e8:	615c      	str	r4, [r3, #20]
 c0062ea:	f47f aec1 	bne.w	c006070 <kad_op_reshape+0xd4>
 c0062ee:	e712      	b.n	c006116 <kad_op_reshape+0x17a>
 c0062f0:	2c00      	cmp	r4, #0
 c0062f2:	dd28      	ble.n	c006346 <kad_op_reshape+0x3aa>
 c0062f4:	4620      	mov	r0, r4
 c0062f6:	e75d      	b.n	c0061b4 <kad_op_reshape+0x218>
 c0062f8:	782c      	ldrb	r4, [r5, #0]
 c0062fa:	2c02      	cmp	r4, #2
 c0062fc:	f67f aebf 	bls.w	c00607e <kad_op_reshape+0xe2>
 c006300:	69ac      	ldr	r4, [r5, #24]
 c006302:	3901      	subs	r1, #1
 c006304:	2901      	cmp	r1, #1
 c006306:	fb04 f000 	mul.w	r0, r4, r0
 c00630a:	619c      	str	r4, [r3, #24]
 c00630c:	f47f aeb7 	bne.w	c00607e <kad_op_reshape+0xe2>
 c006310:	e701      	b.n	c006116 <kad_op_reshape+0x17a>
 c006312:	782c      	ldrb	r4, [r5, #0]
 c006314:	2c03      	cmp	r4, #3
 c006316:	f67f aeb9 	bls.w	c00608c <kad_op_reshape+0xf0>
 c00631a:	69ec      	ldr	r4, [r5, #28]
 c00631c:	2902      	cmp	r1, #2
 c00631e:	bf08      	it	eq
 c006320:	4360      	muleq	r0, r4
 c006322:	61dc      	str	r4, [r3, #28]
 c006324:	f47f aeb2 	bne.w	c00608c <kad_op_reshape+0xf0>
 c006328:	e6f5      	b.n	c006116 <kad_op_reshape+0x17a>
 c00632a:	1c79      	adds	r1, r7, #1
 c00632c:	e697      	b.n	c00605e <kad_op_reshape+0xc2>
 c00632e:	2301      	movs	r3, #1
 c006330:	e754      	b.n	c0061dc <kad_op_reshape+0x240>
 c006332:	fb98 f4f0 	sdiv	r4, r8, r0
 c006336:	fb00 8414 	mls	r4, r0, r4, r8
 c00633a:	2c00      	cmp	r4, #0
 c00633c:	f43f af09 	beq.w	c006152 <kad_op_reshape+0x1b6>
 c006340:	e6a4      	b.n	c00608c <kad_op_reshape+0xf0>
 c006342:	1cb9      	adds	r1, r7, #2
 c006344:	e68d      	b.n	c006062 <kad_op_reshape+0xc6>
 c006346:	7829      	ldrb	r1, [r5, #0]
 c006348:	2001      	movs	r0, #1
 c00634a:	2900      	cmp	r1, #0
 c00634c:	f47f aee7 	bne.w	c00611e <kad_op_reshape+0x182>
 c006350:	6919      	ldr	r1, [r3, #16]
 c006352:	2900      	cmp	r1, #0
 c006354:	dd23      	ble.n	c00639e <kad_op_reshape+0x402>
 c006356:	2e00      	cmp	r6, #0
 c006358:	f43f ae2b 	beq.w	c005fb2 <kad_op_reshape+0x16>
 c00635c:	6959      	ldr	r1, [r3, #20]
 c00635e:	2900      	cmp	r1, #0
 c006360:	dd37      	ble.n	c0063d2 <kad_op_reshape+0x436>
 c006362:	2100      	movs	r1, #0
 c006364:	e6fe      	b.n	c006164 <kad_op_reshape+0x1c8>
 c006366:	2001      	movs	r0, #1
 c006368:	e6ae      	b.n	c0060c8 <kad_op_reshape+0x12c>
 c00636a:	fb97 fef0 	sdiv	lr, r7, r0
 c00636e:	fb00 741e 	mls	r4, r0, lr, r7
 c006372:	2c00      	cmp	r4, #0
 c006374:	f47f ae8a 	bne.w	c00608c <kad_op_reshape+0xf0>
 c006378:	691c      	ldr	r4, [r3, #16]
 c00637a:	2c00      	cmp	r4, #0
 c00637c:	f73f aeec 	bgt.w	c006158 <kad_op_reshape+0x1bc>
 c006380:	e759      	b.n	c006236 <kad_op_reshape+0x29a>
 c006382:	2101      	movs	r1, #1
 c006384:	fb91 f1f0 	sdiv	r1, r1, r0
 c006388:	fb00 f101 	mul.w	r1, r0, r1
 c00638c:	2901      	cmp	r1, #1
 c00638e:	d0df      	beq.n	c006350 <kad_op_reshape+0x3b4>
 c006390:	e67c      	b.n	c00608c <kad_op_reshape+0xf0>
 c006392:	b1d1      	cbz	r1, c0063ca <kad_op_reshape+0x42e>
 c006394:	692f      	ldr	r7, [r5, #16]
 c006396:	e771      	b.n	c00627c <kad_op_reshape+0x2e0>
 c006398:	2102      	movs	r1, #2
 c00639a:	2001      	movs	r0, #1
 c00639c:	e661      	b.n	c006062 <kad_op_reshape+0xc6>
 c00639e:	1c41      	adds	r1, r0, #1
 c0063a0:	2902      	cmp	r1, #2
 c0063a2:	bf94      	ite	ls
 c0063a4:	4604      	movls	r4, r0
 c0063a6:	2400      	movhi	r4, #0
 c0063a8:	611c      	str	r4, [r3, #16]
 c0063aa:	2e00      	cmp	r6, #0
 c0063ac:	f43f ae01 	beq.w	c005fb2 <kad_op_reshape+0x16>
 c0063b0:	695c      	ldr	r4, [r3, #20]
 c0063b2:	2c00      	cmp	r4, #0
 c0063b4:	dd0e      	ble.n	c0063d4 <kad_op_reshape+0x438>
 c0063b6:	f1bc 0f02 	cmp.w	ip, #2
 c0063ba:	f77f adfa 	ble.w	c005fb2 <kad_op_reshape+0x16>
 c0063be:	6999      	ldr	r1, [r3, #24]
 c0063c0:	2900      	cmp	r1, #0
 c0063c2:	f04f 0100 	mov.w	r1, #0
 c0063c6:	f73f aed5 	bgt.w	c006174 <kad_op_reshape+0x1d8>
 c0063ca:	2701      	movs	r7, #1
 c0063cc:	e765      	b.n	c00629a <kad_op_reshape+0x2fe>
 c0063ce:	4620      	mov	r0, r4
 c0063d0:	e6a1      	b.n	c006116 <kad_op_reshape+0x17a>
 c0063d2:	1c41      	adds	r1, r0, #1
 c0063d4:	2902      	cmp	r1, #2
 c0063d6:	bf94      	ite	ls
 c0063d8:	4601      	movls	r1, r0
 c0063da:	2100      	movhi	r1, #0
 c0063dc:	6159      	str	r1, [r3, #20]
 c0063de:	e7ea      	b.n	c0063b6 <kad_op_reshape+0x41a>
 c0063e0:	2201      	movs	r2, #1
 c0063e2:	e6e2      	b.n	c0061aa <kad_op_reshape+0x20e>

0c0063e4 <kad_op_reverse>:
 c0063e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c0063e8:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c0063ea:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 c0063ec:	f8d3 8000 	ldr.w	r8, [r3]
 c0063f0:	4683      	mov	fp, r0
 c0063f2:	f898 5000 	ldrb.w	r5, [r8]
 c0063f6:	b085      	sub	sp, #20
 c0063f8:	2a00      	cmp	r2, #0
 c0063fa:	d041      	beq.n	c006480 <kad_op_reverse+0x9c>
 c0063fc:	6812      	ldr	r2, [r2, #0]
 c0063fe:	2a00      	cmp	r2, #0
 c006400:	db35      	blt.n	c00646e <kad_op_reverse+0x8a>
 c006402:	42aa      	cmp	r2, r5
 c006404:	da35      	bge.n	c006472 <kad_op_reverse+0x8e>
 c006406:	1c50      	adds	r0, r2, #1
 c006408:	2a00      	cmp	r2, #0
 c00640a:	d03b      	beq.n	c006484 <kad_op_reverse+0xa0>
 c00640c:	2a01      	cmp	r2, #1
 c00640e:	f8d8 3010 	ldr.w	r3, [r8, #16]
 c006412:	d00e      	beq.n	c006432 <kad_op_reverse+0x4e>
 c006414:	f8d8 4014 	ldr.w	r4, [r8, #20]
 c006418:	2a02      	cmp	r2, #2
 c00641a:	fb04 f303 	mul.w	r3, r4, r3
 c00641e:	d008      	beq.n	c006432 <kad_op_reverse+0x4e>
 c006420:	f8d8 4018 	ldr.w	r4, [r8, #24]
 c006424:	2a03      	cmp	r2, #3
 c006426:	fb04 f303 	mul.w	r3, r4, r3
 c00642a:	bf1c      	itt	ne
 c00642c:	f8d8 401c 	ldrne.w	r4, [r8, #28]
 c006430:	4363      	mulne	r3, r4
 c006432:	3204      	adds	r2, #4
 c006434:	42a8      	cmp	r0, r5
 c006436:	f858 a022 	ldr.w	sl, [r8, r2, lsl #2]
 c00643a:	da2a      	bge.n	c006492 <kad_op_reverse+0xae>
 c00643c:	1c42      	adds	r2, r0, #1
 c00643e:	eb08 0680 	add.w	r6, r8, r0, lsl #2
 c006442:	4295      	cmp	r5, r2
 c006444:	6934      	ldr	r4, [r6, #16]
 c006446:	dd08      	ble.n	c00645a <kad_op_reverse+0x76>
 c006448:	6972      	ldr	r2, [r6, #20]
 c00644a:	3002      	adds	r0, #2
 c00644c:	42a8      	cmp	r0, r5
 c00644e:	fb02 f404 	mul.w	r4, r2, r4
 c006452:	da02      	bge.n	c00645a <kad_op_reverse+0x76>
 c006454:	69b2      	ldr	r2, [r6, #24]
 c006456:	fb02 f404 	mul.w	r4, r2, r4
 c00645a:	2904      	cmp	r1, #4
 c00645c:	d01d      	beq.n	c00649a <kad_op_reverse+0xb6>
 c00645e:	2902      	cmp	r1, #2
 c006460:	d027      	beq.n	c0064b2 <kad_op_reverse+0xce>
 c006462:	2903      	cmp	r1, #3
 c006464:	d05c      	beq.n	c006520 <kad_op_reverse+0x13c>
 c006466:	2000      	movs	r0, #0
 c006468:	b005      	add	sp, #20
 c00646a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00646e:	1952      	adds	r2, r2, r5
 c006470:	d5c9      	bpl.n	c006406 <kad_op_reverse+0x22>
 c006472:	f240 51bc 	movw	r1, #1468	@ 0x5bc
 c006476:	4b4b      	ldr	r3, [pc, #300]	@ (c0065a4 <kad_op_reverse+0x1c0>)
 c006478:	4a4b      	ldr	r2, [pc, #300]	@ (c0065a8 <kad_op_reverse+0x1c4>)
 c00647a:	484c      	ldr	r0, [pc, #304]	@ (c0065ac <kad_op_reverse+0x1c8>)
 c00647c:	f008 fdc4 	bl	c00f008 <__assert_func>
 c006480:	2d00      	cmp	r5, #0
 c006482:	d0f6      	beq.n	c006472 <kad_op_reverse+0x8e>
 c006484:	2001      	movs	r0, #1
 c006486:	3204      	adds	r2, #4
 c006488:	42a8      	cmp	r0, r5
 c00648a:	4603      	mov	r3, r0
 c00648c:	f858 a022 	ldr.w	sl, [r8, r2, lsl #2]
 c006490:	dbd4      	blt.n	c00643c <kad_op_reverse+0x58>
 c006492:	2904      	cmp	r1, #4
 c006494:	f04f 0401 	mov.w	r4, #1
 c006498:	d1e1      	bne.n	c00645e <kad_op_reverse+0x7a>
 c00649a:	4658      	mov	r0, fp
 c00649c:	00aa      	lsls	r2, r5, #2
 c00649e:	f108 0110 	add.w	r1, r8, #16
 c0064a2:	f800 5b10 	strb.w	r5, [r0], #16
 c0064a6:	f009 f992 	bl	c00f7ce <memcpy>
 c0064aa:	2000      	movs	r0, #0
 c0064ac:	b005      	add	sp, #20
 c0064ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0064b2:	2b00      	cmp	r3, #0
 c0064b4:	ddd7      	ble.n	c006466 <kad_op_reverse+0x82>
 c0064b6:	f1ba 0f00 	cmp.w	sl, #0
 c0064ba:	ea4f 0784 	mov.w	r7, r4, lsl #2
 c0064be:	ddd2      	ble.n	c006466 <kad_op_reverse+0x82>
 c0064c0:	2200      	movs	r2, #0
 c0064c2:	46b9      	mov	r9, r7
 c0064c4:	9303      	str	r3, [sp, #12]
 c0064c6:	4617      	mov	r7, r2
 c0064c8:	4613      	mov	r3, r2
 c0064ca:	fb04 f10a 	mul.w	r1, r4, sl
 c0064ce:	1b0c      	subs	r4, r1, r4
 c0064d0:	0089      	lsls	r1, r1, #2
 c0064d2:	9101      	str	r1, [sp, #4]
 c0064d4:	00a1      	lsls	r1, r4, #2
 c0064d6:	9102      	str	r1, [sp, #8]
 c0064d8:	9300      	str	r3, [sp, #0]
 c0064da:	465b      	mov	r3, fp
 c0064dc:	9a02      	ldr	r2, [sp, #8]
 c0064de:	463e      	mov	r6, r7
 c0064e0:	46bb      	mov	fp, r7
 c0064e2:	19d4      	adds	r4, r2, r7
 c0064e4:	2500      	movs	r5, #0
 c0064e6:	461f      	mov	r7, r3
 c0064e8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 c0064ea:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 c0064ee:	4420      	add	r0, r4
 c0064f0:	4431      	add	r1, r6
 c0064f2:	464a      	mov	r2, r9
 c0064f4:	3501      	adds	r5, #1
 c0064f6:	f009 f96a 	bl	c00f7ce <memcpy>
 c0064fa:	45aa      	cmp	sl, r5
 c0064fc:	eba4 0409 	sub.w	r4, r4, r9
 c006500:	444e      	add	r6, r9
 c006502:	d1f1      	bne.n	c0064e8 <kad_op_reverse+0x104>
 c006504:	463a      	mov	r2, r7
 c006506:	465f      	mov	r7, fp
 c006508:	4693      	mov	fp, r2
 c00650a:	9a01      	ldr	r2, [sp, #4]
 c00650c:	9b00      	ldr	r3, [sp, #0]
 c00650e:	4417      	add	r7, r2
 c006510:	9a03      	ldr	r2, [sp, #12]
 c006512:	3301      	adds	r3, #1
 c006514:	4293      	cmp	r3, r2
 c006516:	d1df      	bne.n	c0064d8 <kad_op_reverse+0xf4>
 c006518:	2000      	movs	r0, #0
 c00651a:	b005      	add	sp, #20
 c00651c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c006520:	f898 2001 	ldrb.w	r2, [r8, #1]
 c006524:	07d2      	lsls	r2, r2, #31
 c006526:	d59e      	bpl.n	c006466 <kad_op_reverse+0x82>
 c006528:	2b00      	cmp	r3, #0
 c00652a:	dd9c      	ble.n	c006466 <kad_op_reverse+0x82>
 c00652c:	f1ba 0f00 	cmp.w	sl, #0
 c006530:	dd99      	ble.n	c006466 <kad_op_reverse+0x82>
 c006532:	2c00      	cmp	r4, #0
 c006534:	dd97      	ble.n	c006466 <kad_op_reverse+0x82>
 c006536:	f8d8 702c 	ldr.w	r7, [r8, #44]	@ 0x2c
 c00653a:	f04f 0800 	mov.w	r8, #0
 c00653e:	46c1      	mov	r9, r8
 c006540:	fb04 f20a 	mul.w	r2, r4, sl
 c006544:	00a6      	lsls	r6, r4, #2
 c006546:	eb07 0c84 	add.w	ip, r7, r4, lsl #2
 c00654a:	1b14      	subs	r4, r2, r4
 c00654c:	f8db e02c 	ldr.w	lr, [fp, #44]	@ 0x2c
 c006550:	ea4f 0b82 	mov.w	fp, r2, lsl #2
 c006554:	00a2      	lsls	r2, r4, #2
 c006556:	9200      	str	r2, [sp, #0]
 c006558:	f8cd b004 	str.w	fp, [sp, #4]
 c00655c:	46c3      	mov	fp, r8
 c00655e:	2500      	movs	r5, #0
 c006560:	9a00      	ldr	r2, [sp, #0]
 c006562:	eb0c 0008 	add.w	r0, ip, r8
 c006566:	eb08 0402 	add.w	r4, r8, r2
 c00656a:	eb07 020b 	add.w	r2, r7, fp
 c00656e:	eb0e 0104 	add.w	r1, lr, r4
 c006572:	edd2 7a00 	vldr	s15, [r2]
 c006576:	ecb1 7a01 	vldmia	r1!, {s14}
 c00657a:	ee77 7a87 	vadd.f32	s15, s15, s14
 c00657e:	ece2 7a01 	vstmia	r2!, {s15}
 c006582:	4290      	cmp	r0, r2
 c006584:	d1f5      	bne.n	c006572 <kad_op_reverse+0x18e>
 c006586:	3501      	adds	r5, #1
 c006588:	45aa      	cmp	sl, r5
 c00658a:	44b3      	add	fp, r6
 c00658c:	eba4 0406 	sub.w	r4, r4, r6
 c006590:	4430      	add	r0, r6
 c006592:	d1ea      	bne.n	c00656a <kad_op_reverse+0x186>
 c006594:	9a01      	ldr	r2, [sp, #4]
 c006596:	f109 0901 	add.w	r9, r9, #1
 c00659a:	4599      	cmp	r9, r3
 c00659c:	4490      	add	r8, r2
 c00659e:	d1dd      	bne.n	c00655c <kad_op_reverse+0x178>
 c0065a0:	e761      	b.n	c006466 <kad_op_reverse+0x82>
 c0065a2:	bf00      	nop
 c0065a4:	0c011b30 	.word	0x0c011b30
 c0065a8:	0c011c64 	.word	0x0c011c64
 c0065ac:	0c011b04 	.word	0x0c011b04

0c0065b0 <kad_op_avg>:
 c0065b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c0065b4:	6846      	ldr	r6, [r0, #4]
 c0065b6:	ed2d 8b02 	vpush	{d8}
 c0065ba:	2e00      	cmp	r6, #0
 c0065bc:	f340 80c4 	ble.w	c006748 <kad_op_avg+0x198>
 c0065c0:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 c0065c2:	4605      	mov	r5, r0
 c0065c4:	6817      	ldr	r7, [r2, #0]
 c0065c6:	f897 8000 	ldrb.w	r8, [r7]
 c0065ca:	f1b8 0f00 	cmp.w	r8, #0
 c0065ce:	d06c      	beq.n	c0066aa <kad_op_avg+0xfa>
 c0065d0:	f1b8 0f01 	cmp.w	r8, #1
 c0065d4:	693c      	ldr	r4, [r7, #16]
 c0065d6:	d00e      	beq.n	c0065f6 <kad_op_avg+0x46>
 c0065d8:	697b      	ldr	r3, [r7, #20]
 c0065da:	f1b8 0f02 	cmp.w	r8, #2
 c0065de:	fb03 f404 	mul.w	r4, r3, r4
 c0065e2:	d008      	beq.n	c0065f6 <kad_op_avg+0x46>
 c0065e4:	69bb      	ldr	r3, [r7, #24]
 c0065e6:	f1b8 0f03 	cmp.w	r8, #3
 c0065ea:	fb03 f404 	mul.w	r4, r3, r4
 c0065ee:	d002      	beq.n	c0065f6 <kad_op_avg+0x46>
 c0065f0:	69fb      	ldr	r3, [r7, #28]
 c0065f2:	fb03 f404 	mul.w	r4, r3, r4
 c0065f6:	2904      	cmp	r1, #4
 c0065f8:	d010      	beq.n	c00661c <kad_op_avg+0x6c>
 c0065fa:	ee07 6a90 	vmov	s15, r6
 c0065fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c006602:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c006606:	2902      	cmp	r1, #2
 c006608:	ee87 8a27 	vdiv.f32	s16, s14, s15
 c00660c:	d05f      	beq.n	c0066ce <kad_op_avg+0x11e>
 c00660e:	2903      	cmp	r1, #3
 c006610:	d02f      	beq.n	c006672 <kad_op_avg+0xc2>
 c006612:	ecbd 8b02 	vpop	{d8}
 c006616:	2000      	movs	r0, #0
 c006618:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00661c:	2e01      	cmp	r6, #1
 c00661e:	f000 8090 	beq.w	c006742 <kad_op_avg+0x192>
 c006622:	4694      	mov	ip, r2
 c006624:	f04f 0e01 	mov.w	lr, #1
 c006628:	e015      	b.n	c006656 <kad_op_avg+0xa6>
 c00662a:	2801      	cmp	r0, #1
 c00662c:	6913      	ldr	r3, [r2, #16]
 c00662e:	d00c      	beq.n	c00664a <kad_op_avg+0x9a>
 c006630:	6951      	ldr	r1, [r2, #20]
 c006632:	2802      	cmp	r0, #2
 c006634:	fb01 f303 	mul.w	r3, r1, r3
 c006638:	d007      	beq.n	c00664a <kad_op_avg+0x9a>
 c00663a:	6991      	ldr	r1, [r2, #24]
 c00663c:	2803      	cmp	r0, #3
 c00663e:	fb01 f303 	mul.w	r3, r1, r3
 c006642:	d002      	beq.n	c00664a <kad_op_avg+0x9a>
 c006644:	69d2      	ldr	r2, [r2, #28]
 c006646:	fb02 f303 	mul.w	r3, r2, r3
 c00664a:	429c      	cmp	r4, r3
 c00664c:	d10b      	bne.n	c006666 <kad_op_avg+0xb6>
 c00664e:	f10e 0e01 	add.w	lr, lr, #1
 c006652:	4576      	cmp	r6, lr
 c006654:	dd2d      	ble.n	c0066b2 <kad_op_avg+0x102>
 c006656:	f85c 2f04 	ldr.w	r2, [ip, #4]!
 c00665a:	7810      	ldrb	r0, [r2, #0]
 c00665c:	2800      	cmp	r0, #0
 c00665e:	d1e4      	bne.n	c00662a <kad_op_avg+0x7a>
 c006660:	2301      	movs	r3, #1
 c006662:	429c      	cmp	r4, r3
 c006664:	d0f3      	beq.n	c00664e <kad_op_avg+0x9e>
 c006666:	f04f 30ff 	mov.w	r0, #4294967295
 c00666a:	ecbd 8b02 	vpop	{d8}
 c00666e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c006672:	3a04      	subs	r2, #4
 c006674:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 c006678:	00a7      	lsls	r7, r4, #2
 c00667a:	e001      	b.n	c006680 <kad_op_avg+0xd0>
 c00667c:	4296      	cmp	r6, r2
 c00667e:	d0c8      	beq.n	c006612 <kad_op_avg+0x62>
 c006680:	f852 3f04 	ldr.w	r3, [r2, #4]!
 c006684:	7859      	ldrb	r1, [r3, #1]
 c006686:	07c9      	lsls	r1, r1, #31
 c006688:	d5f8      	bpl.n	c00667c <kad_op_avg+0xcc>
 c00668a:	2c00      	cmp	r4, #0
 c00668c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 c00668e:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 c006690:	ddf4      	ble.n	c00667c <kad_op_avg+0xcc>
 c006692:	19d8      	adds	r0, r3, r7
 c006694:	edd3 7a00 	vldr	s15, [r3]
 c006698:	ecb1 7a01 	vldmia	r1!, {s14}
 c00669c:	eee8 7a07 	vfma.f32	s15, s16, s14
 c0066a0:	ece3 7a01 	vstmia	r3!, {s15}
 c0066a4:	4298      	cmp	r0, r3
 c0066a6:	d1f5      	bne.n	c006694 <kad_op_avg+0xe4>
 c0066a8:	e7e8      	b.n	c00667c <kad_op_avg+0xcc>
 c0066aa:	2904      	cmp	r1, #4
 c0066ac:	d03c      	beq.n	c006728 <kad_op_avg+0x178>
 c0066ae:	2401      	movs	r4, #1
 c0066b0:	e7a3      	b.n	c0065fa <kad_op_avg+0x4a>
 c0066b2:	f885 8000 	strb.w	r8, [r5]
 c0066b6:	f1b8 0f00 	cmp.w	r8, #0
 c0066ba:	d0aa      	beq.n	c006612 <kad_op_avg+0x62>
 c0066bc:	ea4f 0288 	mov.w	r2, r8, lsl #2
 c0066c0:	f107 0110 	add.w	r1, r7, #16
 c0066c4:	f105 0010 	add.w	r0, r5, #16
 c0066c8:	f009 f881 	bl	c00f7ce <memcpy>
 c0066cc:	e7a1      	b.n	c006612 <kad_op_avg+0x62>
 c0066ce:	00a6      	lsls	r6, r4, #2
 c0066d0:	4632      	mov	r2, r6
 c0066d2:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 c0066d4:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 c0066d6:	f009 f87a 	bl	c00f7ce <memcpy>
 c0066da:	686a      	ldr	r2, [r5, #4]
 c0066dc:	2a01      	cmp	r2, #1
 c0066de:	dd2b      	ble.n	c006738 <kad_op_avg+0x188>
 c0066e0:	2c00      	cmp	r4, #0
 c0066e2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 c0066e4:	6aad      	ldr	r5, [r5, #40]	@ 0x28
 c0066e6:	dd94      	ble.n	c006612 <kad_op_avg+0x62>
 c0066e8:	461c      	mov	r4, r3
 c0066ea:	1f1f      	subs	r7, r3, #4
 c0066ec:	19a8      	adds	r0, r5, r6
 c0066ee:	eb07 0782 	add.w	r7, r7, r2, lsl #2
 c0066f2:	462b      	mov	r3, r5
 c0066f4:	f854 2f04 	ldr.w	r2, [r4, #4]!
 c0066f8:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 c0066fa:	edd3 7a00 	vldr	s15, [r3]
 c0066fe:	ecb1 7a01 	vldmia	r1!, {s14}
 c006702:	ee77 7a87 	vadd.f32	s15, s15, s14
 c006706:	ece3 7a01 	vstmia	r3!, {s15}
 c00670a:	4298      	cmp	r0, r3
 c00670c:	d1f5      	bne.n	c0066fa <kad_op_avg+0x14a>
 c00670e:	42a7      	cmp	r7, r4
 c006710:	d1ef      	bne.n	c0066f2 <kad_op_avg+0x142>
 c006712:	462b      	mov	r3, r5
 c006714:	442e      	add	r6, r5
 c006716:	edd3 7a00 	vldr	s15, [r3]
 c00671a:	ee67 7a88 	vmul.f32	s15, s15, s16
 c00671e:	ece3 7a01 	vstmia	r3!, {s15}
 c006722:	429e      	cmp	r6, r3
 c006724:	d1f7      	bne.n	c006716 <kad_op_avg+0x166>
 c006726:	e774      	b.n	c006612 <kad_op_avg+0x62>
 c006728:	2e01      	cmp	r6, #1
 c00672a:	bf08      	it	eq
 c00672c:	f880 8000 	strbeq.w	r8, [r0]
 c006730:	f43f af6f 	beq.w	c006612 <kad_op_avg+0x62>
 c006734:	2401      	movs	r4, #1
 c006736:	e774      	b.n	c006622 <kad_op_avg+0x72>
 c006738:	2c00      	cmp	r4, #0
 c00673a:	f77f af6a 	ble.w	c006612 <kad_op_avg+0x62>
 c00673e:	6aad      	ldr	r5, [r5, #40]	@ 0x28
 c006740:	e7e7      	b.n	c006712 <kad_op_avg+0x162>
 c006742:	f885 8000 	strb.w	r8, [r5]
 c006746:	e7b9      	b.n	c0066bc <kad_op_avg+0x10c>
 c006748:	f240 61fb 	movw	r1, #1787	@ 0x6fb
 c00674c:	4b02      	ldr	r3, [pc, #8]	@ (c006758 <kad_op_avg+0x1a8>)
 c00674e:	4a03      	ldr	r2, [pc, #12]	@ (c00675c <kad_op_avg+0x1ac>)
 c006750:	4803      	ldr	r0, [pc, #12]	@ (c006760 <kad_op_avg+0x1b0>)
 c006752:	f008 fc59 	bl	c00f008 <__assert_func>
 c006756:	bf00      	nop
 c006758:	0c011b4c 	.word	0x0c011b4c
 c00675c:	0c011c38 	.word	0x0c011c38
 c006760:	0c011b04 	.word	0x0c011b04

0c006764 <kad_op_stack>:
 c006764:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c006768:	6847      	ldr	r7, [r0, #4]
 c00676a:	2f00      	cmp	r7, #0
 c00676c:	f340 8096 	ble.w	c00689c <kad_op_stack+0x138>
 c006770:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c006772:	4605      	mov	r5, r0
 c006774:	681e      	ldr	r6, [r3, #0]
 c006776:	f896 e000 	ldrb.w	lr, [r6]
 c00677a:	f1be 0f00 	cmp.w	lr, #0
 c00677e:	d057      	beq.n	c006830 <kad_op_stack+0xcc>
 c006780:	f1be 0f01 	cmp.w	lr, #1
 c006784:	6930      	ldr	r0, [r6, #16]
 c006786:	d00e      	beq.n	c0067a6 <kad_op_stack+0x42>
 c006788:	6972      	ldr	r2, [r6, #20]
 c00678a:	f1be 0f02 	cmp.w	lr, #2
 c00678e:	fb02 f000 	mul.w	r0, r2, r0
 c006792:	d008      	beq.n	c0067a6 <kad_op_stack+0x42>
 c006794:	69b2      	ldr	r2, [r6, #24]
 c006796:	f1be 0f03 	cmp.w	lr, #3
 c00679a:	fb02 f000 	mul.w	r0, r2, r0
 c00679e:	d002      	beq.n	c0067a6 <kad_op_stack+0x42>
 c0067a0:	69f2      	ldr	r2, [r6, #28]
 c0067a2:	fb02 f000 	mul.w	r0, r2, r0
 c0067a6:	2904      	cmp	r1, #4
 c0067a8:	d01a      	beq.n	c0067e0 <kad_op_stack+0x7c>
 c0067aa:	2902      	cmp	r1, #2
 c0067ac:	d004      	beq.n	c0067b8 <kad_op_stack+0x54>
 c0067ae:	2903      	cmp	r1, #3
 c0067b0:	d053      	beq.n	c00685a <kad_op_stack+0xf6>
 c0067b2:	2000      	movs	r0, #0
 c0067b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c0067b8:	2700      	movs	r7, #0
 c0067ba:	ea4f 0880 	mov.w	r8, r0, lsl #2
 c0067be:	463c      	mov	r4, r7
 c0067c0:	e002      	b.n	c0067c8 <kad_op_stack+0x64>
 c0067c2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 c0067c4:	f853 6024 	ldr.w	r6, [r3, r4, lsl #2]
 c0067c8:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 c0067ca:	4642      	mov	r2, r8
 c0067cc:	4438      	add	r0, r7
 c0067ce:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 c0067d0:	f008 fffd 	bl	c00f7ce <memcpy>
 c0067d4:	686b      	ldr	r3, [r5, #4]
 c0067d6:	3401      	adds	r4, #1
 c0067d8:	42a3      	cmp	r3, r4
 c0067da:	4447      	add	r7, r8
 c0067dc:	dcf1      	bgt.n	c0067c2 <kad_op_stack+0x5e>
 c0067de:	e7e8      	b.n	c0067b2 <kad_op_stack+0x4e>
 c0067e0:	2f01      	cmp	r7, #1
 c0067e2:	d027      	beq.n	c006834 <kad_op_stack+0xd0>
 c0067e4:	4698      	mov	r8, r3
 c0067e6:	f04f 0c01 	mov.w	ip, #1
 c0067ea:	e015      	b.n	c006818 <kad_op_stack+0xb4>
 c0067ec:	2c01      	cmp	r4, #1
 c0067ee:	6913      	ldr	r3, [r2, #16]
 c0067f0:	d00c      	beq.n	c00680c <kad_op_stack+0xa8>
 c0067f2:	6951      	ldr	r1, [r2, #20]
 c0067f4:	2c02      	cmp	r4, #2
 c0067f6:	fb01 f303 	mul.w	r3, r1, r3
 c0067fa:	d007      	beq.n	c00680c <kad_op_stack+0xa8>
 c0067fc:	6991      	ldr	r1, [r2, #24]
 c0067fe:	2c03      	cmp	r4, #3
 c006800:	fb01 f303 	mul.w	r3, r1, r3
 c006804:	d002      	beq.n	c00680c <kad_op_stack+0xa8>
 c006806:	69d2      	ldr	r2, [r2, #28]
 c006808:	fb02 f303 	mul.w	r3, r2, r3
 c00680c:	4298      	cmp	r0, r3
 c00680e:	d10b      	bne.n	c006828 <kad_op_stack+0xc4>
 c006810:	f10c 0c01 	add.w	ip, ip, #1
 c006814:	4567      	cmp	r7, ip
 c006816:	d00d      	beq.n	c006834 <kad_op_stack+0xd0>
 c006818:	f858 2f04 	ldr.w	r2, [r8, #4]!
 c00681c:	7814      	ldrb	r4, [r2, #0]
 c00681e:	2c00      	cmp	r4, #0
 c006820:	d1e4      	bne.n	c0067ec <kad_op_stack+0x88>
 c006822:	2301      	movs	r3, #1
 c006824:	4298      	cmp	r0, r3
 c006826:	d0f3      	beq.n	c006810 <kad_op_stack+0xac>
 c006828:	f04f 30ff 	mov.w	r0, #4294967295
 c00682c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c006830:	2001      	movs	r0, #1
 c006832:	e7b8      	b.n	c0067a6 <kad_op_stack+0x42>
 c006834:	f10e 0e01 	add.w	lr, lr, #1
 c006838:	f885 e000 	strb.w	lr, [r5]
 c00683c:	612f      	str	r7, [r5, #16]
 c00683e:	7833      	ldrb	r3, [r6, #0]
 c006840:	2b00      	cmp	r3, #0
 c006842:	d0b6      	beq.n	c0067b2 <kad_op_stack+0x4e>
 c006844:	6932      	ldr	r2, [r6, #16]
 c006846:	2b01      	cmp	r3, #1
 c006848:	616a      	str	r2, [r5, #20]
 c00684a:	d0b2      	beq.n	c0067b2 <kad_op_stack+0x4e>
 c00684c:	6972      	ldr	r2, [r6, #20]
 c00684e:	2b02      	cmp	r3, #2
 c006850:	61aa      	str	r2, [r5, #24]
 c006852:	d0ae      	beq.n	c0067b2 <kad_op_stack+0x4e>
 c006854:	69b3      	ldr	r3, [r6, #24]
 c006856:	61eb      	str	r3, [r5, #28]
 c006858:	e7ab      	b.n	c0067b2 <kad_op_stack+0x4e>
 c00685a:	3b04      	subs	r3, #4
 c00685c:	2600      	movs	r6, #0
 c00685e:	ea4f 0c80 	mov.w	ip, r0, lsl #2
 c006862:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 c006866:	e002      	b.n	c00686e <kad_op_stack+0x10a>
 c006868:	429f      	cmp	r7, r3
 c00686a:	4466      	add	r6, ip
 c00686c:	d0a1      	beq.n	c0067b2 <kad_op_stack+0x4e>
 c00686e:	f853 2f04 	ldr.w	r2, [r3, #4]!
 c006872:	7851      	ldrb	r1, [r2, #1]
 c006874:	07c9      	lsls	r1, r1, #31
 c006876:	d5f7      	bpl.n	c006868 <kad_op_stack+0x104>
 c006878:	2800      	cmp	r0, #0
 c00687a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 c00687c:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
 c00687e:	ddf3      	ble.n	c006868 <kad_op_stack+0x104>
 c006880:	4431      	add	r1, r6
 c006882:	eb02 040c 	add.w	r4, r2, ip
 c006886:	edd2 7a00 	vldr	s15, [r2]
 c00688a:	ecb1 7a01 	vldmia	r1!, {s14}
 c00688e:	ee77 7a87 	vadd.f32	s15, s15, s14
 c006892:	ece2 7a01 	vstmia	r2!, {s15}
 c006896:	42a2      	cmp	r2, r4
 c006898:	d1f5      	bne.n	c006886 <kad_op_stack+0x122>
 c00689a:	e7e5      	b.n	c006868 <kad_op_stack+0x104>
 c00689c:	f240 7131 	movw	r1, #1841	@ 0x731
 c0068a0:	4b02      	ldr	r3, [pc, #8]	@ (c0068ac <kad_op_stack+0x148>)
 c0068a2:	4a03      	ldr	r2, [pc, #12]	@ (c0068b0 <kad_op_stack+0x14c>)
 c0068a4:	4803      	ldr	r0, [pc, #12]	@ (c0068b4 <kad_op_stack+0x150>)
 c0068a6:	f008 fbaf 	bl	c00f008 <__assert_func>
 c0068aa:	bf00      	nop
 c0068ac:	0c011b4c 	.word	0x0c011b4c
 c0068b0:	0c011c28 	.word	0x0c011c28
 c0068b4:	0c011b04 	.word	0x0c011b04

0c0068b8 <kad_op_select>:
 c0068b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c0068ba:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 c0068bc:	6845      	ldr	r5, [r0, #4]
 c0068be:	681b      	ldr	r3, [r3, #0]
 c0068c0:	2b00      	cmp	r3, #0
 c0068c2:	db31      	blt.n	c006928 <kad_op_select+0x70>
 c0068c4:	42ab      	cmp	r3, r5
 c0068c6:	da31      	bge.n	c00692c <kad_op_select+0x74>
 c0068c8:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 c0068ca:	f852 6023 	ldr.w	r6, [r2, r3, lsl #2]
 c0068ce:	7833      	ldrb	r3, [r6, #0]
 c0068d0:	2b00      	cmp	r3, #0
 c0068d2:	d05d      	beq.n	c006990 <kad_op_select+0xd8>
 c0068d4:	2b01      	cmp	r3, #1
 c0068d6:	6934      	ldr	r4, [r6, #16]
 c0068d8:	d00c      	beq.n	c0068f4 <kad_op_select+0x3c>
 c0068da:	6977      	ldr	r7, [r6, #20]
 c0068dc:	2b02      	cmp	r3, #2
 c0068de:	fb07 f404 	mul.w	r4, r7, r4
 c0068e2:	d007      	beq.n	c0068f4 <kad_op_select+0x3c>
 c0068e4:	69b7      	ldr	r7, [r6, #24]
 c0068e6:	2b03      	cmp	r3, #3
 c0068e8:	fb07 f404 	mul.w	r4, r7, r4
 c0068ec:	d002      	beq.n	c0068f4 <kad_op_select+0x3c>
 c0068ee:	69f7      	ldr	r7, [r6, #28]
 c0068f0:	fb07 f404 	mul.w	r4, r7, r4
 c0068f4:	2904      	cmp	r1, #4
 c0068f6:	d020      	beq.n	c00693a <kad_op_select+0x82>
 c0068f8:	2902      	cmp	r1, #2
 c0068fa:	d04b      	beq.n	c006994 <kad_op_select+0xdc>
 c0068fc:	2903      	cmp	r1, #3
 c0068fe:	d145      	bne.n	c00698c <kad_op_select+0xd4>
 c006900:	7873      	ldrb	r3, [r6, #1]
 c006902:	07db      	lsls	r3, r3, #31
 c006904:	d542      	bpl.n	c00698c <kad_op_select+0xd4>
 c006906:	2c00      	cmp	r4, #0
 c006908:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 c00690a:	6af3      	ldr	r3, [r6, #44]	@ 0x2c
 c00690c:	dd3e      	ble.n	c00698c <kad_op_select+0xd4>
 c00690e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 c006912:	edd3 7a00 	vldr	s15, [r3]
 c006916:	ecb2 7a01 	vldmia	r2!, {s14}
 c00691a:	ee77 7a87 	vadd.f32	s15, s15, s14
 c00691e:	ece3 7a01 	vstmia	r3!, {s15}
 c006922:	42a3      	cmp	r3, r4
 c006924:	d1f5      	bne.n	c006912 <kad_op_select+0x5a>
 c006926:	e031      	b.n	c00698c <kad_op_select+0xd4>
 c006928:	195b      	adds	r3, r3, r5
 c00692a:	d5cd      	bpl.n	c0068c8 <kad_op_select+0x10>
 c00692c:	f240 714d 	movw	r1, #1869	@ 0x74d
 c006930:	4b20      	ldr	r3, [pc, #128]	@ (c0069b4 <kad_op_select+0xfc>)
 c006932:	4a21      	ldr	r2, [pc, #132]	@ (c0069b8 <kad_op_select+0x100>)
 c006934:	4821      	ldr	r0, [pc, #132]	@ (c0069bc <kad_op_select+0x104>)
 c006936:	f008 fb67 	bl	c00f008 <__assert_func>
 c00693a:	f04f 0c00 	mov.w	ip, #0
 c00693e:	f1a2 0e04 	sub.w	lr, r2, #4
 c006942:	e015      	b.n	c006970 <kad_op_select+0xb8>
 c006944:	2b01      	cmp	r3, #1
 c006946:	690a      	ldr	r2, [r1, #16]
 c006948:	d00c      	beq.n	c006964 <kad_op_select+0xac>
 c00694a:	694f      	ldr	r7, [r1, #20]
 c00694c:	2b02      	cmp	r3, #2
 c00694e:	fb07 f202 	mul.w	r2, r7, r2
 c006952:	d007      	beq.n	c006964 <kad_op_select+0xac>
 c006954:	698f      	ldr	r7, [r1, #24]
 c006956:	2b03      	cmp	r3, #3
 c006958:	fb07 f202 	mul.w	r2, r7, r2
 c00695c:	d002      	beq.n	c006964 <kad_op_select+0xac>
 c00695e:	69c9      	ldr	r1, [r1, #28]
 c006960:	fb01 f202 	mul.w	r2, r1, r2
 c006964:	42a2      	cmp	r2, r4
 c006966:	d10d      	bne.n	c006984 <kad_op_select+0xcc>
 c006968:	f10c 0c01 	add.w	ip, ip, #1
 c00696c:	45ac      	cmp	ip, r5
 c00696e:	d00b      	beq.n	c006988 <kad_op_select+0xd0>
 c006970:	f85e 1f04 	ldr.w	r1, [lr, #4]!
 c006974:	780a      	ldrb	r2, [r1, #0]
 c006976:	429a      	cmp	r2, r3
 c006978:	d104      	bne.n	c006984 <kad_op_select+0xcc>
 c00697a:	2b00      	cmp	r3, #0
 c00697c:	d1e2      	bne.n	c006944 <kad_op_select+0x8c>
 c00697e:	2201      	movs	r2, #1
 c006980:	42a2      	cmp	r2, r4
 c006982:	d0f1      	beq.n	c006968 <kad_op_select+0xb0>
 c006984:	45ac      	cmp	ip, r5
 c006986:	db12      	blt.n	c0069ae <kad_op_select+0xf6>
 c006988:	7003      	strb	r3, [r0, #0]
 c00698a:	b94b      	cbnz	r3, c0069a0 <kad_op_select+0xe8>
 c00698c:	2000      	movs	r0, #0
 c00698e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c006990:	2401      	movs	r4, #1
 c006992:	e7af      	b.n	c0068f4 <kad_op_select+0x3c>
 c006994:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 c006996:	00a2      	lsls	r2, r4, #2
 c006998:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 c00699a:	f008 ff18 	bl	c00f7ce <memcpy>
 c00699e:	e7f5      	b.n	c00698c <kad_op_select+0xd4>
 c0069a0:	009a      	lsls	r2, r3, #2
 c0069a2:	f106 0110 	add.w	r1, r6, #16
 c0069a6:	3010      	adds	r0, #16
 c0069a8:	f008 ff11 	bl	c00f7ce <memcpy>
 c0069ac:	e7ee      	b.n	c00698c <kad_op_select+0xd4>
 c0069ae:	f04f 30ff 	mov.w	r0, #4294967295
 c0069b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c0069b4:	0c011b5c 	.word	0x0c011b5c
 c0069b8:	0c011c18 	.word	0x0c011c18
 c0069bc:	0c011b04 	.word	0x0c011b04

0c0069c0 <kad_op_ce_bin>:
 c0069c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c0069c4:	ed2d 8b04 	vpush	{d8-d9}
 c0069c8:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 c0069ca:	4681      	mov	r9, r0
 c0069cc:	e9d2 8300 	ldrd	r8, r3, [r2]
 c0069d0:	781a      	ldrb	r2, [r3, #0]
 c0069d2:	b083      	sub	sp, #12
 c0069d4:	2a00      	cmp	r2, #0
 c0069d6:	d03c      	beq.n	c006a52 <kad_op_ce_bin+0x92>
 c0069d8:	2a01      	cmp	r2, #1
 c0069da:	691e      	ldr	r6, [r3, #16]
 c0069dc:	d00c      	beq.n	c0069f8 <kad_op_ce_bin+0x38>
 c0069de:	6958      	ldr	r0, [r3, #20]
 c0069e0:	2a02      	cmp	r2, #2
 c0069e2:	fb00 f606 	mul.w	r6, r0, r6
 c0069e6:	d007      	beq.n	c0069f8 <kad_op_ce_bin+0x38>
 c0069e8:	6998      	ldr	r0, [r3, #24]
 c0069ea:	2a03      	cmp	r2, #3
 c0069ec:	fb00 f606 	mul.w	r6, r0, r6
 c0069f0:	d002      	beq.n	c0069f8 <kad_op_ce_bin+0x38>
 c0069f2:	69da      	ldr	r2, [r3, #28]
 c0069f4:	fb02 f606 	mul.w	r6, r2, r6
 c0069f8:	2904      	cmp	r1, #4
 c0069fa:	d00a      	beq.n	c006a12 <kad_op_ce_bin+0x52>
 c0069fc:	2902      	cmp	r1, #2
 c0069fe:	d030      	beq.n	c006a62 <kad_op_ce_bin+0xa2>
 c006a00:	2903      	cmp	r1, #3
 c006a02:	f000 80b8 	beq.w	c006b76 <kad_op_ce_bin+0x1b6>
 c006a06:	2000      	movs	r0, #0
 c006a08:	b003      	add	sp, #12
 c006a0a:	ecbd 8b04 	vpop	{d8-d9}
 c006a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c006a12:	f898 2000 	ldrb.w	r2, [r8]
 c006a16:	2a00      	cmp	r2, #0
 c006a18:	f000 810e 	beq.w	c006c38 <kad_op_ce_bin+0x278>
 c006a1c:	2a01      	cmp	r2, #1
 c006a1e:	f8d8 3010 	ldr.w	r3, [r8, #16]
 c006a22:	d00f      	beq.n	c006a44 <kad_op_ce_bin+0x84>
 c006a24:	f8d8 1014 	ldr.w	r1, [r8, #20]
 c006a28:	2a02      	cmp	r2, #2
 c006a2a:	fb01 f303 	mul.w	r3, r1, r3
 c006a2e:	d009      	beq.n	c006a44 <kad_op_ce_bin+0x84>
 c006a30:	f8d8 1018 	ldr.w	r1, [r8, #24]
 c006a34:	2a03      	cmp	r2, #3
 c006a36:	fb01 f303 	mul.w	r3, r1, r3
 c006a3a:	d003      	beq.n	c006a44 <kad_op_ce_bin+0x84>
 c006a3c:	f8d8 201c 	ldr.w	r2, [r8, #28]
 c006a40:	fb02 f303 	mul.w	r3, r2, r3
 c006a44:	429e      	cmp	r6, r3
 c006a46:	f040 80fc 	bne.w	c006c42 <kad_op_ce_bin+0x282>
 c006a4a:	2300      	movs	r3, #0
 c006a4c:	f889 3000 	strb.w	r3, [r9]
 c006a50:	e7d9      	b.n	c006a06 <kad_op_ce_bin+0x46>
 c006a52:	2904      	cmp	r1, #4
 c006a54:	f000 8088 	beq.w	c006b68 <kad_op_ce_bin+0x1a8>
 c006a58:	2902      	cmp	r1, #2
 c006a5a:	f04f 0601 	mov.w	r6, #1
 c006a5e:	d1cf      	bne.n	c006a00 <kad_op_ce_bin+0x40>
 c006a60:	e002      	b.n	c006a68 <kad_op_ce_bin+0xa8>
 c006a62:	2e00      	cmp	r6, #0
 c006a64:	f340 80ea 	ble.w	c006c3c <kad_op_ce_bin+0x27c>
 c006a68:	eddf 8a77 	vldr	s17, [pc, #476]	@ c006c48 <kad_op_ce_bin+0x288>
 c006a6c:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 c006a70:	2400      	movs	r4, #0
 c006a72:	2500      	movs	r5, #0
 c006a74:	2700      	movs	r7, #0
 c006a76:	f8d3 b028 	ldr.w	fp, [r3, #40]	@ 0x28
 c006a7a:	ecbb 8a01 	vldmia	fp!, {s16}
 c006a7e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 c006a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006a86:	ea4f 0a87 	mov.w	sl, r7, lsl #2
 c006a8a:	f107 0701 	add.w	r7, r7, #1
 c006a8e:	dd28      	ble.n	c006ae2 <kad_op_ce_bin+0x122>
 c006a90:	ee18 0a10 	vmov	r0, s16
 c006a94:	f7f9 fd62 	bl	c00055c <__aeabi_f2d>
 c006a98:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 c006a9c:	e9cd 0100 	strd	r0, r1, [sp]
 c006aa0:	4453      	add	r3, sl
 c006aa2:	edd3 7a00 	vldr	s15, [r3]
 c006aa6:	eef4 7ae8 	vcmpe.f32	s15, s17
 c006aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006aae:	fe77 7aa8 	vselgt.f32	s15, s15, s17
 c006ab2:	eec8 7a27 	vdiv.f32	s15, s16, s15
 c006ab6:	ee17 0a90 	vmov	r0, s15
 c006aba:	f7f9 fd4f 	bl	c00055c <__aeabi_f2d>
 c006abe:	ec41 0b10 	vmov	d0, r0, r1
 c006ac2:	f009 fc5d 	bl	c010380 <log>
 c006ac6:	e9dd 0100 	ldrd	r0, r1, [sp]
 c006aca:	ec53 2b10 	vmov	r2, r3, d0
 c006ace:	f7f9 fd9d 	bl	c00060c <__aeabi_dmul>
 c006ad2:	4602      	mov	r2, r0
 c006ad4:	460b      	mov	r3, r1
 c006ad6:	4620      	mov	r0, r4
 c006ad8:	4629      	mov	r1, r5
 c006ada:	f7f9 fbe1 	bl	c0002a0 <__adddf3>
 c006ade:	4604      	mov	r4, r0
 c006ae0:	460d      	mov	r5, r1
 c006ae2:	ee39 8a48 	vsub.f32	s16, s18, s16
 c006ae6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 c006aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006aee:	dd2a      	ble.n	c006b46 <kad_op_ce_bin+0x186>
 c006af0:	ee18 0a10 	vmov	r0, s16
 c006af4:	f7f9 fd32 	bl	c00055c <__aeabi_f2d>
 c006af8:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 c006afc:	e9cd 0100 	strd	r0, r1, [sp]
 c006b00:	4453      	add	r3, sl
 c006b02:	edd3 7a00 	vldr	s15, [r3]
 c006b06:	ee79 7a67 	vsub.f32	s15, s18, s15
 c006b0a:	eef4 7ae8 	vcmpe.f32	s15, s17
 c006b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006b12:	fe77 7aa8 	vselgt.f32	s15, s15, s17
 c006b16:	eec8 7a27 	vdiv.f32	s15, s16, s15
 c006b1a:	ee17 0a90 	vmov	r0, s15
 c006b1e:	f7f9 fd1d 	bl	c00055c <__aeabi_f2d>
 c006b22:	ec41 0b10 	vmov	d0, r0, r1
 c006b26:	f009 fc2b 	bl	c010380 <log>
 c006b2a:	e9dd 0100 	ldrd	r0, r1, [sp]
 c006b2e:	ec53 2b10 	vmov	r2, r3, d0
 c006b32:	f7f9 fd6b 	bl	c00060c <__aeabi_dmul>
 c006b36:	4602      	mov	r2, r0
 c006b38:	460b      	mov	r3, r1
 c006b3a:	4620      	mov	r0, r4
 c006b3c:	4629      	mov	r1, r5
 c006b3e:	f7f9 fbaf 	bl	c0002a0 <__adddf3>
 c006b42:	4604      	mov	r4, r0
 c006b44:	460d      	mov	r5, r1
 c006b46:	42b7      	cmp	r7, r6
 c006b48:	db97      	blt.n	c006a7a <kad_op_ce_bin+0xba>
 c006b4a:	4630      	mov	r0, r6
 c006b4c:	f7f9 fcf4 	bl	c000538 <__aeabi_i2d>
 c006b50:	460b      	mov	r3, r1
 c006b52:	4602      	mov	r2, r0
 c006b54:	4629      	mov	r1, r5
 c006b56:	4620      	mov	r0, r4
 c006b58:	f7f9 fe82 	bl	c000860 <__aeabi_ddiv>
 c006b5c:	f7fa f82e 	bl	c000bbc <__aeabi_d2f>
 c006b60:	f8d9 3028 	ldr.w	r3, [r9, #40]	@ 0x28
 c006b64:	6018      	str	r0, [r3, #0]
 c006b66:	e74e      	b.n	c006a06 <kad_op_ce_bin+0x46>
 c006b68:	f898 2000 	ldrb.w	r2, [r8]
 c006b6c:	2a00      	cmp	r2, #0
 c006b6e:	f43f af6c 	beq.w	c006a4a <kad_op_ce_bin+0x8a>
 c006b72:	2601      	movs	r6, #1
 c006b74:	e752      	b.n	c006a1c <kad_op_ce_bin+0x5c>
 c006b76:	f898 2001 	ldrb.w	r2, [r8, #1]
 c006b7a:	07d2      	lsls	r2, r2, #31
 c006b7c:	f57f af43 	bpl.w	c006a06 <kad_op_ce_bin+0x46>
 c006b80:	ee07 6a90 	vmov	s15, r6
 c006b84:	f8d9 202c 	ldr.w	r2, [r9, #44]	@ 0x2c
 c006b88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c006b8c:	ed92 7a00 	vldr	s14, [r2]
 c006b90:	2e00      	cmp	r6, #0
 c006b92:	ee87 5a27 	vdiv.f32	s10, s14, s15
 c006b96:	f77f af36 	ble.w	c006a06 <kad_op_ce_bin+0x46>
 c006b9a:	2200      	movs	r2, #0
 c006b9c:	eddf 6a2a 	vldr	s13, [pc, #168]	@ c006c48 <kad_op_ce_bin+0x288>
 c006ba0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c006ba4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c006ba6:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 c006baa:	ecf3 7a01 	vldmia	r3!, {s15}
 c006bae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 c006bb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006bb6:	dd19      	ble.n	c006bec <kad_op_ce_bin+0x22c>
 c006bb8:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 c006bbc:	ee67 7a85 	vmul.f32	s15, s15, s10
 c006bc0:	4411      	add	r1, r2
 c006bc2:	ed91 7a00 	vldr	s14, [r1]
 c006bc6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 c006bca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006bce:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 c006bd2:	fe37 7a26 	vselgt.f32	s14, s14, s13
 c006bd6:	4411      	add	r1, r2
 c006bd8:	ed91 6a00 	vldr	s12, [r1]
 c006bdc:	eec7 4a87 	vdiv.f32	s9, s15, s14
 c006be0:	ee76 7a64 	vsub.f32	s15, s12, s9
 c006be4:	edc1 7a00 	vstr	s15, [r1]
 c006be8:	ed53 7a01 	vldr	s15, [r3, #-4]
 c006bec:	ee75 7ae7 	vsub.f32	s15, s11, s15
 c006bf0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 c006bf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006bf8:	dd19      	ble.n	c006c2e <kad_op_ce_bin+0x26e>
 c006bfa:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 c006bfe:	ee67 7a85 	vmul.f32	s15, s15, s10
 c006c02:	4411      	add	r1, r2
 c006c04:	ed91 7a00 	vldr	s14, [r1]
 c006c08:	ee35 7ac7 	vsub.f32	s14, s11, s14
 c006c0c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 c006c10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006c14:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 c006c18:	fe37 7a26 	vselgt.f32	s14, s14, s13
 c006c1c:	4411      	add	r1, r2
 c006c1e:	edd1 4a00 	vldr	s9, [r1]
 c006c22:	ee87 6a87 	vdiv.f32	s12, s15, s14
 c006c26:	ee76 7a24 	vadd.f32	s15, s12, s9
 c006c2a:	edc1 7a00 	vstr	s15, [r1]
 c006c2e:	42b3      	cmp	r3, r6
 c006c30:	f102 0204 	add.w	r2, r2, #4
 c006c34:	d1b9      	bne.n	c006baa <kad_op_ce_bin+0x1ea>
 c006c36:	e6e6      	b.n	c006a06 <kad_op_ce_bin+0x46>
 c006c38:	2301      	movs	r3, #1
 c006c3a:	e703      	b.n	c006a44 <kad_op_ce_bin+0x84>
 c006c3c:	2400      	movs	r4, #0
 c006c3e:	2500      	movs	r5, #0
 c006c40:	e783      	b.n	c006b4a <kad_op_ce_bin+0x18a>
 c006c42:	f04f 30ff 	mov.w	r0, #4294967295
 c006c46:	e6df      	b.n	c006a08 <kad_op_ce_bin+0x48>
 c006c48:	3089705f 	.word	0x3089705f

0c006c4c <kad_op_ce_bin_neg>:
 c006c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c006c50:	ed2d 8b06 	vpush	{d8-d10}
 c006c54:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 c006c56:	4681      	mov	r9, r0
 c006c58:	e9d2 8300 	ldrd	r8, r3, [r2]
 c006c5c:	781a      	ldrb	r2, [r3, #0]
 c006c5e:	b083      	sub	sp, #12
 c006c60:	2a00      	cmp	r2, #0
 c006c62:	d03c      	beq.n	c006cde <kad_op_ce_bin_neg+0x92>
 c006c64:	2a01      	cmp	r2, #1
 c006c66:	691e      	ldr	r6, [r3, #16]
 c006c68:	d00c      	beq.n	c006c84 <kad_op_ce_bin_neg+0x38>
 c006c6a:	6958      	ldr	r0, [r3, #20]
 c006c6c:	2a02      	cmp	r2, #2
 c006c6e:	fb00 f606 	mul.w	r6, r0, r6
 c006c72:	d007      	beq.n	c006c84 <kad_op_ce_bin_neg+0x38>
 c006c74:	6998      	ldr	r0, [r3, #24]
 c006c76:	2a03      	cmp	r2, #3
 c006c78:	fb00 f606 	mul.w	r6, r0, r6
 c006c7c:	d002      	beq.n	c006c84 <kad_op_ce_bin_neg+0x38>
 c006c7e:	69da      	ldr	r2, [r3, #28]
 c006c80:	fb02 f606 	mul.w	r6, r2, r6
 c006c84:	2904      	cmp	r1, #4
 c006c86:	d00a      	beq.n	c006c9e <kad_op_ce_bin_neg+0x52>
 c006c88:	2902      	cmp	r1, #2
 c006c8a:	d030      	beq.n	c006cee <kad_op_ce_bin_neg+0xa2>
 c006c8c:	2903      	cmp	r1, #3
 c006c8e:	f000 80c2 	beq.w	c006e16 <kad_op_ce_bin_neg+0x1ca>
 c006c92:	2000      	movs	r0, #0
 c006c94:	b003      	add	sp, #12
 c006c96:	ecbd 8b06 	vpop	{d8-d10}
 c006c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c006c9e:	f898 2000 	ldrb.w	r2, [r8]
 c006ca2:	2a00      	cmp	r2, #0
 c006ca4:	f000 8122 	beq.w	c006eec <kad_op_ce_bin_neg+0x2a0>
 c006ca8:	2a01      	cmp	r2, #1
 c006caa:	f8d8 3010 	ldr.w	r3, [r8, #16]
 c006cae:	d00f      	beq.n	c006cd0 <kad_op_ce_bin_neg+0x84>
 c006cb0:	f8d8 1014 	ldr.w	r1, [r8, #20]
 c006cb4:	2a02      	cmp	r2, #2
 c006cb6:	fb01 f303 	mul.w	r3, r1, r3
 c006cba:	d009      	beq.n	c006cd0 <kad_op_ce_bin_neg+0x84>
 c006cbc:	f8d8 1018 	ldr.w	r1, [r8, #24]
 c006cc0:	2a03      	cmp	r2, #3
 c006cc2:	fb01 f303 	mul.w	r3, r1, r3
 c006cc6:	d003      	beq.n	c006cd0 <kad_op_ce_bin_neg+0x84>
 c006cc8:	f8d8 201c 	ldr.w	r2, [r8, #28]
 c006ccc:	fb02 f303 	mul.w	r3, r2, r3
 c006cd0:	429e      	cmp	r6, r3
 c006cd2:	f040 8110 	bne.w	c006ef6 <kad_op_ce_bin_neg+0x2aa>
 c006cd6:	2300      	movs	r3, #0
 c006cd8:	f889 3000 	strb.w	r3, [r9]
 c006cdc:	e7d9      	b.n	c006c92 <kad_op_ce_bin_neg+0x46>
 c006cde:	2904      	cmp	r1, #4
 c006ce0:	f000 8092 	beq.w	c006e08 <kad_op_ce_bin_neg+0x1bc>
 c006ce4:	2902      	cmp	r1, #2
 c006ce6:	f04f 0601 	mov.w	r6, #1
 c006cea:	d1cf      	bne.n	c006c8c <kad_op_ce_bin_neg+0x40>
 c006cec:	e002      	b.n	c006cf4 <kad_op_ce_bin_neg+0xa8>
 c006cee:	2e00      	cmp	r6, #0
 c006cf0:	f340 80fe 	ble.w	c006ef0 <kad_op_ce_bin_neg+0x2a4>
 c006cf4:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 c006cf8:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 c006cfc:	eddf 9a7f 	vldr	s19, [pc, #508]	@ c006efc <kad_op_ce_bin_neg+0x2b0>
 c006d00:	2400      	movs	r4, #0
 c006d02:	2500      	movs	r5, #0
 c006d04:	2700      	movs	r7, #0
 c006d06:	f8d3 b028 	ldr.w	fp, [r3, #40]	@ 0x28
 c006d0a:	ecbb 8a01 	vldmia	fp!, {s16}
 c006d0e:	ee38 9a28 	vadd.f32	s18, s16, s17
 c006d12:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 c006d16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006d1a:	ea4f 0a87 	mov.w	sl, r7, lsl #2
 c006d1e:	f107 0701 	add.w	r7, r7, #1
 c006d22:	dd2c      	ble.n	c006d7e <kad_op_ce_bin_neg+0x132>
 c006d24:	ee69 7a0a 	vmul.f32	s15, s18, s20
 c006d28:	ee17 0a90 	vmov	r0, s15
 c006d2c:	f7f9 fc16 	bl	c00055c <__aeabi_f2d>
 c006d30:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 c006d34:	e9cd 0100 	strd	r0, r1, [sp]
 c006d38:	4453      	add	r3, sl
 c006d3a:	edd3 7a00 	vldr	s15, [r3]
 c006d3e:	ee77 7aa8 	vadd.f32	s15, s15, s17
 c006d42:	eef4 7ae9 	vcmpe.f32	s15, s19
 c006d46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006d4a:	fe77 7aa9 	vselgt.f32	s15, s15, s19
 c006d4e:	eec9 7a27 	vdiv.f32	s15, s18, s15
 c006d52:	ee17 0a90 	vmov	r0, s15
 c006d56:	f7f9 fc01 	bl	c00055c <__aeabi_f2d>
 c006d5a:	ec41 0b10 	vmov	d0, r0, r1
 c006d5e:	f009 fb0f 	bl	c010380 <log>
 c006d62:	e9dd 0100 	ldrd	r0, r1, [sp]
 c006d66:	ec53 2b10 	vmov	r2, r3, d0
 c006d6a:	f7f9 fc4f 	bl	c00060c <__aeabi_dmul>
 c006d6e:	4602      	mov	r2, r0
 c006d70:	460b      	mov	r3, r1
 c006d72:	4620      	mov	r0, r4
 c006d74:	4629      	mov	r1, r5
 c006d76:	f7f9 fa93 	bl	c0002a0 <__adddf3>
 c006d7a:	4604      	mov	r4, r0
 c006d7c:	460d      	mov	r5, r1
 c006d7e:	ee38 8ac8 	vsub.f32	s16, s17, s16
 c006d82:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 c006d86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006d8a:	dd2c      	ble.n	c006de6 <kad_op_ce_bin_neg+0x19a>
 c006d8c:	ee68 7a0a 	vmul.f32	s15, s16, s20
 c006d90:	ee17 0a90 	vmov	r0, s15
 c006d94:	f7f9 fbe2 	bl	c00055c <__aeabi_f2d>
 c006d98:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 c006d9c:	e9cd 0100 	strd	r0, r1, [sp]
 c006da0:	4453      	add	r3, sl
 c006da2:	edd3 7a00 	vldr	s15, [r3]
 c006da6:	ee78 7ae7 	vsub.f32	s15, s17, s15
 c006daa:	eef4 7ae9 	vcmpe.f32	s15, s19
 c006dae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006db2:	fe77 7aa9 	vselgt.f32	s15, s15, s19
 c006db6:	eec8 7a27 	vdiv.f32	s15, s16, s15
 c006dba:	ee17 0a90 	vmov	r0, s15
 c006dbe:	f7f9 fbcd 	bl	c00055c <__aeabi_f2d>
 c006dc2:	ec41 0b10 	vmov	d0, r0, r1
 c006dc6:	f009 fadb 	bl	c010380 <log>
 c006dca:	e9dd 0100 	ldrd	r0, r1, [sp]
 c006dce:	ec53 2b10 	vmov	r2, r3, d0
 c006dd2:	f7f9 fc1b 	bl	c00060c <__aeabi_dmul>
 c006dd6:	4602      	mov	r2, r0
 c006dd8:	460b      	mov	r3, r1
 c006dda:	4620      	mov	r0, r4
 c006ddc:	4629      	mov	r1, r5
 c006dde:	f7f9 fa5f 	bl	c0002a0 <__adddf3>
 c006de2:	4604      	mov	r4, r0
 c006de4:	460d      	mov	r5, r1
 c006de6:	42b7      	cmp	r7, r6
 c006de8:	db8f      	blt.n	c006d0a <kad_op_ce_bin_neg+0xbe>
 c006dea:	4630      	mov	r0, r6
 c006dec:	f7f9 fba4 	bl	c000538 <__aeabi_i2d>
 c006df0:	460b      	mov	r3, r1
 c006df2:	4602      	mov	r2, r0
 c006df4:	4629      	mov	r1, r5
 c006df6:	4620      	mov	r0, r4
 c006df8:	f7f9 fd32 	bl	c000860 <__aeabi_ddiv>
 c006dfc:	f7f9 fede 	bl	c000bbc <__aeabi_d2f>
 c006e00:	f8d9 3028 	ldr.w	r3, [r9, #40]	@ 0x28
 c006e04:	6018      	str	r0, [r3, #0]
 c006e06:	e744      	b.n	c006c92 <kad_op_ce_bin_neg+0x46>
 c006e08:	f898 2000 	ldrb.w	r2, [r8]
 c006e0c:	2a00      	cmp	r2, #0
 c006e0e:	f43f af62 	beq.w	c006cd6 <kad_op_ce_bin_neg+0x8a>
 c006e12:	2601      	movs	r6, #1
 c006e14:	e748      	b.n	c006ca8 <kad_op_ce_bin_neg+0x5c>
 c006e16:	f898 2001 	ldrb.w	r2, [r8, #1]
 c006e1a:	07d2      	lsls	r2, r2, #31
 c006e1c:	f57f af39 	bpl.w	c006c92 <kad_op_ce_bin_neg+0x46>
 c006e20:	ee07 6a90 	vmov	s15, r6
 c006e24:	f8d9 202c 	ldr.w	r2, [r9, #44]	@ 0x2c
 c006e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c006e2c:	ed92 7a00 	vldr	s14, [r2]
 c006e30:	2e00      	cmp	r6, #0
 c006e32:	eec7 4a27 	vdiv.f32	s9, s14, s15
 c006e36:	f77f af2c 	ble.w	c006c92 <kad_op_ce_bin_neg+0x46>
 c006e3a:	2200      	movs	r2, #0
 c006e3c:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 c006e40:	eeb6 4a00 	vmov.f32	s8, #96	@ 0x3f000000  0.5
 c006e44:	eddf 5a2d 	vldr	s11, [pc, #180]	@ c006efc <kad_op_ce_bin_neg+0x2b0>
 c006e48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c006e4a:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 c006e4e:	ecf3 7a01 	vldmia	r3!, {s15}
 c006e52:	ee77 6a86 	vadd.f32	s13, s15, s12
 c006e56:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 c006e5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006e5e:	dd1d      	ble.n	c006e9c <kad_op_ce_bin_neg+0x250>
 c006e60:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 c006e64:	ee24 7a84 	vmul.f32	s14, s9, s8
 c006e68:	4411      	add	r1, r2
 c006e6a:	edd1 7a00 	vldr	s15, [r1]
 c006e6e:	ee77 7a86 	vadd.f32	s15, s15, s12
 c006e72:	eef4 7ae5 	vcmpe.f32	s15, s11
 c006e76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006e7a:	ee27 7a26 	vmul.f32	s14, s14, s13
 c006e7e:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 c006e82:	fe77 7aa5 	vselgt.f32	s15, s15, s11
 c006e86:	4411      	add	r1, r2
 c006e88:	ed91 5a00 	vldr	s10, [r1]
 c006e8c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 c006e90:	ee75 7a66 	vsub.f32	s15, s10, s13
 c006e94:	edc1 7a00 	vstr	s15, [r1]
 c006e98:	ed53 7a01 	vldr	s15, [r3, #-4]
 c006e9c:	ee76 7a67 	vsub.f32	s15, s12, s15
 c006ea0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 c006ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006ea8:	dd1b      	ble.n	c006ee2 <kad_op_ce_bin_neg+0x296>
 c006eaa:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 c006eae:	ee64 6a84 	vmul.f32	s13, s9, s8
 c006eb2:	4411      	add	r1, r2
 c006eb4:	ed91 7a00 	vldr	s14, [r1]
 c006eb8:	ee66 6aa7 	vmul.f32	s13, s13, s15
 c006ebc:	ee76 7a47 	vsub.f32	s15, s12, s14
 c006ec0:	eef4 7ae5 	vcmpe.f32	s15, s11
 c006ec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c006ec8:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 c006ecc:	fe77 7aa5 	vselgt.f32	s15, s15, s11
 c006ed0:	4411      	add	r1, r2
 c006ed2:	ed91 5a00 	vldr	s10, [r1]
 c006ed6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 c006eda:	ee77 7a05 	vadd.f32	s15, s14, s10
 c006ede:	edc1 7a00 	vstr	s15, [r1]
 c006ee2:	42b3      	cmp	r3, r6
 c006ee4:	f102 0204 	add.w	r2, r2, #4
 c006ee8:	d1b1      	bne.n	c006e4e <kad_op_ce_bin_neg+0x202>
 c006eea:	e6d2      	b.n	c006c92 <kad_op_ce_bin_neg+0x46>
 c006eec:	2301      	movs	r3, #1
 c006eee:	e6ef      	b.n	c006cd0 <kad_op_ce_bin_neg+0x84>
 c006ef0:	2400      	movs	r4, #0
 c006ef2:	2500      	movs	r5, #0
 c006ef4:	e779      	b.n	c006dea <kad_op_ce_bin_neg+0x19e>
 c006ef6:	f04f 30ff 	mov.w	r0, #4294967295
 c006efa:	e6cb      	b.n	c006c94 <kad_op_ce_bin_neg+0x48>
 c006efc:	3089705f 	.word	0x3089705f

0c006f00 <kad_op_ce_multi>:
 c006f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c006f04:	ed2d 8b02 	vpush	{d8}
 c006f08:	6b87      	ldr	r7, [r0, #56]	@ 0x38
 c006f0a:	b08b      	sub	sp, #44	@ 0x2c
 c006f0c:	e9d7 5200 	ldrd	r5, r2, [r7]
 c006f10:	9002      	str	r0, [sp, #8]
 c006f12:	7810      	ldrb	r0, [r2, #0]
 c006f14:	1cc3      	adds	r3, r0, #3
 c006f16:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 c006f1a:	2800      	cmp	r0, #0
 c006f1c:	f000 80ea 	beq.w	c0070f4 <kad_op_ce_multi+0x1f4>
 c006f20:	2801      	cmp	r0, #1
 c006f22:	6914      	ldr	r4, [r2, #16]
 c006f24:	d00c      	beq.n	c006f40 <kad_op_ce_multi+0x40>
 c006f26:	6956      	ldr	r6, [r2, #20]
 c006f28:	2802      	cmp	r0, #2
 c006f2a:	fb06 f404 	mul.w	r4, r6, r4
 c006f2e:	d007      	beq.n	c006f40 <kad_op_ce_multi+0x40>
 c006f30:	6996      	ldr	r6, [r2, #24]
 c006f32:	2803      	cmp	r0, #3
 c006f34:	fb06 f404 	mul.w	r4, r6, r4
 c006f38:	d002      	beq.n	c006f40 <kad_op_ce_multi+0x40>
 c006f3a:	69d6      	ldr	r6, [r2, #28]
 c006f3c:	fb06 f404 	mul.w	r4, r6, r4
 c006f40:	fb94 fcf3 	sdiv	ip, r4, r3
 c006f44:	9c02      	ldr	r4, [sp, #8]
 c006f46:	6864      	ldr	r4, [r4, #4]
 c006f48:	2c03      	cmp	r4, #3
 c006f4a:	d043      	beq.n	c006fd4 <kad_op_ce_multi+0xd4>
 c006f4c:	2904      	cmp	r1, #4
 c006f4e:	d00d      	beq.n	c006f6c <kad_op_ce_multi+0x6c>
 c006f50:	2902      	cmp	r1, #2
 c006f52:	f000 811f 	beq.w	c007194 <kad_op_ce_multi+0x294>
 c006f56:	f04f 0900 	mov.w	r9, #0
 c006f5a:	2903      	cmp	r1, #3
 c006f5c:	f000 80cc 	beq.w	c0070f8 <kad_op_ce_multi+0x1f8>
 c006f60:	2000      	movs	r0, #0
 c006f62:	b00b      	add	sp, #44	@ 0x2c
 c006f64:	ecbd 8b02 	vpop	{d8}
 c006f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c006f6c:	7829      	ldrb	r1, [r5, #0]
 c006f6e:	2800      	cmp	r0, #0
 c006f70:	f000 8172 	beq.w	c007258 <kad_op_ce_multi+0x358>
 c006f74:	2801      	cmp	r0, #1
 c006f76:	6914      	ldr	r4, [r2, #16]
 c006f78:	d00c      	beq.n	c006f94 <kad_op_ce_multi+0x94>
 c006f7a:	6956      	ldr	r6, [r2, #20]
 c006f7c:	2802      	cmp	r0, #2
 c006f7e:	fb06 f404 	mul.w	r4, r6, r4
 c006f82:	d007      	beq.n	c006f94 <kad_op_ce_multi+0x94>
 c006f84:	6996      	ldr	r6, [r2, #24]
 c006f86:	2803      	cmp	r0, #3
 c006f88:	fb06 f404 	mul.w	r4, r6, r4
 c006f8c:	d002      	beq.n	c006f94 <kad_op_ce_multi+0x94>
 c006f8e:	69d2      	ldr	r2, [r2, #28]
 c006f90:	fb02 f404 	mul.w	r4, r2, r4
 c006f94:	2900      	cmp	r1, #0
 c006f96:	f000 8164 	beq.w	c007262 <kad_op_ce_multi+0x362>
 c006f9a:	2901      	cmp	r1, #1
 c006f9c:	692a      	ldr	r2, [r5, #16]
 c006f9e:	dd0c      	ble.n	c006fba <kad_op_ce_multi+0xba>
 c006fa0:	6968      	ldr	r0, [r5, #20]
 c006fa2:	2902      	cmp	r1, #2
 c006fa4:	fb00 f202 	mul.w	r2, r0, r2
 c006fa8:	d007      	beq.n	c006fba <kad_op_ce_multi+0xba>
 c006faa:	69a8      	ldr	r0, [r5, #24]
 c006fac:	2903      	cmp	r1, #3
 c006fae:	fb00 f202 	mul.w	r2, r0, r2
 c006fb2:	d002      	beq.n	c006fba <kad_op_ce_multi+0xba>
 c006fb4:	69e8      	ldr	r0, [r5, #28]
 c006fb6:	fb00 f202 	mul.w	r2, r0, r2
 c006fba:	4294      	cmp	r4, r2
 c006fbc:	f040 818b 	bne.w	c0072d6 <kad_op_ce_multi+0x3d6>
 c006fc0:	3103      	adds	r1, #3
 c006fc2:	f855 2021 	ldr.w	r2, [r5, r1, lsl #2]
 c006fc6:	429a      	cmp	r2, r3
 c006fc8:	f040 8185 	bne.w	c0072d6 <kad_op_ce_multi+0x3d6>
 c006fcc:	2300      	movs	r3, #0
 c006fce:	9a02      	ldr	r2, [sp, #8]
 c006fd0:	7013      	strb	r3, [r2, #0]
 c006fd2:	e7c5      	b.n	c006f60 <kad_op_ce_multi+0x60>
 c006fd4:	f8d7 9008 	ldr.w	r9, [r7, #8]
 c006fd8:	f899 4000 	ldrb.w	r4, [r9]
 c006fdc:	2c01      	cmp	r4, #1
 c006fde:	f040 817d 	bne.w	c0072dc <kad_op_ce_multi+0x3dc>
 c006fe2:	f8d9 4010 	ldr.w	r4, [r9, #16]
 c006fe6:	429c      	cmp	r4, r3
 c006fe8:	f040 8178 	bne.w	c0072dc <kad_op_ce_multi+0x3dc>
 c006fec:	2904      	cmp	r1, #4
 c006fee:	d0bd      	beq.n	c006f6c <kad_op_ce_multi+0x6c>
 c006ff0:	2902      	cmp	r1, #2
 c006ff2:	d1b2      	bne.n	c006f5a <kad_op_ce_multi+0x5a>
 c006ff4:	f1bc 0f00 	cmp.w	ip, #0
 c006ff8:	f340 8135 	ble.w	c007266 <kad_op_ce_multi+0x366>
 c006ffc:	2600      	movs	r6, #0
 c006ffe:	e9cd c306 	strd	ip, r3, [sp, #24]
 c007002:	eddf 8aba 	vldr	s17, [pc, #744]	@ c0072ec <kad_op_ce_multi+0x3ec>
 c007006:	f04f 0a00 	mov.w	sl, #0
 c00700a:	f04f 0b00 	mov.w	fp, #0
 c00700e:	46b4      	mov	ip, r6
 c007010:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 c007012:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 c007014:	009f      	lsls	r7, r3, #2
 c007016:	9208      	str	r2, [sp, #32]
 c007018:	eb01 0883 	add.w	r8, r1, r3, lsl #2
 c00701c:	f1c1 0e00 	rsb	lr, r1, #0
 c007020:	9109      	str	r1, [sp, #36]	@ 0x24
 c007022:	9b07      	ldr	r3, [sp, #28]
 c007024:	2b00      	cmp	r3, #0
 c007026:	dd4c      	ble.n	c0070c2 <kad_op_ce_multi+0x1c2>
 c007028:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c00702a:	e9cd 7604 	strd	r7, r6, [sp, #16]
 c00702e:	199c      	adds	r4, r3, r6
 c007030:	9b08      	ldr	r3, [sp, #32]
 c007032:	f8cd c00c 	str.w	ip, [sp, #12]
 c007036:	199d      	adds	r5, r3, r6
 c007038:	f8cd e004 	str.w	lr, [sp, #4]
 c00703c:	ed94 8a00 	vldr	s16, [r4]
 c007040:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 c007044:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c007048:	4622      	mov	r2, r4
 c00704a:	f104 0404 	add.w	r4, r4, #4
 c00704e:	dd2e      	ble.n	c0070ae <kad_op_ce_multi+0x1ae>
 c007050:	9901      	ldr	r1, [sp, #4]
 c007052:	f8d9 3028 	ldr.w	r3, [r9, #40]	@ 0x28
 c007056:	440b      	add	r3, r1
 c007058:	4413      	add	r3, r2
 c00705a:	edd3 7a00 	vldr	s15, [r3]
 c00705e:	ee68 7a27 	vmul.f32	s15, s16, s15
 c007062:	ee17 0a90 	vmov	r0, s15
 c007066:	f7f9 fa79 	bl	c00055c <__aeabi_f2d>
 c00706a:	edd5 7a00 	vldr	s15, [r5]
 c00706e:	eef4 7ae8 	vcmpe.f32	s15, s17
 c007072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c007076:	fe77 7aa8 	vselgt.f32	s15, s15, s17
 c00707a:	eec8 7a27 	vdiv.f32	s15, s16, s15
 c00707e:	4606      	mov	r6, r0
 c007080:	ee17 0a90 	vmov	r0, s15
 c007084:	460f      	mov	r7, r1
 c007086:	f7f9 fa69 	bl	c00055c <__aeabi_f2d>
 c00708a:	ec41 0b10 	vmov	d0, r0, r1
 c00708e:	f009 f977 	bl	c010380 <log>
 c007092:	4630      	mov	r0, r6
 c007094:	ec53 2b10 	vmov	r2, r3, d0
 c007098:	4639      	mov	r1, r7
 c00709a:	f7f9 fab7 	bl	c00060c <__aeabi_dmul>
 c00709e:	4602      	mov	r2, r0
 c0070a0:	460b      	mov	r3, r1
 c0070a2:	4650      	mov	r0, sl
 c0070a4:	4659      	mov	r1, fp
 c0070a6:	f7f9 f8fb 	bl	c0002a0 <__adddf3>
 c0070aa:	4682      	mov	sl, r0
 c0070ac:	468b      	mov	fp, r1
 c0070ae:	45a0      	cmp	r8, r4
 c0070b0:	f105 0504 	add.w	r5, r5, #4
 c0070b4:	d1c2      	bne.n	c00703c <kad_op_ce_multi+0x13c>
 c0070b6:	e9dd 7604 	ldrd	r7, r6, [sp, #16]
 c0070ba:	f8dd c00c 	ldr.w	ip, [sp, #12]
 c0070be:	f8dd e004 	ldr.w	lr, [sp, #4]
 c0070c2:	9b06      	ldr	r3, [sp, #24]
 c0070c4:	f10c 0c01 	add.w	ip, ip, #1
 c0070c8:	4563      	cmp	r3, ip
 c0070ca:	44b8      	add	r8, r7
 c0070cc:	ebae 0e07 	sub.w	lr, lr, r7
 c0070d0:	443e      	add	r6, r7
 c0070d2:	d1a6      	bne.n	c007022 <kad_op_ce_multi+0x122>
 c0070d4:	469c      	mov	ip, r3
 c0070d6:	4660      	mov	r0, ip
 c0070d8:	f7f9 fa2e 	bl	c000538 <__aeabi_i2d>
 c0070dc:	460b      	mov	r3, r1
 c0070de:	4602      	mov	r2, r0
 c0070e0:	4659      	mov	r1, fp
 c0070e2:	4650      	mov	r0, sl
 c0070e4:	f7f9 fbbc 	bl	c000860 <__aeabi_ddiv>
 c0070e8:	f7f9 fd68 	bl	c000bbc <__aeabi_d2f>
 c0070ec:	9b02      	ldr	r3, [sp, #8]
 c0070ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c0070f0:	6018      	str	r0, [r3, #0]
 c0070f2:	e735      	b.n	c006f60 <kad_op_ce_multi+0x60>
 c0070f4:	2401      	movs	r4, #1
 c0070f6:	e723      	b.n	c006f40 <kad_op_ce_multi+0x40>
 c0070f8:	7869      	ldrb	r1, [r5, #1]
 c0070fa:	07c9      	lsls	r1, r1, #31
 c0070fc:	f57f af30 	bpl.w	c006f60 <kad_op_ce_multi+0x60>
 c007100:	ee07 ca90 	vmov	s15, ip
 c007104:	9902      	ldr	r1, [sp, #8]
 c007106:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c00710a:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
 c00710c:	ed91 7a00 	vldr	s14, [r1]
 c007110:	ee87 5a27 	vdiv.f32	s10, s14, s15
 c007114:	f1b9 0f00 	cmp.w	r9, #0
 c007118:	f000 80aa 	beq.w	c007270 <kad_op_ce_multi+0x370>
 c00711c:	f1bc 0f00 	cmp.w	ip, #0
 c007120:	f77f af1e 	ble.w	c006f60 <kad_op_ce_multi+0x60>
 c007124:	e9d5 8e0a 	ldrd	r8, lr, [r5, #40]	@ 0x28
 c007128:	2b00      	cmp	r3, #0
 c00712a:	f8d2 a028 	ldr.w	sl, [r2, #40]	@ 0x28
 c00712e:	f77f af17 	ble.w	c006f60 <kad_op_ce_multi+0x60>
 c007132:	2600      	movs	r6, #0
 c007134:	ed9f 6a6d 	vldr	s12, [pc, #436]	@ c0072ec <kad_op_ce_multi+0x3ec>
 c007138:	4637      	mov	r7, r6
 c00713a:	f8d9 b028 	ldr.w	fp, [r9, #40]	@ 0x28
 c00713e:	eb0e 0583 	add.w	r5, lr, r3, lsl #2
 c007142:	ea4f 0983 	mov.w	r9, r3, lsl #2
 c007146:	465c      	mov	r4, fp
 c007148:	eb0e 0286 	add.w	r2, lr, r6, lsl #2
 c00714c:	eb0a 0086 	add.w	r0, sl, r6, lsl #2
 c007150:	eb08 0186 	add.w	r1, r8, r6, lsl #2
 c007154:	ecb1 7a01 	vldmia	r1!, {s14}
 c007158:	ecf4 7a01 	vldmia	r4!, {s15}
 c00715c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 c007160:	ecf0 5a01 	vldmia	r0!, {s11}
 c007164:	ee65 7a27 	vmul.f32	s15, s10, s15
 c007168:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c00716c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 c007170:	fe37 7a06 	vselgt.f32	s14, s14, s12
 c007174:	ecf2 6a01 	vldmia	r2!, {s13}
 c007178:	eec7 5a87 	vdiv.f32	s11, s15, s14
 c00717c:	ee76 7ae5 	vsub.f32	s15, s13, s11
 c007180:	4295      	cmp	r5, r2
 c007182:	ed42 7a01 	vstr	s15, [r2, #-4]
 c007186:	d1e5      	bne.n	c007154 <kad_op_ce_multi+0x254>
 c007188:	3701      	adds	r7, #1
 c00718a:	45bc      	cmp	ip, r7
 c00718c:	444d      	add	r5, r9
 c00718e:	441e      	add	r6, r3
 c007190:	d1d9      	bne.n	c007146 <kad_op_ce_multi+0x246>
 c007192:	e6e5      	b.n	c006f60 <kad_op_ce_multi+0x60>
 c007194:	f1bc 0f00 	cmp.w	ip, #0
 c007198:	dd65      	ble.n	c007266 <kad_op_ce_multi+0x366>
 c00719a:	2400      	movs	r4, #0
 c00719c:	f8d2 9028 	ldr.w	r9, [r2, #40]	@ 0x28
 c0071a0:	eddf 8a52 	vldr	s17, [pc, #328]	@ c0072ec <kad_op_ce_multi+0x3ec>
 c0071a4:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 c0071a6:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 c0071aa:	f8cd 901c 	str.w	r9, [sp, #28]
 c0071ae:	f04f 0a00 	mov.w	sl, #0
 c0071b2:	f04f 0b00 	mov.w	fp, #0
 c0071b6:	4625      	mov	r5, r4
 c0071b8:	4699      	mov	r9, r3
 c0071ba:	9206      	str	r2, [sp, #24]
 c0071bc:	009a      	lsls	r2, r3, #2
 c0071be:	9205      	str	r2, [sp, #20]
 c0071c0:	f8cd c010 	str.w	ip, [sp, #16]
 c0071c4:	f1b9 0f00 	cmp.w	r9, #0
 c0071c8:	dd3e      	ble.n	c007248 <kad_op_ce_multi+0x348>
 c0071ca:	f8cd 9004 	str.w	r9, [sp, #4]
 c0071ce:	46a9      	mov	r9, r5
 c0071d0:	9b07      	ldr	r3, [sp, #28]
 c0071d2:	9403      	str	r4, [sp, #12]
 c0071d4:	eb03 0684 	add.w	r6, r3, r4, lsl #2
 c0071d8:	9b06      	ldr	r3, [sp, #24]
 c0071da:	eb03 0784 	add.w	r7, r3, r4, lsl #2
 c0071de:	ecb6 8a01 	vldmia	r6!, {s16}
 c0071e2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 c0071e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0071ea:	dd25      	ble.n	c007238 <kad_op_ce_multi+0x338>
 c0071ec:	ee18 0a10 	vmov	r0, s16
 c0071f0:	f7f9 f9b4 	bl	c00055c <__aeabi_f2d>
 c0071f4:	edd7 7a00 	vldr	s15, [r7]
 c0071f8:	eef4 7ae8 	vcmpe.f32	s15, s17
 c0071fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c007200:	fe77 7aa8 	vselgt.f32	s15, s15, s17
 c007204:	eec8 7a27 	vdiv.f32	s15, s16, s15
 c007208:	4604      	mov	r4, r0
 c00720a:	ee17 0a90 	vmov	r0, s15
 c00720e:	460d      	mov	r5, r1
 c007210:	f7f9 f9a4 	bl	c00055c <__aeabi_f2d>
 c007214:	ec41 0b10 	vmov	d0, r0, r1
 c007218:	f009 f8b2 	bl	c010380 <log>
 c00721c:	4620      	mov	r0, r4
 c00721e:	ec53 2b10 	vmov	r2, r3, d0
 c007222:	4629      	mov	r1, r5
 c007224:	f7f9 f9f2 	bl	c00060c <__aeabi_dmul>
 c007228:	4602      	mov	r2, r0
 c00722a:	460b      	mov	r3, r1
 c00722c:	4650      	mov	r0, sl
 c00722e:	4659      	mov	r1, fp
 c007230:	f7f9 f836 	bl	c0002a0 <__adddf3>
 c007234:	4682      	mov	sl, r0
 c007236:	468b      	mov	fp, r1
 c007238:	4546      	cmp	r6, r8
 c00723a:	f107 0704 	add.w	r7, r7, #4
 c00723e:	d1ce      	bne.n	c0071de <kad_op_ce_multi+0x2de>
 c007240:	464d      	mov	r5, r9
 c007242:	9c03      	ldr	r4, [sp, #12]
 c007244:	f8dd 9004 	ldr.w	r9, [sp, #4]
 c007248:	9b05      	ldr	r3, [sp, #20]
 c00724a:	3501      	adds	r5, #1
 c00724c:	4498      	add	r8, r3
 c00724e:	9b04      	ldr	r3, [sp, #16]
 c007250:	444c      	add	r4, r9
 c007252:	42ab      	cmp	r3, r5
 c007254:	d1b6      	bne.n	c0071c4 <kad_op_ce_multi+0x2c4>
 c007256:	e73d      	b.n	c0070d4 <kad_op_ce_multi+0x1d4>
 c007258:	2900      	cmp	r1, #0
 c00725a:	f43f aeb1 	beq.w	c006fc0 <kad_op_ce_multi+0xc0>
 c00725e:	2401      	movs	r4, #1
 c007260:	e69b      	b.n	c006f9a <kad_op_ce_multi+0x9a>
 c007262:	2201      	movs	r2, #1
 c007264:	e6a9      	b.n	c006fba <kad_op_ce_multi+0xba>
 c007266:	f04f 0a00 	mov.w	sl, #0
 c00726a:	f04f 0b00 	mov.w	fp, #0
 c00726e:	e732      	b.n	c0070d6 <kad_op_ce_multi+0x1d6>
 c007270:	f1bc 0f00 	cmp.w	ip, #0
 c007274:	f77f ae74 	ble.w	c006f60 <kad_op_ce_multi+0x60>
 c007278:	e9d5 760a 	ldrd	r7, r6, [r5, #40]	@ 0x28
 c00727c:	2b00      	cmp	r3, #0
 c00727e:	f8d2 e028 	ldr.w	lr, [r2, #40]	@ 0x28
 c007282:	f77f ae6d 	ble.w	c006f60 <kad_op_ce_multi+0x60>
 c007286:	ed9f 6a19 	vldr	s12, [pc, #100]	@ c0072ec <kad_op_ce_multi+0x3ec>
 c00728a:	464c      	mov	r4, r9
 c00728c:	009d      	lsls	r5, r3, #2
 c00728e:	eb06 0083 	add.w	r0, r6, r3, lsl #2
 c007292:	eb06 0309 	add.w	r3, r6, r9
 c007296:	eb0e 0109 	add.w	r1, lr, r9
 c00729a:	eb07 0209 	add.w	r2, r7, r9
 c00729e:	ecf2 7a01 	vldmia	r2!, {s15}
 c0072a2:	eef4 7ac6 	vcmpe.f32	s15, s12
 c0072a6:	ecf1 6a01 	vldmia	r1!, {s13}
 c0072aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0072ae:	ee65 6a26 	vmul.f32	s13, s10, s13
 c0072b2:	fe77 7a86 	vselgt.f32	s15, s15, s12
 c0072b6:	ecb3 7a01 	vldmia	r3!, {s14}
 c0072ba:	eec6 5aa7 	vdiv.f32	s11, s13, s15
 c0072be:	ee77 7a65 	vsub.f32	s15, s14, s11
 c0072c2:	4298      	cmp	r0, r3
 c0072c4:	ed43 7a01 	vstr	s15, [r3, #-4]
 c0072c8:	d1e9      	bne.n	c00729e <kad_op_ce_multi+0x39e>
 c0072ca:	3401      	adds	r4, #1
 c0072cc:	45a4      	cmp	ip, r4
 c0072ce:	4428      	add	r0, r5
 c0072d0:	44a9      	add	r9, r5
 c0072d2:	d1de      	bne.n	c007292 <kad_op_ce_multi+0x392>
 c0072d4:	e644      	b.n	c006f60 <kad_op_ce_multi+0x60>
 c0072d6:	f04f 30ff 	mov.w	r0, #4294967295
 c0072da:	e642      	b.n	c006f62 <kad_op_ce_multi+0x62>
 c0072dc:	f240 6133 	movw	r1, #1587	@ 0x633
 c0072e0:	4b03      	ldr	r3, [pc, #12]	@ (c0072f0 <kad_op_ce_multi+0x3f0>)
 c0072e2:	4a04      	ldr	r2, [pc, #16]	@ (c0072f4 <kad_op_ce_multi+0x3f4>)
 c0072e4:	4804      	ldr	r0, [pc, #16]	@ (c0072f8 <kad_op_ce_multi+0x3f8>)
 c0072e6:	f007 fe8f 	bl	c00f008 <__assert_func>
 c0072ea:	bf00      	nop
 c0072ec:	3089705f 	.word	0x3089705f
 c0072f0:	0c011b80 	.word	0x0c011b80
 c0072f4:	0c011c54 	.word	0x0c011c54
 c0072f8:	0c011b04 	.word	0x0c011b04

0c0072fc <kad_op_stdnorm>:
 c0072fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c007300:	ed2d 8b02 	vpush	{d8}
 c007304:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c007306:	b091      	sub	sp, #68	@ 0x44
 c007308:	681c      	ldr	r4, [r3, #0]
 c00730a:	7825      	ldrb	r5, [r4, #0]
 c00730c:	2d00      	cmp	r5, #0
 c00730e:	f000 8198 	beq.w	c007642 <kad_op_stdnorm+0x346>
 c007312:	1ceb      	adds	r3, r5, #3
 c007314:	2d01      	cmp	r5, #1
 c007316:	f854 e023 	ldr.w	lr, [r4, r3, lsl #2]
 c00731a:	4606      	mov	r6, r0
 c00731c:	6923      	ldr	r3, [r4, #16]
 c00731e:	d00b      	beq.n	c007338 <kad_op_stdnorm+0x3c>
 c007320:	6962      	ldr	r2, [r4, #20]
 c007322:	2d02      	cmp	r5, #2
 c007324:	fb02 f303 	mul.w	r3, r2, r3
 c007328:	d006      	beq.n	c007338 <kad_op_stdnorm+0x3c>
 c00732a:	69a2      	ldr	r2, [r4, #24]
 c00732c:	2d03      	cmp	r5, #3
 c00732e:	fb02 f303 	mul.w	r3, r2, r3
 c007332:	bf1c      	itt	ne
 c007334:	69e2      	ldrne	r2, [r4, #28]
 c007336:	4353      	mulne	r3, r2
 c007338:	2904      	cmp	r1, #4
 c00733a:	fb93 f3fe 	sdiv	r3, r3, lr
 c00733e:	f000 808f 	beq.w	c007460 <kad_op_stdnorm+0x164>
 c007342:	2901      	cmp	r1, #1
 c007344:	f000 80af 	beq.w	c0074a6 <kad_op_stdnorm+0x1aa>
 c007348:	2902      	cmp	r1, #2
 c00734a:	d008      	beq.n	c00735e <kad_op_stdnorm+0x62>
 c00734c:	2903      	cmp	r1, #3
 c00734e:	f000 80b5 	beq.w	c0074bc <kad_op_stdnorm+0x1c0>
 c007352:	2000      	movs	r0, #0
 c007354:	b011      	add	sp, #68	@ 0x44
 c007356:	ecbd 8b02 	vpop	{d8}
 c00735a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00735e:	2b00      	cmp	r3, #0
 c007360:	6b72      	ldr	r2, [r6, #52]	@ 0x34
 c007362:	ddf6      	ble.n	c007352 <kad_op_stdnorm+0x56>
 c007364:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 c007368:	e9cd e308 	strd	lr, r3, [sp, #32]
 c00736c:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 c00736e:	f8d4 b028 	ldr.w	fp, [r4, #40]	@ 0x28
 c007372:	9b08      	ldr	r3, [sp, #32]
 c007374:	eb01 078e 	add.w	r7, r1, lr, lsl #2
 c007378:	eb0b 068e 	add.w	r6, fp, lr, lsl #2
 c00737c:	2b00      	cmp	r3, #0
 c00737e:	460c      	mov	r4, r1
 c007380:	9704      	str	r7, [sp, #16]
 c007382:	9602      	str	r6, [sp, #8]
 c007384:	ea4f 0a8e 	mov.w	sl, lr, lsl #2
 c007388:	9200      	str	r2, [sp, #0]
 c00738a:	dd66      	ble.n	c00745a <kad_op_stdnorm+0x15e>
 c00738c:	465d      	mov	r5, fp
 c00738e:	f04f 0800 	mov.w	r8, #0
 c007392:	f04f 0900 	mov.w	r9, #0
 c007396:	f855 0b04 	ldr.w	r0, [r5], #4
 c00739a:	f7f9 f8df 	bl	c00055c <__aeabi_f2d>
 c00739e:	4602      	mov	r2, r0
 c0073a0:	460b      	mov	r3, r1
 c0073a2:	4640      	mov	r0, r8
 c0073a4:	4649      	mov	r1, r9
 c0073a6:	f7f8 ff7b 	bl	c0002a0 <__adddf3>
 c0073aa:	42ae      	cmp	r6, r5
 c0073ac:	4680      	mov	r8, r0
 c0073ae:	4689      	mov	r9, r1
 c0073b0:	d1f1      	bne.n	c007396 <kad_op_stdnorm+0x9a>
 c0073b2:	9808      	ldr	r0, [sp, #32]
 c0073b4:	f7f9 f8c0 	bl	c000538 <__aeabi_i2d>
 c0073b8:	460b      	mov	r3, r1
 c0073ba:	4602      	mov	r2, r0
 c0073bc:	4649      	mov	r1, r9
 c0073be:	4640      	mov	r0, r8
 c0073c0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 c0073c4:	f7f9 fa4c 	bl	c000860 <__aeabi_ddiv>
 c0073c8:	f7f9 fbf8 	bl	c000bbc <__aeabi_d2f>
 c0073cc:	4623      	mov	r3, r4
 c0073ce:	ee07 0a10 	vmov	s14, r0
 c0073d2:	ecfb 7a01 	vldmia	fp!, {s15}
 c0073d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c0073da:	455e      	cmp	r6, fp
 c0073dc:	ece3 7a01 	vstmia	r3!, {s15}
 c0073e0:	d1f7      	bne.n	c0073d2 <kad_op_stdnorm+0xd6>
 c0073e2:	4625      	mov	r5, r4
 c0073e4:	f04f 0800 	mov.w	r8, #0
 c0073e8:	f04f 0900 	mov.w	r9, #0
 c0073ec:	ecf5 7a01 	vldmia	r5!, {s15}
 c0073f0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 c0073f4:	ee17 0a90 	vmov	r0, s15
 c0073f8:	f7f9 f8b0 	bl	c00055c <__aeabi_f2d>
 c0073fc:	4602      	mov	r2, r0
 c0073fe:	460b      	mov	r3, r1
 c007400:	4640      	mov	r0, r8
 c007402:	4649      	mov	r1, r9
 c007404:	f7f8 ff4c 	bl	c0002a0 <__adddf3>
 c007408:	42af      	cmp	r7, r5
 c00740a:	4680      	mov	r8, r0
 c00740c:	4689      	mov	r9, r1
 c00740e:	d1ed      	bne.n	c0073ec <kad_op_stdnorm+0xf0>
 c007410:	2200      	movs	r2, #0
 c007412:	2300      	movs	r3, #0
 c007414:	f7f9 fb62 	bl	c000adc <__aeabi_dcmpeq>
 c007418:	b380      	cbz	r0, c00747c <kad_op_stdnorm+0x180>
 c00741a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c00741e:	edd4 7a00 	vldr	s15, [r4]
 c007422:	ee67 7a87 	vmul.f32	s15, s15, s14
 c007426:	ece4 7a01 	vstmia	r4!, {s15}
 c00742a:	42bc      	cmp	r4, r7
 c00742c:	d1f7      	bne.n	c00741e <kad_op_stdnorm+0x122>
 c00742e:	9b00      	ldr	r3, [sp, #0]
 c007430:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c007432:	eca3 7a01 	vstmia	r3!, {s14}
 c007436:	9804      	ldr	r0, [sp, #16]
 c007438:	9902      	ldr	r1, [sp, #8]
 c00743a:	429a      	cmp	r2, r3
 c00743c:	4604      	mov	r4, r0
 c00743e:	468b      	mov	fp, r1
 c007440:	9300      	str	r3, [sp, #0]
 c007442:	4457      	add	r7, sl
 c007444:	4456      	add	r6, sl
 c007446:	d084      	beq.n	c007352 <kad_op_stdnorm+0x56>
 c007448:	4603      	mov	r3, r0
 c00744a:	4453      	add	r3, sl
 c00744c:	9304      	str	r3, [sp, #16]
 c00744e:	460b      	mov	r3, r1
 c007450:	4453      	add	r3, sl
 c007452:	9302      	str	r3, [sp, #8]
 c007454:	9b08      	ldr	r3, [sp, #32]
 c007456:	2b00      	cmp	r3, #0
 c007458:	dc98      	bgt.n	c00738c <kad_op_stdnorm+0x90>
 c00745a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c00745e:	e7e6      	b.n	c00742e <kad_op_stdnorm+0x132>
 c007460:	4630      	mov	r0, r6
 c007462:	00aa      	lsls	r2, r5, #2
 c007464:	f104 0110 	add.w	r1, r4, #16
 c007468:	f800 5b10 	strb.w	r5, [r0], #16
 c00746c:	f008 f9af 	bl	c00f7ce <memcpy>
 c007470:	2000      	movs	r0, #0
 c007472:	b011      	add	sp, #68	@ 0x44
 c007474:	ecbd 8b02 	vpop	{d8}
 c007478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00747c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 c007480:	4640      	mov	r0, r8
 c007482:	4649      	mov	r1, r9
 c007484:	f7f9 f9ec 	bl	c000860 <__aeabi_ddiv>
 c007488:	ec41 0b10 	vmov	d0, r0, r1
 c00748c:	f008 ffb6 	bl	c0103fc <sqrt>
 c007490:	2000      	movs	r0, #0
 c007492:	ec53 2b10 	vmov	r2, r3, d0
 c007496:	496e      	ldr	r1, [pc, #440]	@ (c007650 <kad_op_stdnorm+0x354>)
 c007498:	f7f9 f9e2 	bl	c000860 <__aeabi_ddiv>
 c00749c:	f7f9 fb8e 	bl	c000bbc <__aeabi_d2f>
 c0074a0:	ee07 0a10 	vmov	s14, r0
 c0074a4:	e7bb      	b.n	c00741e <kad_op_stdnorm+0x122>
 c0074a6:	6b70      	ldr	r0, [r6, #52]	@ 0x34
 c0074a8:	0099      	lsls	r1, r3, #2
 c0074aa:	f007 fea5 	bl	c00f1f8 <realloc>
 c0074ae:	6370      	str	r0, [r6, #52]	@ 0x34
 c0074b0:	2000      	movs	r0, #0
 c0074b2:	b011      	add	sp, #68	@ 0x44
 c0074b4:	ecbd 8b02 	vpop	{d8}
 c0074b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0074bc:	7862      	ldrb	r2, [r4, #1]
 c0074be:	07d2      	lsls	r2, r2, #31
 c0074c0:	f57f af47 	bpl.w	c007352 <kad_op_stdnorm+0x56>
 c0074c4:	2b00      	cmp	r3, #0
 c0074c6:	6b72      	ldr	r2, [r6, #52]	@ 0x34
 c0074c8:	f77f af43 	ble.w	c007352 <kad_op_stdnorm+0x56>
 c0074cc:	e9d6 150a 	ldrd	r1, r5, [r6, #40]	@ 0x28
 c0074d0:	9108      	str	r1, [sp, #32]
 c0074d2:	eb05 018e 	add.w	r1, r5, lr, lsl #2
 c0074d6:	910b      	str	r1, [sp, #44]	@ 0x2c
 c0074d8:	9109      	str	r1, [sp, #36]	@ 0x24
 c0074da:	2100      	movs	r1, #0
 c0074dc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 c0074e0:	e9cd e30c 	strd	lr, r3, [sp, #48]	@ 0x30
 c0074e4:	4613      	mov	r3, r2
 c0074e6:	f8d4 c02c 	ldr.w	ip, [r4, #44]	@ 0x2c
 c0074ea:	910a      	str	r1, [sp, #40]	@ 0x28
 c0074ec:	ea4f 018e 	mov.w	r1, lr, lsl #2
 c0074f0:	9206      	str	r2, [sp, #24]
 c0074f2:	910e      	str	r1, [sp, #56]	@ 0x38
 c0074f4:	eb0c 0b8e 	add.w	fp, ip, lr, lsl #2
 c0074f8:	f8cd c03c 	str.w	ip, [sp, #60]	@ 0x3c
 c0074fc:	ecf3 7a01 	vldmia	r3!, {s15}
 c007500:	9306      	str	r3, [sp, #24]
 c007502:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 c007504:	edcd 7a02 	vstr	s15, [sp, #8]
 c007508:	2b00      	cmp	r3, #0
 c00750a:	f340 8084 	ble.w	c007616 <kad_op_stdnorm+0x31a>
 c00750e:	f04f 0800 	mov.w	r8, #0
 c007512:	f04f 0900 	mov.w	r9, #0
 c007516:	f8cd b010 	str.w	fp, [sp, #16]
 c00751a:	46c2      	mov	sl, r8
 c00751c:	46cb      	mov	fp, r9
 c00751e:	462c      	mov	r4, r5
 c007520:	462f      	mov	r7, r5
 c007522:	9e08      	ldr	r6, [sp, #32]
 c007524:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 c007526:	ecb4 8a01 	vldmia	r4!, {s16}
 c00752a:	ee18 0a10 	vmov	r0, s16
 c00752e:	f7f9 f815 	bl	c00055c <__aeabi_f2d>
 c007532:	4602      	mov	r2, r0
 c007534:	460b      	mov	r3, r1
 c007536:	4640      	mov	r0, r8
 c007538:	4649      	mov	r1, r9
 c00753a:	f7f8 feb1 	bl	c0002a0 <__adddf3>
 c00753e:	ecf6 7a01 	vldmia	r6!, {s15}
 c007542:	ee68 7a27 	vmul.f32	s15, s16, s15
 c007546:	4680      	mov	r8, r0
 c007548:	ee17 0a90 	vmov	r0, s15
 c00754c:	4689      	mov	r9, r1
 c00754e:	f7f9 f805 	bl	c00055c <__aeabi_f2d>
 c007552:	4602      	mov	r2, r0
 c007554:	460b      	mov	r3, r1
 c007556:	4650      	mov	r0, sl
 c007558:	4659      	mov	r1, fp
 c00755a:	f7f8 fea1 	bl	c0002a0 <__adddf3>
 c00755e:	42a5      	cmp	r5, r4
 c007560:	4682      	mov	sl, r0
 c007562:	468b      	mov	fp, r1
 c007564:	d1df      	bne.n	c007526 <kad_op_stdnorm+0x22a>
 c007566:	980c      	ldr	r0, [sp, #48]	@ 0x30
 c007568:	e9cd ab00 	strd	sl, fp, [sp]
 c00756c:	f7f8 ffe4 	bl	c000538 <__aeabi_i2d>
 c007570:	4602      	mov	r2, r0
 c007572:	460b      	mov	r3, r1
 c007574:	4640      	mov	r0, r8
 c007576:	4649      	mov	r1, r9
 c007578:	4690      	mov	r8, r2
 c00757a:	4699      	mov	r9, r3
 c00757c:	f7f9 f970 	bl	c000860 <__aeabi_ddiv>
 c007580:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 c007582:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 c007584:	463d      	mov	r5, r7
 c007586:	4434      	add	r4, r6
 c007588:	460f      	mov	r7, r1
 c00758a:	4606      	mov	r6, r0
 c00758c:	e9dd 0100 	ldrd	r0, r1, [sp]
 c007590:	4642      	mov	r2, r8
 c007592:	464b      	mov	r3, r9
 c007594:	e9cd 6700 	strd	r6, r7, [sp]
 c007598:	f7f9 f962 	bl	c000860 <__aeabi_ddiv>
 c00759c:	4602      	mov	r2, r0
 c00759e:	460b      	mov	r3, r1
 c0075a0:	9802      	ldr	r0, [sp, #8]
 c0075a2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 c0075a6:	f7f8 ffd9 	bl	c00055c <__aeabi_f2d>
 c0075aa:	f8dd b010 	ldr.w	fp, [sp, #16]
 c0075ae:	e9cd 0104 	strd	r0, r1, [sp, #16]
 c0075b2:	f8dd a020 	ldr.w	sl, [sp, #32]
 c0075b6:	f855 0b04 	ldr.w	r0, [r5], #4
 c0075ba:	f7f8 ffcf 	bl	c00055c <__aeabi_f2d>
 c0075be:	e9dd 2300 	ldrd	r2, r3, [sp]
 c0075c2:	f7f8 fe6b 	bl	c00029c <__aeabi_dsub>
 c0075c6:	f85a 3b04 	ldr.w	r3, [sl], #4
 c0075ca:	4606      	mov	r6, r0
 c0075cc:	4618      	mov	r0, r3
 c0075ce:	460f      	mov	r7, r1
 c0075d0:	f7f8 ffc4 	bl	c00055c <__aeabi_f2d>
 c0075d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 c0075d8:	f7f9 f818 	bl	c00060c <__aeabi_dmul>
 c0075dc:	4602      	mov	r2, r0
 c0075de:	460b      	mov	r3, r1
 c0075e0:	4630      	mov	r0, r6
 c0075e2:	4639      	mov	r1, r7
 c0075e4:	f7f8 fe5a 	bl	c00029c <__aeabi_dsub>
 c0075e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 c0075ec:	f7f9 f80e 	bl	c00060c <__aeabi_dmul>
 c0075f0:	f8d4 8000 	ldr.w	r8, [r4]
 c0075f4:	4606      	mov	r6, r0
 c0075f6:	4640      	mov	r0, r8
 c0075f8:	460f      	mov	r7, r1
 c0075fa:	f7f8 ffaf 	bl	c00055c <__aeabi_f2d>
 c0075fe:	4602      	mov	r2, r0
 c007600:	460b      	mov	r3, r1
 c007602:	4630      	mov	r0, r6
 c007604:	4639      	mov	r1, r7
 c007606:	f7f8 fe4b 	bl	c0002a0 <__adddf3>
 c00760a:	f7f9 fad7 	bl	c000bbc <__aeabi_d2f>
 c00760e:	f844 0b04 	str.w	r0, [r4], #4
 c007612:	45a3      	cmp	fp, r4
 c007614:	d1cf      	bne.n	c0075b6 <kad_op_stdnorm+0x2ba>
 c007616:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c007618:	9a08      	ldr	r2, [sp, #32]
 c00761a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 c00761c:	441a      	add	r2, r3
 c00761e:	9208      	str	r2, [sp, #32]
 c007620:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c007622:	9806      	ldr	r0, [sp, #24]
 c007624:	441a      	add	r2, r3
 c007626:	920a      	str	r2, [sp, #40]	@ 0x28
 c007628:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c00762a:	4281      	cmp	r1, r0
 c00762c:	441a      	add	r2, r3
 c00762e:	9209      	str	r2, [sp, #36]	@ 0x24
 c007630:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 c007632:	449b      	add	fp, r3
 c007634:	4615      	mov	r5, r2
 c007636:	f43f ae8c 	beq.w	c007352 <kad_op_stdnorm+0x56>
 c00763a:	441a      	add	r2, r3
 c00763c:	920b      	str	r2, [sp, #44]	@ 0x2c
 c00763e:	4603      	mov	r3, r0
 c007640:	e75c      	b.n	c0074fc <kad_op_stdnorm+0x200>
 c007642:	f240 6163 	movw	r1, #1635	@ 0x663
 c007646:	4b03      	ldr	r3, [pc, #12]	@ (c007654 <kad_op_stdnorm+0x358>)
 c007648:	4a03      	ldr	r2, [pc, #12]	@ (c007658 <kad_op_stdnorm+0x35c>)
 c00764a:	4804      	ldr	r0, [pc, #16]	@ (c00765c <kad_op_stdnorm+0x360>)
 c00764c:	f007 fcdc 	bl	c00f008 <__assert_func>
 c007650:	3ff00000 	.word	0x3ff00000
 c007654:	0c011ba0 	.word	0x0c011ba0
 c007658:	0c011c44 	.word	0x0c011c44
 c00765c:	0c011b04 	.word	0x0c011b04

0c007660 <kad_op_exp>:
 c007660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c007662:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c007664:	681b      	ldr	r3, [r3, #0]
 c007666:	781d      	ldrb	r5, [r3, #0]
 c007668:	b305      	cbz	r5, c0076ac <kad_op_exp+0x4c>
 c00766a:	2d01      	cmp	r5, #1
 c00766c:	691c      	ldr	r4, [r3, #16]
 c00766e:	d00c      	beq.n	c00768a <kad_op_exp+0x2a>
 c007670:	695a      	ldr	r2, [r3, #20]
 c007672:	2d02      	cmp	r5, #2
 c007674:	fb02 f404 	mul.w	r4, r2, r4
 c007678:	d007      	beq.n	c00768a <kad_op_exp+0x2a>
 c00767a:	699a      	ldr	r2, [r3, #24]
 c00767c:	2d03      	cmp	r5, #3
 c00767e:	fb02 f404 	mul.w	r4, r2, r4
 c007682:	d002      	beq.n	c00768a <kad_op_exp+0x2a>
 c007684:	69da      	ldr	r2, [r3, #28]
 c007686:	fb02 f404 	mul.w	r4, r2, r4
 c00768a:	2904      	cmp	r1, #4
 c00768c:	d005      	beq.n	c00769a <kad_op_exp+0x3a>
 c00768e:	2902      	cmp	r1, #2
 c007690:	d017      	beq.n	c0076c2 <kad_op_exp+0x62>
 c007692:	2903      	cmp	r1, #3
 c007694:	d027      	beq.n	c0076e6 <kad_op_exp+0x86>
 c007696:	2000      	movs	r0, #0
 c007698:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00769a:	00aa      	lsls	r2, r5, #2
 c00769c:	f103 0110 	add.w	r1, r3, #16
 c0076a0:	f800 5b10 	strb.w	r5, [r0], #16
 c0076a4:	f008 f893 	bl	c00f7ce <memcpy>
 c0076a8:	2000      	movs	r0, #0
 c0076aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c0076ac:	2904      	cmp	r1, #4
 c0076ae:	d018      	beq.n	c0076e2 <kad_op_exp+0x82>
 c0076b0:	2902      	cmp	r1, #2
 c0076b2:	d02f      	beq.n	c007714 <kad_op_exp+0xb4>
 c0076b4:	2903      	cmp	r1, #3
 c0076b6:	d1ee      	bne.n	c007696 <kad_op_exp+0x36>
 c0076b8:	785a      	ldrb	r2, [r3, #1]
 c0076ba:	07d1      	lsls	r1, r2, #31
 c0076bc:	d5eb      	bpl.n	c007696 <kad_op_exp+0x36>
 c0076be:	2401      	movs	r4, #1
 c0076c0:	e016      	b.n	c0076f0 <kad_op_exp+0x90>
 c0076c2:	2c00      	cmp	r4, #0
 c0076c4:	dde7      	ble.n	c007696 <kad_op_exp+0x36>
 c0076c6:	2500      	movs	r5, #0
 c0076c8:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
 c0076ca:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 c0076cc:	ecb7 0a01 	vldmia	r7!, {s0}
 c0076d0:	f008 fec0 	bl	c010454 <expf>
 c0076d4:	3501      	adds	r5, #1
 c0076d6:	42a5      	cmp	r5, r4
 c0076d8:	eca6 0a01 	vstmia	r6!, {s0}
 c0076dc:	dbf6      	blt.n	c0076cc <kad_op_exp+0x6c>
 c0076de:	2000      	movs	r0, #0
 c0076e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c0076e2:	7005      	strb	r5, [r0, #0]
 c0076e4:	e7d7      	b.n	c007696 <kad_op_exp+0x36>
 c0076e6:	785a      	ldrb	r2, [r3, #1]
 c0076e8:	07d2      	lsls	r2, r2, #31
 c0076ea:	d5d4      	bpl.n	c007696 <kad_op_exp+0x36>
 c0076ec:	2c00      	cmp	r4, #0
 c0076ee:	ddd2      	ble.n	c007696 <kad_op_exp+0x36>
 c0076f0:	e9d0 210a 	ldrd	r2, r1, [r0, #40]	@ 0x28
 c0076f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 c0076f6:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 c0076fa:	edd3 7a00 	vldr	s15, [r3]
 c0076fe:	ecf1 6a01 	vldmia	r1!, {s13}
 c007702:	ecb2 7a01 	vldmia	r2!, {s14}
 c007706:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00770a:	ece3 7a01 	vstmia	r3!, {s15}
 c00770e:	429c      	cmp	r4, r3
 c007710:	d1f3      	bne.n	c0076fa <kad_op_exp+0x9a>
 c007712:	e7c0      	b.n	c007696 <kad_op_exp+0x36>
 c007714:	2401      	movs	r4, #1
 c007716:	e7d6      	b.n	c0076c6 <kad_op_exp+0x66>

0c007718 <kad_op_sigm>:
 c007718:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00771a:	ed2d 8b02 	vpush	{d8}
 c00771e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c007720:	4605      	mov	r5, r0
 c007722:	681b      	ldr	r3, [r3, #0]
 c007724:	781c      	ldrb	r4, [r3, #0]
 c007726:	b32c      	cbz	r4, c007774 <kad_op_sigm+0x5c>
 c007728:	2c01      	cmp	r4, #1
 c00772a:	691e      	ldr	r6, [r3, #16]
 c00772c:	d00c      	beq.n	c007748 <kad_op_sigm+0x30>
 c00772e:	695a      	ldr	r2, [r3, #20]
 c007730:	2c02      	cmp	r4, #2
 c007732:	fb02 f606 	mul.w	r6, r2, r6
 c007736:	d007      	beq.n	c007748 <kad_op_sigm+0x30>
 c007738:	699a      	ldr	r2, [r3, #24]
 c00773a:	2c03      	cmp	r4, #3
 c00773c:	fb02 f606 	mul.w	r6, r2, r6
 c007740:	d002      	beq.n	c007748 <kad_op_sigm+0x30>
 c007742:	69da      	ldr	r2, [r3, #28]
 c007744:	fb02 f606 	mul.w	r6, r2, r6
 c007748:	2904      	cmp	r1, #4
 c00774a:	d007      	beq.n	c00775c <kad_op_sigm+0x44>
 c00774c:	2902      	cmp	r1, #2
 c00774e:	d01c      	beq.n	c00778a <kad_op_sigm+0x72>
 c007750:	2903      	cmp	r1, #3
 c007752:	d038      	beq.n	c0077c6 <kad_op_sigm+0xae>
 c007754:	ecbd 8b02 	vpop	{d8}
 c007758:	2000      	movs	r0, #0
 c00775a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00775c:	4628      	mov	r0, r5
 c00775e:	00a2      	lsls	r2, r4, #2
 c007760:	f103 0110 	add.w	r1, r3, #16
 c007764:	f800 4b10 	strb.w	r4, [r0], #16
 c007768:	f008 f831 	bl	c00f7ce <memcpy>
 c00776c:	ecbd 8b02 	vpop	{d8}
 c007770:	2000      	movs	r0, #0
 c007772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c007774:	2904      	cmp	r1, #4
 c007776:	d024      	beq.n	c0077c2 <kad_op_sigm+0xaa>
 c007778:	2902      	cmp	r1, #2
 c00777a:	d041      	beq.n	c007800 <kad_op_sigm+0xe8>
 c00777c:	2903      	cmp	r1, #3
 c00777e:	d1e9      	bne.n	c007754 <kad_op_sigm+0x3c>
 c007780:	785a      	ldrb	r2, [r3, #1]
 c007782:	07d1      	lsls	r1, r2, #31
 c007784:	d5e6      	bpl.n	c007754 <kad_op_sigm+0x3c>
 c007786:	2601      	movs	r6, #1
 c007788:	e022      	b.n	c0077d0 <kad_op_sigm+0xb8>
 c00778a:	2e00      	cmp	r6, #0
 c00778c:	dde2      	ble.n	c007754 <kad_op_sigm+0x3c>
 c00778e:	2400      	movs	r4, #0
 c007790:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 c007794:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
 c007796:	ecb7 0a01 	vldmia	r7!, {s0}
 c00779a:	eeb1 0a40 	vneg.f32	s0, s0
 c00779e:	f008 fe59 	bl	c010454 <expf>
 c0077a2:	ee30 0a08 	vadd.f32	s0, s0, s16
 c0077a6:	eec8 7a00 	vdiv.f32	s15, s16, s0
 c0077aa:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c0077ac:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 c0077b0:	3401      	adds	r4, #1
 c0077b2:	42b4      	cmp	r4, r6
 c0077b4:	edc3 7a00 	vstr	s15, [r3]
 c0077b8:	dbed      	blt.n	c007796 <kad_op_sigm+0x7e>
 c0077ba:	ecbd 8b02 	vpop	{d8}
 c0077be:	2000      	movs	r0, #0
 c0077c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c0077c2:	7004      	strb	r4, [r0, #0]
 c0077c4:	e7c6      	b.n	c007754 <kad_op_sigm+0x3c>
 c0077c6:	785a      	ldrb	r2, [r3, #1]
 c0077c8:	07d2      	lsls	r2, r2, #31
 c0077ca:	d5c3      	bpl.n	c007754 <kad_op_sigm+0x3c>
 c0077cc:	2e00      	cmp	r6, #0
 c0077ce:	ddc1      	ble.n	c007754 <kad_op_sigm+0x3c>
 c0077d0:	e9d5 210a 	ldrd	r2, r1, [r5, #40]	@ 0x28
 c0077d4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c0077d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 c0077da:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 c0077de:	ecf2 6a01 	vldmia	r2!, {s13}
 c0077e2:	ee35 7ae6 	vsub.f32	s14, s11, s13
 c0077e6:	edd3 7a00 	vldr	s15, [r3]
 c0077ea:	ecb1 6a01 	vldmia	r1!, {s12}
 c0077ee:	ee27 7a26 	vmul.f32	s14, s14, s13
 c0077f2:	eee6 7a07 	vfma.f32	s15, s12, s14
 c0077f6:	ece3 7a01 	vstmia	r3!, {s15}
 c0077fa:	429e      	cmp	r6, r3
 c0077fc:	d1ef      	bne.n	c0077de <kad_op_sigm+0xc6>
 c0077fe:	e7a9      	b.n	c007754 <kad_op_sigm+0x3c>
 c007800:	2601      	movs	r6, #1
 c007802:	e7c4      	b.n	c00778e <kad_op_sigm+0x76>

0c007804 <kad_op_tanh>:
 c007804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c007808:	ed2d 8b04 	vpush	{d8-d9}
 c00780c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c00780e:	4605      	mov	r5, r0
 c007810:	681b      	ldr	r3, [r3, #0]
 c007812:	781c      	ldrb	r4, [r3, #0]
 c007814:	b33c      	cbz	r4, c007866 <kad_op_tanh+0x62>
 c007816:	2c01      	cmp	r4, #1
 c007818:	691e      	ldr	r6, [r3, #16]
 c00781a:	d00c      	beq.n	c007836 <kad_op_tanh+0x32>
 c00781c:	695a      	ldr	r2, [r3, #20]
 c00781e:	2c02      	cmp	r4, #2
 c007820:	fb02 f606 	mul.w	r6, r2, r6
 c007824:	d007      	beq.n	c007836 <kad_op_tanh+0x32>
 c007826:	699a      	ldr	r2, [r3, #24]
 c007828:	2c03      	cmp	r4, #3
 c00782a:	fb02 f606 	mul.w	r6, r2, r6
 c00782e:	d002      	beq.n	c007836 <kad_op_tanh+0x32>
 c007830:	69da      	ldr	r2, [r3, #28]
 c007832:	fb02 f606 	mul.w	r6, r2, r6
 c007836:	2904      	cmp	r1, #4
 c007838:	d008      	beq.n	c00784c <kad_op_tanh+0x48>
 c00783a:	2902      	cmp	r1, #2
 c00783c:	d01e      	beq.n	c00787c <kad_op_tanh+0x78>
 c00783e:	2903      	cmp	r1, #3
 c007840:	d048      	beq.n	c0078d4 <kad_op_tanh+0xd0>
 c007842:	ecbd 8b04 	vpop	{d8-d9}
 c007846:	2000      	movs	r0, #0
 c007848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00784c:	4628      	mov	r0, r5
 c00784e:	00a2      	lsls	r2, r4, #2
 c007850:	f103 0110 	add.w	r1, r3, #16
 c007854:	f800 4b10 	strb.w	r4, [r0], #16
 c007858:	f007 ffb9 	bl	c00f7ce <memcpy>
 c00785c:	ecbd 8b04 	vpop	{d8-d9}
 c007860:	2000      	movs	r0, #0
 c007862:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c007866:	2904      	cmp	r1, #4
 c007868:	d032      	beq.n	c0078d0 <kad_op_tanh+0xcc>
 c00786a:	2902      	cmp	r1, #2
 c00786c:	d04f      	beq.n	c00790e <kad_op_tanh+0x10a>
 c00786e:	2903      	cmp	r1, #3
 c007870:	d1e7      	bne.n	c007842 <kad_op_tanh+0x3e>
 c007872:	785a      	ldrb	r2, [r3, #1]
 c007874:	07d1      	lsls	r1, r2, #31
 c007876:	d5e4      	bpl.n	c007842 <kad_op_tanh+0x3e>
 c007878:	2601      	movs	r6, #1
 c00787a:	e030      	b.n	c0078de <kad_op_tanh+0xda>
 c00787c:	2e00      	cmp	r6, #0
 c00787e:	dde0      	ble.n	c007842 <kad_op_tanh+0x3e>
 c007880:	2400      	movs	r4, #0
 c007882:	eebb 8a04 	vmov.f32	s16, #180	@ 0xc1a00000 -20.0
 c007886:	eeb8 9a00 	vmov.f32	s18, #128	@ 0xc0000000 -2.0
 c00788a:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 c00788e:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
 c007890:	e006      	b.n	c0078a0 <kad_op_tanh+0x9c>
 c007892:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c007894:	4a1f      	ldr	r2, [pc, #124]	@ (c007914 <kad_op_tanh+0x110>)
 c007896:	4443      	add	r3, r8
 c007898:	601a      	str	r2, [r3, #0]
 c00789a:	3401      	adds	r4, #1
 c00789c:	42b4      	cmp	r4, r6
 c00789e:	dad0      	bge.n	c007842 <kad_op_tanh+0x3e>
 c0078a0:	ecb7 0a01 	vldmia	r7!, {s0}
 c0078a4:	eeb4 0ac8 	vcmpe.f32	s0, s16
 c0078a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0078ac:	ea4f 0884 	mov.w	r8, r4, lsl #2
 c0078b0:	d4ef      	bmi.n	c007892 <kad_op_tanh+0x8e>
 c0078b2:	ee20 0a09 	vmul.f32	s0, s0, s18
 c0078b6:	f008 fdcd 	bl	c010454 <expf>
 c0078ba:	ee38 7ac0 	vsub.f32	s14, s17, s0
 c0078be:	ee30 0a28 	vadd.f32	s0, s0, s17
 c0078c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 c0078c6:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c0078c8:	4443      	add	r3, r8
 c0078ca:	edc3 7a00 	vstr	s15, [r3]
 c0078ce:	e7e4      	b.n	c00789a <kad_op_tanh+0x96>
 c0078d0:	7004      	strb	r4, [r0, #0]
 c0078d2:	e7b6      	b.n	c007842 <kad_op_tanh+0x3e>
 c0078d4:	785a      	ldrb	r2, [r3, #1]
 c0078d6:	07d2      	lsls	r2, r2, #31
 c0078d8:	d5b3      	bpl.n	c007842 <kad_op_tanh+0x3e>
 c0078da:	2e00      	cmp	r6, #0
 c0078dc:	ddb1      	ble.n	c007842 <kad_op_tanh+0x3e>
 c0078de:	e9d5 210a 	ldrd	r2, r1, [r5, #40]	@ 0x28
 c0078e2:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c0078e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 c0078e8:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 c0078ec:	ecb2 7a01 	vldmia	r2!, {s14}
 c0078f0:	eef0 6a65 	vmov.f32	s13, s11
 c0078f4:	edd3 7a00 	vldr	s15, [r3]
 c0078f8:	ecb1 6a01 	vldmia	r1!, {s12}
 c0078fc:	eee7 6a47 	vfms.f32	s13, s14, s14
 c007900:	eee6 7a26 	vfma.f32	s15, s12, s13
 c007904:	ece3 7a01 	vstmia	r3!, {s15}
 c007908:	429e      	cmp	r6, r3
 c00790a:	d1ef      	bne.n	c0078ec <kad_op_tanh+0xe8>
 c00790c:	e799      	b.n	c007842 <kad_op_tanh+0x3e>
 c00790e:	2601      	movs	r6, #1
 c007910:	e7b6      	b.n	c007880 <kad_op_tanh+0x7c>
 c007912:	bf00      	nop
 c007914:	bf800000 	.word	0xbf800000

0c007918 <kad_op_softmax>:
 c007918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00791c:	ed2d 8b04 	vpush	{d8-d9}
 c007920:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c007922:	b085      	sub	sp, #20
 c007924:	681b      	ldr	r3, [r3, #0]
 c007926:	781c      	ldrb	r4, [r3, #0]
 c007928:	1ce2      	adds	r2, r4, #3
 c00792a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 c00792e:	9202      	str	r2, [sp, #8]
 c007930:	2c00      	cmp	r4, #0
 c007932:	d076      	beq.n	c007a22 <kad_op_softmax+0x10a>
 c007934:	2c01      	cmp	r4, #1
 c007936:	691d      	ldr	r5, [r3, #16]
 c007938:	d00c      	beq.n	c007954 <kad_op_softmax+0x3c>
 c00793a:	695a      	ldr	r2, [r3, #20]
 c00793c:	2c02      	cmp	r4, #2
 c00793e:	fb02 f505 	mul.w	r5, r2, r5
 c007942:	d007      	beq.n	c007954 <kad_op_softmax+0x3c>
 c007944:	699a      	ldr	r2, [r3, #24]
 c007946:	2c03      	cmp	r4, #3
 c007948:	fb02 f505 	mul.w	r5, r2, r5
 c00794c:	d002      	beq.n	c007954 <kad_op_softmax+0x3c>
 c00794e:	69da      	ldr	r2, [r3, #28]
 c007950:	fb02 f505 	mul.w	r5, r2, r5
 c007954:	2904      	cmp	r1, #4
 c007956:	d057      	beq.n	c007a08 <kad_op_softmax+0xf0>
 c007958:	9a02      	ldr	r2, [sp, #8]
 c00795a:	fb95 f2f2 	sdiv	r2, r5, r2
 c00795e:	9203      	str	r2, [sp, #12]
 c007960:	2902      	cmp	r1, #2
 c007962:	d007      	beq.n	c007974 <kad_op_softmax+0x5c>
 c007964:	2903      	cmp	r1, #3
 c007966:	d068      	beq.n	c007a3a <kad_op_softmax+0x122>
 c007968:	2000      	movs	r0, #0
 c00796a:	b005      	add	sp, #20
 c00796c:	ecbd 8b04 	vpop	{d8-d9}
 c007970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c007974:	9a03      	ldr	r2, [sp, #12]
 c007976:	2a00      	cmp	r2, #0
 c007978:	ddf6      	ble.n	c007968 <kad_op_softmax+0x50>
 c00797a:	9a02      	ldr	r2, [sp, #8]
 c00797c:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 c00797e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c007980:	eb01 0982 	add.w	r9, r1, r2, lsl #2
 c007984:	eb03 0882 	add.w	r8, r3, r2, lsl #2
 c007988:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 c00798c:	464c      	mov	r4, r9
 c00798e:	4645      	mov	r5, r8
 c007990:	2700      	movs	r7, #0
 c007992:	9101      	str	r1, [sp, #4]
 c007994:	0096      	lsls	r6, r2, #2
 c007996:	9a02      	ldr	r2, [sp, #8]
 c007998:	2a00      	cmp	r2, #0
 c00799a:	dd29      	ble.n	c0079f0 <kad_op_softmax+0xd8>
 c00799c:	ed9f 8a47 	vldr	s16, [pc, #284]	@ c007abc <kad_op_softmax+0x1a4>
 c0079a0:	4619      	mov	r1, r3
 c0079a2:	ecf1 7a01 	vldmia	r1!, {s15}
 c0079a6:	eef4 7ac8 	vcmpe.f32	s15, s16
 c0079aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0079ae:	bf58      	it	pl
 c0079b0:	eeb0 8a67 	vmovpl.f32	s16, s15
 c0079b4:	428d      	cmp	r5, r1
 c0079b6:	d1f4      	bne.n	c0079a2 <kad_op_softmax+0x8a>
 c0079b8:	469b      	mov	fp, r3
 c0079ba:	eddf 8a41 	vldr	s17, [pc, #260]	@ c007ac0 <kad_op_softmax+0x1a8>
 c0079be:	f8dd a004 	ldr.w	sl, [sp, #4]
 c0079c2:	ecbb 0a01 	vldmia	fp!, {s0}
 c0079c6:	ee30 0a48 	vsub.f32	s0, s0, s16
 c0079ca:	f008 fd43 	bl	c010454 <expf>
 c0079ce:	45ab      	cmp	fp, r5
 c0079d0:	ecaa 0a01 	vstmia	sl!, {s0}
 c0079d4:	ee78 8a80 	vadd.f32	s17, s17, s0
 c0079d8:	d1f3      	bne.n	c0079c2 <kad_op_softmax+0xaa>
 c0079da:	ee89 7a28 	vdiv.f32	s14, s18, s17
 c0079de:	9b01      	ldr	r3, [sp, #4]
 c0079e0:	edd3 7a00 	vldr	s15, [r3]
 c0079e4:	ee67 7a87 	vmul.f32	s15, s15, s14
 c0079e8:	ece3 7a01 	vstmia	r3!, {s15}
 c0079ec:	429c      	cmp	r4, r3
 c0079ee:	d1f7      	bne.n	c0079e0 <kad_op_softmax+0xc8>
 c0079f0:	9a03      	ldr	r2, [sp, #12]
 c0079f2:	3701      	adds	r7, #1
 c0079f4:	42ba      	cmp	r2, r7
 c0079f6:	4643      	mov	r3, r8
 c0079f8:	f8cd 9004 	str.w	r9, [sp, #4]
 c0079fc:	4434      	add	r4, r6
 c0079fe:	4435      	add	r5, r6
 c007a00:	d0b2      	beq.n	c007968 <kad_op_softmax+0x50>
 c007a02:	44b1      	add	r9, r6
 c007a04:	44b0      	add	r8, r6
 c007a06:	e7c6      	b.n	c007996 <kad_op_softmax+0x7e>
 c007a08:	00a2      	lsls	r2, r4, #2
 c007a0a:	f103 0110 	add.w	r1, r3, #16
 c007a0e:	f800 4b10 	strb.w	r4, [r0], #16
 c007a12:	f007 fedc 	bl	c00f7ce <memcpy>
 c007a16:	2000      	movs	r0, #0
 c007a18:	b005      	add	sp, #20
 c007a1a:	ecbd 8b04 	vpop	{d8-d9}
 c007a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c007a22:	2904      	cmp	r1, #4
 c007a24:	d007      	beq.n	c007a36 <kad_op_softmax+0x11e>
 c007a26:	4614      	mov	r4, r2
 c007a28:	3201      	adds	r2, #1
 c007a2a:	2a02      	cmp	r2, #2
 c007a2c:	bf94      	ite	ls
 c007a2e:	4622      	movls	r2, r4
 c007a30:	2200      	movhi	r2, #0
 c007a32:	9203      	str	r2, [sp, #12]
 c007a34:	e794      	b.n	c007960 <kad_op_softmax+0x48>
 c007a36:	7004      	strb	r4, [r0, #0]
 c007a38:	e796      	b.n	c007968 <kad_op_softmax+0x50>
 c007a3a:	785a      	ldrb	r2, [r3, #1]
 c007a3c:	07d2      	lsls	r2, r2, #31
 c007a3e:	d593      	bpl.n	c007968 <kad_op_softmax+0x50>
 c007a40:	9a03      	ldr	r2, [sp, #12]
 c007a42:	2a00      	cmp	r2, #0
 c007a44:	dd90      	ble.n	c007968 <kad_op_softmax+0x50>
 c007a46:	e9d0 620a 	ldrd	r6, r2, [r0, #40]	@ 0x28
 c007a4a:	f04f 0c00 	mov.w	ip, #0
 c007a4e:	f8d3 802c 	ldr.w	r8, [r3, #44]	@ 0x2c
 c007a52:	9b02      	ldr	r3, [sp, #8]
 c007a54:	4667      	mov	r7, ip
 c007a56:	eb02 0e83 	add.w	lr, r2, r3, lsl #2
 c007a5a:	4670      	mov	r0, lr
 c007a5c:	009c      	lsls	r4, r3, #2
 c007a5e:	eb08 0183 	add.w	r1, r8, r3, lsl #2
 c007a62:	9b02      	ldr	r3, [sp, #8]
 c007a64:	2b00      	cmp	r3, #0
 c007a66:	dd1c      	ble.n	c007aa2 <kad_op_softmax+0x18a>
 c007a68:	eddf 6a15 	vldr	s13, [pc, #84]	@ c007ac0 <kad_op_softmax+0x1a8>
 c007a6c:	46b1      	mov	r9, r6
 c007a6e:	4613      	mov	r3, r2
 c007a70:	ecb3 7a01 	vldmia	r3!, {s14}
 c007a74:	ecf9 7a01 	vldmia	r9!, {s15}
 c007a78:	4283      	cmp	r3, r0
 c007a7a:	eee7 6a27 	vfma.f32	s13, s14, s15
 c007a7e:	d1f7      	bne.n	c007a70 <kad_op_softmax+0x158>
 c007a80:	46b1      	mov	r9, r6
 c007a82:	eb0c 0308 	add.w	r3, ip, r8
 c007a86:	ecb2 7a01 	vldmia	r2!, {s14}
 c007a8a:	edd3 7a00 	vldr	s15, [r3]
 c007a8e:	ecb9 6a01 	vldmia	r9!, {s12}
 c007a92:	ee37 7a66 	vsub.f32	s14, s14, s13
 c007a96:	eee6 7a07 	vfma.f32	s15, s12, s14
 c007a9a:	ece3 7a01 	vstmia	r3!, {s15}
 c007a9e:	428b      	cmp	r3, r1
 c007aa0:	d1f1      	bne.n	c007a86 <kad_op_softmax+0x16e>
 c007aa2:	9b03      	ldr	r3, [sp, #12]
 c007aa4:	3701      	adds	r7, #1
 c007aa6:	42bb      	cmp	r3, r7
 c007aa8:	4672      	mov	r2, lr
 c007aaa:	4426      	add	r6, r4
 c007aac:	44a4      	add	ip, r4
 c007aae:	4421      	add	r1, r4
 c007ab0:	4420      	add	r0, r4
 c007ab2:	f43f af59 	beq.w	c007968 <kad_op_softmax+0x50>
 c007ab6:	44a6      	add	lr, r4
 c007ab8:	e7d3      	b.n	c007a62 <kad_op_softmax+0x14a>
 c007aba:	bf00      	nop
 c007abc:	ff7fffff 	.word	0xff7fffff
 c007ac0:	00000000 	.word	0x00000000

0c007ac4 <kad_op_log>:
 c007ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c007ac6:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c007ac8:	681b      	ldr	r3, [r3, #0]
 c007aca:	781d      	ldrb	r5, [r3, #0]
 c007acc:	b305      	cbz	r5, c007b10 <kad_op_log+0x4c>
 c007ace:	2d01      	cmp	r5, #1
 c007ad0:	691c      	ldr	r4, [r3, #16]
 c007ad2:	d00c      	beq.n	c007aee <kad_op_log+0x2a>
 c007ad4:	695a      	ldr	r2, [r3, #20]
 c007ad6:	2d02      	cmp	r5, #2
 c007ad8:	fb02 f404 	mul.w	r4, r2, r4
 c007adc:	d007      	beq.n	c007aee <kad_op_log+0x2a>
 c007ade:	699a      	ldr	r2, [r3, #24]
 c007ae0:	2d03      	cmp	r5, #3
 c007ae2:	fb02 f404 	mul.w	r4, r2, r4
 c007ae6:	d002      	beq.n	c007aee <kad_op_log+0x2a>
 c007ae8:	69da      	ldr	r2, [r3, #28]
 c007aea:	fb02 f404 	mul.w	r4, r2, r4
 c007aee:	2904      	cmp	r1, #4
 c007af0:	d005      	beq.n	c007afe <kad_op_log+0x3a>
 c007af2:	2902      	cmp	r1, #2
 c007af4:	d017      	beq.n	c007b26 <kad_op_log+0x62>
 c007af6:	2903      	cmp	r1, #3
 c007af8:	d027      	beq.n	c007b4a <kad_op_log+0x86>
 c007afa:	2000      	movs	r0, #0
 c007afc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c007afe:	00aa      	lsls	r2, r5, #2
 c007b00:	f103 0110 	add.w	r1, r3, #16
 c007b04:	f800 5b10 	strb.w	r5, [r0], #16
 c007b08:	f007 fe61 	bl	c00f7ce <memcpy>
 c007b0c:	2000      	movs	r0, #0
 c007b0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c007b10:	2904      	cmp	r1, #4
 c007b12:	d018      	beq.n	c007b46 <kad_op_log+0x82>
 c007b14:	2902      	cmp	r1, #2
 c007b16:	d031      	beq.n	c007b7c <kad_op_log+0xb8>
 c007b18:	2903      	cmp	r1, #3
 c007b1a:	d1ee      	bne.n	c007afa <kad_op_log+0x36>
 c007b1c:	785a      	ldrb	r2, [r3, #1]
 c007b1e:	07d1      	lsls	r1, r2, #31
 c007b20:	d5eb      	bpl.n	c007afa <kad_op_log+0x36>
 c007b22:	2401      	movs	r4, #1
 c007b24:	e016      	b.n	c007b54 <kad_op_log+0x90>
 c007b26:	2c00      	cmp	r4, #0
 c007b28:	dde7      	ble.n	c007afa <kad_op_log+0x36>
 c007b2a:	2500      	movs	r5, #0
 c007b2c:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
 c007b2e:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 c007b30:	ecb7 0a01 	vldmia	r7!, {s0}
 c007b34:	f008 fcc4 	bl	c0104c0 <logf>
 c007b38:	3501      	adds	r5, #1
 c007b3a:	42a5      	cmp	r5, r4
 c007b3c:	eca6 0a01 	vstmia	r6!, {s0}
 c007b40:	dbf6      	blt.n	c007b30 <kad_op_log+0x6c>
 c007b42:	2000      	movs	r0, #0
 c007b44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c007b46:	7005      	strb	r5, [r0, #0]
 c007b48:	e7d7      	b.n	c007afa <kad_op_log+0x36>
 c007b4a:	785a      	ldrb	r2, [r3, #1]
 c007b4c:	07d2      	lsls	r2, r2, #31
 c007b4e:	d5d4      	bpl.n	c007afa <kad_op_log+0x36>
 c007b50:	2c00      	cmp	r4, #0
 c007b52:	ddd2      	ble.n	c007afa <kad_op_log+0x36>
 c007b54:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 c007b56:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 c007b58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c007b5a:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 c007b5e:	ecb1 6a01 	vldmia	r1!, {s12}
 c007b62:	ecf3 6a01 	vldmia	r3!, {s13}
 c007b66:	ed92 7a00 	vldr	s14, [r2]
 c007b6a:	eec6 7a26 	vdiv.f32	s15, s12, s13
 c007b6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 c007b72:	ece2 7a01 	vstmia	r2!, {s15}
 c007b76:	4294      	cmp	r4, r2
 c007b78:	d1f1      	bne.n	c007b5e <kad_op_log+0x9a>
 c007b7a:	e7be      	b.n	c007afa <kad_op_log+0x36>
 c007b7c:	2401      	movs	r4, #1
 c007b7e:	e7d4      	b.n	c007b2a <kad_op_log+0x66>

0c007b80 <kad_op_sin>:
 c007b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c007b82:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c007b84:	681b      	ldr	r3, [r3, #0]
 c007b86:	781d      	ldrb	r5, [r3, #0]
 c007b88:	b305      	cbz	r5, c007bcc <kad_op_sin+0x4c>
 c007b8a:	2d01      	cmp	r5, #1
 c007b8c:	691c      	ldr	r4, [r3, #16]
 c007b8e:	d00c      	beq.n	c007baa <kad_op_sin+0x2a>
 c007b90:	695a      	ldr	r2, [r3, #20]
 c007b92:	2d02      	cmp	r5, #2
 c007b94:	fb02 f404 	mul.w	r4, r2, r4
 c007b98:	d007      	beq.n	c007baa <kad_op_sin+0x2a>
 c007b9a:	699a      	ldr	r2, [r3, #24]
 c007b9c:	2d03      	cmp	r5, #3
 c007b9e:	fb02 f404 	mul.w	r4, r2, r4
 c007ba2:	d002      	beq.n	c007baa <kad_op_sin+0x2a>
 c007ba4:	69da      	ldr	r2, [r3, #28]
 c007ba6:	fb02 f404 	mul.w	r4, r2, r4
 c007baa:	2904      	cmp	r1, #4
 c007bac:	d005      	beq.n	c007bba <kad_op_sin+0x3a>
 c007bae:	2902      	cmp	r1, #2
 c007bb0:	d017      	beq.n	c007be2 <kad_op_sin+0x62>
 c007bb2:	2903      	cmp	r1, #3
 c007bb4:	d027      	beq.n	c007c06 <kad_op_sin+0x86>
 c007bb6:	2000      	movs	r0, #0
 c007bb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c007bba:	00aa      	lsls	r2, r5, #2
 c007bbc:	f103 0110 	add.w	r1, r3, #16
 c007bc0:	f800 5b10 	strb.w	r5, [r0], #16
 c007bc4:	f007 fe03 	bl	c00f7ce <memcpy>
 c007bc8:	2000      	movs	r0, #0
 c007bca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c007bcc:	2904      	cmp	r1, #4
 c007bce:	d018      	beq.n	c007c02 <kad_op_sin+0x82>
 c007bd0:	2902      	cmp	r1, #2
 c007bd2:	d031      	beq.n	c007c38 <kad_op_sin+0xb8>
 c007bd4:	2903      	cmp	r1, #3
 c007bd6:	d1ee      	bne.n	c007bb6 <kad_op_sin+0x36>
 c007bd8:	785a      	ldrb	r2, [r3, #1]
 c007bda:	07d1      	lsls	r1, r2, #31
 c007bdc:	d5eb      	bpl.n	c007bb6 <kad_op_sin+0x36>
 c007bde:	2401      	movs	r4, #1
 c007be0:	e016      	b.n	c007c10 <kad_op_sin+0x90>
 c007be2:	2c00      	cmp	r4, #0
 c007be4:	dde7      	ble.n	c007bb6 <kad_op_sin+0x36>
 c007be6:	2500      	movs	r5, #0
 c007be8:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
 c007bea:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 c007bec:	ecb7 0a01 	vldmia	r7!, {s0}
 c007bf0:	f008 fcf6 	bl	c0105e0 <sinf>
 c007bf4:	3501      	adds	r5, #1
 c007bf6:	42a5      	cmp	r5, r4
 c007bf8:	eca6 0a01 	vstmia	r6!, {s0}
 c007bfc:	dbf6      	blt.n	c007bec <kad_op_sin+0x6c>
 c007bfe:	2000      	movs	r0, #0
 c007c00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c007c02:	7005      	strb	r5, [r0, #0]
 c007c04:	e7d7      	b.n	c007bb6 <kad_op_sin+0x36>
 c007c06:	785a      	ldrb	r2, [r3, #1]
 c007c08:	07d2      	lsls	r2, r2, #31
 c007c0a:	d5d4      	bpl.n	c007bb6 <kad_op_sin+0x36>
 c007c0c:	2c00      	cmp	r4, #0
 c007c0e:	ddd2      	ble.n	c007bb6 <kad_op_sin+0x36>
 c007c10:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 c007c12:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 c007c14:	6a9e      	ldr	r6, [r3, #40]	@ 0x28
 c007c16:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 c007c1a:	ecb6 0a01 	vldmia	r6!, {s0}
 c007c1e:	f008 fc9b 	bl	c010558 <cosf>
 c007c22:	edd5 7a00 	vldr	s15, [r5]
 c007c26:	ecb7 7a01 	vldmia	r7!, {s14}
 c007c2a:	eee7 7a00 	vfma.f32	s15, s14, s0
 c007c2e:	ece5 7a01 	vstmia	r5!, {s15}
 c007c32:	42ac      	cmp	r4, r5
 c007c34:	d1f1      	bne.n	c007c1a <kad_op_sin+0x9a>
 c007c36:	e7be      	b.n	c007bb6 <kad_op_sin+0x36>
 c007c38:	2401      	movs	r4, #1
 c007c3a:	e7d4      	b.n	c007be6 <kad_op_sin+0x66>

0c007c3c <kad_allocate_internal>:
 c007c3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c007c40:	1e06      	subs	r6, r0, #0
 c007c42:	dd65      	ble.n	c007d10 <kad_allocate_internal+0xd4>
 c007c44:	1f0d      	subs	r5, r1, #4
 c007c46:	462f      	mov	r7, r5
 c007c48:	eb05 0c86 	add.w	ip, r5, r6, lsl #2
 c007c4c:	e001      	b.n	c007c52 <kad_allocate_internal+0x16>
 c007c4e:	4567      	cmp	r7, ip
 c007c50:	d019      	beq.n	c007c86 <kad_allocate_internal+0x4a>
 c007c52:	f857 4f04 	ldr.w	r4, [r7, #4]!
 c007c56:	6860      	ldr	r0, [r4, #4]
 c007c58:	2800      	cmp	r0, #0
 c007c5a:	d0f8      	beq.n	c007c4e <kad_allocate_internal+0x12>
 c007c5c:	dd5a      	ble.n	c007d14 <kad_allocate_internal+0xd8>
 c007c5e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 c007c60:	2300      	movs	r3, #0
 c007c62:	3a04      	subs	r2, #4
 c007c64:	e002      	b.n	c007c6c <kad_allocate_internal+0x30>
 c007c66:	3301      	adds	r3, #1
 c007c68:	4298      	cmp	r0, r3
 c007c6a:	d053      	beq.n	c007d14 <kad_allocate_internal+0xd8>
 c007c6c:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c007c70:	7849      	ldrb	r1, [r1, #1]
 c007c72:	07c9      	lsls	r1, r1, #31
 c007c74:	d5f7      	bpl.n	c007c66 <kad_allocate_internal+0x2a>
 c007c76:	4298      	cmp	r0, r3
 c007c78:	dd4c      	ble.n	c007d14 <kad_allocate_internal+0xd8>
 c007c7a:	7863      	ldrb	r3, [r4, #1]
 c007c7c:	4567      	cmp	r7, ip
 c007c7e:	f043 0301 	orr.w	r3, r3, #1
 c007c82:	7063      	strb	r3, [r4, #1]
 c007c84:	d1e5      	bne.n	c007c52 <kad_allocate_internal+0x16>
 c007c86:	2700      	movs	r7, #0
 c007c88:	f8df 809c 	ldr.w	r8, [pc, #156]	@ c007d28 <kad_allocate_internal+0xec>
 c007c8c:	e002      	b.n	c007c94 <kad_allocate_internal+0x58>
 c007c8e:	3701      	adds	r7, #1
 c007c90:	42be      	cmp	r6, r7
 c007c92:	d03d      	beq.n	c007d10 <kad_allocate_internal+0xd4>
 c007c94:	f855 4f04 	ldr.w	r4, [r5, #4]!
 c007c98:	6863      	ldr	r3, [r4, #4]
 c007c9a:	2b00      	cmp	r3, #0
 c007c9c:	d0f7      	beq.n	c007c8e <kad_allocate_internal+0x52>
 c007c9e:	7823      	ldrb	r3, [r4, #0]
 c007ca0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 c007ca2:	2b00      	cmp	r3, #0
 c007ca4:	d03b      	beq.n	c007d1e <kad_allocate_internal+0xe2>
 c007ca6:	2b01      	cmp	r3, #1
 c007ca8:	6921      	ldr	r1, [r4, #16]
 c007caa:	d00b      	beq.n	c007cc4 <kad_allocate_internal+0x88>
 c007cac:	6962      	ldr	r2, [r4, #20]
 c007cae:	2b02      	cmp	r3, #2
 c007cb0:	fb02 f101 	mul.w	r1, r2, r1
 c007cb4:	d006      	beq.n	c007cc4 <kad_allocate_internal+0x88>
 c007cb6:	69a2      	ldr	r2, [r4, #24]
 c007cb8:	2b03      	cmp	r3, #3
 c007cba:	fb02 f101 	mul.w	r1, r2, r1
 c007cbe:	bf1c      	itt	ne
 c007cc0:	69e3      	ldrne	r3, [r4, #28]
 c007cc2:	4359      	mulne	r1, r3
 c007cc4:	0089      	lsls	r1, r1, #2
 c007cc6:	f007 fa97 	bl	c00f1f8 <realloc>
 c007cca:	7863      	ldrb	r3, [r4, #1]
 c007ccc:	62a0      	str	r0, [r4, #40]	@ 0x28
 c007cce:	07db      	lsls	r3, r3, #31
 c007cd0:	d5dd      	bpl.n	c007c8e <kad_allocate_internal+0x52>
 c007cd2:	7823      	ldrb	r3, [r4, #0]
 c007cd4:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 c007cd6:	b323      	cbz	r3, c007d22 <kad_allocate_internal+0xe6>
 c007cd8:	2b01      	cmp	r3, #1
 c007cda:	6921      	ldr	r1, [r4, #16]
 c007cdc:	d00b      	beq.n	c007cf6 <kad_allocate_internal+0xba>
 c007cde:	6962      	ldr	r2, [r4, #20]
 c007ce0:	2b02      	cmp	r3, #2
 c007ce2:	fb02 f101 	mul.w	r1, r2, r1
 c007ce6:	d006      	beq.n	c007cf6 <kad_allocate_internal+0xba>
 c007ce8:	69a2      	ldr	r2, [r4, #24]
 c007cea:	2b03      	cmp	r3, #3
 c007cec:	fb02 f101 	mul.w	r1, r2, r1
 c007cf0:	bf1c      	itt	ne
 c007cf2:	69e3      	ldrne	r3, [r4, #28]
 c007cf4:	4359      	mulne	r1, r3
 c007cf6:	0089      	lsls	r1, r1, #2
 c007cf8:	f007 fa7e 	bl	c00f1f8 <realloc>
 c007cfc:	8863      	ldrh	r3, [r4, #2]
 c007cfe:	62e0      	str	r0, [r4, #44]	@ 0x2c
 c007d00:	2101      	movs	r1, #1
 c007d02:	4620      	mov	r0, r4
 c007d04:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 c007d08:	3701      	adds	r7, #1
 c007d0a:	4798      	blx	r3
 c007d0c:	42be      	cmp	r6, r7
 c007d0e:	d1c1      	bne.n	c007c94 <kad_allocate_internal+0x58>
 c007d10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c007d14:	7863      	ldrb	r3, [r4, #1]
 c007d16:	f023 0301 	bic.w	r3, r3, #1
 c007d1a:	7063      	strb	r3, [r4, #1]
 c007d1c:	e797      	b.n	c007c4e <kad_allocate_internal+0x12>
 c007d1e:	2104      	movs	r1, #4
 c007d20:	e7d1      	b.n	c007cc6 <kad_allocate_internal+0x8a>
 c007d22:	2104      	movs	r1, #4
 c007d24:	e7e8      	b.n	c007cf8 <kad_allocate_internal+0xbc>
 c007d26:	bf00      	nop
 c007d28:	30000004 	.word	0x30000004

0c007d2c <kad_op_dropout>:
 c007d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c007d30:	ed2d 8b02 	vpush	{d8}
 c007d34:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c007d36:	b087      	sub	sp, #28
 c007d38:	e9d3 6200 	ldrd	r6, r2, [r3]
 c007d3c:	7813      	ldrb	r3, [r2, #0]
 c007d3e:	2b00      	cmp	r3, #0
 c007d40:	f040 8171 	bne.w	c008026 <kad_op_dropout+0x2fa>
 c007d44:	7834      	ldrb	r4, [r6, #0]
 c007d46:	4682      	mov	sl, r0
 c007d48:	2c00      	cmp	r4, #0
 c007d4a:	d060      	beq.n	c007e0e <kad_op_dropout+0xe2>
 c007d4c:	2c01      	cmp	r4, #1
 c007d4e:	f8d6 b010 	ldr.w	fp, [r6, #16]
 c007d52:	d00c      	beq.n	c007d6e <kad_op_dropout+0x42>
 c007d54:	6973      	ldr	r3, [r6, #20]
 c007d56:	2c02      	cmp	r4, #2
 c007d58:	fb03 fb0b 	mul.w	fp, r3, fp
 c007d5c:	d007      	beq.n	c007d6e <kad_op_dropout+0x42>
 c007d5e:	69b3      	ldr	r3, [r6, #24]
 c007d60:	2c03      	cmp	r4, #3
 c007d62:	fb03 fb0b 	mul.w	fp, r3, fp
 c007d66:	d002      	beq.n	c007d6e <kad_op_dropout+0x42>
 c007d68:	69f3      	ldr	r3, [r6, #28]
 c007d6a:	fb03 fb0b 	mul.w	fp, r3, fp
 c007d6e:	2904      	cmp	r1, #4
 c007d70:	d016      	beq.n	c007da0 <kad_op_dropout+0x74>
 c007d72:	2901      	cmp	r1, #1
 c007d74:	d009      	beq.n	c007d8a <kad_op_dropout+0x5e>
 c007d76:	2902      	cmp	r1, #2
 c007d78:	d04f      	beq.n	c007e1a <kad_op_dropout+0xee>
 c007d7a:	2903      	cmp	r1, #3
 c007d7c:	d01e      	beq.n	c007dbc <kad_op_dropout+0x90>
 c007d7e:	2000      	movs	r0, #0
 c007d80:	b007      	add	sp, #28
 c007d82:	ecbd 8b02 	vpop	{d8}
 c007d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c007d8a:	7873      	ldrb	r3, [r6, #1]
 c007d8c:	07dc      	lsls	r4, r3, #31
 c007d8e:	d5f6      	bpl.n	c007d7e <kad_op_dropout+0x52>
 c007d90:	4659      	mov	r1, fp
 c007d92:	f8da 0034 	ldr.w	r0, [sl, #52]	@ 0x34
 c007d96:	f007 fa2f 	bl	c00f1f8 <realloc>
 c007d9a:	f8ca 0034 	str.w	r0, [sl, #52]	@ 0x34
 c007d9e:	e7ee      	b.n	c007d7e <kad_op_dropout+0x52>
 c007da0:	4650      	mov	r0, sl
 c007da2:	00a2      	lsls	r2, r4, #2
 c007da4:	f106 0110 	add.w	r1, r6, #16
 c007da8:	f800 4b10 	strb.w	r4, [r0], #16
 c007dac:	f007 fd0f 	bl	c00f7ce <memcpy>
 c007db0:	2000      	movs	r0, #0
 c007db2:	b007      	add	sp, #28
 c007db4:	ecbd 8b02 	vpop	{d8}
 c007db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c007dbc:	7873      	ldrb	r3, [r6, #1]
 c007dbe:	07d9      	lsls	r1, r3, #31
 c007dc0:	d5dd      	bpl.n	c007d7e <kad_op_dropout+0x52>
 c007dc2:	6871      	ldr	r1, [r6, #4]
 c007dc4:	2900      	cmp	r1, #0
 c007dc6:	f040 8122 	bne.w	c00800e <kad_op_dropout+0x2e2>
 c007dca:	079b      	lsls	r3, r3, #30
 c007dcc:	f000 811f 	beq.w	c00800e <kad_op_dropout+0x2e2>
 c007dd0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 c007dd4:	f1bb 0f00 	cmp.w	fp, #0
 c007dd8:	f8da 3034 	ldr.w	r3, [sl, #52]	@ 0x34
 c007ddc:	ddcf      	ble.n	c007d7e <kad_op_dropout+0x52>
 c007dde:	2200      	movs	r2, #0
 c007de0:	3b01      	subs	r3, #1
 c007de2:	449b      	add	fp, r3
 c007de4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 c007de8:	b161      	cbz	r1, c007e04 <kad_op_dropout+0xd8>
 c007dea:	6af1      	ldr	r1, [r6, #44]	@ 0x2c
 c007dec:	f8da 002c 	ldr.w	r0, [sl, #44]	@ 0x2c
 c007df0:	4411      	add	r1, r2
 c007df2:	4410      	add	r0, r2
 c007df4:	edd1 7a00 	vldr	s15, [r1]
 c007df8:	ed90 7a00 	vldr	s14, [r0]
 c007dfc:	eee7 7a26 	vfma.f32	s15, s14, s13
 c007e00:	edc1 7a00 	vstr	s15, [r1]
 c007e04:	459b      	cmp	fp, r3
 c007e06:	f102 0204 	add.w	r2, r2, #4
 c007e0a:	d1eb      	bne.n	c007de4 <kad_op_dropout+0xb8>
 c007e0c:	e7b7      	b.n	c007d7e <kad_op_dropout+0x52>
 c007e0e:	2904      	cmp	r1, #4
 c007e10:	f000 808d 	beq.w	c007f2e <kad_op_dropout+0x202>
 c007e14:	f04f 0b01 	mov.w	fp, #1
 c007e18:	e7ab      	b.n	c007d72 <kad_op_dropout+0x46>
 c007e1a:	6873      	ldr	r3, [r6, #4]
 c007e1c:	b91b      	cbnz	r3, c007e26 <kad_op_dropout+0xfa>
 c007e1e:	7873      	ldrb	r3, [r6, #1]
 c007e20:	0798      	lsls	r0, r3, #30
 c007e22:	f040 8086 	bne.w	c007f32 <kad_op_dropout+0x206>
 c007e26:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 c007e28:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 c007e2c:	6818      	ldr	r0, [r3, #0]
 c007e2e:	ee07 0a10 	vmov	s14, r0
 c007e32:	ee37 7ac7 	vsub.f32	s14, s15, s14
 c007e36:	ee87 8a87 	vdiv.f32	s16, s15, s14
 c007e3a:	f1bb 0f00 	cmp.w	fp, #0
 c007e3e:	f8da 7034 	ldr.w	r7, [sl, #52]	@ 0x34
 c007e42:	dd9c      	ble.n	c007d7e <kad_op_dropout+0x52>
 c007e44:	f7f8 fb8a 	bl	c00055c <__aeabi_f2d>
 c007e48:	e9cd 0102 	strd	r0, r1, [sp, #8]
 c007e4c:	2f00      	cmp	r7, #0
 c007e4e:	d074      	beq.n	c007f3a <kad_op_dropout+0x20e>
 c007e50:	2400      	movs	r4, #0
 c007e52:	eddf 8a78 	vldr	s17, [pc, #480]	@ c008034 <kad_op_dropout+0x308>
 c007e56:	eb07 030b 	add.w	r3, r7, fp
 c007e5a:	9300      	str	r3, [sp, #0]
 c007e5c:	9604      	str	r6, [sp, #16]
 c007e5e:	f8da 1030 	ldr.w	r1, [sl, #48]	@ 0x30
 c007e62:	4b75      	ldr	r3, [pc, #468]	@ (c008038 <kad_op_dropout+0x30c>)
 c007e64:	2200      	movs	r2, #0
 c007e66:	2900      	cmp	r1, #0
 c007e68:	bf08      	it	eq
 c007e6a:	4619      	moveq	r1, r3
 c007e6c:	f8d1 c000 	ldr.w	ip, [r1]
 c007e70:	68ce      	ldr	r6, [r1, #12]
 c007e72:	e9d1 0b01 	ldrd	r0, fp, [r1, #4]
 c007e76:	eb1c 050b 	adds.w	r5, ip, fp
 c007e7a:	eb40 0e06 	adc.w	lr, r0, r6
 c007e7e:	0b2d      	lsrs	r5, r5, #12
 c007e80:	ea45 580e 	orr.w	r8, r5, lr, lsl #20
 c007e84:	ea4f 3e1e 	mov.w	lr, lr, lsr #12
 c007e88:	f04e 597f 	orr.w	r9, lr, #1069547520	@ 0x3fc00000
 c007e8c:	ea4f 2e5c 	mov.w	lr, ip, lsr #9
 c007e90:	ea8c 0b0b 	eor.w	fp, ip, fp
 c007e94:	ea4e 5ec0 	orr.w	lr, lr, r0, lsl #23
 c007e98:	ea8e 0e0b 	eor.w	lr, lr, fp
 c007e9c:	ea8e 3e8b 	eor.w	lr, lr, fp, lsl #14
 c007ea0:	f8c1 e000 	str.w	lr, [r1]
 c007ea4:	ea4f 2e50 	mov.w	lr, r0, lsr #9
 c007ea8:	ea80 0506 	eor.w	r5, r0, r6
 c007eac:	ea4e 5ecc 	orr.w	lr, lr, ip, lsl #23
 c007eb0:	ea8e 0e05 	eor.w	lr, lr, r5
 c007eb4:	03ad      	lsls	r5, r5, #14
 c007eb6:	ea45 459b 	orr.w	r5, r5, fp, lsr #18
 c007eba:	ea8e 0505 	eor.w	r5, lr, r5
 c007ebe:	604d      	str	r5, [r1, #4]
 c007ec0:	ea4f 751c 	mov.w	r5, ip, lsr #28
 c007ec4:	ea45 1500 	orr.w	r5, r5, r0, lsl #4
 c007ec8:	0f00      	lsrs	r0, r0, #28
 c007eca:	ea40 100c 	orr.w	r0, r0, ip, lsl #4
 c007ece:	f449 1940 	orr.w	r9, r9, #3145728	@ 0x300000
 c007ed2:	60c8      	str	r0, [r1, #12]
 c007ed4:	4b59      	ldr	r3, [pc, #356]	@ (c00803c <kad_op_dropout+0x310>)
 c007ed6:	608d      	str	r5, [r1, #8]
 c007ed8:	4640      	mov	r0, r8
 c007eda:	4649      	mov	r1, r9
 c007edc:	f7f8 f9de 	bl	c00029c <__aeabi_dsub>
 c007ee0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 c007ee4:	f7f8 fe18 	bl	c000b18 <__aeabi_dcmpge>
 c007ee8:	b1a0      	cbz	r0, c007f14 <kad_op_dropout+0x1e8>
 c007eea:	9b04      	ldr	r3, [sp, #16]
 c007eec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c007eee:	4423      	add	r3, r4
 c007ef0:	edd3 7a00 	vldr	s15, [r3]
 c007ef4:	ee67 7a88 	vmul.f32	s15, s15, s16
 c007ef8:	f8da 3028 	ldr.w	r3, [sl, #40]	@ 0x28
 c007efc:	4423      	add	r3, r4
 c007efe:	edc3 7a00 	vstr	s15, [r3]
 c007f02:	f04f 0301 	mov.w	r3, #1
 c007f06:	f807 3b01 	strb.w	r3, [r7], #1
 c007f0a:	9b00      	ldr	r3, [sp, #0]
 c007f0c:	3404      	adds	r4, #4
 c007f0e:	429f      	cmp	r7, r3
 c007f10:	d1a5      	bne.n	c007e5e <kad_op_dropout+0x132>
 c007f12:	e734      	b.n	c007d7e <kad_op_dropout+0x52>
 c007f14:	f8da 3028 	ldr.w	r3, [sl, #40]	@ 0x28
 c007f18:	4423      	add	r3, r4
 c007f1a:	edc3 8a00 	vstr	s17, [r3]
 c007f1e:	9b00      	ldr	r3, [sp, #0]
 c007f20:	f807 0b01 	strb.w	r0, [r7], #1
 c007f24:	429f      	cmp	r7, r3
 c007f26:	f104 0404 	add.w	r4, r4, #4
 c007f2a:	d198      	bne.n	c007e5e <kad_op_dropout+0x132>
 c007f2c:	e727      	b.n	c007d7e <kad_op_dropout+0x52>
 c007f2e:	7004      	strb	r4, [r0, #0]
 c007f30:	e725      	b.n	c007d7e <kad_op_dropout+0x52>
 c007f32:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 c007f36:	2000      	movs	r0, #0
 c007f38:	e77f      	b.n	c007e3a <kad_op_dropout+0x10e>
 c007f3a:	f8da 2028 	ldr.w	r2, [sl, #40]	@ 0x28
 c007f3e:	f8da 3030 	ldr.w	r3, [sl, #48]	@ 0x30
 c007f42:	9204      	str	r2, [sp, #16]
 c007f44:	4a3c      	ldr	r2, [pc, #240]	@ (c008038 <kad_op_dropout+0x30c>)
 c007f46:	463c      	mov	r4, r7
 c007f48:	2b00      	cmp	r3, #0
 c007f4a:	bf18      	it	ne
 c007f4c:	461a      	movne	r2, r3
 c007f4e:	eddf 8a39 	vldr	s17, [pc, #228]	@ c008034 <kad_op_dropout+0x308>
 c007f52:	e9d2 1300 	ldrd	r1, r3, [r2]
 c007f56:	e9d2 7502 	ldrd	r7, r5, [r2, #8]
 c007f5a:	9205      	str	r2, [sp, #20]
 c007f5c:	e00e      	b.n	c007f7c <kad_op_dropout+0x250>
 c007f5e:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 c007f60:	3401      	adds	r4, #1
 c007f62:	4453      	add	r3, sl
 c007f64:	edd3 7a00 	vldr	s15, [r3]
 c007f68:	ee68 7a27 	vmul.f32	s15, s16, s15
 c007f6c:	9b04      	ldr	r3, [sp, #16]
 c007f6e:	45a3      	cmp	fp, r4
 c007f70:	449a      	add	sl, r3
 c007f72:	edca 7a00 	vstr	s15, [sl]
 c007f76:	d054      	beq.n	c008022 <kad_op_dropout+0x2f6>
 c007f78:	4649      	mov	r1, r9
 c007f7a:	4643      	mov	r3, r8
 c007f7c:	19c8      	adds	r0, r1, r7
 c007f7e:	eb43 0205 	adc.w	r2, r3, r5
 c007f82:	ea4f 2951 	mov.w	r9, r1, lsr #9
 c007f86:	ea4f 2853 	mov.w	r8, r3, lsr #9
 c007f8a:	0b00      	lsrs	r0, r0, #12
 c007f8c:	404f      	eors	r7, r1
 c007f8e:	ea40 5002 	orr.w	r0, r0, r2, lsl #20
 c007f92:	405d      	eors	r5, r3
 c007f94:	ea49 59c3 	orr.w	r9, r9, r3, lsl #23
 c007f98:	ea48 58c1 	orr.w	r8, r8, r1, lsl #23
 c007f9c:	0b12      	lsrs	r2, r2, #12
 c007f9e:	ea89 0907 	eor.w	r9, r9, r7
 c007fa2:	ea88 0805 	eor.w	r8, r8, r5
 c007fa6:	f042 527f 	orr.w	r2, r2, #1069547520	@ 0x3fc00000
 c007faa:	03ad      	lsls	r5, r5, #14
 c007fac:	ea45 4597 	orr.w	r5, r5, r7, lsr #18
 c007fb0:	f442 1240 	orr.w	r2, r2, #3145728	@ 0x300000
 c007fb4:	ea89 3987 	eor.w	r9, r9, r7, lsl #14
 c007fb8:	0f0f      	lsrs	r7, r1, #28
 c007fba:	9201      	str	r2, [sp, #4]
 c007fbc:	9000      	str	r0, [sp, #0]
 c007fbe:	ea47 1703 	orr.w	r7, r7, r3, lsl #4
 c007fc2:	0f1b      	lsrs	r3, r3, #28
 c007fc4:	2200      	movs	r2, #0
 c007fc6:	ea88 0805 	eor.w	r8, r8, r5
 c007fca:	ea43 1501 	orr.w	r5, r3, r1, lsl #4
 c007fce:	4b1b      	ldr	r3, [pc, #108]	@ (c00803c <kad_op_dropout+0x310>)
 c007fd0:	e9dd 0100 	ldrd	r0, r1, [sp]
 c007fd4:	f7f8 f962 	bl	c00029c <__aeabi_dsub>
 c007fd8:	4602      	mov	r2, r0
 c007fda:	460b      	mov	r3, r1
 c007fdc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 c007fe0:	ea4f 0a84 	mov.w	sl, r4, lsl #2
 c007fe4:	f7f8 fd8e 	bl	c000b04 <__aeabi_dcmple>
 c007fe8:	2800      	cmp	r0, #0
 c007fea:	d1b8      	bne.n	c007f5e <kad_op_dropout+0x232>
 c007fec:	9b04      	ldr	r3, [sp, #16]
 c007fee:	3401      	adds	r4, #1
 c007ff0:	449a      	add	sl, r3
 c007ff2:	45a3      	cmp	fp, r4
 c007ff4:	edca 8a00 	vstr	s17, [sl]
 c007ff8:	d1be      	bne.n	c007f78 <kad_op_dropout+0x24c>
 c007ffa:	eddf 7a0e 	vldr	s15, [pc, #56]	@ c008034 <kad_op_dropout+0x308>
 c007ffe:	9a05      	ldr	r2, [sp, #20]
 c008000:	e9c2 9800 	strd	r9, r8, [r2]
 c008004:	e9c2 7502 	strd	r7, r5, [r2, #8]
 c008008:	edca 7a00 	vstr	s15, [sl]
 c00800c:	e6b7      	b.n	c007d7e <kad_op_dropout+0x52>
 c00800e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 c008010:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 c008014:	edd3 7a00 	vldr	s15, [r3]
 c008018:	ee77 7a67 	vsub.f32	s15, s14, s15
 c00801c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 c008020:	e6d8      	b.n	c007dd4 <kad_op_dropout+0xa8>
 c008022:	9a05      	ldr	r2, [sp, #20]
 c008024:	e7ec      	b.n	c008000 <kad_op_dropout+0x2d4>
 c008026:	f44f 61a4 	mov.w	r1, #1312	@ 0x520
 c00802a:	4b05      	ldr	r3, [pc, #20]	@ (c008040 <kad_op_dropout+0x314>)
 c00802c:	4a05      	ldr	r2, [pc, #20]	@ (c008044 <kad_op_dropout+0x318>)
 c00802e:	4806      	ldr	r0, [pc, #24]	@ (c008048 <kad_op_dropout+0x31c>)
 c008030:	f006 ffea 	bl	c00f008 <__assert_func>
 c008034:	00000000 	.word	0x00000000
 c008038:	30000108 	.word	0x30000108
 c00803c:	3ff00000 	.word	0x3ff00000
 c008040:	0c011bac 	.word	0x0c011bac
 c008044:	0c011c94 	.word	0x0c011c94
 c008048:	0c011b04 	.word	0x0c011b04

0c00804c <kad_op_cmul>:
 c00804c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c008050:	4604      	mov	r4, r0
 c008052:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 c008054:	4608      	mov	r0, r1
 c008056:	e9d3 6500 	ldrd	r6, r5, [r3]
 c00805a:	782f      	ldrb	r7, [r5, #0]
 c00805c:	f896 e000 	ldrb.w	lr, [r6]
 c008060:	1cfa      	adds	r2, r7, #3
 c008062:	f10e 0303 	add.w	r3, lr, #3
 c008066:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 c00806a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 c00806e:	b08f      	sub	sp, #60	@ 0x3c
 c008070:	429a      	cmp	r2, r3
 c008072:	bfb8      	it	lt
 c008074:	461a      	movlt	r2, r3
 c008076:	1e79      	subs	r1, r7, #1
 c008078:	4691      	mov	r9, r2
 c00807a:	f1be 0f00 	cmp.w	lr, #0
 c00807e:	f000 8196 	beq.w	c0083ae <kad_op_cmul+0x362>
 c008082:	2201      	movs	r2, #1
 c008084:	f10e 33ff 	add.w	r3, lr, #4294967295
 c008088:	f106 0810 	add.w	r8, r6, #16
 c00808c:	4591      	cmp	r9, r2
 c00808e:	dc63      	bgt.n	c008158 <kad_op_cmul+0x10c>
 c008090:	1c4b      	adds	r3, r1, #1
 c008092:	f000 8198 	beq.w	c0083c6 <kad_op_cmul+0x37a>
 c008096:	f04f 0c01 	mov.w	ip, #1
 c00809a:	4663      	mov	r3, ip
 c00809c:	f105 0810 	add.w	r8, r5, #16
 c0080a0:	4599      	cmp	r9, r3
 c0080a2:	dc35      	bgt.n	c008110 <kad_op_cmul+0xc4>
 c0080a4:	469c      	mov	ip, r3
 c0080a6:	f1be 0f00 	cmp.w	lr, #0
 c0080aa:	d03d      	beq.n	c008128 <kad_op_cmul+0xdc>
 c0080ac:	f1be 0f01 	cmp.w	lr, #1
 c0080b0:	6931      	ldr	r1, [r6, #16]
 c0080b2:	dd0e      	ble.n	c0080d2 <kad_op_cmul+0x86>
 c0080b4:	6973      	ldr	r3, [r6, #20]
 c0080b6:	f1be 0f02 	cmp.w	lr, #2
 c0080ba:	fb03 f101 	mul.w	r1, r3, r1
 c0080be:	d008      	beq.n	c0080d2 <kad_op_cmul+0x86>
 c0080c0:	69b3      	ldr	r3, [r6, #24]
 c0080c2:	f1be 0f03 	cmp.w	lr, #3
 c0080c6:	fb03 f101 	mul.w	r1, r3, r1
 c0080ca:	d002      	beq.n	c0080d2 <kad_op_cmul+0x86>
 c0080cc:	69f3      	ldr	r3, [r6, #28]
 c0080ce:	fb03 f101 	mul.w	r1, r3, r1
 c0080d2:	fb91 f3f2 	sdiv	r3, r1, r2
 c0080d6:	9302      	str	r3, [sp, #8]
 c0080d8:	b367      	cbz	r7, c008134 <kad_op_cmul+0xe8>
 c0080da:	2f01      	cmp	r7, #1
 c0080dc:	6929      	ldr	r1, [r5, #16]
 c0080de:	d00b      	beq.n	c0080f8 <kad_op_cmul+0xac>
 c0080e0:	696b      	ldr	r3, [r5, #20]
 c0080e2:	2f02      	cmp	r7, #2
 c0080e4:	fb03 f101 	mul.w	r1, r3, r1
 c0080e8:	d006      	beq.n	c0080f8 <kad_op_cmul+0xac>
 c0080ea:	69ab      	ldr	r3, [r5, #24]
 c0080ec:	2f03      	cmp	r7, #3
 c0080ee:	fb03 f101 	mul.w	r1, r3, r1
 c0080f2:	bf1c      	itt	ne
 c0080f4:	69ef      	ldrne	r7, [r5, #28]
 c0080f6:	4379      	mulne	r1, r7
 c0080f8:	2804      	cmp	r0, #4
 c0080fa:	fb91 fafc 	sdiv	sl, r1, ip
 c0080fe:	d022      	beq.n	c008146 <kad_op_cmul+0xfa>
 c008100:	2802      	cmp	r0, #2
 c008102:	d07f      	beq.n	c008204 <kad_op_cmul+0x1b8>
 c008104:	2803      	cmp	r0, #3
 c008106:	d030      	beq.n	c00816a <kad_op_cmul+0x11e>
 c008108:	2000      	movs	r0, #0
 c00810a:	b00f      	add	sp, #60	@ 0x3c
 c00810c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c008110:	f858 c021 	ldr.w	ip, [r8, r1, lsl #2]
 c008114:	3901      	subs	r1, #1
 c008116:	f1b1 3fff 	cmp.w	r1, #4294967295
 c00811a:	fb0c f303 	mul.w	r3, ip, r3
 c00811e:	d1bf      	bne.n	c0080a0 <kad_op_cmul+0x54>
 c008120:	469c      	mov	ip, r3
 c008122:	f1be 0f00 	cmp.w	lr, #0
 c008126:	d1c1      	bne.n	c0080ac <kad_op_cmul+0x60>
 c008128:	2101      	movs	r1, #1
 c00812a:	fb91 f3f2 	sdiv	r3, r1, r2
 c00812e:	9302      	str	r3, [sp, #8]
 c008130:	2f00      	cmp	r7, #0
 c008132:	d1d2      	bne.n	c0080da <kad_op_cmul+0x8e>
 c008134:	f10c 0101 	add.w	r1, ip, #1
 c008138:	2902      	cmp	r1, #2
 c00813a:	bf94      	ite	ls
 c00813c:	46e2      	movls	sl, ip
 c00813e:	f04f 0a00 	movhi.w	sl, #0
 c008142:	2804      	cmp	r0, #4
 c008144:	d1dc      	bne.n	c008100 <kad_op_cmul+0xb4>
 c008146:	4594      	cmp	ip, r2
 c008148:	f040 8140 	bne.w	c0083cc <kad_op_cmul+0x380>
 c00814c:	2302      	movs	r3, #2
 c00814e:	9a02      	ldr	r2, [sp, #8]
 c008150:	7023      	strb	r3, [r4, #0]
 c008152:	e9c4 2a04 	strd	r2, sl, [r4, #16]
 c008156:	e7d7      	b.n	c008108 <kad_op_cmul+0xbc>
 c008158:	f858 c023 	ldr.w	ip, [r8, r3, lsl #2]
 c00815c:	3b01      	subs	r3, #1
 c00815e:	f1b3 3fff 	cmp.w	r3, #4294967295
 c008162:	fb0c f202 	mul.w	r2, ip, r2
 c008166:	d093      	beq.n	c008090 <kad_op_cmul+0x44>
 c008168:	e790      	b.n	c00808c <kad_op_cmul+0x40>
 c00816a:	7873      	ldrb	r3, [r6, #1]
 c00816c:	07da      	lsls	r2, r3, #31
 c00816e:	f140 80d8 	bpl.w	c008322 <kad_op_cmul+0x2d6>
 c008172:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c008174:	9303      	str	r3, [sp, #12]
 c008176:	2b00      	cmp	r3, #0
 c008178:	f000 80d3 	beq.w	c008322 <kad_op_cmul+0x2d6>
 c00817c:	9b02      	ldr	r3, [sp, #8]
 c00817e:	2b00      	cmp	r3, #0
 c008180:	f340 80cf 	ble.w	c008322 <kad_op_cmul+0x2d6>
 c008184:	f1ba 0f00 	cmp.w	sl, #0
 c008188:	f340 80cb 	ble.w	c008322 <kad_op_cmul+0x2d6>
 c00818c:	f1b9 0f00 	cmp.w	r9, #0
 c008190:	f340 80c7 	ble.w	c008322 <kad_op_cmul+0x2d6>
 c008194:	2300      	movs	r3, #0
 c008196:	6af7      	ldr	r7, [r6, #44]	@ 0x2c
 c008198:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 c00819a:	ea4f 018a 	mov.w	r1, sl, lsl #2
 c00819e:	eb07 0089 	add.w	r0, r7, r9, lsl #2
 c0081a2:	9205      	str	r2, [sp, #20]
 c0081a4:	9104      	str	r1, [sp, #16]
 c0081a6:	eb02 088a 	add.w	r8, r2, sl, lsl #2
 c0081aa:	4601      	mov	r1, r0
 c0081ac:	461a      	mov	r2, r3
 c0081ae:	ea4f 0b89 	mov.w	fp, r9, lsl #2
 c0081b2:	9701      	str	r7, [sp, #4]
 c0081b4:	f04f 0e00 	mov.w	lr, #0
 c0081b8:	9f05      	ldr	r7, [sp, #20]
 c0081ba:	e9cd 6506 	strd	r6, r5, [sp, #24]
 c0081be:	eb07 0c83 	add.w	ip, r7, r3, lsl #2
 c0081c2:	9f01      	ldr	r7, [sp, #4]
 c0081c4:	ecfc 6a01 	vldmia	ip!, {s13}
 c0081c8:	463d      	mov	r5, r7
 c0081ca:	9e03      	ldr	r6, [sp, #12]
 c0081cc:	4476      	add	r6, lr
 c0081ce:	edd5 7a00 	vldr	s15, [r5]
 c0081d2:	ecb6 7a01 	vldmia	r6!, {s14}
 c0081d6:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0081da:	ece5 7a01 	vstmia	r5!, {s15}
 c0081de:	428d      	cmp	r5, r1
 c0081e0:	d1f5      	bne.n	c0081ce <kad_op_cmul+0x182>
 c0081e2:	45c4      	cmp	ip, r8
 c0081e4:	44de      	add	lr, fp
 c0081e6:	d1ed      	bne.n	c0081c4 <kad_op_cmul+0x178>
 c0081e8:	e9dd 6506 	ldrd	r6, r5, [sp, #24]
 c0081ec:	9f04      	ldr	r7, [sp, #16]
 c0081ee:	3201      	adds	r2, #1
 c0081f0:	44b8      	add	r8, r7
 c0081f2:	9f02      	ldr	r7, [sp, #8]
 c0081f4:	4459      	add	r1, fp
 c0081f6:	42ba      	cmp	r2, r7
 c0081f8:	4453      	add	r3, sl
 c0081fa:	9001      	str	r0, [sp, #4]
 c0081fc:	f000 8091 	beq.w	c008322 <kad_op_cmul+0x2d6>
 c008200:	4458      	add	r0, fp
 c008202:	e7d7      	b.n	c0081b4 <kad_op_cmul+0x168>
 c008204:	9f02      	ldr	r7, [sp, #8]
 c008206:	2100      	movs	r1, #0
 c008208:	fb07 f20a 	mul.w	r2, r7, sl
 c00820c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 c00820e:	0092      	lsls	r2, r2, #2
 c008210:	f007 fa0e 	bl	c00f630 <memset>
 c008214:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 c008216:	2b00      	cmp	r3, #0
 c008218:	f43f af76 	beq.w	c008108 <kad_op_cmul+0xbc>
 c00821c:	6aad      	ldr	r5, [r5, #40]	@ 0x28
 c00821e:	2d00      	cmp	r5, #0
 c008220:	f43f af72 	beq.w	c008108 <kad_op_cmul+0xbc>
 c008224:	2f00      	cmp	r7, #0
 c008226:	f77f af6f 	ble.w	c008108 <kad_op_cmul+0xbc>
 c00822a:	f1ba 0f00 	cmp.w	sl, #0
 c00822e:	ea4f 0889 	mov.w	r8, r9, lsl #2
 c008232:	f77f af69 	ble.w	c008108 <kad_op_cmul+0xbc>
 c008236:	2200      	movs	r2, #0
 c008238:	ea4f 1c0a 	mov.w	ip, sl, lsl #4
 c00823c:	4661      	mov	r1, ip
 c00823e:	9304      	str	r3, [sp, #16]
 c008240:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 c008242:	9205      	str	r2, [sp, #20]
 c008244:	9307      	str	r3, [sp, #28]
 c008246:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 c00824a:	009c      	lsls	r4, r3, #2
 c00824c:	ea4f 1389 	mov.w	r3, r9, lsl #6
 c008250:	9308      	str	r3, [sp, #32]
 c008252:	ea4f 0b8a 	mov.w	fp, sl, lsl #2
 c008256:	9203      	str	r2, [sp, #12]
 c008258:	9e02      	ldr	r6, [sp, #8]
 c00825a:	9b03      	ldr	r3, [sp, #12]
 c00825c:	4632      	mov	r2, r6
 c00825e:	f103 0010 	add.w	r0, r3, #16
 c008262:	330f      	adds	r3, #15
 c008264:	42b3      	cmp	r3, r6
 c008266:	bfb8      	it	lt
 c008268:	4602      	movlt	r2, r0
 c00826a:	900b      	str	r0, [sp, #44]	@ 0x2c
 c00826c:	46ac      	mov	ip, r5
 c00826e:	2300      	movs	r3, #0
 c008270:	4620      	mov	r0, r4
 c008272:	4696      	mov	lr, r2
 c008274:	9a04      	ldr	r2, [sp, #16]
 c008276:	e9cd 5109 	strd	r5, r1, [sp, #36]	@ 0x24
 c00827a:	4442      	add	r2, r8
 c00827c:	9206      	str	r2, [sp, #24]
 c00827e:	461a      	mov	r2, r3
 c008280:	9903      	ldr	r1, [sp, #12]
 c008282:	3310      	adds	r3, #16
 c008284:	f102 050f 	add.w	r5, r2, #15
 c008288:	4555      	cmp	r5, sl
 c00828a:	bfb4      	ite	lt
 c00828c:	461c      	movlt	r4, r3
 c00828e:	4654      	movge	r4, sl
 c008290:	458e      	cmp	lr, r1
 c008292:	dd33      	ble.n	c0082fc <kad_op_cmul+0x2b0>
 c008294:	4294      	cmp	r4, r2
 c008296:	dd31      	ble.n	c0082fc <kad_op_cmul+0x2b0>
 c008298:	9905      	ldr	r1, [sp, #20]
 c00829a:	1b12      	subs	r2, r2, r4
 c00829c:	440c      	add	r4, r1
 c00829e:	9907      	ldr	r1, [sp, #28]
 c0082a0:	e9cd 3a0c 	strd	r3, sl, [sp, #48]	@ 0x30
 c0082a4:	eb01 0584 	add.w	r5, r1, r4, lsl #2
 c0082a8:	4601      	mov	r1, r0
 c0082aa:	9c06      	ldr	r4, [sp, #24]
 c0082ac:	0097      	lsls	r7, r2, #2
 c0082ae:	e9dd 2603 	ldrd	r2, r6, [sp, #12]
 c0082b2:	46e2      	mov	sl, ip
 c0082b4:	1978      	adds	r0, r7, r5
 c0082b6:	9201      	str	r2, [sp, #4]
 c0082b8:	f1b9 0f00 	cmp.w	r9, #0
 c0082bc:	eddf 7a45 	vldr	s15, [pc, #276]	@ c0083d4 <kad_op_cmul+0x388>
 c0082c0:	dd09      	ble.n	c0082d6 <kad_op_cmul+0x28a>
 c0082c2:	4652      	mov	r2, sl
 c0082c4:	4633      	mov	r3, r6
 c0082c6:	ecf3 6a01 	vldmia	r3!, {s13}
 c0082ca:	ecb2 7a01 	vldmia	r2!, {s14}
 c0082ce:	42a3      	cmp	r3, r4
 c0082d0:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0082d4:	d1f7      	bne.n	c0082c6 <kad_op_cmul+0x27a>
 c0082d6:	ed90 7a00 	vldr	s14, [r0]
 c0082da:	ee77 7a27 	vadd.f32	s15, s14, s15
 c0082de:	ece0 7a01 	vstmia	r0!, {s15}
 c0082e2:	4285      	cmp	r5, r0
 c0082e4:	44c2      	add	sl, r8
 c0082e6:	d1e7      	bne.n	c0082b8 <kad_op_cmul+0x26c>
 c0082e8:	9a01      	ldr	r2, [sp, #4]
 c0082ea:	445d      	add	r5, fp
 c0082ec:	3201      	adds	r2, #1
 c0082ee:	4572      	cmp	r2, lr
 c0082f0:	4446      	add	r6, r8
 c0082f2:	4444      	add	r4, r8
 c0082f4:	d1dd      	bne.n	c0082b2 <kad_op_cmul+0x266>
 c0082f6:	e9dd 3a0c 	ldrd	r3, sl, [sp, #48]	@ 0x30
 c0082fa:	4608      	mov	r0, r1
 c0082fc:	9a08      	ldr	r2, [sp, #32]
 c0082fe:	4553      	cmp	r3, sl
 c008300:	4494      	add	ip, r2
 c008302:	dbbc      	blt.n	c00827e <kad_op_cmul+0x232>
 c008304:	e9dd 5109 	ldrd	r5, r1, [sp, #36]	@ 0x24
 c008308:	4604      	mov	r4, r0
 c00830a:	9b05      	ldr	r3, [sp, #20]
 c00830c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c00830e:	440b      	add	r3, r1
 c008310:	9a02      	ldr	r2, [sp, #8]
 c008312:	9305      	str	r3, [sp, #20]
 c008314:	9b06      	ldr	r3, [sp, #24]
 c008316:	4290      	cmp	r0, r2
 c008318:	4423      	add	r3, r4
 c00831a:	9003      	str	r0, [sp, #12]
 c00831c:	9304      	str	r3, [sp, #16]
 c00831e:	db9b      	blt.n	c008258 <kad_op_cmul+0x20c>
 c008320:	e6f2      	b.n	c008108 <kad_op_cmul+0xbc>
 c008322:	786b      	ldrb	r3, [r5, #1]
 c008324:	07db      	lsls	r3, r3, #31
 c008326:	f57f aeef 	bpl.w	c008108 <kad_op_cmul+0xbc>
 c00832a:	6ab0      	ldr	r0, [r6, #40]	@ 0x28
 c00832c:	2800      	cmp	r0, #0
 c00832e:	f43f aeeb 	beq.w	c008108 <kad_op_cmul+0xbc>
 c008332:	9b02      	ldr	r3, [sp, #8]
 c008334:	2b00      	cmp	r3, #0
 c008336:	f77f aee7 	ble.w	c008108 <kad_op_cmul+0xbc>
 c00833a:	f1ba 0f00 	cmp.w	sl, #0
 c00833e:	f77f aee3 	ble.w	c008108 <kad_op_cmul+0xbc>
 c008342:	f1b9 0f00 	cmp.w	r9, #0
 c008346:	f77f aedf 	ble.w	c008108 <kad_op_cmul+0xbc>
 c00834a:	2200      	movs	r2, #0
 c00834c:	ea4f 038a 	mov.w	r3, sl, lsl #2
 c008350:	f8d4 e02c 	ldr.w	lr, [r4, #44]	@ 0x2c
 c008354:	4619      	mov	r1, r3
 c008356:	4614      	mov	r4, r2
 c008358:	6aef      	ldr	r7, [r5, #44]	@ 0x2c
 c00835a:	ebc9 7649 	rsb	r6, r9, r9, lsl #29
 c00835e:	eb07 0789 	add.w	r7, r7, r9, lsl #2
 c008362:	00f6      	lsls	r6, r6, #3
 c008364:	ea4f 0989 	mov.w	r9, r9, lsl #2
 c008368:	eb0e 058a 	add.w	r5, lr, sl, lsl #2
 c00836c:	46b8      	mov	r8, r7
 c00836e:	eb0e 0b82 	add.w	fp, lr, r2, lsl #2
 c008372:	9201      	str	r2, [sp, #4]
 c008374:	eba8 0209 	sub.w	r2, r8, r9
 c008378:	ecfb 6a01 	vldmia	fp!, {s13}
 c00837c:	4684      	mov	ip, r0
 c00837e:	4613      	mov	r3, r2
 c008380:	edd3 7a00 	vldr	s15, [r3]
 c008384:	ecbc 7a01 	vldmia	ip!, {s14}
 c008388:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00838c:	ece3 7a01 	vstmia	r3!, {s15}
 c008390:	4598      	cmp	r8, r3
 c008392:	d1f5      	bne.n	c008380 <kad_op_cmul+0x334>
 c008394:	455d      	cmp	r5, fp
 c008396:	eba2 0806 	sub.w	r8, r2, r6
 c00839a:	d1eb      	bne.n	c008374 <kad_op_cmul+0x328>
 c00839c:	9b02      	ldr	r3, [sp, #8]
 c00839e:	9a01      	ldr	r2, [sp, #4]
 c0083a0:	3401      	adds	r4, #1
 c0083a2:	429c      	cmp	r4, r3
 c0083a4:	440d      	add	r5, r1
 c0083a6:	4448      	add	r0, r9
 c0083a8:	4452      	add	r2, sl
 c0083aa:	d1df      	bne.n	c00836c <kad_op_cmul+0x320>
 c0083ac:	e6ac      	b.n	c008108 <kad_op_cmul+0xbc>
 c0083ae:	1c4a      	adds	r2, r1, #1
 c0083b0:	bf18      	it	ne
 c0083b2:	2201      	movne	r2, #1
 c0083b4:	f47f ae6f 	bne.w	c008096 <kad_op_cmul+0x4a>
 c0083b8:	2301      	movs	r3, #1
 c0083ba:	2804      	cmp	r0, #4
 c0083bc:	469a      	mov	sl, r3
 c0083be:	9302      	str	r3, [sp, #8]
 c0083c0:	f47f ae9e 	bne.w	c008100 <kad_op_cmul+0xb4>
 c0083c4:	e6c2      	b.n	c00814c <kad_op_cmul+0x100>
 c0083c6:	f04f 0c01 	mov.w	ip, #1
 c0083ca:	e66f      	b.n	c0080ac <kad_op_cmul+0x60>
 c0083cc:	f04f 30ff 	mov.w	r0, #4294967295
 c0083d0:	e69b      	b.n	c00810a <kad_op_cmul+0xbe>
 c0083d2:	bf00      	nop
 c0083d4:	00000000 	.word	0x00000000

0c0083d8 <kad_op_matmul>:
 c0083d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c0083dc:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c0083de:	468c      	mov	ip, r1
 c0083e0:	e9d3 7600 	ldrd	r7, r6, [r3]
 c0083e4:	783b      	ldrb	r3, [r7, #0]
 c0083e6:	4605      	mov	r5, r0
 c0083e8:	2b01      	cmp	r3, #1
 c0083ea:	693c      	ldr	r4, [r7, #16]
 c0083ec:	7831      	ldrb	r1, [r6, #0]
 c0083ee:	b093      	sub	sp, #76	@ 0x4c
 c0083f0:	d042      	beq.n	c008478 <kad_op_matmul+0xa0>
 c0083f2:	2901      	cmp	r1, #1
 c0083f4:	d035      	beq.n	c008462 <kad_op_matmul+0x8a>
 c0083f6:	6932      	ldr	r2, [r6, #16]
 c0083f8:	9202      	str	r2, [sp, #8]
 c0083fa:	2b00      	cmp	r3, #0
 c0083fc:	d055      	beq.n	c0084aa <kad_op_matmul+0xd2>
 c0083fe:	697a      	ldr	r2, [r7, #20]
 c008400:	2b02      	cmp	r3, #2
 c008402:	fb04 f202 	mul.w	r2, r4, r2
 c008406:	d007      	beq.n	c008418 <kad_op_matmul+0x40>
 c008408:	69b8      	ldr	r0, [r7, #24]
 c00840a:	2b03      	cmp	r3, #3
 c00840c:	fb00 f202 	mul.w	r2, r0, r2
 c008410:	d002      	beq.n	c008418 <kad_op_matmul+0x40>
 c008412:	69fb      	ldr	r3, [r7, #28]
 c008414:	fb03 f202 	mul.w	r2, r3, r2
 c008418:	fb92 fbf4 	sdiv	fp, r2, r4
 c00841c:	2900      	cmp	r1, #0
 c00841e:	d035      	beq.n	c00848c <kad_op_matmul+0xb4>
 c008420:	2901      	cmp	r1, #1
 c008422:	6933      	ldr	r3, [r6, #16]
 c008424:	d00c      	beq.n	c008440 <kad_op_matmul+0x68>
 c008426:	6972      	ldr	r2, [r6, #20]
 c008428:	2902      	cmp	r1, #2
 c00842a:	fb02 f303 	mul.w	r3, r2, r3
 c00842e:	d007      	beq.n	c008440 <kad_op_matmul+0x68>
 c008430:	69b2      	ldr	r2, [r6, #24]
 c008432:	2903      	cmp	r1, #3
 c008434:	fb02 f303 	mul.w	r3, r2, r3
 c008438:	d002      	beq.n	c008440 <kad_op_matmul+0x68>
 c00843a:	69f2      	ldr	r2, [r6, #28]
 c00843c:	fb02 f303 	mul.w	r3, r2, r3
 c008440:	9a02      	ldr	r2, [sp, #8]
 c008442:	f1bc 0f04 	cmp.w	ip, #4
 c008446:	fb93 f9f2 	sdiv	r9, r3, r2
 c00844a:	d026      	beq.n	c00849a <kad_op_matmul+0xc2>
 c00844c:	f1bc 0f02 	cmp.w	ip, #2
 c008450:	f000 8105 	beq.w	c00865e <kad_op_matmul+0x286>
 c008454:	f1bc 0f03 	cmp.w	ip, #3
 c008458:	d02e      	beq.n	c0084b8 <kad_op_matmul+0xe0>
 c00845a:	2000      	movs	r0, #0
 c00845c:	b013      	add	sp, #76	@ 0x4c
 c00845e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c008462:	9102      	str	r1, [sp, #8]
 c008464:	2b00      	cmp	r3, #0
 c008466:	d1ca      	bne.n	c0083fe <kad_op_matmul+0x26>
 c008468:	1c63      	adds	r3, r4, #1
 c00846a:	2b02      	cmp	r3, #2
 c00846c:	bf94      	ite	ls
 c00846e:	46a3      	movls	fp, r4
 c008470:	f04f 0b00 	movhi.w	fp, #0
 c008474:	6933      	ldr	r3, [r6, #16]
 c008476:	e7e3      	b.n	c008440 <kad_op_matmul+0x68>
 c008478:	2901      	cmp	r1, #1
 c00847a:	d018      	beq.n	c0084ae <kad_op_matmul+0xd6>
 c00847c:	4622      	mov	r2, r4
 c00847e:	461c      	mov	r4, r3
 c008480:	6933      	ldr	r3, [r6, #16]
 c008482:	fb92 fbf4 	sdiv	fp, r2, r4
 c008486:	9302      	str	r3, [sp, #8]
 c008488:	2900      	cmp	r1, #0
 c00848a:	d1c9      	bne.n	c008420 <kad_op_matmul+0x48>
 c00848c:	2301      	movs	r3, #1
 c00848e:	9a02      	ldr	r2, [sp, #8]
 c008490:	f1bc 0f04 	cmp.w	ip, #4
 c008494:	fb93 f9f2 	sdiv	r9, r3, r2
 c008498:	d1d8      	bne.n	c00844c <kad_op_matmul+0x74>
 c00849a:	455a      	cmp	r2, fp
 c00849c:	f040 812d 	bne.w	c0086fa <kad_op_matmul+0x322>
 c0084a0:	2302      	movs	r3, #2
 c0084a2:	e9c5 4904 	strd	r4, r9, [r5, #16]
 c0084a6:	702b      	strb	r3, [r5, #0]
 c0084a8:	e7d7      	b.n	c00845a <kad_op_matmul+0x82>
 c0084aa:	2201      	movs	r2, #1
 c0084ac:	e7b4      	b.n	c008418 <kad_op_matmul+0x40>
 c0084ae:	46a3      	mov	fp, r4
 c0084b0:	6933      	ldr	r3, [r6, #16]
 c0084b2:	460c      	mov	r4, r1
 c0084b4:	9102      	str	r1, [sp, #8]
 c0084b6:	e7c3      	b.n	c008440 <kad_op_matmul+0x68>
 c0084b8:	787b      	ldrb	r3, [r7, #1]
 c0084ba:	07da      	lsls	r2, r3, #31
 c0084bc:	f140 808b 	bpl.w	c0085d6 <kad_op_matmul+0x1fe>
 c0084c0:	f8d6 c028 	ldr.w	ip, [r6, #40]	@ 0x28
 c0084c4:	f1bc 0f00 	cmp.w	ip, #0
 c0084c8:	f000 8085 	beq.w	c0085d6 <kad_op_matmul+0x1fe>
 c0084cc:	2c00      	cmp	r4, #0
 c0084ce:	f340 8082 	ble.w	c0085d6 <kad_op_matmul+0x1fe>
 c0084d2:	f1bb 0f00 	cmp.w	fp, #0
 c0084d6:	ea4f 0889 	mov.w	r8, r9, lsl #2
 c0084da:	dd7c      	ble.n	c0085d6 <kad_op_matmul+0x1fe>
 c0084dc:	2100      	movs	r1, #0
 c0084de:	ebc9 1309 	rsb	r3, r9, r9, lsl #4
 c0084e2:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 c0084e6:	e9cd 7609 	strd	r7, r6, [sp, #36]	@ 0x24
 c0084ea:	9104      	str	r1, [sp, #16]
 c0084ec:	9103      	str	r1, [sp, #12]
 c0084ee:	4666      	mov	r6, ip
 c0084f0:	4671      	mov	r1, lr
 c0084f2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 c0084f4:	ea4f 120b 	mov.w	r2, fp, lsl #4
 c0084f8:	9307      	str	r3, [sp, #28]
 c0084fa:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 c0084fc:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 c008500:	9305      	str	r3, [sp, #20]
 c008502:	ea4f 1389 	mov.w	r3, r9, lsl #6
 c008506:	9308      	str	r3, [sp, #32]
 c008508:	920b      	str	r2, [sp, #44]	@ 0x2c
 c00850a:	9b03      	ldr	r3, [sp, #12]
 c00850c:	46b4      	mov	ip, r6
 c00850e:	f103 0710 	add.w	r7, r3, #16
 c008512:	330f      	adds	r3, #15
 c008514:	42a3      	cmp	r3, r4
 c008516:	bfb4      	ite	lt
 c008518:	46be      	movlt	lr, r7
 c00851a:	46a6      	movge	lr, r4
 c00851c:	4608      	mov	r0, r1
 c00851e:	2300      	movs	r3, #0
 c008520:	9a05      	ldr	r2, [sp, #20]
 c008522:	e9cd 460c 	strd	r4, r6, [sp, #48]	@ 0x30
 c008526:	e9cd 570e 	strd	r5, r7, [sp, #56]	@ 0x38
 c00852a:	4442      	add	r2, r8
 c00852c:	9206      	str	r2, [sp, #24]
 c00852e:	461a      	mov	r2, r3
 c008530:	9903      	ldr	r1, [sp, #12]
 c008532:	3310      	adds	r3, #16
 c008534:	f102 050f 	add.w	r5, r2, #15
 c008538:	45ab      	cmp	fp, r5
 c00853a:	bfd4      	ite	le
 c00853c:	465c      	movle	r4, fp
 c00853e:	461c      	movgt	r4, r3
 c008540:	458e      	cmp	lr, r1
 c008542:	dd33      	ble.n	c0085ac <kad_op_matmul+0x1d4>
 c008544:	4294      	cmp	r4, r2
 c008546:	dd31      	ble.n	c0085ac <kad_op_matmul+0x1d4>
 c008548:	9904      	ldr	r1, [sp, #16]
 c00854a:	1b12      	subs	r2, r2, r4
 c00854c:	440c      	add	r4, r1
 c00854e:	9907      	ldr	r1, [sp, #28]
 c008550:	e9cd b310 	strd	fp, r3, [sp, #64]	@ 0x40
 c008554:	eb01 0584 	add.w	r5, r1, r4, lsl #2
 c008558:	4601      	mov	r1, r0
 c00855a:	e9dd 6405 	ldrd	r6, r4, [sp, #20]
 c00855e:	0097      	lsls	r7, r2, #2
 c008560:	9a03      	ldr	r2, [sp, #12]
 c008562:	46e3      	mov	fp, ip
 c008564:	19e8      	adds	r0, r5, r7
 c008566:	9201      	str	r2, [sp, #4]
 c008568:	f1b9 0f00 	cmp.w	r9, #0
 c00856c:	eddf 7a64 	vldr	s15, [pc, #400]	@ c008700 <kad_op_matmul+0x328>
 c008570:	dd09      	ble.n	c008586 <kad_op_matmul+0x1ae>
 c008572:	465a      	mov	r2, fp
 c008574:	4633      	mov	r3, r6
 c008576:	ecf3 6a01 	vldmia	r3!, {s13}
 c00857a:	ecb2 7a01 	vldmia	r2!, {s14}
 c00857e:	42a3      	cmp	r3, r4
 c008580:	eee6 7a87 	vfma.f32	s15, s13, s14
 c008584:	d1f7      	bne.n	c008576 <kad_op_matmul+0x19e>
 c008586:	ed90 7a00 	vldr	s14, [r0]
 c00858a:	ee77 7a27 	vadd.f32	s15, s14, s15
 c00858e:	ece0 7a01 	vstmia	r0!, {s15}
 c008592:	4285      	cmp	r5, r0
 c008594:	44c3      	add	fp, r8
 c008596:	d1e7      	bne.n	c008568 <kad_op_matmul+0x190>
 c008598:	9a01      	ldr	r2, [sp, #4]
 c00859a:	4455      	add	r5, sl
 c00859c:	3201      	adds	r2, #1
 c00859e:	4572      	cmp	r2, lr
 c0085a0:	4446      	add	r6, r8
 c0085a2:	4444      	add	r4, r8
 c0085a4:	d1dd      	bne.n	c008562 <kad_op_matmul+0x18a>
 c0085a6:	e9dd b310 	ldrd	fp, r3, [sp, #64]	@ 0x40
 c0085aa:	4608      	mov	r0, r1
 c0085ac:	9a08      	ldr	r2, [sp, #32]
 c0085ae:	455b      	cmp	r3, fp
 c0085b0:	4494      	add	ip, r2
 c0085b2:	dbbc      	blt.n	c00852e <kad_op_matmul+0x156>
 c0085b4:	e9dd 570e 	ldrd	r5, r7, [sp, #56]	@ 0x38
 c0085b8:	e9dd 460c 	ldrd	r4, r6, [sp, #48]	@ 0x30
 c0085bc:	9b04      	ldr	r3, [sp, #16]
 c0085be:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 c0085c0:	42bc      	cmp	r4, r7
 c0085c2:	4413      	add	r3, r2
 c0085c4:	9304      	str	r3, [sp, #16]
 c0085c6:	9b06      	ldr	r3, [sp, #24]
 c0085c8:	4601      	mov	r1, r0
 c0085ca:	4403      	add	r3, r0
 c0085cc:	9703      	str	r7, [sp, #12]
 c0085ce:	9305      	str	r3, [sp, #20]
 c0085d0:	dc9b      	bgt.n	c00850a <kad_op_matmul+0x132>
 c0085d2:	e9dd 7609 	ldrd	r7, r6, [sp, #36]	@ 0x24
 c0085d6:	7873      	ldrb	r3, [r6, #1]
 c0085d8:	07db      	lsls	r3, r3, #31
 c0085da:	f57f af3e 	bpl.w	c00845a <kad_op_matmul+0x82>
 c0085de:	6abf      	ldr	r7, [r7, #40]	@ 0x28
 c0085e0:	2f00      	cmp	r7, #0
 c0085e2:	f43f af3a 	beq.w	c00845a <kad_op_matmul+0x82>
 c0085e6:	2c00      	cmp	r4, #0
 c0085e8:	f77f af37 	ble.w	c00845a <kad_op_matmul+0x82>
 c0085ec:	9902      	ldr	r1, [sp, #8]
 c0085ee:	2900      	cmp	r1, #0
 c0085f0:	f77f af33 	ble.w	c00845a <kad_op_matmul+0x82>
 c0085f4:	f1b9 0f00 	cmp.w	r9, #0
 c0085f8:	f77f af2f 	ble.w	c00845a <kad_op_matmul+0x82>
 c0085fc:	2200      	movs	r2, #0
 c0085fe:	6af3      	ldr	r3, [r6, #44]	@ 0x2c
 c008600:	f8d5 e02c 	ldr.w	lr, [r5, #44]	@ 0x2c
 c008604:	eb03 0c89 	add.w	ip, r3, r9, lsl #2
 c008608:	008b      	lsls	r3, r1, #2
 c00860a:	eb07 0581 	add.w	r5, r7, r1, lsl #2
 c00860e:	4610      	mov	r0, r2
 c008610:	4619      	mov	r1, r3
 c008612:	ebc9 7649 	rsb	r6, r9, r9, lsl #29
 c008616:	00f6      	lsls	r6, r6, #3
 c008618:	ea4f 0989 	mov.w	r9, r9, lsl #2
 c00861c:	46e2      	mov	sl, ip
 c00861e:	eb07 0b82 	add.w	fp, r7, r2, lsl #2
 c008622:	9201      	str	r2, [sp, #4]
 c008624:	ebaa 0209 	sub.w	r2, sl, r9
 c008628:	ecfb 6a01 	vldmia	fp!, {s13}
 c00862c:	46f0      	mov	r8, lr
 c00862e:	4613      	mov	r3, r2
 c008630:	edd3 7a00 	vldr	s15, [r3]
 c008634:	ecb8 7a01 	vldmia	r8!, {s14}
 c008638:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00863c:	ece3 7a01 	vstmia	r3!, {s15}
 c008640:	459a      	cmp	sl, r3
 c008642:	d1f5      	bne.n	c008630 <kad_op_matmul+0x258>
 c008644:	455d      	cmp	r5, fp
 c008646:	eba2 0a06 	sub.w	sl, r2, r6
 c00864a:	d1eb      	bne.n	c008624 <kad_op_matmul+0x24c>
 c00864c:	9a01      	ldr	r2, [sp, #4]
 c00864e:	9b02      	ldr	r3, [sp, #8]
 c008650:	3001      	adds	r0, #1
 c008652:	4284      	cmp	r4, r0
 c008654:	440d      	add	r5, r1
 c008656:	44ce      	add	lr, r9
 c008658:	441a      	add	r2, r3
 c00865a:	d1df      	bne.n	c00861c <kad_op_matmul+0x244>
 c00865c:	e6fd      	b.n	c00845a <kad_op_matmul+0x82>
 c00865e:	fb04 f209 	mul.w	r2, r4, r9
 c008662:	2100      	movs	r1, #0
 c008664:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
 c008666:	0092      	lsls	r2, r2, #2
 c008668:	f006 ffe2 	bl	c00f630 <memset>
 c00866c:	6abf      	ldr	r7, [r7, #40]	@ 0x28
 c00866e:	2f00      	cmp	r7, #0
 c008670:	f43f aef3 	beq.w	c00845a <kad_op_matmul+0x82>
 c008674:	f8d6 a028 	ldr.w	sl, [r6, #40]	@ 0x28
 c008678:	f1ba 0f00 	cmp.w	sl, #0
 c00867c:	f43f aeed 	beq.w	c00845a <kad_op_matmul+0x82>
 c008680:	2c00      	cmp	r4, #0
 c008682:	f77f aeea 	ble.w	c00845a <kad_op_matmul+0x82>
 c008686:	f1bb 0f00 	cmp.w	fp, #0
 c00868a:	f77f aee6 	ble.w	c00845a <kad_op_matmul+0x82>
 c00868e:	f1b9 0f00 	cmp.w	r9, #0
 c008692:	f77f aee2 	ble.w	c00845a <kad_op_matmul+0x82>
 c008696:	2300      	movs	r3, #0
 c008698:	f8d5 e028 	ldr.w	lr, [r5, #40]	@ 0x28
 c00869c:	ea4f 028b 	mov.w	r2, fp, lsl #2
 c0086a0:	eb0e 0089 	add.w	r0, lr, r9, lsl #2
 c0086a4:	ea4f 0c89 	mov.w	ip, r9, lsl #2
 c0086a8:	4601      	mov	r1, r0
 c0086aa:	461d      	mov	r5, r3
 c0086ac:	46a0      	mov	r8, r4
 c0086ae:	4691      	mov	r9, r2
 c0086b0:	eb07 068b 	add.w	r6, r7, fp, lsl #2
 c0086b4:	2400      	movs	r4, #0
 c0086b6:	e9cd 8701 	strd	r8, r7, [sp, #4]
 c0086ba:	eb07 0283 	add.w	r2, r7, r3, lsl #2
 c0086be:	ecf2 6a01 	vldmia	r2!, {s13}
 c0086c2:	4677      	mov	r7, lr
 c0086c4:	eb0a 0804 	add.w	r8, sl, r4
 c0086c8:	edd7 7a00 	vldr	s15, [r7]
 c0086cc:	ecb8 7a01 	vldmia	r8!, {s14}
 c0086d0:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0086d4:	ece7 7a01 	vstmia	r7!, {s15}
 c0086d8:	428f      	cmp	r7, r1
 c0086da:	d1f5      	bne.n	c0086c8 <kad_op_matmul+0x2f0>
 c0086dc:	42b2      	cmp	r2, r6
 c0086de:	4464      	add	r4, ip
 c0086e0:	d1ed      	bne.n	c0086be <kad_op_matmul+0x2e6>
 c0086e2:	e9dd 8701 	ldrd	r8, r7, [sp, #4]
 c0086e6:	3501      	adds	r5, #1
 c0086e8:	4545      	cmp	r5, r8
 c0086ea:	4686      	mov	lr, r0
 c0086ec:	444e      	add	r6, r9
 c0086ee:	4461      	add	r1, ip
 c0086f0:	445b      	add	r3, fp
 c0086f2:	f43f aeb2 	beq.w	c00845a <kad_op_matmul+0x82>
 c0086f6:	4460      	add	r0, ip
 c0086f8:	e7dc      	b.n	c0086b4 <kad_op_matmul+0x2dc>
 c0086fa:	f04f 30ff 	mov.w	r0, #4294967295
 c0086fe:	e6ad      	b.n	c00845c <kad_op_matmul+0x84>
 c008700:	00000000 	.word	0x00000000

0c008704 <kad_op_conv1d>:
 c008704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c008708:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c00870a:	b09f      	sub	sp, #124	@ 0x7c
 c00870c:	681a      	ldr	r2, [r3, #0]
 c00870e:	685e      	ldr	r6, [r3, #4]
 c008710:	1e8b      	subs	r3, r1, #2
 c008712:	2b01      	cmp	r3, #1
 c008714:	460c      	mov	r4, r1
 c008716:	f8d0 b030 	ldr.w	fp, [r0, #48]	@ 0x30
 c00871a:	900d      	str	r0, [sp, #52]	@ 0x34
 c00871c:	9204      	str	r2, [sp, #16]
 c00871e:	d93c      	bls.n	c00879a <kad_op_conv1d+0x96>
 c008720:	2904      	cmp	r1, #4
 c008722:	d014      	beq.n	c00874e <kad_op_conv1d+0x4a>
 c008724:	2300      	movs	r3, #0
 c008726:	9300      	str	r3, [sp, #0]
 c008728:	9309      	str	r3, [sp, #36]	@ 0x24
 c00872a:	930b      	str	r3, [sp, #44]	@ 0x2c
 c00872c:	930f      	str	r3, [sp, #60]	@ 0x3c
 c00872e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 c008730:	f006 fcac 	bl	c00f08c <free>
 c008734:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c008736:	f006 fca9 	bl	c00f08c <free>
 c00873a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 c00873c:	f006 fca6 	bl	c00f08c <free>
 c008740:	9800      	ldr	r0, [sp, #0]
 c008742:	f006 fca3 	bl	c00f08c <free>
 c008746:	2000      	movs	r0, #0
 c008748:	b01f      	add	sp, #124	@ 0x7c
 c00874a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00874e:	7813      	ldrb	r3, [r2, #0]
 c008750:	4610      	mov	r0, r2
 c008752:	2b03      	cmp	r3, #3
 c008754:	f040 8558 	bne.w	c009208 <kad_op_conv1d+0xb04>
 c008758:	7833      	ldrb	r3, [r6, #0]
 c00875a:	2b03      	cmp	r3, #3
 c00875c:	f040 8554 	bne.w	c009208 <kad_op_conv1d+0xb04>
 c008760:	6951      	ldr	r1, [r2, #20]
 c008762:	6972      	ldr	r2, [r6, #20]
 c008764:	4291      	cmp	r1, r2
 c008766:	f040 854f 	bne.w	c009208 <kad_op_conv1d+0xb04>
 c00876a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 c00876c:	700b      	strb	r3, [r1, #0]
 c00876e:	6983      	ldr	r3, [r0, #24]
 c008770:	6902      	ldr	r2, [r0, #16]
 c008772:	4608      	mov	r0, r1
 c008774:	610a      	str	r2, [r1, #16]
 c008776:	f8db 2000 	ldr.w	r2, [fp]
 c00877a:	6931      	ldr	r1, [r6, #16]
 c00877c:	1a9b      	subs	r3, r3, r2
 c00877e:	f8db 2008 	ldr.w	r2, [fp, #8]
 c008782:	6141      	str	r1, [r0, #20]
 c008784:	f8db 100c 	ldr.w	r1, [fp, #12]
 c008788:	4413      	add	r3, r2
 c00878a:	f8db 2004 	ldr.w	r2, [fp, #4]
 c00878e:	440b      	add	r3, r1
 c008790:	fb93 f3f2 	sdiv	r3, r3, r2
 c008794:	3301      	adds	r3, #1
 c008796:	6183      	str	r3, [r0, #24]
 c008798:	e7c4      	b.n	c008724 <kad_op_conv1d+0x20>
 c00879a:	69b3      	ldr	r3, [r6, #24]
 c00879c:	6972      	ldr	r2, [r6, #20]
 c00879e:	9303      	str	r3, [sp, #12]
 c0087a0:	fb02 f303 	mul.w	r3, r2, r3
 c0087a4:	2b1f      	cmp	r3, #31
 c0087a6:	9205      	str	r2, [sp, #20]
 c0087a8:	9311      	str	r3, [sp, #68]	@ 0x44
 c0087aa:	f340 81be 	ble.w	c008b2a <kad_op_conv1d+0x426>
 c0087ae:	9b04      	ldr	r3, [sp, #16]
 c0087b0:	781a      	ldrb	r2, [r3, #0]
 c0087b2:	2a00      	cmp	r2, #0
 c0087b4:	f000 8270 	beq.w	c008c98 <kad_op_conv1d+0x594>
 c0087b8:	2a01      	cmp	r2, #1
 c0087ba:	6918      	ldr	r0, [r3, #16]
 c0087bc:	d00b      	beq.n	c0087d6 <kad_op_conv1d+0xd2>
 c0087be:	6959      	ldr	r1, [r3, #20]
 c0087c0:	2a02      	cmp	r2, #2
 c0087c2:	fb01 f000 	mul.w	r0, r1, r0
 c0087c6:	d006      	beq.n	c0087d6 <kad_op_conv1d+0xd2>
 c0087c8:	6999      	ldr	r1, [r3, #24]
 c0087ca:	2a03      	cmp	r2, #3
 c0087cc:	fb01 f000 	mul.w	r0, r1, r0
 c0087d0:	bf1c      	itt	ne
 c0087d2:	69da      	ldrne	r2, [r3, #28]
 c0087d4:	4350      	mulne	r0, r2
 c0087d6:	0080      	lsls	r0, r0, #2
 c0087d8:	f006 fc50 	bl	c00f07c <malloc>
 c0087dc:	7832      	ldrb	r2, [r6, #0]
 c0087de:	900b      	str	r0, [sp, #44]	@ 0x2c
 c0087e0:	2a00      	cmp	r2, #0
 c0087e2:	f000 8257 	beq.w	c008c94 <kad_op_conv1d+0x590>
 c0087e6:	2a01      	cmp	r2, #1
 c0087e8:	6930      	ldr	r0, [r6, #16]
 c0087ea:	d00b      	beq.n	c008804 <kad_op_conv1d+0x100>
 c0087ec:	9b05      	ldr	r3, [sp, #20]
 c0087ee:	2a02      	cmp	r2, #2
 c0087f0:	fb03 f000 	mul.w	r0, r3, r0
 c0087f4:	d006      	beq.n	c008804 <kad_op_conv1d+0x100>
 c0087f6:	9b03      	ldr	r3, [sp, #12]
 c0087f8:	2a03      	cmp	r2, #3
 c0087fa:	fb03 f000 	mul.w	r0, r3, r0
 c0087fe:	bf1c      	itt	ne
 c008800:	69f2      	ldrne	r2, [r6, #28]
 c008802:	4350      	mulne	r0, r2
 c008804:	0080      	lsls	r0, r0, #2
 c008806:	f006 fc39 	bl	c00f07c <malloc>
 c00880a:	e9db 3202 	ldrd	r3, r2, [fp, #8]
 c00880e:	1899      	adds	r1, r3, r2
 c008810:	2900      	cmp	r1, #0
 c008812:	9009      	str	r0, [sp, #36]	@ 0x24
 c008814:	f300 8113 	bgt.w	c008a3e <kad_op_conv1d+0x33a>
 c008818:	2300      	movs	r3, #0
 c00881a:	2701      	movs	r7, #1
 c00881c:	9300      	str	r3, [sp, #0]
 c00881e:	930f      	str	r3, [sp, #60]	@ 0x3c
 c008820:	2c02      	cmp	r4, #2
 c008822:	f040 811d 	bne.w	c008a60 <kad_op_conv1d+0x35c>
 c008826:	6934      	ldr	r4, [r6, #16]
 c008828:	9b05      	ldr	r3, [sp, #20]
 c00882a:	fb04 f303 	mul.w	r3, r4, r3
 c00882e:	2b00      	cmp	r3, #0
 c008830:	461c      	mov	r4, r3
 c008832:	dd1a      	ble.n	c00886a <kad_op_conv1d+0x166>
 c008834:	9b03      	ldr	r3, [sp, #12]
 c008836:	1059      	asrs	r1, r3, #1
 c008838:	2900      	cmp	r1, #0
 c00883a:	dd16      	ble.n	c00886a <kad_op_conv1d+0x166>
 c00883c:	2500      	movs	r5, #0
 c00883e:	6ab0      	ldr	r0, [r6, #40]	@ 0x28
 c008840:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 c008844:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 c008848:	4603      	mov	r3, r0
 c00884a:	4460      	add	r0, ip
 c00884c:	4602      	mov	r2, r0
 c00884e:	f852 8d04 	ldr.w	r8, [r2, #-4]!
 c008852:	f8d3 e000 	ldr.w	lr, [r3]
 c008856:	f843 8b04 	str.w	r8, [r3], #4
 c00885a:	4299      	cmp	r1, r3
 c00885c:	f8c2 e000 	str.w	lr, [r2]
 c008860:	d1f5      	bne.n	c00884e <kad_op_conv1d+0x14a>
 c008862:	3501      	adds	r5, #1
 c008864:	42ac      	cmp	r4, r5
 c008866:	4461      	add	r1, ip
 c008868:	d1ee      	bne.n	c008848 <kad_op_conv1d+0x144>
 c00886a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 c00886c:	7819      	ldrb	r1, [r3, #0]
 c00886e:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 c008870:	2900      	cmp	r1, #0
 c008872:	f000 824c 	beq.w	c008d0e <kad_op_conv1d+0x60a>
 c008876:	2901      	cmp	r1, #1
 c008878:	461c      	mov	r4, r3
 c00887a:	691a      	ldr	r2, [r3, #16]
 c00887c:	d00b      	beq.n	c008896 <kad_op_conv1d+0x192>
 c00887e:	695b      	ldr	r3, [r3, #20]
 c008880:	2902      	cmp	r1, #2
 c008882:	fb03 f202 	mul.w	r2, r3, r2
 c008886:	d006      	beq.n	c008896 <kad_op_conv1d+0x192>
 c008888:	69a3      	ldr	r3, [r4, #24]
 c00888a:	2903      	cmp	r1, #3
 c00888c:	fb03 f202 	mul.w	r2, r3, r2
 c008890:	bf1c      	itt	ne
 c008892:	69e3      	ldrne	r3, [r4, #28]
 c008894:	435a      	mulne	r2, r3
 c008896:	0092      	lsls	r2, r2, #2
 c008898:	2100      	movs	r1, #0
 c00889a:	f006 fec9 	bl	c00f630 <memset>
 c00889e:	9b04      	ldr	r3, [sp, #16]
 c0088a0:	2f00      	cmp	r7, #0
 c0088a2:	f040 8710 	bne.w	c0096c6 <kad_op_conv1d+0xfc2>
 c0088a6:	691c      	ldr	r4, [r3, #16]
 c0088a8:	6ab0      	ldr	r0, [r6, #40]	@ 0x28
 c0088aa:	69b3      	ldr	r3, [r6, #24]
 c0088ac:	6932      	ldr	r2, [r6, #16]
 c0088ae:	6971      	ldr	r1, [r6, #20]
 c0088b0:	2c00      	cmp	r4, #0
 c0088b2:	9305      	str	r3, [sp, #20]
 c0088b4:	900e      	str	r0, [sp, #56]	@ 0x38
 c0088b6:	920a      	str	r2, [sp, #40]	@ 0x28
 c0088b8:	9102      	str	r1, [sp, #8]
 c0088ba:	f340 81d7 	ble.w	c008c6c <kad_op_conv1d+0x568>
 c0088be:	2a00      	cmp	r2, #0
 c0088c0:	f340 81d4 	ble.w	c008c6c <kad_op_conv1d+0x568>
 c0088c4:	2900      	cmp	r1, #0
 c0088c6:	f77f af32 	ble.w	c00872e <kad_op_conv1d+0x2a>
 c0088ca:	461a      	mov	r2, r3
 c0088cc:	fb01 f303 	mul.w	r3, r1, r3
 c0088d0:	009b      	lsls	r3, r3, #2
 c0088d2:	9314      	str	r3, [sp, #80]	@ 0x50
 c0088d4:	4613      	mov	r3, r2
 c0088d6:	46be      	mov	lr, r7
 c0088d8:	0092      	lsls	r2, r2, #2
 c0088da:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 c0088dc:	9206      	str	r2, [sp, #24]
 c0088de:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 c0088e2:	f04f 0c00 	mov.w	ip, #0
 c0088e6:	465b      	mov	r3, fp
 c0088e8:	e9cd 4615 	strd	r4, r6, [sp, #84]	@ 0x54
 c0088ec:	960c      	str	r6, [sp, #48]	@ 0x30
 c0088ee:	f8cd e040 	str.w	lr, [sp, #64]	@ 0x40
 c0088f2:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 c0088f4:	f8dd e010 	ldr.w	lr, [sp, #16]
 c0088f8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 c0088fa:	f8de 1014 	ldr.w	r1, [lr, #20]
 c0088fe:	6972      	ldr	r2, [r6, #20]
 c008900:	fb00 f101 	mul.w	r1, r0, r1
 c008904:	fb02 c200 	mla	r2, r2, r0, ip
 c008908:	f8de 0018 	ldr.w	r0, [lr, #24]
 c00890c:	69b5      	ldr	r5, [r6, #24]
 c00890e:	fb00 f401 	mul.w	r4, r0, r1
 c008912:	fb05 f202 	mul.w	r2, r5, r2
 c008916:	0081      	lsls	r1, r0, #2
 c008918:	9101      	str	r1, [sp, #4]
 c00891a:	6ab0      	ldr	r0, [r6, #40]	@ 0x28
 c00891c:	f8de 1028 	ldr.w	r1, [lr, #40]	@ 0x28
 c008920:	eb00 0982 	add.w	r9, r0, r2, lsl #2
 c008924:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 c008928:	eb00 0485 	add.w	r4, r0, r5, lsl #2
 c00892c:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 c008930:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 c008932:	f04f 0a00 	mov.w	sl, #0
 c008936:	4690      	mov	r8, r2
 c008938:	9806      	ldr	r0, [sp, #24]
 c00893a:	e9cd ec11 	strd	lr, ip, [sp, #68]	@ 0x44
 c00893e:	9503      	str	r5, [sp, #12]
 c008940:	eba2 0b00 	sub.w	fp, r2, r0
 c008944:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 c008948:	9613      	str	r6, [sp, #76]	@ 0x4c
 c00894a:	9a00      	ldr	r2, [sp, #0]
 c00894c:	460e      	mov	r6, r1
 c00894e:	b152      	cbz	r2, c008966 <kad_op_conv1d+0x262>
 c008950:	689e      	ldr	r6, [r3, #8]
 c008952:	9308      	str	r3, [sp, #32]
 c008954:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 c008958:	4630      	mov	r0, r6
 c00895a:	9a01      	ldr	r2, [sp, #4]
 c00895c:	9107      	str	r1, [sp, #28]
 c00895e:	f006 ff36 	bl	c00f7ce <memcpy>
 c008962:	e9dd 1307 	ldrd	r1, r3, [sp, #28]
 c008966:	6858      	ldr	r0, [r3, #4]
 c008968:	9a05      	ldr	r2, [sp, #20]
 c00896a:	2801      	cmp	r0, #1
 c00896c:	f340 80bc 	ble.w	c008ae8 <kad_op_conv1d+0x3e4>
 c008970:	2a00      	cmp	r2, #0
 c008972:	dd27      	ble.n	c0089c4 <kad_op_conv1d+0x2c0>
 c008974:	46dc      	mov	ip, fp
 c008976:	689a      	ldr	r2, [r3, #8]
 c008978:	0080      	lsls	r0, r0, #2
 c00897a:	ebc2 7282 	rsb	r2, r2, r2, lsl #30
 c00897e:	eb06 0682 	add.w	r6, r6, r2, lsl #2
 c008982:	9a03      	ldr	r2, [sp, #12]
 c008984:	2a00      	cmp	r2, #0
 c008986:	f340 80a7 	ble.w	c008ad8 <kad_op_conv1d+0x3d4>
 c00898a:	4632      	mov	r2, r6
 c00898c:	46be      	mov	lr, r7
 c00898e:	edd2 7a00 	vldr	s15, [r2]
 c008992:	ecee 7a01 	vstmia	lr!, {s15}
 c008996:	45ae      	cmp	lr, r5
 c008998:	4402      	add	r2, r0
 c00899a:	d1f8      	bne.n	c00898e <kad_op_conv1d+0x28a>
 c00899c:	eddc 6a00 	vldr	s13, [ip]
 c0089a0:	464a      	mov	r2, r9
 c0089a2:	46be      	mov	lr, r7
 c0089a4:	edd2 7a00 	vldr	s15, [r2]
 c0089a8:	ecbe 7a01 	vldmia	lr!, {s14}
 c0089ac:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0089b0:	ece2 7a01 	vstmia	r2!, {s15}
 c0089b4:	4294      	cmp	r4, r2
 c0089b6:	d1f5      	bne.n	c0089a4 <kad_op_conv1d+0x2a0>
 c0089b8:	f10c 0c04 	add.w	ip, ip, #4
 c0089bc:	45c4      	cmp	ip, r8
 c0089be:	f106 0604 	add.w	r6, r6, #4
 c0089c2:	d1e2      	bne.n	c00898a <kad_op_conv1d+0x286>
 c0089c4:	9a06      	ldr	r2, [sp, #24]
 c0089c6:	f10a 0a01 	add.w	sl, sl, #1
 c0089ca:	4490      	add	r8, r2
 c0089cc:	4493      	add	fp, r2
 c0089ce:	9a01      	ldr	r2, [sp, #4]
 c0089d0:	4411      	add	r1, r2
 c0089d2:	9a02      	ldr	r2, [sp, #8]
 c0089d4:	4592      	cmp	sl, r2
 c0089d6:	d1b8      	bne.n	c00894a <kad_op_conv1d+0x246>
 c0089d8:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 c0089dc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 c0089de:	9914      	ldr	r1, [sp, #80]	@ 0x50
 c0089e0:	f10c 0c01 	add.w	ip, ip, #1
 c0089e4:	440a      	add	r2, r1
 c0089e6:	920c      	str	r2, [sp, #48]	@ 0x30
 c0089e8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c0089ea:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 c0089ec:	4594      	cmp	ip, r2
 c0089ee:	d183      	bne.n	c0088f8 <kad_op_conv1d+0x1f4>
 c0089f0:	e9dd 4615 	ldrd	r4, r6, [sp, #84]	@ 0x54
 c0089f4:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 c0089f8:	469b      	mov	fp, r3
 c0089fa:	f10e 0e01 	add.w	lr, lr, #1
 c0089fe:	45a6      	cmp	lr, r4
 c008a00:	f47f af6f 	bne.w	c0088e2 <kad_op_conv1d+0x1de>
 c008a04:	fb0a f60c 	mul.w	r6, sl, ip
 c008a08:	9b05      	ldr	r3, [sp, #20]
 c008a0a:	1059      	asrs	r1, r3, #1
 c008a0c:	2900      	cmp	r1, #0
 c008a0e:	f77f ae8e 	ble.w	c00872e <kad_op_conv1d+0x2a>
 c008a12:	2700      	movs	r7, #0
 c008a14:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 c008a16:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 c008a1a:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 c008a1e:	462b      	mov	r3, r5
 c008a20:	4465      	add	r5, ip
 c008a22:	462a      	mov	r2, r5
 c008a24:	f852 4d04 	ldr.w	r4, [r2, #-4]!
 c008a28:	6818      	ldr	r0, [r3, #0]
 c008a2a:	f843 4b04 	str.w	r4, [r3], #4
 c008a2e:	428b      	cmp	r3, r1
 c008a30:	6010      	str	r0, [r2, #0]
 c008a32:	d1f7      	bne.n	c008a24 <kad_op_conv1d+0x320>
 c008a34:	3701      	adds	r7, #1
 c008a36:	42b7      	cmp	r7, r6
 c008a38:	4461      	add	r1, ip
 c008a3a:	d1f0      	bne.n	c008a1e <kad_op_conv1d+0x31a>
 c008a3c:	e677      	b.n	c00872e <kad_op_conv1d+0x2a>
 c008a3e:	9804      	ldr	r0, [sp, #16]
 c008a40:	2701      	movs	r7, #1
 c008a42:	6981      	ldr	r1, [r0, #24]
 c008a44:	6940      	ldr	r0, [r0, #20]
 c008a46:	440b      	add	r3, r1
 c008a48:	4413      	add	r3, r2
 c008a4a:	fb03 f000 	mul.w	r0, r3, r0
 c008a4e:	2104      	movs	r1, #4
 c008a50:	f006 faf8 	bl	c00f044 <calloc>
 c008a54:	2300      	movs	r3, #0
 c008a56:	2c02      	cmp	r4, #2
 c008a58:	930f      	str	r3, [sp, #60]	@ 0x3c
 c008a5a:	9000      	str	r0, [sp, #0]
 c008a5c:	f43f aee3 	beq.w	c008826 <kad_op_conv1d+0x122>
 c008a60:	9b04      	ldr	r3, [sp, #16]
 c008a62:	785b      	ldrb	r3, [r3, #1]
 c008a64:	07d9      	lsls	r1, r3, #31
 c008a66:	f100 8119 	bmi.w	c008c9c <kad_op_conv1d+0x598>
 c008a6a:	7873      	ldrb	r3, [r6, #1]
 c008a6c:	07da      	lsls	r2, r3, #31
 c008a6e:	f57f ae5e 	bpl.w	c00872e <kad_op_conv1d+0x2a>
 c008a72:	6933      	ldr	r3, [r6, #16]
 c008a74:	9a05      	ldr	r2, [sp, #20]
 c008a76:	9308      	str	r3, [sp, #32]
 c008a78:	fb03 f302 	mul.w	r3, r3, r2
 c008a7c:	2b00      	cmp	r3, #0
 c008a7e:	f8d6 902c 	ldr.w	r9, [r6, #44]	@ 0x2c
 c008a82:	930e      	str	r3, [sp, #56]	@ 0x38
 c008a84:	f340 8261 	ble.w	c008f4a <kad_op_conv1d+0x846>
 c008a88:	9903      	ldr	r1, [sp, #12]
 c008a8a:	104b      	asrs	r3, r1, #1
 c008a8c:	2b00      	cmp	r3, #0
 c008a8e:	f340 83bf 	ble.w	c009210 <kad_op_conv1d+0xb0c>
 c008a92:	0089      	lsls	r1, r1, #2
 c008a94:	464a      	mov	r2, r9
 c008a96:	2500      	movs	r5, #0
 c008a98:	468c      	mov	ip, r1
 c008a9a:	9102      	str	r1, [sp, #8]
 c008a9c:	eb09 0083 	add.w	r0, r9, r3, lsl #2
 c008aa0:	4611      	mov	r1, r2
 c008aa2:	4462      	add	r2, ip
 c008aa4:	4614      	mov	r4, r2
 c008aa6:	f854 8d04 	ldr.w	r8, [r4, #-4]!
 c008aaa:	f8d1 e000 	ldr.w	lr, [r1]
 c008aae:	f841 8b04 	str.w	r8, [r1], #4
 c008ab2:	4288      	cmp	r0, r1
 c008ab4:	f8c4 e000 	str.w	lr, [r4]
 c008ab8:	d1f5      	bne.n	c008aa6 <kad_op_conv1d+0x3a2>
 c008aba:	990e      	ldr	r1, [sp, #56]	@ 0x38
 c008abc:	3501      	adds	r5, #1
 c008abe:	42a9      	cmp	r1, r5
 c008ac0:	4460      	add	r0, ip
 c008ac2:	d1ed      	bne.n	c008aa0 <kad_op_conv1d+0x39c>
 c008ac4:	9a04      	ldr	r2, [sp, #16]
 c008ac6:	6912      	ldr	r2, [r2, #16]
 c008ac8:	2f00      	cmp	r7, #0
 c008aca:	f040 8492 	bne.w	c0093f2 <kad_op_conv1d+0xcee>
 c008ace:	2a00      	cmp	r2, #0
 c008ad0:	f300 83a6 	bgt.w	c009220 <kad_op_conv1d+0xb1c>
 c008ad4:	f000 bc4e 	b.w	c009374 <kad_op_conv1d+0xc70>
 c008ad8:	f10c 0c04 	add.w	ip, ip, #4
 c008adc:	45c4      	cmp	ip, r8
 c008ade:	f106 0604 	add.w	r6, r6, #4
 c008ae2:	f47f af4e 	bne.w	c008982 <kad_op_conv1d+0x27e>
 c008ae6:	e76d      	b.n	c0089c4 <kad_op_conv1d+0x2c0>
 c008ae8:	2a00      	cmp	r2, #0
 c008aea:	f77f af6b 	ble.w	c0089c4 <kad_op_conv1d+0x2c0>
 c008aee:	9803      	ldr	r0, [sp, #12]
 c008af0:	689a      	ldr	r2, [r3, #8]
 c008af2:	2800      	cmp	r0, #0
 c008af4:	f77f af66 	ble.w	c0089c4 <kad_op_conv1d+0x2c0>
 c008af8:	46de      	mov	lr, fp
 c008afa:	ebc2 7282 	rsb	r2, r2, r2, lsl #30
 c008afe:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 c008b02:	ecfe 6a01 	vldmia	lr!, {s13}
 c008b06:	464a      	mov	r2, r9
 c008b08:	eb06 000c 	add.w	r0, r6, ip
 c008b0c:	edd2 7a00 	vldr	s15, [r2]
 c008b10:	ecb0 7a01 	vldmia	r0!, {s14}
 c008b14:	eee6 7a87 	vfma.f32	s15, s13, s14
 c008b18:	ece2 7a01 	vstmia	r2!, {s15}
 c008b1c:	42a2      	cmp	r2, r4
 c008b1e:	d1f5      	bne.n	c008b0c <kad_op_conv1d+0x408>
 c008b20:	45f0      	cmp	r8, lr
 c008b22:	f10c 0c04 	add.w	ip, ip, #4
 c008b26:	d1ec      	bne.n	c008b02 <kad_op_conv1d+0x3fe>
 c008b28:	e74c      	b.n	c0089c4 <kad_op_conv1d+0x2c0>
 c008b2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 c008b2c:	6998      	ldr	r0, [r3, #24]
 c008b2e:	0080      	lsls	r0, r0, #2
 c008b30:	f006 faa4 	bl	c00f07c <malloc>
 c008b34:	e9db 3202 	ldrd	r3, r2, [fp, #8]
 c008b38:	1899      	adds	r1, r3, r2
 c008b3a:	2900      	cmp	r1, #0
 c008b3c:	900f      	str	r0, [sp, #60]	@ 0x3c
 c008b3e:	f300 809d 	bgt.w	c008c7c <kad_op_conv1d+0x578>
 c008b42:	2700      	movs	r7, #0
 c008b44:	9700      	str	r7, [sp, #0]
 c008b46:	9709      	str	r7, [sp, #36]	@ 0x24
 c008b48:	970b      	str	r7, [sp, #44]	@ 0x2c
 c008b4a:	e669      	b.n	c008820 <kad_op_conv1d+0x11c>
 c008b4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c008b4e:	f10e 0e01 	add.w	lr, lr, #1
 c008b52:	459e      	cmp	lr, r3
 c008b54:	44b4      	add	ip, r6
 c008b56:	4417      	add	r7, r2
 c008b58:	f2c0 860a 	blt.w	c009770 <kad_op_conv1d+0x106c>
 c008b5c:	4611      	mov	r1, r2
 c008b5e:	f8db 3004 	ldr.w	r3, [fp, #4]
 c008b62:	fb03 f209 	mul.w	r2, r3, r9
 c008b66:	9b05      	ldr	r3, [sp, #20]
 c008b68:	fb01 f303 	mul.w	r3, r1, r3
 c008b6c:	9901      	ldr	r1, [sp, #4]
 c008b6e:	2900      	cmp	r1, #0
 c008b70:	dd7c      	ble.n	c008c6c <kad_op_conv1d+0x568>
 c008b72:	ea4f 0882 	mov.w	r8, r2, lsl #2
 c008b76:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c008b78:	2a00      	cmp	r2, #0
 c008b7a:	dd77      	ble.n	c008c6c <kad_op_conv1d+0x568>
 c008b7c:	2500      	movs	r5, #0
 c008b7e:	009a      	lsls	r2, r3, #2
 c008b80:	920c      	str	r2, [sp, #48]	@ 0x30
 c008b82:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c008b84:	462e      	mov	r6, r5
 c008b86:	eb02 0e83 	add.w	lr, r2, r3, lsl #2
 c008b8a:	462a      	mov	r2, r5
 c008b8c:	461d      	mov	r5, r3
 c008b8e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 c008b90:	6943      	ldr	r3, [r0, #20]
 c008b92:	6987      	ldr	r7, [r0, #24]
 c008b94:	fb03 f406 	mul.w	r4, r3, r6
 c008b98:	9b04      	ldr	r3, [sp, #16]
 c008b9a:	fb07 f404 	mul.w	r4, r7, r4
 c008b9e:	699b      	ldr	r3, [r3, #24]
 c008ba0:	e9cd 6210 	strd	r6, r2, [sp, #64]	@ 0x40
 c008ba4:	fb03 f102 	mul.w	r1, r3, r2
 c008ba8:	fb09 fc03 	mul.w	ip, r9, r3
 c008bac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 c008bae:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 c008bb2:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 c008bb6:	ea4f 038c 	mov.w	r3, ip, lsl #2
 c008bba:	9307      	str	r3, [sp, #28]
 c008bbc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 c008bbe:	f8cd e048 	str.w	lr, [sp, #72]	@ 0x48
 c008bc2:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 c008bc6:	9c00      	ldr	r4, [sp, #0]
 c008bc8:	9303      	str	r3, [sp, #12]
 c008bca:	4623      	mov	r3, r4
 c008bcc:	2c00      	cmp	r4, #0
 c008bce:	bf08      	it	eq
 c008bd0:	460b      	moveq	r3, r1
 c008bd2:	9308      	str	r3, [sp, #32]
 c008bd4:	2300      	movs	r3, #0
 c008bd6:	9306      	str	r3, [sp, #24]
 c008bd8:	00bb      	lsls	r3, r7, #2
 c008bda:	930d      	str	r3, [sp, #52]	@ 0x34
 c008bdc:	4674      	mov	r4, lr
 c008bde:	4603      	mov	r3, r0
 c008be0:	9800      	ldr	r0, [sp, #0]
 c008be2:	9e03      	ldr	r6, [sp, #12]
 c008be4:	b160      	cbz	r0, c008c00 <kad_op_conv1d+0x4fc>
 c008be6:	f8db 2008 	ldr.w	r2, [fp, #8]
 c008bea:	9314      	str	r3, [sp, #80]	@ 0x50
 c008bec:	fb02 f209 	mul.w	r2, r2, r9
 c008bf0:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 c008bf4:	9a07      	ldr	r2, [sp, #28]
 c008bf6:	9113      	str	r1, [sp, #76]	@ 0x4c
 c008bf8:	f006 fde9 	bl	c00f7ce <memcpy>
 c008bfc:	e9dd 1313 	ldrd	r1, r3, [sp, #76]	@ 0x4c
 c008c00:	2f00      	cmp	r7, #0
 c008c02:	dd1c      	ble.n	c008c3e <kad_op_conv1d+0x53a>
 c008c04:	f04f 0c00 	mov.w	ip, #0
 c008c08:	f8dd e020 	ldr.w	lr, [sp, #32]
 c008c0c:	2d00      	cmp	r5, #0
 c008c0e:	eddf 7aba 	vldr	s15, [pc, #744]	@ c008ef8 <kad_op_conv1d+0x7f4>
 c008c12:	dd09      	ble.n	c008c28 <kad_op_conv1d+0x524>
 c008c14:	4670      	mov	r0, lr
 c008c16:	4652      	mov	r2, sl
 c008c18:	ecf2 6a01 	vldmia	r2!, {s13}
 c008c1c:	ecb0 7a01 	vldmia	r0!, {s14}
 c008c20:	4294      	cmp	r4, r2
 c008c22:	eee6 7a87 	vfma.f32	s15, s13, s14
 c008c26:	d1f7      	bne.n	c008c18 <kad_op_conv1d+0x514>
 c008c28:	ed96 7a00 	vldr	s14, [r6]
 c008c2c:	ee77 7a27 	vadd.f32	s15, s14, s15
 c008c30:	f10c 0c01 	add.w	ip, ip, #1
 c008c34:	45bc      	cmp	ip, r7
 c008c36:	ece6 7a01 	vstmia	r6!, {s15}
 c008c3a:	44c6      	add	lr, r8
 c008c3c:	d1e6      	bne.n	c008c0c <kad_op_conv1d+0x508>
 c008c3e:	9803      	ldr	r0, [sp, #12]
 c008c40:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 c008c42:	9a06      	ldr	r2, [sp, #24]
 c008c44:	4430      	add	r0, r6
 c008c46:	9003      	str	r0, [sp, #12]
 c008c48:	980c      	ldr	r0, [sp, #48]	@ 0x30
 c008c4a:	3201      	adds	r2, #1
 c008c4c:	4482      	add	sl, r0
 c008c4e:	4404      	add	r4, r0
 c008c50:	980a      	ldr	r0, [sp, #40]	@ 0x28
 c008c52:	9206      	str	r2, [sp, #24]
 c008c54:	4282      	cmp	r2, r0
 c008c56:	d1c3      	bne.n	c008be0 <kad_op_conv1d+0x4dc>
 c008c58:	e9dd 6210 	ldrd	r6, r2, [sp, #64]	@ 0x40
 c008c5c:	4618      	mov	r0, r3
 c008c5e:	9b01      	ldr	r3, [sp, #4]
 c008c60:	3601      	adds	r6, #1
 c008c62:	429e      	cmp	r6, r3
 c008c64:	f8dd e048 	ldr.w	lr, [sp, #72]	@ 0x48
 c008c68:	444a      	add	r2, r9
 c008c6a:	d191      	bne.n	c008b90 <kad_op_conv1d+0x48c>
 c008c6c:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 c008c6e:	9b02      	ldr	r3, [sp, #8]
 c008c70:	fb03 f606 	mul.w	r6, r3, r6
 c008c74:	2e00      	cmp	r6, #0
 c008c76:	f73f aec7 	bgt.w	c008a08 <kad_op_conv1d+0x304>
 c008c7a:	e558      	b.n	c00872e <kad_op_conv1d+0x2a>
 c008c7c:	9904      	ldr	r1, [sp, #16]
 c008c7e:	2700      	movs	r7, #0
 c008c80:	6989      	ldr	r1, [r1, #24]
 c008c82:	440b      	add	r3, r1
 c008c84:	1898      	adds	r0, r3, r2
 c008c86:	2104      	movs	r1, #4
 c008c88:	f006 f9dc 	bl	c00f044 <calloc>
 c008c8c:	9709      	str	r7, [sp, #36]	@ 0x24
 c008c8e:	9000      	str	r0, [sp, #0]
 c008c90:	970b      	str	r7, [sp, #44]	@ 0x2c
 c008c92:	e5c5      	b.n	c008820 <kad_op_conv1d+0x11c>
 c008c94:	2004      	movs	r0, #4
 c008c96:	e5b6      	b.n	c008806 <kad_op_conv1d+0x102>
 c008c98:	2004      	movs	r0, #4
 c008c9a:	e59d      	b.n	c0087d8 <kad_op_conv1d+0xd4>
 c008c9c:	6933      	ldr	r3, [r6, #16]
 c008c9e:	9a05      	ldr	r2, [sp, #20]
 c008ca0:	9308      	str	r3, [sp, #32]
 c008ca2:	fb03 f302 	mul.w	r3, r3, r2
 c008ca6:	2b00      	cmp	r3, #0
 c008ca8:	f8d6 8028 	ldr.w	r8, [r6, #40]	@ 0x28
 c008cac:	930e      	str	r3, [sp, #56]	@ 0x38
 c008cae:	f340 8298 	ble.w	c0091e2 <kad_op_conv1d+0xade>
 c008cb2:	9a03      	ldr	r2, [sp, #12]
 c008cb4:	1053      	asrs	r3, r2, #1
 c008cb6:	2b00      	cmp	r3, #0
 c008cb8:	dd2b      	ble.n	c008d12 <kad_op_conv1d+0x60e>
 c008cba:	0092      	lsls	r2, r2, #2
 c008cbc:	4641      	mov	r1, r8
 c008cbe:	2500      	movs	r5, #0
 c008cc0:	4694      	mov	ip, r2
 c008cc2:	9202      	str	r2, [sp, #8]
 c008cc4:	eb08 0483 	add.w	r4, r8, r3, lsl #2
 c008cc8:	460a      	mov	r2, r1
 c008cca:	4461      	add	r1, ip
 c008ccc:	4608      	mov	r0, r1
 c008cce:	f850 9d04 	ldr.w	r9, [r0, #-4]!
 c008cd2:	f8d2 e000 	ldr.w	lr, [r2]
 c008cd6:	f842 9b04 	str.w	r9, [r2], #4
 c008cda:	42a2      	cmp	r2, r4
 c008cdc:	f8c0 e000 	str.w	lr, [r0]
 c008ce0:	d1f5      	bne.n	c008cce <kad_op_conv1d+0x5ca>
 c008ce2:	eb02 040c 	add.w	r4, r2, ip
 c008ce6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 c008ce8:	3501      	adds	r5, #1
 c008cea:	42aa      	cmp	r2, r5
 c008cec:	d1ec      	bne.n	c008cc8 <kad_op_conv1d+0x5c4>
 c008cee:	2f00      	cmp	r7, #0
 c008cf0:	f040 8138 	bne.w	c008f64 <kad_op_conv1d+0x860>
 c008cf4:	9a04      	ldr	r2, [sp, #16]
 c008cf6:	6912      	ldr	r2, [r2, #16]
 c008cf8:	2a00      	cmp	r2, #0
 c008cfa:	f340 80e5 	ble.w	c008ec8 <kad_op_conv1d+0x7c4>
 c008cfe:	9a08      	ldr	r2, [sp, #32]
 c008d00:	2a00      	cmp	r2, #0
 c008d02:	f340 80e1 	ble.w	c008ec8 <kad_op_conv1d+0x7c4>
 c008d06:	9a05      	ldr	r2, [sp, #20]
 c008d08:	2a00      	cmp	r2, #0
 c008d0a:	dc14      	bgt.n	c008d36 <kad_op_conv1d+0x632>
 c008d0c:	e0dc      	b.n	c008ec8 <kad_op_conv1d+0x7c4>
 c008d0e:	2204      	movs	r2, #4
 c008d10:	e5c2      	b.n	c008898 <kad_op_conv1d+0x194>
 c008d12:	2f00      	cmp	r7, #0
 c008d14:	f040 8126 	bne.w	c008f64 <kad_op_conv1d+0x860>
 c008d18:	9b04      	ldr	r3, [sp, #16]
 c008d1a:	691b      	ldr	r3, [r3, #16]
 c008d1c:	2b00      	cmp	r3, #0
 c008d1e:	f77f aea4 	ble.w	c008a6a <kad_op_conv1d+0x366>
 c008d22:	9b08      	ldr	r3, [sp, #32]
 c008d24:	2b00      	cmp	r3, #0
 c008d26:	f77f aea0 	ble.w	c008a6a <kad_op_conv1d+0x366>
 c008d2a:	9b05      	ldr	r3, [sp, #20]
 c008d2c:	2b00      	cmp	r3, #0
 c008d2e:	f77f ae9c 	ble.w	c008a6a <kad_op_conv1d+0x366>
 c008d32:	0093      	lsls	r3, r2, #2
 c008d34:	9302      	str	r3, [sp, #8]
 c008d36:	2000      	movs	r0, #0
 c008d38:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
 c008d3c:	4607      	mov	r7, r0
 c008d3e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c008d40:	f8cd b01c 	str.w	fp, [sp, #28]
 c008d44:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 c008d48:	9b02      	ldr	r3, [sp, #8]
 c008d4a:	f8dd e010 	ldr.w	lr, [sp, #16]
 c008d4e:	eb08 0903 	add.w	r9, r8, r3
 c008d52:	46cb      	mov	fp, r9
 c008d54:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 c008d58:	f8cd 8054 	str.w	r8, [sp, #84]	@ 0x54
 c008d5c:	463e      	mov	r6, r7
 c008d5e:	465d      	mov	r5, fp
 c008d60:	2000      	movs	r0, #0
 c008d62:	4677      	mov	r7, lr
 c008d64:	f8cd b060 	str.w	fp, [sp, #96]	@ 0x60
 c008d68:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 c008d6a:	69b9      	ldr	r1, [r7, #24]
 c008d6c:	f8d4 8018 	ldr.w	r8, [r4, #24]
 c008d70:	f8d4 a02c 	ldr.w	sl, [r4, #44]	@ 0x2c
 c008d74:	6963      	ldr	r3, [r4, #20]
 c008d76:	2400      	movs	r4, #0
 c008d78:	fb03 0206 	mla	r2, r3, r6, r0
 c008d7c:	fb08 f202 	mul.w	r2, r8, r2
 c008d80:	940a      	str	r4, [sp, #40]	@ 0x28
 c008d82:	0094      	lsls	r4, r2, #2
 c008d84:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
 c008d88:	9213      	str	r2, [sp, #76]	@ 0x4c
 c008d8a:	9a02      	ldr	r2, [sp, #8]
 c008d8c:	697b      	ldr	r3, [r7, #20]
 c008d8e:	1aaa      	subs	r2, r5, r2
 c008d90:	9206      	str	r2, [sp, #24]
 c008d92:	ea4f 0288 	mov.w	r2, r8, lsl #2
 c008d96:	9201      	str	r2, [sp, #4]
 c008d98:	4652      	mov	r2, sl
 c008d9a:	46aa      	mov	sl, r5
 c008d9c:	4693      	mov	fp, r2
 c008d9e:	fb06 f303 	mul.w	r3, r6, r3
 c008da2:	fb01 f303 	mul.w	r3, r1, r3
 c008da6:	0089      	lsls	r1, r1, #2
 c008da8:	910c      	str	r1, [sp, #48]	@ 0x30
 c008daa:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 c008dac:	e9cd 5719 	strd	r5, r7, [sp, #100]	@ 0x64
 c008db0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 c008db4:	e9cd 601b 	strd	r6, r0, [sp, #108]	@ 0x6c
 c008db8:	ebc8 7388 	rsb	r3, r8, r8, lsl #30
 c008dbc:	009b      	lsls	r3, r3, #2
 c008dbe:	9412      	str	r4, [sp, #72]	@ 0x48
 c008dc0:	f8cd c074 	str.w	ip, [sp, #116]	@ 0x74
 c008dc4:	eb09 0488 	add.w	r4, r9, r8, lsl #2
 c008dc8:	9314      	str	r3, [sp, #80]	@ 0x50
 c008dca:	9b00      	ldr	r3, [sp, #0]
 c008dcc:	460d      	mov	r5, r1
 c008dce:	b14b      	cbz	r3, c008de4 <kad_op_conv1d+0x6e0>
 c008dd0:	9a07      	ldr	r2, [sp, #28]
 c008dd2:	9110      	str	r1, [sp, #64]	@ 0x40
 c008dd4:	6895      	ldr	r5, [r2, #8]
 c008dd6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 c008dd8:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 c008ddc:	4628      	mov	r0, r5
 c008dde:	f006 fcf6 	bl	c00f7ce <memcpy>
 c008de2:	9910      	ldr	r1, [sp, #64]	@ 0x40
 c008de4:	9b07      	ldr	r3, [sp, #28]
 c008de6:	685e      	ldr	r6, [r3, #4]
 c008de8:	9b03      	ldr	r3, [sp, #12]
 c008dea:	2e01      	cmp	r6, #1
 c008dec:	f340 8086 	ble.w	c008efc <kad_op_conv1d+0x7f8>
 c008df0:	2b00      	cmp	r3, #0
 c008df2:	dd36      	ble.n	c008e62 <kad_op_conv1d+0x75e>
 c008df4:	e9dd 7306 	ldrd	r7, r3, [sp, #24]
 c008df8:	689a      	ldr	r2, [r3, #8]
 c008dfa:	464b      	mov	r3, r9
 c008dfc:	ebc2 7282 	rsb	r2, r2, r2, lsl #30
 c008e00:	f8dd 9048 	ldr.w	r9, [sp, #72]	@ 0x48
 c008e04:	00b6      	lsls	r6, r6, #2
 c008e06:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 c008e0a:	9110      	str	r1, [sp, #64]	@ 0x40
 c008e0c:	4618      	mov	r0, r3
 c008e0e:	9a01      	ldr	r2, [sp, #4]
 c008e10:	2100      	movs	r1, #0
 c008e12:	f006 fc0d 	bl	c00f630 <memset>
 c008e16:	f1b8 0f00 	cmp.w	r8, #0
 c008e1a:	4603      	mov	r3, r0
 c008e1c:	ecf7 6a01 	vldmia	r7!, {s13}
 c008e20:	462a      	mov	r2, r5
 c008e22:	dd18      	ble.n	c008e56 <kad_op_conv1d+0x752>
 c008e24:	4601      	mov	r1, r0
 c008e26:	eb0b 0009 	add.w	r0, fp, r9
 c008e2a:	edd1 7a00 	vldr	s15, [r1]
 c008e2e:	ecb0 7a01 	vldmia	r0!, {s14}
 c008e32:	eee6 7a87 	vfma.f32	s15, s13, s14
 c008e36:	ece1 7a01 	vstmia	r1!, {s15}
 c008e3a:	428c      	cmp	r4, r1
 c008e3c:	d1f5      	bne.n	c008e2a <kad_op_conv1d+0x726>
 c008e3e:	4619      	mov	r1, r3
 c008e40:	edd2 7a00 	vldr	s15, [r2]
 c008e44:	ecb1 7a01 	vldmia	r1!, {s14}
 c008e48:	ee77 7a87 	vadd.f32	s15, s15, s14
 c008e4c:	428c      	cmp	r4, r1
 c008e4e:	edc2 7a00 	vstr	s15, [r2]
 c008e52:	4432      	add	r2, r6
 c008e54:	d1f4      	bne.n	c008e40 <kad_op_conv1d+0x73c>
 c008e56:	45ba      	cmp	sl, r7
 c008e58:	f105 0504 	add.w	r5, r5, #4
 c008e5c:	d1d6      	bne.n	c008e0c <kad_op_conv1d+0x708>
 c008e5e:	4699      	mov	r9, r3
 c008e60:	9910      	ldr	r1, [sp, #64]	@ 0x40
 c008e62:	9a02      	ldr	r2, [sp, #8]
 c008e64:	9806      	ldr	r0, [sp, #24]
 c008e66:	4492      	add	sl, r2
 c008e68:	4410      	add	r0, r2
 c008e6a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 c008e6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c008e6e:	4411      	add	r1, r2
 c008e70:	9a05      	ldr	r2, [sp, #20]
 c008e72:	3301      	adds	r3, #1
 c008e74:	429a      	cmp	r2, r3
 c008e76:	930a      	str	r3, [sp, #40]	@ 0x28
 c008e78:	9006      	str	r0, [sp, #24]
 c008e7a:	d1a6      	bne.n	c008dca <kad_op_conv1d+0x6c6>
 c008e7c:	e9dd 601b 	ldrd	r6, r0, [sp, #108]	@ 0x6c
 c008e80:	e9dd 5719 	ldrd	r5, r7, [sp, #100]	@ 0x64
 c008e84:	9b08      	ldr	r3, [sp, #32]
 c008e86:	f8dd c074 	ldr.w	ip, [sp, #116]	@ 0x74
 c008e8a:	3001      	adds	r0, #1
 c008e8c:	4283      	cmp	r3, r0
 c008e8e:	4465      	add	r5, ip
 c008e90:	f47f af6a 	bne.w	c008d68 <kad_op_conv1d+0x664>
 c008e94:	46be      	mov	lr, r7
 c008e96:	4637      	mov	r7, r6
 c008e98:	f8de 3010 	ldr.w	r3, [lr, #16]
 c008e9c:	3701      	adds	r7, #1
 c008e9e:	42bb      	cmp	r3, r7
 c008ea0:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 c008ea4:	f73f af5a 	bgt.w	c008d5c <kad_op_conv1d+0x658>
 c008ea8:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	@ 0x58
 c008eac:	f8dd 8054 	ldr.w	r8, [sp, #84]	@ 0x54
 c008eb0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 c008eb4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c008eb6:	2b00      	cmp	r3, #0
 c008eb8:	dd41      	ble.n	c008f3e <kad_op_conv1d+0x83a>
 c008eba:	9a03      	ldr	r2, [sp, #12]
 c008ebc:	1053      	asrs	r3, r2, #1
 c008ebe:	2b00      	cmp	r3, #0
 c008ec0:	f77f add3 	ble.w	c008a6a <kad_op_conv1d+0x366>
 c008ec4:	0092      	lsls	r2, r2, #2
 c008ec6:	9202      	str	r2, [sp, #8]
 c008ec8:	4642      	mov	r2, r8
 c008eca:	2000      	movs	r0, #0
 c008ecc:	9d02      	ldr	r5, [sp, #8]
 c008ece:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 c008ed2:	4611      	mov	r1, r2
 c008ed4:	442a      	add	r2, r5
 c008ed6:	4614      	mov	r4, r2
 c008ed8:	f854 ed04 	ldr.w	lr, [r4, #-4]!
 c008edc:	f8d1 c000 	ldr.w	ip, [r1]
 c008ee0:	f841 eb04 	str.w	lr, [r1], #4
 c008ee4:	428b      	cmp	r3, r1
 c008ee6:	f8c4 c000 	str.w	ip, [r4]
 c008eea:	d1f5      	bne.n	c008ed8 <kad_op_conv1d+0x7d4>
 c008eec:	990e      	ldr	r1, [sp, #56]	@ 0x38
 c008eee:	3001      	adds	r0, #1
 c008ef0:	4281      	cmp	r1, r0
 c008ef2:	442b      	add	r3, r5
 c008ef4:	d1ed      	bne.n	c008ed2 <kad_op_conv1d+0x7ce>
 c008ef6:	e5b8      	b.n	c008a6a <kad_op_conv1d+0x366>
 c008ef8:	00000000 	.word	0x00000000
 c008efc:	2b00      	cmp	r3, #0
 c008efe:	ddb0      	ble.n	c008e62 <kad_op_conv1d+0x75e>
 c008f00:	9b07      	ldr	r3, [sp, #28]
 c008f02:	f1b8 0f00 	cmp.w	r8, #0
 c008f06:	689a      	ldr	r2, [r3, #8]
 c008f08:	ddab      	ble.n	c008e62 <kad_op_conv1d+0x75e>
 c008f0a:	e9dd 7313 	ldrd	r7, r3, [sp, #76]	@ 0x4c
 c008f0e:	eba8 0202 	sub.w	r2, r8, r2
 c008f12:	9e06      	ldr	r6, [sp, #24]
 c008f14:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 c008f18:	ecf6 6a01 	vldmia	r6!, {s13}
 c008f1c:	4638      	mov	r0, r7
 c008f1e:	195a      	adds	r2, r3, r5
 c008f20:	edd2 7a00 	vldr	s15, [r2]
 c008f24:	ecb0 7a01 	vldmia	r0!, {s14}
 c008f28:	eee6 7a87 	vfma.f32	s15, s13, s14
 c008f2c:	ece2 7a01 	vstmia	r2!, {s15}
 c008f30:	42aa      	cmp	r2, r5
 c008f32:	d1f5      	bne.n	c008f20 <kad_op_conv1d+0x81c>
 c008f34:	4556      	cmp	r6, sl
 c008f36:	f105 0504 	add.w	r5, r5, #4
 c008f3a:	d1ed      	bne.n	c008f18 <kad_op_conv1d+0x814>
 c008f3c:	e791      	b.n	c008e62 <kad_op_conv1d+0x75e>
 c008f3e:	7873      	ldrb	r3, [r6, #1]
 c008f40:	07db      	lsls	r3, r3, #31
 c008f42:	f57f abf4 	bpl.w	c00872e <kad_op_conv1d+0x2a>
 c008f46:	f8d6 902c 	ldr.w	r9, [r6, #44]	@ 0x2c
 c008f4a:	2f00      	cmp	r7, #0
 c008f4c:	f040 8251 	bne.w	c0093f2 <kad_op_conv1d+0xcee>
 c008f50:	9b04      	ldr	r3, [sp, #16]
 c008f52:	691b      	ldr	r3, [r3, #16]
 c008f54:	2b00      	cmp	r3, #0
 c008f56:	f77f abea 	ble.w	c00872e <kad_op_conv1d+0x2a>
 c008f5a:	9b08      	ldr	r3, [sp, #32]
 c008f5c:	2b00      	cmp	r3, #0
 c008f5e:	f300 8163 	bgt.w	c009228 <kad_op_conv1d+0xb24>
 c008f62:	e1fb      	b.n	c00935c <kad_op_conv1d+0xc58>
 c008f64:	9b04      	ldr	r3, [sp, #16]
 c008f66:	781a      	ldrb	r2, [r3, #0]
 c008f68:	2a00      	cmp	r2, #0
 c008f6a:	f000 8138 	beq.w	c0091de <kad_op_conv1d+0xada>
 c008f6e:	2a01      	cmp	r2, #1
 c008f70:	4618      	mov	r0, r3
 c008f72:	691b      	ldr	r3, [r3, #16]
 c008f74:	d00b      	beq.n	c008f8e <kad_op_conv1d+0x88a>
 c008f76:	6941      	ldr	r1, [r0, #20]
 c008f78:	2a02      	cmp	r2, #2
 c008f7a:	fb01 f303 	mul.w	r3, r1, r3
 c008f7e:	d006      	beq.n	c008f8e <kad_op_conv1d+0x88a>
 c008f80:	6981      	ldr	r1, [r0, #24]
 c008f82:	2a03      	cmp	r2, #3
 c008f84:	fb01 f303 	mul.w	r3, r1, r3
 c008f88:	bf1c      	itt	ne
 c008f8a:	69c2      	ldrne	r2, [r0, #28]
 c008f8c:	4353      	mulne	r3, r2
 c008f8e:	009a      	lsls	r2, r3, #2
 c008f90:	2100      	movs	r1, #0
 c008f92:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c008f94:	f006 fb4c 	bl	c00f630 <memset>
 c008f98:	9b08      	ldr	r3, [sp, #32]
 c008f9a:	2b00      	cmp	r3, #0
 c008f9c:	f340 8118 	ble.w	c0091d0 <kad_op_conv1d+0xacc>
 c008fa0:	f8d6 e014 	ldr.w	lr, [r6, #20]
 c008fa4:	f1be 0f00 	cmp.w	lr, #0
 c008fa8:	dd39      	ble.n	c00901e <kad_op_conv1d+0x91a>
 c008faa:	f04f 0900 	mov.w	r9, #0
 c008fae:	464a      	mov	r2, r9
 c008fb0:	f8d6 c018 	ldr.w	ip, [r6, #24]
 c008fb4:	ea4f 008e 	mov.w	r0, lr, lsl #2
 c008fb8:	ea4f 038c 	mov.w	r3, ip, lsl #2
 c008fbc:	9301      	str	r3, [sp, #4]
 c008fbe:	f8cd b008 	str.w	fp, [sp, #8]
 c008fc2:	f1bc 0f00 	cmp.w	ip, #0
 c008fc6:	fb0c f502 	mul.w	r5, ip, r2
 c008fca:	dd21      	ble.n	c009010 <kad_op_conv1d+0x90c>
 c008fcc:	f04f 0b00 	mov.w	fp, #0
 c008fd0:	fb0c f109 	mul.w	r1, ip, r9
 c008fd4:	fb0e f505 	mul.w	r5, lr, r5
 c008fd8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c008fda:	eb0c 0a01 	add.w	sl, ip, r1
 c008fde:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 c008fe2:	eb08 048a 	add.w	r4, r8, sl, lsl #2
 c008fe6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
 c008fea:	4629      	mov	r1, r5
 c008fec:	ecf3 7a01 	vldmia	r3!, {s15}
 c008ff0:	42a3      	cmp	r3, r4
 c008ff2:	edc1 7a00 	vstr	s15, [r1]
 c008ff6:	4401      	add	r1, r0
 c008ff8:	d1f8      	bne.n	c008fec <kad_op_conv1d+0x8e8>
 c008ffa:	9b01      	ldr	r3, [sp, #4]
 c008ffc:	f10b 0b01 	add.w	fp, fp, #1
 c009000:	45f3      	cmp	fp, lr
 c009002:	4651      	mov	r1, sl
 c009004:	f105 0504 	add.w	r5, r5, #4
 c009008:	441c      	add	r4, r3
 c00900a:	d001      	beq.n	c009010 <kad_op_conv1d+0x90c>
 c00900c:	44e2      	add	sl, ip
 c00900e:	e7ea      	b.n	c008fe6 <kad_op_conv1d+0x8e2>
 c009010:	9b08      	ldr	r3, [sp, #32]
 c009012:	3201      	adds	r2, #1
 c009014:	4293      	cmp	r3, r2
 c009016:	44f1      	add	r9, lr
 c009018:	d1d3      	bne.n	c008fc2 <kad_op_conv1d+0x8be>
 c00901a:	f8dd b008 	ldr.w	fp, [sp, #8]
 c00901e:	9a04      	ldr	r2, [sp, #16]
 c009020:	6953      	ldr	r3, [r2, #20]
 c009022:	f8d2 9010 	ldr.w	r9, [r2, #16]
 c009026:	4619      	mov	r1, r3
 c009028:	9302      	str	r3, [sp, #8]
 c00902a:	f8db 3004 	ldr.w	r3, [fp, #4]
 c00902e:	f1b9 0f00 	cmp.w	r9, #0
 c009032:	fb01 f303 	mul.w	r3, r1, r3
 c009036:	f77f af3d 	ble.w	c008eb4 <kad_op_conv1d+0x7b0>
 c00903a:	2100      	movs	r1, #0
 c00903c:	46b6      	mov	lr, r6
 c00903e:	468a      	mov	sl, r1
 c009040:	46bc      	mov	ip, r7
 c009042:	009c      	lsls	r4, r3, #2
 c009044:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c009046:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 c009048:	009b      	lsls	r3, r3, #2
 c00904a:	9101      	str	r1, [sp, #4]
 c00904c:	9306      	str	r3, [sp, #24]
 c00904e:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 c009052:	6953      	ldr	r3, [r2, #20]
 c009054:	6995      	ldr	r5, [r2, #24]
 c009056:	fb03 f30a 	mul.w	r3, r3, sl
 c00905a:	fb05 f303 	mul.w	r3, r5, r3
 c00905e:	6ad7      	ldr	r7, [r2, #44]	@ 0x2c
 c009060:	f8cd a030 	str.w	sl, [sp, #48]	@ 0x30
 c009064:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 c009068:	00ab      	lsls	r3, r5, #2
 c00906a:	9307      	str	r3, [sp, #28]
 c00906c:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 c009070:	f04f 0800 	mov.w	r8, #0
 c009074:	4673      	mov	r3, lr
 c009076:	46e1      	mov	r9, ip
 c009078:	4692      	mov	sl, r2
 c00907a:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 c00907c:	9a04      	ldr	r2, [sp, #16]
 c00907e:	9901      	ldr	r1, [sp, #4]
 c009080:	6992      	ldr	r2, [r2, #24]
 c009082:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c009084:	fb02 f101 	mul.w	r1, r2, r1
 c009088:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 c00908c:	9800      	ldr	r0, [sp, #0]
 c00908e:	b178      	cbz	r0, c0090b0 <kad_op_conv1d+0x9ac>
 c009090:	f8db 0008 	ldr.w	r0, [fp, #8]
 c009094:	9312      	str	r3, [sp, #72]	@ 0x48
 c009096:	9b02      	ldr	r3, [sp, #8]
 c009098:	fb03 f202 	mul.w	r2, r3, r2
 c00909c:	fb03 f000 	mul.w	r0, r3, r0
 c0090a0:	9b00      	ldr	r3, [sp, #0]
 c0090a2:	0092      	lsls	r2, r2, #2
 c0090a4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 c0090a8:	f006 fb91 	bl	c00f7ce <memcpy>
 c0090ac:	9900      	ldr	r1, [sp, #0]
 c0090ae:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 c0090b0:	2d00      	cmp	r5, #0
 c0090b2:	dd1f      	ble.n	c0090f4 <kad_op_conv1d+0x9f0>
 c0090b4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 c0090b6:	2a00      	cmp	r2, #0
 c0090b8:	dd1c      	ble.n	c0090f4 <kad_op_conv1d+0x9f0>
 c0090ba:	46be      	mov	lr, r7
 c0090bc:	f04f 0c00 	mov.w	ip, #0
 c0090c0:	9a06      	ldr	r2, [sp, #24]
 c0090c2:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 c0090c6:	1888      	adds	r0, r1, r2
 c0090c8:	ecfe 6a01 	vldmia	lr!, {s13}
 c0090cc:	460a      	mov	r2, r1
 c0090ce:	46b0      	mov	r8, r6
 c0090d0:	edd2 7a00 	vldr	s15, [r2]
 c0090d4:	ecb8 7a01 	vldmia	r8!, {s14}
 c0090d8:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0090dc:	ece2 7a01 	vstmia	r2!, {s15}
 c0090e0:	4282      	cmp	r2, r0
 c0090e2:	d1f5      	bne.n	c0090d0 <kad_op_conv1d+0x9cc>
 c0090e4:	f10c 0c01 	add.w	ip, ip, #1
 c0090e8:	45ac      	cmp	ip, r5
 c0090ea:	4421      	add	r1, r4
 c0090ec:	4420      	add	r0, r4
 c0090ee:	d1eb      	bne.n	c0090c8 <kad_op_conv1d+0x9c4>
 c0090f0:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 c0090f4:	9a06      	ldr	r2, [sp, #24]
 c0090f6:	f108 0801 	add.w	r8, r8, #1
 c0090fa:	4416      	add	r6, r2
 c0090fc:	9a07      	ldr	r2, [sp, #28]
 c0090fe:	4417      	add	r7, r2
 c009100:	9a08      	ldr	r2, [sp, #32]
 c009102:	4542      	cmp	r2, r8
 c009104:	d1ba      	bne.n	c00907c <kad_op_conv1d+0x978>
 c009106:	4652      	mov	r2, sl
 c009108:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 c00910c:	46cc      	mov	ip, r9
 c00910e:	f8dd 9040 	ldr.w	r9, [sp, #64]	@ 0x40
 c009112:	f10a 0a01 	add.w	sl, sl, #1
 c009116:	469e      	mov	lr, r3
 c009118:	e9dd 3101 	ldrd	r3, r1, [sp, #4]
 c00911c:	45ca      	cmp	sl, r9
 c00911e:	440b      	add	r3, r1
 c009120:	9301      	str	r3, [sp, #4]
 c009122:	d196      	bne.n	c009052 <kad_op_conv1d+0x94e>
 c009124:	4676      	mov	r6, lr
 c009126:	4667      	mov	r7, ip
 c009128:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 c00912c:	9b04      	ldr	r3, [sp, #16]
 c00912e:	f8d3 e014 	ldr.w	lr, [r3, #20]
 c009132:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 c009134:	f1be 0f00 	cmp.w	lr, #0
 c009138:	9202      	str	r2, [sp, #8]
 c00913a:	f77f aebb 	ble.w	c008eb4 <kad_op_conv1d+0x7b0>
 c00913e:	f04f 0a00 	mov.w	sl, #0
 c009142:	f8d3 c018 	ldr.w	ip, [r3, #24]
 c009146:	4652      	mov	r2, sl
 c009148:	ea4f 038c 	mov.w	r3, ip, lsl #2
 c00914c:	9306      	str	r3, [sp, #24]
 c00914e:	465b      	mov	r3, fp
 c009150:	ea4f 008e 	mov.w	r0, lr, lsl #2
 c009154:	f8cd 801c 	str.w	r8, [sp, #28]
 c009158:	f1bc 0f00 	cmp.w	ip, #0
 c00915c:	fb0c f502 	mul.w	r5, ip, r2
 c009160:	dd2e      	ble.n	c0091c0 <kad_op_conv1d+0xabc>
 c009162:	f04f 0b00 	mov.w	fp, #0
 c009166:	fb0e f505 	mul.w	r5, lr, r5
 c00916a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 c00916c:	9c02      	ldr	r4, [sp, #8]
 c00916e:	eb01 0585 	add.w	r5, r1, r5, lsl #2
 c009172:	fb0c f10a 	mul.w	r1, ip, sl
 c009176:	eb0c 0801 	add.w	r8, ip, r1
 c00917a:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 c00917e:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 c009182:	9301      	str	r3, [sp, #4]
 c009184:	46a9      	mov	r9, r5
 c009186:	9b02      	ldr	r3, [sp, #8]
 c009188:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 c00918c:	9b01      	ldr	r3, [sp, #4]
 c00918e:	ed91 7a00 	vldr	s14, [r1]
 c009192:	edd9 7a00 	vldr	s15, [r9]
 c009196:	ee77 7a87 	vadd.f32	s15, s15, s14
 c00919a:	ece1 7a01 	vstmia	r1!, {s15}
 c00919e:	42a1      	cmp	r1, r4
 c0091a0:	4481      	add	r9, r0
 c0091a2:	d1f4      	bne.n	c00918e <kad_op_conv1d+0xa8a>
 c0091a4:	9906      	ldr	r1, [sp, #24]
 c0091a6:	f10b 0b01 	add.w	fp, fp, #1
 c0091aa:	45f3      	cmp	fp, lr
 c0091ac:	440c      	add	r4, r1
 c0091ae:	9301      	str	r3, [sp, #4]
 c0091b0:	4641      	mov	r1, r8
 c0091b2:	f105 0504 	add.w	r5, r5, #4
 c0091b6:	d001      	beq.n	c0091bc <kad_op_conv1d+0xab8>
 c0091b8:	44e0      	add	r8, ip
 c0091ba:	e7e3      	b.n	c009184 <kad_op_conv1d+0xa80>
 c0091bc:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 c0091c0:	3201      	adds	r2, #1
 c0091c2:	4591      	cmp	r9, r2
 c0091c4:	44f2      	add	sl, lr
 c0091c6:	d1c7      	bne.n	c009158 <kad_op_conv1d+0xa54>
 c0091c8:	469b      	mov	fp, r3
 c0091ca:	f8dd 801c 	ldr.w	r8, [sp, #28]
 c0091ce:	e671      	b.n	c008eb4 <kad_op_conv1d+0x7b0>
 c0091d0:	9b04      	ldr	r3, [sp, #16]
 c0091d2:	f8d3 9010 	ldr.w	r9, [r3, #16]
 c0091d6:	f1b9 0f00 	cmp.w	r9, #0
 c0091da:	dca7      	bgt.n	c00912c <kad_op_conv1d+0xa28>
 c0091dc:	e66a      	b.n	c008eb4 <kad_op_conv1d+0x7b0>
 c0091de:	2204      	movs	r2, #4
 c0091e0:	e6d6      	b.n	c008f90 <kad_op_conv1d+0x88c>
 c0091e2:	2f00      	cmp	r7, #0
 c0091e4:	f47f aebe 	bne.w	c008f64 <kad_op_conv1d+0x860>
 c0091e8:	9b04      	ldr	r3, [sp, #16]
 c0091ea:	691b      	ldr	r3, [r3, #16]
 c0091ec:	2b00      	cmp	r3, #0
 c0091ee:	f77f aea6 	ble.w	c008f3e <kad_op_conv1d+0x83a>
 c0091f2:	9b08      	ldr	r3, [sp, #32]
 c0091f4:	2b00      	cmp	r3, #0
 c0091f6:	f77f aea2 	ble.w	c008f3e <kad_op_conv1d+0x83a>
 c0091fa:	2a00      	cmp	r2, #0
 c0091fc:	f77f ae9f 	ble.w	c008f3e <kad_op_conv1d+0x83a>
 c009200:	9b03      	ldr	r3, [sp, #12]
 c009202:	009b      	lsls	r3, r3, #2
 c009204:	9302      	str	r3, [sp, #8]
 c009206:	e596      	b.n	c008d36 <kad_op_conv1d+0x632>
 c009208:	f04f 30ff 	mov.w	r0, #4294967295
 c00920c:	f7ff ba9c 	b.w	c008748 <kad_op_conv1d+0x44>
 c009210:	9a04      	ldr	r2, [sp, #16]
 c009212:	6912      	ldr	r2, [r2, #16]
 c009214:	2f00      	cmp	r7, #0
 c009216:	f040 80ec 	bne.w	c0093f2 <kad_op_conv1d+0xcee>
 c00921a:	2a00      	cmp	r2, #0
 c00921c:	f77f aa87 	ble.w	c00872e <kad_op_conv1d+0x2a>
 c009220:	9a08      	ldr	r2, [sp, #32]
 c009222:	2a00      	cmp	r2, #0
 c009224:	f340 80a0 	ble.w	c009368 <kad_op_conv1d+0xc64>
 c009228:	9b05      	ldr	r3, [sp, #20]
 c00922a:	2b00      	cmp	r3, #0
 c00922c:	f340 8096 	ble.w	c00935c <kad_op_conv1d+0xc58>
 c009230:	f04f 0c00 	mov.w	ip, #0
 c009234:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c009236:	f8dd e010 	ldr.w	lr, [sp, #16]
 c00923a:	009b      	lsls	r3, r3, #2
 c00923c:	930a      	str	r3, [sp, #40]	@ 0x28
 c00923e:	9b03      	ldr	r3, [sp, #12]
 c009240:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 c009244:	009b      	lsls	r3, r3, #2
 c009246:	9302      	str	r3, [sp, #8]
 c009248:	2000      	movs	r0, #0
 c00924a:	464a      	mov	r2, r9
 c00924c:	4673      	mov	r3, lr
 c00924e:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 c009252:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 c009254:	695c      	ldr	r4, [r3, #20]
 c009256:	69af      	ldr	r7, [r5, #24]
 c009258:	6969      	ldr	r1, [r5, #20]
 c00925a:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
 c00925e:	2500      	movs	r5, #0
 c009260:	fb04 f40c 	mul.w	r4, r4, ip
 c009264:	fb01 080c 	mla	r8, r1, ip, r0
 c009268:	6999      	ldr	r1, [r3, #24]
 c00926a:	fb07 f808 	mul.w	r8, r7, r8
 c00926e:	fb01 f404 	mul.w	r4, r1, r4
 c009272:	0089      	lsls	r1, r1, #2
 c009274:	9106      	str	r1, [sp, #24]
 c009276:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 c009278:	9504      	str	r5, [sp, #16]
 c00927a:	e9cd 3010 	strd	r3, r0, [sp, #64]	@ 0x40
 c00927e:	9d02      	ldr	r5, [sp, #8]
 c009280:	e9cd c212 	strd	ip, r2, [sp, #72]	@ 0x48
 c009284:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 c009288:	eb09 0487 	add.w	r4, r9, r7, lsl #2
 c00928c:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 c009290:	1956      	adds	r6, r2, r5
 c009292:	ea4f 0888 	mov.w	r8, r8, lsl #2
 c009296:	9201      	str	r2, [sp, #4]
 c009298:	eb0a 0587 	add.w	r5, sl, r7, lsl #2
 c00929c:	9a00      	ldr	r2, [sp, #0]
 c00929e:	460b      	mov	r3, r1
 c0092a0:	b152      	cbz	r2, c0092b8 <kad_op_conv1d+0xbb4>
 c0092a2:	f8db 3008 	ldr.w	r3, [fp, #8]
 c0092a6:	9107      	str	r1, [sp, #28]
 c0092a8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 c0092ac:	4618      	mov	r0, r3
 c0092ae:	9a06      	ldr	r2, [sp, #24]
 c0092b0:	f006 fa8d 	bl	c00f7ce <memcpy>
 c0092b4:	4603      	mov	r3, r0
 c0092b6:	9907      	ldr	r1, [sp, #28]
 c0092b8:	f8db 2004 	ldr.w	r2, [fp, #4]
 c0092bc:	2a01      	cmp	r2, #1
 c0092be:	dd73      	ble.n	c0093a8 <kad_op_conv1d+0xca4>
 c0092c0:	9803      	ldr	r0, [sp, #12]
 c0092c2:	2800      	cmp	r0, #0
 c0092c4:	dd2a      	ble.n	c00931c <kad_op_conv1d+0xc18>
 c0092c6:	f8db 0008 	ldr.w	r0, [fp, #8]
 c0092ca:	f8dd c004 	ldr.w	ip, [sp, #4]
 c0092ce:	ebc0 7080 	rsb	r0, r0, r0, lsl #30
 c0092d2:	0092      	lsls	r2, r2, #2
 c0092d4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 c0092d8:	2f00      	cmp	r7, #0
 c0092da:	4603      	mov	r3, r0
 c0092dc:	dd61      	ble.n	c0093a2 <kad_op_conv1d+0xc9e>
 c0092de:	46d6      	mov	lr, sl
 c0092e0:	edd3 7a00 	vldr	s15, [r3]
 c0092e4:	ecee 7a01 	vstmia	lr!, {s15}
 c0092e8:	4575      	cmp	r5, lr
 c0092ea:	4413      	add	r3, r2
 c0092ec:	d1f8      	bne.n	c0092e0 <kad_op_conv1d+0xbdc>
 c0092ee:	eddf 7ab3 	vldr	s15, [pc, #716]	@ c0095bc <kad_op_conv1d+0xeb8>
 c0092f2:	46d6      	mov	lr, sl
 c0092f4:	eb09 0308 	add.w	r3, r9, r8
 c0092f8:	ecf3 6a01 	vldmia	r3!, {s13}
 c0092fc:	ecbe 7a01 	vldmia	lr!, {s14}
 c009300:	429c      	cmp	r4, r3
 c009302:	eee6 7a87 	vfma.f32	s15, s13, s14
 c009306:	d1f7      	bne.n	c0092f8 <kad_op_conv1d+0xbf4>
 c009308:	ed9c 7a00 	vldr	s14, [ip]
 c00930c:	ee77 7a27 	vadd.f32	s15, s14, s15
 c009310:	ecec 7a01 	vstmia	ip!, {s15}
 c009314:	4566      	cmp	r6, ip
 c009316:	f100 0004 	add.w	r0, r0, #4
 c00931a:	d1dd      	bne.n	c0092d8 <kad_op_conv1d+0xbd4>
 c00931c:	e9dd 2001 	ldrd	r2, r0, [sp, #4]
 c009320:	4402      	add	r2, r0
 c009322:	9201      	str	r2, [sp, #4]
 c009324:	9a06      	ldr	r2, [sp, #24]
 c009326:	9b04      	ldr	r3, [sp, #16]
 c009328:	4411      	add	r1, r2
 c00932a:	9a05      	ldr	r2, [sp, #20]
 c00932c:	3301      	adds	r3, #1
 c00932e:	429a      	cmp	r2, r3
 c009330:	9304      	str	r3, [sp, #16]
 c009332:	4406      	add	r6, r0
 c009334:	d1b2      	bne.n	c00929c <kad_op_conv1d+0xb98>
 c009336:	e9dd c212 	ldrd	ip, r2, [sp, #72]	@ 0x48
 c00933a:	e9dd 3010 	ldrd	r3, r0, [sp, #64]	@ 0x40
 c00933e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 c009340:	3001      	adds	r0, #1
 c009342:	440a      	add	r2, r1
 c009344:	9908      	ldr	r1, [sp, #32]
 c009346:	4288      	cmp	r0, r1
 c009348:	d183      	bne.n	c009252 <kad_op_conv1d+0xb4e>
 c00934a:	469e      	mov	lr, r3
 c00934c:	691b      	ldr	r3, [r3, #16]
 c00934e:	f10c 0c01 	add.w	ip, ip, #1
 c009352:	4563      	cmp	r3, ip
 c009354:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 c009358:	f73f af76 	bgt.w	c009248 <kad_op_conv1d+0xb44>
 c00935c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c00935e:	2b00      	cmp	r3, #0
 c009360:	f77f a9e5 	ble.w	c00872e <kad_op_conv1d+0x2a>
 c009364:	9b03      	ldr	r3, [sp, #12]
 c009366:	105b      	asrs	r3, r3, #1
 c009368:	2b00      	cmp	r3, #0
 c00936a:	f77f a9e0 	ble.w	c00872e <kad_op_conv1d+0x2a>
 c00936e:	9a03      	ldr	r2, [sp, #12]
 c009370:	0092      	lsls	r2, r2, #2
 c009372:	9202      	str	r2, [sp, #8]
 c009374:	464a      	mov	r2, r9
 c009376:	2000      	movs	r0, #0
 c009378:	9d02      	ldr	r5, [sp, #8]
 c00937a:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 c00937e:	4611      	mov	r1, r2
 c009380:	442a      	add	r2, r5
 c009382:	4614      	mov	r4, r2
 c009384:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 c009388:	680e      	ldr	r6, [r1, #0]
 c00938a:	f841 7b04 	str.w	r7, [r1], #4
 c00938e:	428b      	cmp	r3, r1
 c009390:	6026      	str	r6, [r4, #0]
 c009392:	d1f7      	bne.n	c009384 <kad_op_conv1d+0xc80>
 c009394:	990e      	ldr	r1, [sp, #56]	@ 0x38
 c009396:	3001      	adds	r0, #1
 c009398:	4281      	cmp	r1, r0
 c00939a:	442b      	add	r3, r5
 c00939c:	d1ef      	bne.n	c00937e <kad_op_conv1d+0xc7a>
 c00939e:	f7ff b9c6 	b.w	c00872e <kad_op_conv1d+0x2a>
 c0093a2:	eddf 7a86 	vldr	s15, [pc, #536]	@ c0095bc <kad_op_conv1d+0xeb8>
 c0093a6:	e7af      	b.n	c009308 <kad_op_conv1d+0xc04>
 c0093a8:	9a03      	ldr	r2, [sp, #12]
 c0093aa:	2a00      	cmp	r2, #0
 c0093ac:	ddb6      	ble.n	c00931c <kad_op_conv1d+0xc18>
 c0093ae:	f8db 2008 	ldr.w	r2, [fp, #8]
 c0093b2:	9801      	ldr	r0, [sp, #4]
 c0093b4:	ebc2 7282 	rsb	r2, r2, r2, lsl #30
 c0093b8:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 c0093bc:	2f00      	cmp	r7, #0
 c0093be:	eddf 7a7f 	vldr	s15, [pc, #508]	@ c0095bc <kad_op_conv1d+0xeb8>
 c0093c2:	dd0b      	ble.n	c0093dc <kad_op_conv1d+0xcd8>
 c0093c4:	eb09 0208 	add.w	r2, r9, r8
 c0093c8:	eb03 0c0e 	add.w	ip, r3, lr
 c0093cc:	ecf2 6a01 	vldmia	r2!, {s13}
 c0093d0:	ecbc 7a01 	vldmia	ip!, {s14}
 c0093d4:	4294      	cmp	r4, r2
 c0093d6:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0093da:	d1f7      	bne.n	c0093cc <kad_op_conv1d+0xcc8>
 c0093dc:	ed90 7a00 	vldr	s14, [r0]
 c0093e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 c0093e4:	ece0 7a01 	vstmia	r0!, {s15}
 c0093e8:	4286      	cmp	r6, r0
 c0093ea:	f10e 0e04 	add.w	lr, lr, #4
 c0093ee:	d1e5      	bne.n	c0093bc <kad_op_conv1d+0xcb8>
 c0093f0:	e794      	b.n	c00931c <kad_op_conv1d+0xc18>
 c0093f2:	9b04      	ldr	r3, [sp, #16]
 c0093f4:	691a      	ldr	r2, [r3, #16]
 c0093f6:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 c0093f8:	2a00      	cmp	r2, #0
 c0093fa:	9202      	str	r2, [sp, #8]
 c0093fc:	9101      	str	r1, [sp, #4]
 c0093fe:	f340 814b 	ble.w	c009698 <kad_op_conv1d+0xf94>
 c009402:	f8d3 c014 	ldr.w	ip, [r3, #20]
 c009406:	f1bc 0f00 	cmp.w	ip, #0
 c00940a:	dd33      	ble.n	c009474 <kad_op_conv1d+0xd70>
 c00940c:	f04f 0800 	mov.w	r8, #0
 c009410:	4642      	mov	r2, r8
 c009412:	699f      	ldr	r7, [r3, #24]
 c009414:	ea4f 0e8c 	mov.w	lr, ip, lsl #2
 c009418:	00bb      	lsls	r3, r7, #2
 c00941a:	9306      	str	r3, [sp, #24]
 c00941c:	2f00      	cmp	r7, #0
 c00941e:	fb07 f402 	mul.w	r4, r7, r2
 c009422:	dd22      	ble.n	c00946a <kad_op_conv1d+0xd66>
 c009424:	f04f 0a00 	mov.w	sl, #0
 c009428:	fb0c f404 	mul.w	r4, ip, r4
 c00942c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 c00942e:	9901      	ldr	r1, [sp, #4]
 c009430:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 c009434:	fb07 f308 	mul.w	r3, r7, r8
 c009438:	19dd      	adds	r5, r3, r7
 c00943a:	eb01 0085 	add.w	r0, r1, r5, lsl #2
 c00943e:	9901      	ldr	r1, [sp, #4]
 c009440:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 c009444:	4621      	mov	r1, r4
 c009446:	ecf3 7a01 	vldmia	r3!, {s15}
 c00944a:	4298      	cmp	r0, r3
 c00944c:	edc1 7a00 	vstr	s15, [r1]
 c009450:	4471      	add	r1, lr
 c009452:	d1f8      	bne.n	c009446 <kad_op_conv1d+0xd42>
 c009454:	9b06      	ldr	r3, [sp, #24]
 c009456:	f10a 0a01 	add.w	sl, sl, #1
 c00945a:	45e2      	cmp	sl, ip
 c00945c:	4418      	add	r0, r3
 c00945e:	f104 0404 	add.w	r4, r4, #4
 c009462:	462b      	mov	r3, r5
 c009464:	d001      	beq.n	c00946a <kad_op_conv1d+0xd66>
 c009466:	443d      	add	r5, r7
 c009468:	e7e9      	b.n	c00943e <kad_op_conv1d+0xd3a>
 c00946a:	9b02      	ldr	r3, [sp, #8]
 c00946c:	3201      	adds	r2, #1
 c00946e:	429a      	cmp	r2, r3
 c009470:	44e0      	add	r8, ip
 c009472:	d1d3      	bne.n	c00941c <kad_op_conv1d+0xd18>
 c009474:	7832      	ldrb	r2, [r6, #0]
 c009476:	4613      	mov	r3, r2
 c009478:	2a00      	cmp	r2, #0
 c00947a:	f000 811a 	beq.w	c0096b2 <kad_op_conv1d+0xfae>
 c00947e:	2b01      	cmp	r3, #1
 c009480:	f000 8115 	beq.w	c0096ae <kad_op_conv1d+0xfaa>
 c009484:	990e      	ldr	r1, [sp, #56]	@ 0x38
 c009486:	2b02      	cmp	r3, #2
 c009488:	460a      	mov	r2, r1
 c00948a:	d007      	beq.n	c00949c <kad_op_conv1d+0xd98>
 c00948c:	9903      	ldr	r1, [sp, #12]
 c00948e:	2b03      	cmp	r3, #3
 c009490:	fb01 f202 	mul.w	r2, r1, r2
 c009494:	d002      	beq.n	c00949c <kad_op_conv1d+0xd98>
 c009496:	69f3      	ldr	r3, [r6, #28]
 c009498:	fb03 f202 	mul.w	r2, r3, r2
 c00949c:	0092      	lsls	r2, r2, #2
 c00949e:	2100      	movs	r1, #0
 c0094a0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 c0094a2:	f006 f8c5 	bl	c00f630 <memset>
 c0094a6:	9b04      	ldr	r3, [sp, #16]
 c0094a8:	9a02      	ldr	r2, [sp, #8]
 c0094aa:	f8d3 8014 	ldr.w	r8, [r3, #20]
 c0094ae:	f8db 3004 	ldr.w	r3, [fp, #4]
 c0094b2:	2a00      	cmp	r2, #0
 c0094b4:	fb03 f308 	mul.w	r3, r3, r8
 c0094b8:	f340 80f5 	ble.w	c0096a6 <kad_op_conv1d+0xfa2>
 c0094bc:	009a      	lsls	r2, r3, #2
 c0094be:	9207      	str	r2, [sp, #28]
 c0094c0:	9a08      	ldr	r2, [sp, #32]
 c0094c2:	2a00      	cmp	r2, #0
 c0094c4:	f77f af4a 	ble.w	c00935c <kad_op_conv1d+0xc58>
 c0094c8:	2000      	movs	r0, #0
 c0094ca:	00db      	lsls	r3, r3, #3
 c0094cc:	9313      	str	r3, [sp, #76]	@ 0x4c
 c0094ce:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c0094d0:	e9cd 9b16 	strd	r9, fp, [sp, #88]	@ 0x58
 c0094d4:	009a      	lsls	r2, r3, #2
 c0094d6:	9210      	str	r2, [sp, #64]	@ 0x40
 c0094d8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c0094da:	4605      	mov	r5, r0
 c0094dc:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
 c0094e0:	4682      	mov	sl, r0
 c0094e2:	46e3      	mov	fp, ip
 c0094e4:	990d      	ldr	r1, [sp, #52]	@ 0x34
 c0094e6:	9b04      	ldr	r3, [sp, #16]
 c0094e8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 c0094ea:	6998      	ldr	r0, [r3, #24]
 c0094ec:	694b      	ldr	r3, [r1, #20]
 c0094ee:	fb00 f40a 	mul.w	r4, r0, sl
 c0094f2:	fb08 f000 	mul.w	r0, r8, r0
 c0094f6:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 c0094fa:	0082      	lsls	r2, r0, #2
 c0094fc:	920c      	str	r2, [sp, #48]	@ 0x30
 c0094fe:	9a00      	ldr	r2, [sp, #0]
 c009500:	fb05 f303 	mul.w	r3, r5, r3
 c009504:	4610      	mov	r0, r2
 c009506:	2a00      	cmp	r2, #0
 c009508:	bf08      	it	eq
 c00950a:	4620      	moveq	r0, r4
 c00950c:	698f      	ldr	r7, [r1, #24]
 c00950e:	4602      	mov	r2, r0
 c009510:	9006      	str	r0, [sp, #24]
 c009512:	fb07 f003 	mul.w	r0, r7, r3
 c009516:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 c009518:	9414      	str	r4, [sp, #80]	@ 0x50
 c00951a:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 c00951e:	9301      	str	r3, [sp, #4]
 c009520:	2300      	movs	r3, #0
 c009522:	465c      	mov	r4, fp
 c009524:	460e      	mov	r6, r1
 c009526:	930a      	str	r3, [sp, #40]	@ 0x28
 c009528:	00bb      	lsls	r3, r7, #2
 c00952a:	930d      	str	r3, [sp, #52]	@ 0x34
 c00952c:	1e7b      	subs	r3, r7, #1
 c00952e:	9315      	str	r3, [sp, #84]	@ 0x54
 c009530:	9b07      	ldr	r3, [sp, #28]
 c009532:	e9cd 5a18 	strd	r5, sl, [sp, #96]	@ 0x60
 c009536:	18d3      	adds	r3, r2, r3
 c009538:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 c00953c:	9312      	str	r3, [sp, #72]	@ 0x48
 c00953e:	e9dd 2500 	ldrd	r2, r5, [sp]
 c009542:	b14a      	cbz	r2, c009558 <kad_op_conv1d+0xe54>
 c009544:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 c009546:	9914      	ldr	r1, [sp, #80]	@ 0x50
 c009548:	689b      	ldr	r3, [r3, #8]
 c00954a:	fb03 f308 	mul.w	r3, r3, r8
 c00954e:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 c009552:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 c009554:	f006 f93b 	bl	c00f7ce <memcpy>
 c009558:	2f00      	cmp	r7, #0
 c00955a:	dd46      	ble.n	c0095ea <kad_op_conv1d+0xee6>
 c00955c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c00955e:	2b00      	cmp	r3, #0
 c009560:	dd43      	ble.n	c0095ea <kad_op_conv1d+0xee6>
 c009562:	2f02      	cmp	r7, #2
 c009564:	f340 8095 	ble.w	c009692 <kad_op_conv1d+0xf8e>
 c009568:	2301      	movs	r3, #1
 c00956a:	9901      	ldr	r1, [sp, #4]
 c00956c:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
 c009570:	9a06      	ldr	r2, [sp, #24]
 c009572:	f101 0e04 	add.w	lr, r1, #4
 c009576:	ed5e 5a01 	vldr	s11, [lr, #-4]
 c00957a:	ed95 6a01 	vldr	s12, [r5, #4]
 c00957e:	46d4      	mov	ip, sl
 c009580:	4610      	mov	r0, r2
 c009582:	4649      	mov	r1, r9
 c009584:	edd1 7a00 	vldr	s15, [r1]
 c009588:	ecf0 6a01 	vldmia	r0!, {s13}
 c00958c:	ecbc 7a01 	vldmia	ip!, {s14}
 c009590:	eee5 7aa6 	vfma.f32	s15, s11, s13
 c009594:	eee7 7a06 	vfma.f32	s15, s14, s12
 c009598:	ece1 7a01 	vstmia	r1!, {s15}
 c00959c:	428c      	cmp	r4, r1
 c00959e:	d1f1      	bne.n	c009584 <kad_op_conv1d+0xe80>
 c0095a0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 c0095a2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 c0095a4:	440a      	add	r2, r1
 c0095a6:	448a      	add	sl, r1
 c0095a8:	1c99      	adds	r1, r3, #2
 c0095aa:	4281      	cmp	r1, r0
 c0095ac:	f105 0508 	add.w	r5, r5, #8
 c0095b0:	f10e 0e08 	add.w	lr, lr, #8
 c0095b4:	da04      	bge.n	c0095c0 <kad_op_conv1d+0xebc>
 c0095b6:	460b      	mov	r3, r1
 c0095b8:	e7dd      	b.n	c009576 <kad_op_conv1d+0xe72>
 c0095ba:	bf00      	nop
 c0095bc:	00000000 	.word	0x00000000
 c0095c0:	3301      	adds	r3, #1
 c0095c2:	f8dd c01c 	ldr.w	ip, [sp, #28]
 c0095c6:	ecf5 6a01 	vldmia	r5!, {s13}
 c0095ca:	4610      	mov	r0, r2
 c0095cc:	4649      	mov	r1, r9
 c0095ce:	edd1 7a00 	vldr	s15, [r1]
 c0095d2:	ecb0 7a01 	vldmia	r0!, {s14}
 c0095d6:	eee7 7a26 	vfma.f32	s15, s14, s13
 c0095da:	ece1 7a01 	vstmia	r1!, {s15}
 c0095de:	428c      	cmp	r4, r1
 c0095e0:	d1f5      	bne.n	c0095ce <kad_op_conv1d+0xeca>
 c0095e2:	3301      	adds	r3, #1
 c0095e4:	429f      	cmp	r7, r3
 c0095e6:	4462      	add	r2, ip
 c0095e8:	dced      	bgt.n	c0095c6 <kad_op_conv1d+0xec2>
 c0095ea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 c0095ec:	990d      	ldr	r1, [sp, #52]	@ 0x34
 c0095ee:	4491      	add	r9, r2
 c0095f0:	4414      	add	r4, r2
 c0095f2:	9a01      	ldr	r2, [sp, #4]
 c0095f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c0095f6:	440a      	add	r2, r1
 c0095f8:	9201      	str	r2, [sp, #4]
 c0095fa:	9a08      	ldr	r2, [sp, #32]
 c0095fc:	3301      	adds	r3, #1
 c0095fe:	4293      	cmp	r3, r2
 c009600:	930a      	str	r3, [sp, #40]	@ 0x28
 c009602:	d19c      	bne.n	c00953e <kad_op_conv1d+0xe3a>
 c009604:	e9dd 5a18 	ldrd	r5, sl, [sp, #96]	@ 0x60
 c009608:	9b02      	ldr	r3, [sp, #8]
 c00960a:	3501      	adds	r5, #1
 c00960c:	429d      	cmp	r5, r3
 c00960e:	4631      	mov	r1, r6
 c009610:	44c2      	add	sl, r8
 c009612:	f47f af68 	bne.w	c0094e6 <kad_op_conv1d+0xde2>
 c009616:	f8dd 9058 	ldr.w	r9, [sp, #88]	@ 0x58
 c00961a:	9b05      	ldr	r3, [sp, #20]
 c00961c:	2b00      	cmp	r3, #0
 c00961e:	f77f ae9d 	ble.w	c00935c <kad_op_conv1d+0xc58>
 c009622:	9f03      	ldr	r7, [sp, #12]
 c009624:	2f00      	cmp	r7, #0
 c009626:	f77f a882 	ble.w	c00872e <kad_op_conv1d+0x2a>
 c00962a:	2000      	movs	r0, #0
 c00962c:	4698      	mov	r8, r3
 c00962e:	4684      	mov	ip, r0
 c009630:	4686      	mov	lr, r0
 c009632:	00ba      	lsls	r2, r7, #2
 c009634:	9202      	str	r2, [sp, #8]
 c009636:	009c      	lsls	r4, r3, #2
 c009638:	f04f 0a00 	mov.w	sl, #0
 c00963c:	fb07 f300 	mul.w	r3, r7, r0
 c009640:	fb08 f50c 	mul.w	r5, r8, ip
 c009644:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c009646:	18fe      	adds	r6, r7, r3
 c009648:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 c00964c:	eb09 0186 	add.w	r1, r9, r6, lsl #2
 c009650:	462a      	mov	r2, r5
 c009652:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 c009656:	ed93 7a00 	vldr	s14, [r3]
 c00965a:	edd2 7a00 	vldr	s15, [r2]
 c00965e:	ee77 7a87 	vadd.f32	s15, s15, s14
 c009662:	ece3 7a01 	vstmia	r3!, {s15}
 c009666:	4299      	cmp	r1, r3
 c009668:	4422      	add	r2, r4
 c00966a:	d1f4      	bne.n	c009656 <kad_op_conv1d+0xf52>
 c00966c:	9b02      	ldr	r3, [sp, #8]
 c00966e:	f10a 0a01 	add.w	sl, sl, #1
 c009672:	45d0      	cmp	r8, sl
 c009674:	4419      	add	r1, r3
 c009676:	f105 0504 	add.w	r5, r5, #4
 c00967a:	4633      	mov	r3, r6
 c00967c:	d001      	beq.n	c009682 <kad_op_conv1d+0xf7e>
 c00967e:	443e      	add	r6, r7
 c009680:	e7e6      	b.n	c009650 <kad_op_conv1d+0xf4c>
 c009682:	9b08      	ldr	r3, [sp, #32]
 c009684:	f10e 0e01 	add.w	lr, lr, #1
 c009688:	4573      	cmp	r3, lr
 c00968a:	44bc      	add	ip, r7
 c00968c:	4440      	add	r0, r8
 c00968e:	d1d3      	bne.n	c009638 <kad_op_conv1d+0xf34>
 c009690:	e664      	b.n	c00935c <kad_op_conv1d+0xc58>
 c009692:	2300      	movs	r3, #0
 c009694:	9a06      	ldr	r2, [sp, #24]
 c009696:	e794      	b.n	c0095c2 <kad_op_conv1d+0xebe>
 c009698:	7832      	ldrb	r2, [r6, #0]
 c00969a:	4613      	mov	r3, r2
 c00969c:	2a00      	cmp	r2, #0
 c00969e:	f47f aeee 	bne.w	c00947e <kad_op_conv1d+0xd7a>
 c0096a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c0096a4:	601a      	str	r2, [r3, #0]
 c0096a6:	9b08      	ldr	r3, [sp, #32]
 c0096a8:	2b00      	cmp	r3, #0
 c0096aa:	dcb6      	bgt.n	c00961a <kad_op_conv1d+0xf16>
 c0096ac:	e656      	b.n	c00935c <kad_op_conv1d+0xc58>
 c0096ae:	9a08      	ldr	r2, [sp, #32]
 c0096b0:	e6f4      	b.n	c00949c <kad_op_conv1d+0xd98>
 c0096b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c0096b4:	601a      	str	r2, [r3, #0]
 c0096b6:	9b04      	ldr	r3, [sp, #16]
 c0096b8:	f8d3 8014 	ldr.w	r8, [r3, #20]
 c0096bc:	f8db 3004 	ldr.w	r3, [fp, #4]
 c0096c0:	fb03 f308 	mul.w	r3, r3, r8
 c0096c4:	e6fa      	b.n	c0094bc <kad_op_conv1d+0xdb8>
 c0096c6:	69b1      	ldr	r1, [r6, #24]
 c0096c8:	691a      	ldr	r2, [r3, #16]
 c0096ca:	9105      	str	r1, [sp, #20]
 c0096cc:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 c0096ce:	2a00      	cmp	r2, #0
 c0096d0:	910e      	str	r1, [sp, #56]	@ 0x38
 c0096d2:	6931      	ldr	r1, [r6, #16]
 c0096d4:	f8d3 8028 	ldr.w	r8, [r3, #40]	@ 0x28
 c0096d8:	910a      	str	r1, [sp, #40]	@ 0x28
 c0096da:	6971      	ldr	r1, [r6, #20]
 c0096dc:	9201      	str	r2, [sp, #4]
 c0096de:	9102      	str	r1, [sp, #8]
 c0096e0:	dd7f      	ble.n	c0097e2 <kad_op_conv1d+0x10de>
 c0096e2:	f8d3 9014 	ldr.w	r9, [r3, #20]
 c0096e6:	f1b9 0f00 	cmp.w	r9, #0
 c0096ea:	dd2f      	ble.n	c00974c <kad_op_conv1d+0x1048>
 c0096ec:	f04f 0c00 	mov.w	ip, #0
 c0096f0:	46e6      	mov	lr, ip
 c0096f2:	699f      	ldr	r7, [r3, #24]
 c0096f4:	ea4f 0089 	mov.w	r0, r9, lsl #2
 c0096f8:	ea4f 0a87 	mov.w	sl, r7, lsl #2
 c0096fc:	2f00      	cmp	r7, #0
 c0096fe:	fb07 f10e 	mul.w	r1, r7, lr
 c009702:	dd1d      	ble.n	c009740 <kad_op_conv1d+0x103c>
 c009704:	2500      	movs	r5, #0
 c009706:	fb09 f101 	mul.w	r1, r9, r1
 c00970a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 c00970c:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 c009710:	fb07 f30c 	mul.w	r3, r7, ip
 c009714:	18fc      	adds	r4, r7, r3
 c009716:	eb08 0284 	add.w	r2, r8, r4, lsl #2
 c00971a:	460e      	mov	r6, r1
 c00971c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 c009720:	ecf3 7a01 	vldmia	r3!, {s15}
 c009724:	429a      	cmp	r2, r3
 c009726:	edc6 7a00 	vstr	s15, [r6]
 c00972a:	4406      	add	r6, r0
 c00972c:	d1f8      	bne.n	c009720 <kad_op_conv1d+0x101c>
 c00972e:	3501      	adds	r5, #1
 c009730:	454d      	cmp	r5, r9
 c009732:	4623      	mov	r3, r4
 c009734:	f101 0104 	add.w	r1, r1, #4
 c009738:	4452      	add	r2, sl
 c00973a:	d001      	beq.n	c009740 <kad_op_conv1d+0x103c>
 c00973c:	443c      	add	r4, r7
 c00973e:	e7ec      	b.n	c00971a <kad_op_conv1d+0x1016>
 c009740:	9b01      	ldr	r3, [sp, #4]
 c009742:	f10e 0e01 	add.w	lr, lr, #1
 c009746:	459e      	cmp	lr, r3
 c009748:	44cc      	add	ip, r9
 c00974a:	d1d7      	bne.n	c0096fc <kad_op_conv1d+0xff8>
 c00974c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c00974e:	2b00      	cmp	r3, #0
 c009750:	f77f aa8c 	ble.w	c008c6c <kad_op_conv1d+0x568>
 c009754:	9b02      	ldr	r3, [sp, #8]
 c009756:	2b00      	cmp	r3, #0
 c009758:	dd39      	ble.n	c0097ce <kad_op_conv1d+0x10ca>
 c00975a:	9b05      	ldr	r3, [sp, #20]
 c00975c:	2b00      	cmp	r3, #0
 c00975e:	dd2c      	ble.n	c0097ba <kad_op_conv1d+0x10b6>
 c009760:	2700      	movs	r7, #0
 c009762:	46bc      	mov	ip, r7
 c009764:	46be      	mov	lr, r7
 c009766:	9e05      	ldr	r6, [sp, #20]
 c009768:	9b02      	ldr	r3, [sp, #8]
 c00976a:	ea4f 0886 	mov.w	r8, r6, lsl #2
 c00976e:	0098      	lsls	r0, r3, #2
 c009770:	f04f 0a00 	mov.w	sl, #0
 c009774:	9a02      	ldr	r2, [sp, #8]
 c009776:	fb06 f307 	mul.w	r3, r6, r7
 c00977a:	fb02 f40c 	mul.w	r4, r2, ip
 c00977e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c009780:	18f5      	adds	r5, r6, r3
 c009782:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 c009786:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 c009788:	eb02 0185 	add.w	r1, r2, r5, lsl #2
 c00978c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 c00978e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 c009792:	4622      	mov	r2, r4
 c009794:	ecf3 7a01 	vldmia	r3!, {s15}
 c009798:	4299      	cmp	r1, r3
 c00979a:	edc2 7a00 	vstr	s15, [r2]
 c00979e:	4402      	add	r2, r0
 c0097a0:	d1f8      	bne.n	c009794 <kad_op_conv1d+0x1090>
 c0097a2:	9a02      	ldr	r2, [sp, #8]
 c0097a4:	f10a 0a01 	add.w	sl, sl, #1
 c0097a8:	4592      	cmp	sl, r2
 c0097aa:	462b      	mov	r3, r5
 c0097ac:	f104 0404 	add.w	r4, r4, #4
 c0097b0:	4441      	add	r1, r8
 c0097b2:	f43f a9cb 	beq.w	c008b4c <kad_op_conv1d+0x448>
 c0097b6:	4435      	add	r5, r6
 c0097b8:	e7e8      	b.n	c00978c <kad_op_conv1d+0x1088>
 c0097ba:	f8db 3004 	ldr.w	r3, [fp, #4]
 c0097be:	9902      	ldr	r1, [sp, #8]
 c0097c0:	fb03 f209 	mul.w	r2, r3, r9
 c0097c4:	9b05      	ldr	r3, [sp, #20]
 c0097c6:	fb01 f303 	mul.w	r3, r1, r3
 c0097ca:	f7ff b9d2 	b.w	c008b72 <kad_op_conv1d+0x46e>
 c0097ce:	4619      	mov	r1, r3
 c0097d0:	f8db 3004 	ldr.w	r3, [fp, #4]
 c0097d4:	fb03 f209 	mul.w	r2, r3, r9
 c0097d8:	9b05      	ldr	r3, [sp, #20]
 c0097da:	fb01 f303 	mul.w	r3, r1, r3
 c0097de:	f7ff b9c8 	b.w	c008b72 <kad_op_conv1d+0x46e>
 c0097e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c0097e4:	2b00      	cmp	r3, #0
 c0097e6:	f77f aa41 	ble.w	c008c6c <kad_op_conv1d+0x568>
 c0097ea:	2900      	cmp	r1, #0
 c0097ec:	f77e af9f 	ble.w	c00872e <kad_op_conv1d+0x2a>
 c0097f0:	9b05      	ldr	r3, [sp, #20]
 c0097f2:	2b00      	cmp	r3, #0
 c0097f4:	f77f aa3a 	ble.w	c008c6c <kad_op_conv1d+0x568>
 c0097f8:	9b04      	ldr	r3, [sp, #16]
 c0097fa:	f8d3 9014 	ldr.w	r9, [r3, #20]
 c0097fe:	e7af      	b.n	c009760 <kad_op_conv1d+0x105c>

0c009800 <kad_op_conv2d>:
 c009800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c009804:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c009806:	4682      	mov	sl, r0
 c009808:	e9d3 9600 	ldrd	r9, r6, [r3]
 c00980c:	1e8b      	subs	r3, r1, #2
 c00980e:	2b01      	cmp	r3, #1
 c009810:	460c      	mov	r4, r1
 c009812:	f8d0 b030 	ldr.w	fp, [r0, #48]	@ 0x30
 c009816:	b0a3      	sub	sp, #140	@ 0x8c
 c009818:	d917      	bls.n	c00984a <kad_op_conv2d+0x4a>
 c00981a:	2904      	cmp	r1, #4
 c00981c:	f000 80a2 	beq.w	c009964 <kad_op_conv2d+0x164>
 c009820:	2300      	movs	r3, #0
 c009822:	9301      	str	r3, [sp, #4]
 c009824:	9309      	str	r3, [sp, #36]	@ 0x24
 c009826:	930c      	str	r3, [sp, #48]	@ 0x30
 c009828:	9310      	str	r3, [sp, #64]	@ 0x40
 c00982a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 c00982c:	f005 fc2e 	bl	c00f08c <free>
 c009830:	980c      	ldr	r0, [sp, #48]	@ 0x30
 c009832:	f005 fc2b 	bl	c00f08c <free>
 c009836:	9809      	ldr	r0, [sp, #36]	@ 0x24
 c009838:	f005 fc28 	bl	c00f08c <free>
 c00983c:	9801      	ldr	r0, [sp, #4]
 c00983e:	f005 fc25 	bl	c00f08c <free>
 c009842:	2000      	movs	r0, #0
 c009844:	b023      	add	sp, #140	@ 0x8c
 c009846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00984a:	69f3      	ldr	r3, [r6, #28]
 c00984c:	6972      	ldr	r2, [r6, #20]
 c00984e:	9303      	str	r3, [sp, #12]
 c009850:	fb02 f303 	mul.w	r3, r2, r3
 c009854:	2b0f      	cmp	r3, #15
 c009856:	9208      	str	r2, [sp, #32]
 c009858:	9312      	str	r3, [sp, #72]	@ 0x48
 c00985a:	f340 80bb 	ble.w	c0099d4 <kad_op_conv2d+0x1d4>
 c00985e:	f899 2000 	ldrb.w	r2, [r9]
 c009862:	2a00      	cmp	r2, #0
 c009864:	f000 8410 	beq.w	c00a088 <kad_op_conv2d+0x888>
 c009868:	2a01      	cmp	r2, #1
 c00986a:	f8d9 0010 	ldr.w	r0, [r9, #16]
 c00986e:	d00e      	beq.n	c00988e <kad_op_conv2d+0x8e>
 c009870:	f8d9 1014 	ldr.w	r1, [r9, #20]
 c009874:	2a02      	cmp	r2, #2
 c009876:	fb01 f000 	mul.w	r0, r1, r0
 c00987a:	d008      	beq.n	c00988e <kad_op_conv2d+0x8e>
 c00987c:	f8d9 1018 	ldr.w	r1, [r9, #24]
 c009880:	2a03      	cmp	r2, #3
 c009882:	fb01 f000 	mul.w	r0, r1, r0
 c009886:	bf1c      	itt	ne
 c009888:	f8d9 201c 	ldrne.w	r2, [r9, #28]
 c00988c:	4350      	mulne	r0, r2
 c00988e:	0080      	lsls	r0, r0, #2
 c009890:	f005 fbf4 	bl	c00f07c <malloc>
 c009894:	7832      	ldrb	r2, [r6, #0]
 c009896:	900c      	str	r0, [sp, #48]	@ 0x30
 c009898:	2a00      	cmp	r2, #0
 c00989a:	f000 83f3 	beq.w	c00a084 <kad_op_conv2d+0x884>
 c00989e:	2a01      	cmp	r2, #1
 c0098a0:	6930      	ldr	r0, [r6, #16]
 c0098a2:	d00b      	beq.n	c0098bc <kad_op_conv2d+0xbc>
 c0098a4:	9b08      	ldr	r3, [sp, #32]
 c0098a6:	2a02      	cmp	r2, #2
 c0098a8:	fb03 f000 	mul.w	r0, r3, r0
 c0098ac:	d006      	beq.n	c0098bc <kad_op_conv2d+0xbc>
 c0098ae:	69b1      	ldr	r1, [r6, #24]
 c0098b0:	2a03      	cmp	r2, #3
 c0098b2:	fb01 f000 	mul.w	r0, r1, r0
 c0098b6:	bf1c      	itt	ne
 c0098b8:	9b03      	ldrne	r3, [sp, #12]
 c0098ba:	4358      	mulne	r0, r3
 c0098bc:	0080      	lsls	r0, r0, #2
 c0098be:	f005 fbdd 	bl	c00f07c <malloc>
 c0098c2:	e9db 3206 	ldrd	r3, r2, [fp, #24]
 c0098c6:	1899      	adds	r1, r3, r2
 c0098c8:	2900      	cmp	r1, #0
 c0098ca:	9009      	str	r0, [sp, #36]	@ 0x24
 c0098cc:	f300 83ca 	bgt.w	c00a064 <kad_op_conv2d+0x864>
 c0098d0:	2300      	movs	r3, #0
 c0098d2:	2c02      	cmp	r4, #2
 c0098d4:	f04f 0701 	mov.w	r7, #1
 c0098d8:	9301      	str	r3, [sp, #4]
 c0098da:	9310      	str	r3, [sp, #64]	@ 0x40
 c0098dc:	f000 808c 	beq.w	c0099f8 <kad_op_conv2d+0x1f8>
 c0098e0:	f899 3001 	ldrb.w	r3, [r9, #1]
 c0098e4:	07d9      	lsls	r1, r3, #31
 c0098e6:	f100 8379 	bmi.w	c009fdc <kad_op_conv2d+0x7dc>
 c0098ea:	7873      	ldrb	r3, [r6, #1]
 c0098ec:	07da      	lsls	r2, r3, #31
 c0098ee:	d59c      	bpl.n	c00982a <kad_op_conv2d+0x2a>
 c0098f0:	6933      	ldr	r3, [r6, #16]
 c0098f2:	9908      	ldr	r1, [sp, #32]
 c0098f4:	69b2      	ldr	r2, [r6, #24]
 c0098f6:	fb03 f501 	mul.w	r5, r3, r1
 c0098fa:	9307      	str	r3, [sp, #28]
 c0098fc:	9b03      	ldr	r3, [sp, #12]
 c0098fe:	2d00      	cmp	r5, #0
 c009900:	fb02 f003 	mul.w	r0, r2, r3
 c009904:	f8d6 802c 	ldr.w	r8, [r6, #44]	@ 0x2c
 c009908:	9205      	str	r2, [sp, #20]
 c00990a:	901c      	str	r0, [sp, #112]	@ 0x70
 c00990c:	f340 86cf 	ble.w	c00a6ae <kad_op_conv2d+0xeae>
 c009910:	1043      	asrs	r3, r0, #1
 c009912:	2b00      	cmp	r3, #0
 c009914:	f340 86d4 	ble.w	c00a6c0 <kad_op_conv2d+0xec0>
 c009918:	4642      	mov	r2, r8
 c00991a:	2100      	movs	r1, #0
 c00991c:	ea4f 0c80 	mov.w	ip, r0, lsl #2
 c009920:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 c009924:	4610      	mov	r0, r2
 c009926:	4462      	add	r2, ip
 c009928:	eb00 040e 	add.w	r4, r0, lr
 c00992c:	9400      	str	r4, [sp, #0]
 c00992e:	4614      	mov	r4, r2
 c009930:	9302      	str	r3, [sp, #8]
 c009932:	ed34 7a01 	vldmdb	r4!, {s14}
 c009936:	edd0 7a00 	vldr	s15, [r0]
 c00993a:	eca0 7a01 	vstmia	r0!, {s14}
 c00993e:	9b00      	ldr	r3, [sp, #0]
 c009940:	edc4 7a00 	vstr	s15, [r4]
 c009944:	4283      	cmp	r3, r0
 c009946:	d1f4      	bne.n	c009932 <kad_op_conv2d+0x132>
 c009948:	3101      	adds	r1, #1
 c00994a:	428d      	cmp	r5, r1
 c00994c:	9b02      	ldr	r3, [sp, #8]
 c00994e:	d1e9      	bne.n	c009924 <kad_op_conv2d+0x124>
 c009950:	f8d9 2010 	ldr.w	r2, [r9, #16]
 c009954:	2f00      	cmp	r7, #0
 c009956:	f040 87fd 	bne.w	c00a954 <kad_op_conv2d+0x1154>
 c00995a:	2a00      	cmp	r2, #0
 c00995c:	f300 86b8 	bgt.w	c00a6d0 <kad_op_conv2d+0xed0>
 c009960:	f000 bfbb 	b.w	c00a8da <kad_op_conv2d+0x10da>
 c009964:	f899 3000 	ldrb.w	r3, [r9]
 c009968:	2b04      	cmp	r3, #4
 c00996a:	f040 8391 	bne.w	c00a090 <kad_op_conv2d+0x890>
 c00996e:	7833      	ldrb	r3, [r6, #0]
 c009970:	2b04      	cmp	r3, #4
 c009972:	f040 838d 	bne.w	c00a090 <kad_op_conv2d+0x890>
 c009976:	f8d9 1014 	ldr.w	r1, [r9, #20]
 c00997a:	6972      	ldr	r2, [r6, #20]
 c00997c:	4291      	cmp	r1, r2
 c00997e:	f040 8387 	bne.w	c00a090 <kad_op_conv2d+0x890>
 c009982:	7003      	strb	r3, [r0, #0]
 c009984:	f8d9 3010 	ldr.w	r3, [r9, #16]
 c009988:	6103      	str	r3, [r0, #16]
 c00998a:	6931      	ldr	r1, [r6, #16]
 c00998c:	e9d9 2306 	ldrd	r2, r3, [r9, #24]
 c009990:	6141      	str	r1, [r0, #20]
 c009992:	f8db 1000 	ldr.w	r1, [fp]
 c009996:	f8db 001c 	ldr.w	r0, [fp, #28]
 c00999a:	1a52      	subs	r2, r2, r1
 c00999c:	f8db 1008 	ldr.w	r1, [fp, #8]
 c0099a0:	440a      	add	r2, r1
 c0099a2:	f8db 100c 	ldr.w	r1, [fp, #12]
 c0099a6:	440a      	add	r2, r1
 c0099a8:	f8db 1004 	ldr.w	r1, [fp, #4]
 c0099ac:	fb92 f2f1 	sdiv	r2, r2, r1
 c0099b0:	f8db 1010 	ldr.w	r1, [fp, #16]
 c0099b4:	3201      	adds	r2, #1
 c0099b6:	1a5b      	subs	r3, r3, r1
 c0099b8:	f8db 1018 	ldr.w	r1, [fp, #24]
 c0099bc:	440b      	add	r3, r1
 c0099be:	f8db 1014 	ldr.w	r1, [fp, #20]
 c0099c2:	4403      	add	r3, r0
 c0099c4:	fb93 f3f1 	sdiv	r3, r3, r1
 c0099c8:	3301      	adds	r3, #1
 c0099ca:	f8ca 2018 	str.w	r2, [sl, #24]
 c0099ce:	f8ca 301c 	str.w	r3, [sl, #28]
 c0099d2:	e725      	b.n	c009820 <kad_op_conv2d+0x20>
 c0099d4:	69c0      	ldr	r0, [r0, #28]
 c0099d6:	0080      	lsls	r0, r0, #2
 c0099d8:	f005 fb50 	bl	c00f07c <malloc>
 c0099dc:	e9db 3206 	ldrd	r3, r2, [fp, #24]
 c0099e0:	1899      	adds	r1, r3, r2
 c0099e2:	2900      	cmp	r1, #0
 c0099e4:	9010      	str	r0, [sp, #64]	@ 0x40
 c0099e6:	f300 82ed 	bgt.w	c009fc4 <kad_op_conv2d+0x7c4>
 c0099ea:	2700      	movs	r7, #0
 c0099ec:	9701      	str	r7, [sp, #4]
 c0099ee:	9709      	str	r7, [sp, #36]	@ 0x24
 c0099f0:	970c      	str	r7, [sp, #48]	@ 0x30
 c0099f2:	2c02      	cmp	r4, #2
 c0099f4:	f47f af74 	bne.w	c0098e0 <kad_op_conv2d+0xe0>
 c0099f8:	6931      	ldr	r1, [r6, #16]
 c0099fa:	9b08      	ldr	r3, [sp, #32]
 c0099fc:	9a03      	ldr	r2, [sp, #12]
 c0099fe:	fb01 f303 	mul.w	r3, r1, r3
 c009a02:	4619      	mov	r1, r3
 c009a04:	69b3      	ldr	r3, [r6, #24]
 c009a06:	2900      	cmp	r1, #0
 c009a08:	fb03 f202 	mul.w	r2, r3, r2
 c009a0c:	4613      	mov	r3, r2
 c009a0e:	dd1a      	ble.n	c009a46 <kad_op_conv2d+0x246>
 c009a10:	1052      	asrs	r2, r2, #1
 c009a12:	2a00      	cmp	r2, #0
 c009a14:	dd17      	ble.n	c009a46 <kad_op_conv2d+0x246>
 c009a16:	2000      	movs	r0, #0
 c009a18:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 c009a1c:	6ab2      	ldr	r2, [r6, #40]	@ 0x28
 c009a1e:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 c009a22:	4613      	mov	r3, r2
 c009a24:	4462      	add	r2, ip
 c009a26:	4614      	mov	r4, r2
 c009a28:	eb03 050e 	add.w	r5, r3, lr
 c009a2c:	ed74 7a01 	vldmdb	r4!, {s15}
 c009a30:	f8d3 8000 	ldr.w	r8, [r3]
 c009a34:	ece3 7a01 	vstmia	r3!, {s15}
 c009a38:	429d      	cmp	r5, r3
 c009a3a:	f8c4 8000 	str.w	r8, [r4]
 c009a3e:	d1f5      	bne.n	c009a2c <kad_op_conv2d+0x22c>
 c009a40:	3001      	adds	r0, #1
 c009a42:	4281      	cmp	r1, r0
 c009a44:	d1ed      	bne.n	c009a22 <kad_op_conv2d+0x222>
 c009a46:	f89a 1000 	ldrb.w	r1, [sl]
 c009a4a:	f8da 0028 	ldr.w	r0, [sl, #40]	@ 0x28
 c009a4e:	2900      	cmp	r1, #0
 c009a50:	f000 831c 	beq.w	c00a08c <kad_op_conv2d+0x88c>
 c009a54:	2901      	cmp	r1, #1
 c009a56:	f8da 2010 	ldr.w	r2, [sl, #16]
 c009a5a:	d00e      	beq.n	c009a7a <kad_op_conv2d+0x27a>
 c009a5c:	f8da 3014 	ldr.w	r3, [sl, #20]
 c009a60:	2902      	cmp	r1, #2
 c009a62:	fb03 f202 	mul.w	r2, r3, r2
 c009a66:	d008      	beq.n	c009a7a <kad_op_conv2d+0x27a>
 c009a68:	f8da 3018 	ldr.w	r3, [sl, #24]
 c009a6c:	2903      	cmp	r1, #3
 c009a6e:	fb03 f202 	mul.w	r2, r3, r2
 c009a72:	bf1c      	itt	ne
 c009a74:	f8da 301c 	ldrne.w	r3, [sl, #28]
 c009a78:	435a      	mulne	r2, r3
 c009a7a:	0092      	lsls	r2, r2, #2
 c009a7c:	2100      	movs	r1, #0
 c009a7e:	f005 fdd7 	bl	c00f630 <memset>
 c009a82:	f8d9 8010 	ldr.w	r8, [r9, #16]
 c009a86:	2f00      	cmp	r7, #0
 c009a88:	f041 810e 	bne.w	c00aca8 <kad_op_conv2d+0x14a8>
 c009a8c:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 c009a8e:	f1b8 0f00 	cmp.w	r8, #0
 c009a92:	930b      	str	r3, [sp, #44]	@ 0x2c
 c009a94:	69f3      	ldr	r3, [r6, #28]
 c009a96:	6931      	ldr	r1, [r6, #16]
 c009a98:	9304      	str	r3, [sp, #16]
 c009a9a:	e9d6 3e05 	ldrd	r3, lr, [r6, #20]
 c009a9e:	930a      	str	r3, [sp, #40]	@ 0x28
 c009aa0:	f340 8286 	ble.w	c009fb0 <kad_op_conv2d+0x7b0>
 c009aa4:	2900      	cmp	r1, #0
 c009aa6:	f340 8283 	ble.w	c009fb0 <kad_op_conv2d+0x7b0>
 c009aaa:	2b00      	cmp	r3, #0
 c009aac:	f77f aebd 	ble.w	c00982a <kad_op_conv2d+0x2a>
 c009ab0:	f1be 0f00 	cmp.w	lr, #0
 c009ab4:	f341 80f1 	ble.w	c00ac9a <kad_op_conv2d+0x149a>
 c009ab8:	9a04      	ldr	r2, [sp, #16]
 c009aba:	9707      	str	r7, [sp, #28]
 c009abc:	fb02 f40e 	mul.w	r4, r2, lr
 c009ac0:	00a6      	lsls	r6, r4, #2
 c009ac2:	4637      	mov	r7, r6
 c009ac4:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 c009ac8:	460d      	mov	r5, r1
 c009aca:	4676      	mov	r6, lr
 c009acc:	46a2      	mov	sl, r4
 c009ace:	ebc2 7342 	rsb	r3, r2, r2, lsl #29
 c009ad2:	00db      	lsls	r3, r3, #3
 c009ad4:	9311      	str	r3, [sp, #68]	@ 0x44
 c009ad6:	4643      	mov	r3, r8
 c009ad8:	46c8      	mov	r8, r9
 c009ada:	f8dd 9040 	ldr.w	r9, [sp, #64]	@ 0x40
 c009ade:	0092      	lsls	r2, r2, #2
 c009ae0:	2100      	movs	r1, #0
 c009ae2:	462c      	mov	r4, r5
 c009ae4:	460d      	mov	r5, r1
 c009ae6:	4638      	mov	r0, r7
 c009ae8:	9f13      	ldr	r7, [sp, #76]	@ 0x4c
 c009aea:	9106      	str	r1, [sp, #24]
 c009aec:	9314      	str	r3, [sp, #80]	@ 0x50
 c009aee:	fb06 f305 	mul.w	r3, r6, r5
 c009af2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 c009af4:	9612      	str	r6, [sp, #72]	@ 0x48
 c009af6:	fb02 1303 	mla	r3, r2, r3, r1
 c009afa:	2100      	movs	r1, #0
 c009afc:	4413      	add	r3, r2
 c009afe:	f8cd a05c 	str.w	sl, [sp, #92]	@ 0x5c
 c009b02:	4686      	mov	lr, r0
 c009b04:	461e      	mov	r6, r3
 c009b06:	4692      	mov	sl, r2
 c009b08:	9105      	str	r1, [sp, #20]
 c009b0a:	9515      	str	r5, [sp, #84]	@ 0x54
 c009b0c:	9416      	str	r4, [sp, #88]	@ 0x58
 c009b0e:	69bb      	ldr	r3, [r7, #24]
 c009b10:	461a      	mov	r2, r3
 c009b12:	2a00      	cmp	r2, #0
 c009b14:	9303      	str	r3, [sp, #12]
 c009b16:	f8db 3008 	ldr.w	r3, [fp, #8]
 c009b1a:	f340 8090 	ble.w	c009c3e <kad_op_conv2d+0x43e>
 c009b1e:	4635      	mov	r5, r6
 c009b20:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 c009b22:	e9cd e618 	strd	lr, r6, [sp, #96]	@ 0x60
 c009b26:	425c      	negs	r4, r3
 c009b28:	1ad3      	subs	r3, r2, r3
 c009b2a:	930f      	str	r3, [sp, #60]	@ 0x3c
 c009b2c:	eba5 030a 	sub.w	r3, r5, sl
 c009b30:	2c00      	cmp	r4, #0
 c009b32:	4626      	mov	r6, r4
 c009b34:	9308      	str	r3, [sp, #32]
 c009b36:	db78      	blt.n	c009c2a <kad_op_conv2d+0x42a>
 c009b38:	2300      	movs	r3, #0
 c009b3a:	e9cd 4a0d 	strd	r4, sl, [sp, #52]	@ 0x34
 c009b3e:	9300      	str	r3, [sp, #0]
 c009b40:	f8d8 3018 	ldr.w	r3, [r8, #24]
 c009b44:	9302      	str	r3, [sp, #8]
 c009b46:	9b02      	ldr	r3, [sp, #8]
 c009b48:	429e      	cmp	r6, r3
 c009b4a:	da6c      	bge.n	c009c26 <kad_op_conv2d+0x426>
 c009b4c:	9a07      	ldr	r2, [sp, #28]
 c009b4e:	f8d8 3014 	ldr.w	r3, [r8, #20]
 c009b52:	9905      	ldr	r1, [sp, #20]
 c009b54:	9806      	ldr	r0, [sp, #24]
 c009b56:	fb03 1102 	mla	r1, r3, r2, r1
 c009b5a:	9b02      	ldr	r3, [sp, #8]
 c009b5c:	f8d7 a01c 	ldr.w	sl, [r7, #28]
 c009b60:	fb03 6101 	mla	r1, r3, r1, r6
 c009b64:	697b      	ldr	r3, [r7, #20]
 c009b66:	6abc      	ldr	r4, [r7, #40]	@ 0x28
 c009b68:	fb03 0002 	mla	r0, r3, r2, r0
 c009b6c:	9b00      	ldr	r3, [sp, #0]
 c009b6e:	9a03      	ldr	r2, [sp, #12]
 c009b70:	fb02 3000 	mla	r0, r2, r0, r3
 c009b74:	f8d8 201c 	ldr.w	r2, [r8, #28]
 c009b78:	fb0a f000 	mul.w	r0, sl, r0
 c009b7c:	fb02 f101 	mul.w	r1, r2, r1
 c009b80:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 c009b84:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 c009b88:	9801      	ldr	r0, [sp, #4]
 c009b8a:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 c009b8e:	b140      	cbz	r0, c009ba2 <kad_op_conv2d+0x3a2>
 c009b90:	f8db 3018 	ldr.w	r3, [fp, #24]
 c009b94:	0092      	lsls	r2, r2, #2
 c009b96:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 c009b9a:	4618      	mov	r0, r3
 c009b9c:	f005 fe17 	bl	c00f7ce <memcpy>
 c009ba0:	4601      	mov	r1, r0
 c009ba2:	f8db 2014 	ldr.w	r2, [fp, #20]
 c009ba6:	9b04      	ldr	r3, [sp, #16]
 c009ba8:	2a01      	cmp	r2, #1
 c009baa:	f340 808e 	ble.w	c009cca <kad_op_conv2d+0x4ca>
 c009bae:	2b00      	cmp	r3, #0
 c009bb0:	dd2c      	ble.n	c009c0c <kad_op_conv2d+0x40c>
 c009bb2:	f8db 3018 	ldr.w	r3, [fp, #24]
 c009bb6:	f8dd e020 	ldr.w	lr, [sp, #32]
 c009bba:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 c009bbe:	eb01 0c83 	add.w	ip, r1, r3, lsl #2
 c009bc2:	0092      	lsls	r2, r2, #2
 c009bc4:	eb09 018a 	add.w	r1, r9, sl, lsl #2
 c009bc8:	eb04 008a 	add.w	r0, r4, sl, lsl #2
 c009bcc:	f1ba 0f00 	cmp.w	sl, #0
 c009bd0:	dd74      	ble.n	c009cbc <kad_op_conv2d+0x4bc>
 c009bd2:	4663      	mov	r3, ip
 c009bd4:	46ca      	mov	sl, r9
 c009bd6:	edd3 7a00 	vldr	s15, [r3]
 c009bda:	ecea 7a01 	vstmia	sl!, {s15}
 c009bde:	4551      	cmp	r1, sl
 c009be0:	4413      	add	r3, r2
 c009be2:	d1f8      	bne.n	c009bd6 <kad_op_conv2d+0x3d6>
 c009be4:	edde 6a00 	vldr	s13, [lr]
 c009be8:	46ca      	mov	sl, r9
 c009bea:	4623      	mov	r3, r4
 c009bec:	edd3 7a00 	vldr	s15, [r3]
 c009bf0:	ecba 7a01 	vldmia	sl!, {s14}
 c009bf4:	eee6 7a87 	vfma.f32	s15, s13, s14
 c009bf8:	ece3 7a01 	vstmia	r3!, {s15}
 c009bfc:	4283      	cmp	r3, r0
 c009bfe:	d1f5      	bne.n	c009bec <kad_op_conv2d+0x3ec>
 c009c00:	f10e 0e04 	add.w	lr, lr, #4
 c009c04:	4575      	cmp	r5, lr
 c009c06:	f10c 0c04 	add.w	ip, ip, #4
 c009c0a:	d1e2      	bne.n	c009bd2 <kad_op_conv2d+0x3d2>
 c009c0c:	9b00      	ldr	r3, [sp, #0]
 c009c0e:	3301      	adds	r3, #1
 c009c10:	461a      	mov	r2, r3
 c009c12:	9300      	str	r3, [sp, #0]
 c009c14:	f8db 3004 	ldr.w	r3, [fp, #4]
 c009c18:	441e      	add	r6, r3
 c009c1a:	4613      	mov	r3, r2
 c009c1c:	9a03      	ldr	r2, [sp, #12]
 c009c1e:	4293      	cmp	r3, r2
 c009c20:	d001      	beq.n	c009c26 <kad_op_conv2d+0x426>
 c009c22:	2e00      	cmp	r6, #0
 c009c24:	da8f      	bge.n	c009b46 <kad_op_conv2d+0x346>
 c009c26:	e9dd 4a0d 	ldrd	r4, sl, [sp, #52]	@ 0x34
 c009c2a:	9b08      	ldr	r3, [sp, #32]
 c009c2c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 c009c2e:	3401      	adds	r4, #1
 c009c30:	1a9d      	subs	r5, r3, r2
 c009c32:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 c009c34:	429c      	cmp	r4, r3
 c009c36:	f47f af79 	bne.w	c009b2c <kad_op_conv2d+0x32c>
 c009c3a:	e9dd e618 	ldrd	lr, r6, [sp, #96]	@ 0x60
 c009c3e:	9b05      	ldr	r3, [sp, #20]
 c009c40:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c009c42:	3301      	adds	r3, #1
 c009c44:	4293      	cmp	r3, r2
 c009c46:	9305      	str	r3, [sp, #20]
 c009c48:	4476      	add	r6, lr
 c009c4a:	f47f af60 	bne.w	c009b0e <kad_op_conv2d+0x30e>
 c009c4e:	4619      	mov	r1, r3
 c009c50:	9b06      	ldr	r3, [sp, #24]
 c009c52:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 c009c54:	3301      	adds	r3, #1
 c009c56:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 c009c58:	42a3      	cmp	r3, r4
 c009c5a:	4652      	mov	r2, sl
 c009c5c:	4670      	mov	r0, lr
 c009c5e:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 c009c60:	f8dd a05c 	ldr.w	sl, [sp, #92]	@ 0x5c
 c009c64:	9306      	str	r3, [sp, #24]
 c009c66:	440d      	add	r5, r1
 c009c68:	f47f af41 	bne.w	c009aee <kad_op_conv2d+0x2ee>
 c009c6c:	9907      	ldr	r1, [sp, #28]
 c009c6e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 c009c70:	3101      	adds	r1, #1
 c009c72:	428b      	cmp	r3, r1
 c009c74:	4677      	mov	r7, lr
 c009c76:	4625      	mov	r5, r4
 c009c78:	9107      	str	r1, [sp, #28]
 c009c7a:	f47f af31 	bne.w	c009ae0 <kad_op_conv2d+0x2e0>
 c009c7e:	e9dd 3105 	ldrd	r3, r1, [sp, #20]
 c009c82:	4654      	mov	r4, sl
 c009c84:	fb03 f101 	mul.w	r1, r3, r1
 c009c88:	1063      	asrs	r3, r4, #1
 c009c8a:	2b00      	cmp	r3, #0
 c009c8c:	f77f adcd 	ble.w	c00982a <kad_op_conv2d+0x2a>
 c009c90:	2500      	movs	r5, #0
 c009c92:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c009c94:	00a4      	lsls	r4, r4, #2
 c009c96:	009a      	lsls	r2, r3, #2
 c009c98:	4603      	mov	r3, r0
 c009c9a:	4420      	add	r0, r4
 c009c9c:	4606      	mov	r6, r0
 c009c9e:	18d7      	adds	r7, r2, r3
 c009ca0:	f856 ed04 	ldr.w	lr, [r6, #-4]!
 c009ca4:	f8d3 c000 	ldr.w	ip, [r3]
 c009ca8:	f843 eb04 	str.w	lr, [r3], #4
 c009cac:	42bb      	cmp	r3, r7
 c009cae:	f8c6 c000 	str.w	ip, [r6]
 c009cb2:	d1f5      	bne.n	c009ca0 <kad_op_conv2d+0x4a0>
 c009cb4:	3501      	adds	r5, #1
 c009cb6:	428d      	cmp	r5, r1
 c009cb8:	d1ee      	bne.n	c009c98 <kad_op_conv2d+0x498>
 c009cba:	e5b6      	b.n	c00982a <kad_op_conv2d+0x2a>
 c009cbc:	f10e 0e04 	add.w	lr, lr, #4
 c009cc0:	45ae      	cmp	lr, r5
 c009cc2:	f10c 0c04 	add.w	ip, ip, #4
 c009cc6:	d181      	bne.n	c009bcc <kad_op_conv2d+0x3cc>
 c009cc8:	e7a0      	b.n	c009c0c <kad_op_conv2d+0x40c>
 c009cca:	2b00      	cmp	r3, #0
 c009ccc:	dd9e      	ble.n	c009c0c <kad_op_conv2d+0x40c>
 c009cce:	f1ba 0f00 	cmp.w	sl, #0
 c009cd2:	f8db 3018 	ldr.w	r3, [fp, #24]
 c009cd6:	dd99      	ble.n	c009c0c <kad_op_conv2d+0x40c>
 c009cd8:	ebc3 7383 	rsb	r3, r3, r3, lsl #30
 c009cdc:	f8dd c020 	ldr.w	ip, [sp, #32]
 c009ce0:	009b      	lsls	r3, r3, #2
 c009ce2:	eb04 0a8a 	add.w	sl, r4, sl, lsl #2
 c009ce6:	ecfc 6a01 	vldmia	ip!, {s13}
 c009cea:	4622      	mov	r2, r4
 c009cec:	18c8      	adds	r0, r1, r3
 c009cee:	edd2 7a00 	vldr	s15, [r2]
 c009cf2:	ecb0 7a01 	vldmia	r0!, {s14}
 c009cf6:	eee6 7a87 	vfma.f32	s15, s13, s14
 c009cfa:	ece2 7a01 	vstmia	r2!, {s15}
 c009cfe:	4552      	cmp	r2, sl
 c009d00:	d1f5      	bne.n	c009cee <kad_op_conv2d+0x4ee>
 c009d02:	4565      	cmp	r5, ip
 c009d04:	f103 0304 	add.w	r3, r3, #4
 c009d08:	d1ed      	bne.n	c009ce6 <kad_op_conv2d+0x4e6>
 c009d0a:	e77f      	b.n	c009c0c <kad_op_conv2d+0x40c>
 c009d0c:	3201      	adds	r2, #1
 c009d0e:	4562      	cmp	r2, ip
 c009d10:	4438      	add	r0, r7
 c009d12:	f040 87fc 	bne.w	c00ad0e <kad_op_conv2d+0x150e>
 c009d16:	3601      	adds	r6, #1
 c009d18:	4546      	cmp	r6, r8
 c009d1a:	4465      	add	r5, ip
 c009d1c:	f040 87e2 	bne.w	c00ace4 <kad_op_conv2d+0x14e4>
 c009d20:	464b      	mov	r3, r9
 c009d22:	2c00      	cmp	r4, #0
 c009d24:	46f1      	mov	r9, lr
 c009d26:	4621      	mov	r1, r4
 c009d28:	469e      	mov	lr, r3
 c009d2a:	f340 8141 	ble.w	c009fb0 <kad_op_conv2d+0x7b0>
 c009d2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c009d30:	2b00      	cmp	r3, #0
 c009d32:	f341 8025 	ble.w	c00ad80 <kad_op_conv2d+0x1580>
 c009d36:	f1be 0f00 	cmp.w	lr, #0
 c009d3a:	f341 8021 	ble.w	c00ad80 <kad_op_conv2d+0x1580>
 c009d3e:	9b04      	ldr	r3, [sp, #16]
 c009d40:	2b00      	cmp	r3, #0
 c009d42:	f341 8018 	ble.w	c00ad76 <kad_op_conv2d+0x1576>
 c009d46:	461a      	mov	r2, r3
 c009d48:	2400      	movs	r4, #0
 c009d4a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 c009d4c:	0096      	lsls	r6, r2, #2
 c009d4e:	fb05 f303 	mul.w	r3, r5, r3
 c009d52:	9600      	str	r6, [sp, #0]
 c009d54:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 c009d56:	fb0e f002 	mul.w	r0, lr, r2
 c009d5a:	eb06 0782 	add.w	r7, r6, r2, lsl #2
 c009d5e:	009a      	lsls	r2, r3, #2
 c009d60:	e9cd c807 	strd	ip, r8, [sp, #28]
 c009d64:	9202      	str	r2, [sp, #8]
 c009d66:	4626      	mov	r6, r4
 c009d68:	00aa      	lsls	r2, r5, #2
 c009d6a:	46d0      	mov	r8, sl
 c009d6c:	4625      	mov	r5, r4
 c009d6e:	469c      	mov	ip, r3
 c009d70:	e9cd b905 	strd	fp, r9, [sp, #20]
 c009d74:	9203      	str	r2, [sp, #12]
 c009d76:	f04f 0a00 	mov.w	sl, #0
 c009d7a:	4689      	mov	r9, r1
 c009d7c:	9a04      	ldr	r2, [sp, #16]
 c009d7e:	e9cd 640d 	strd	r6, r4, [sp, #52]	@ 0x34
 c009d82:	fb02 f305 	mul.w	r3, r2, r5
 c009d86:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c009d88:	950f      	str	r5, [sp, #60]	@ 0x3c
 c009d8a:	fb02 f303 	mul.w	r3, r2, r3
 c009d8e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c009d90:	eb02 0b83 	add.w	fp, r2, r3, lsl #2
 c009d94:	fb0e f304 	mul.w	r3, lr, r4
 c009d98:	9a04      	ldr	r2, [sp, #16]
 c009d9a:	fb02 f303 	mul.w	r3, r2, r3
 c009d9e:	461d      	mov	r5, r3
 c009da0:	465c      	mov	r4, fp
 c009da2:	2100      	movs	r1, #0
 c009da4:	eb07 0283 	add.w	r2, r7, r3, lsl #2
 c009da8:	f8cd a044 	str.w	sl, [sp, #68]	@ 0x44
 c009dac:	46a2      	mov	sl, r4
 c009dae:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 c009db0:	9312      	str	r3, [sp, #72]	@ 0x48
 c009db2:	eb06 0685 	add.w	r6, r6, r5, lsl #2
 c009db6:	ecf6 7a01 	vldmia	r6!, {s15}
 c009dba:	9b03      	ldr	r3, [sp, #12]
 c009dbc:	42b2      	cmp	r2, r6
 c009dbe:	edca 7a00 	vstr	s15, [sl]
 c009dc2:	449a      	add	sl, r3
 c009dc4:	d1f7      	bne.n	c009db6 <kad_op_conv2d+0x5b6>
 c009dc6:	9e02      	ldr	r6, [sp, #8]
 c009dc8:	3101      	adds	r1, #1
 c009dca:	4434      	add	r4, r6
 c009dcc:	9e04      	ldr	r6, [sp, #16]
 c009dce:	4571      	cmp	r1, lr
 c009dd0:	4435      	add	r5, r6
 c009dd2:	9e00      	ldr	r6, [sp, #0]
 c009dd4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 c009dd6:	4432      	add	r2, r6
 c009dd8:	d1e8      	bne.n	c009dac <kad_op_conv2d+0x5ac>
 c009dda:	f8dd a044 	ldr.w	sl, [sp, #68]	@ 0x44
 c009dde:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c009de0:	f10a 0a01 	add.w	sl, sl, #1
 c009de4:	4592      	cmp	sl, r2
 c009de6:	f10b 0b04 	add.w	fp, fp, #4
 c009dea:	4403      	add	r3, r0
 c009dec:	d1d7      	bne.n	c009d9e <kad_op_conv2d+0x59e>
 c009dee:	e9dd 640d 	ldrd	r6, r4, [sp, #52]	@ 0x34
 c009df2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 c009df4:	3601      	adds	r6, #1
 c009df6:	454e      	cmp	r6, r9
 c009df8:	4649      	mov	r1, r9
 c009dfa:	4475      	add	r5, lr
 c009dfc:	4414      	add	r4, r2
 c009dfe:	dbba      	blt.n	c009d76 <kad_op_conv2d+0x576>
 c009e00:	e9dd b905 	ldrd	fp, r9, [sp, #20]
 c009e04:	46c2      	mov	sl, r8
 c009e06:	4663      	mov	r3, ip
 c009e08:	f8dd 8020 	ldr.w	r8, [sp, #32]
 c009e0c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 c009e10:	461f      	mov	r7, r3
 c009e12:	f8db 3014 	ldr.w	r3, [fp, #20]
 c009e16:	f1b8 0f00 	cmp.w	r8, #0
 c009e1a:	fb03 f30c 	mul.w	r3, r3, ip
 c009e1e:	f340 80c7 	ble.w	c009fb0 <kad_op_conv2d+0x7b0>
 c009e22:	009b      	lsls	r3, r3, #2
 c009e24:	2900      	cmp	r1, #0
 c009e26:	9312      	str	r3, [sp, #72]	@ 0x48
 c009e28:	f340 80c2 	ble.w	c009fb0 <kad_op_conv2d+0x7b0>
 c009e2c:	f1be 0f00 	cmp.w	lr, #0
 c009e30:	f340 80be 	ble.w	c009fb0 <kad_op_conv2d+0x7b0>
 c009e34:	fb07 f30e 	mul.w	r3, r7, lr
 c009e38:	009a      	lsls	r2, r3, #2
 c009e3a:	2300      	movs	r3, #0
 c009e3c:	9300      	str	r3, [sp, #0]
 c009e3e:	460b      	mov	r3, r1
 c009e40:	00b8      	lsls	r0, r7, #2
 c009e42:	4601      	mov	r1, r0
 c009e44:	f8cd b008 	str.w	fp, [sp, #8]
 c009e48:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 c009e4c:	46bb      	mov	fp, r7
 c009e4e:	4644      	mov	r4, r8
 c009e50:	46f1      	mov	r9, lr
 c009e52:	4618      	mov	r0, r3
 c009e54:	f8cd c038 	str.w	ip, [sp, #56]	@ 0x38
 c009e58:	f8cd a00c 	str.w	sl, [sp, #12]
 c009e5c:	f04f 0e00 	mov.w	lr, #0
 c009e60:	460d      	mov	r5, r1
 c009e62:	4682      	mov	sl, r0
 c009e64:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 c009e68:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 c009e6a:	9414      	str	r4, [sp, #80]	@ 0x50
 c009e6c:	9b03      	ldr	r3, [sp, #12]
 c009e6e:	9902      	ldr	r1, [sp, #8]
 c009e70:	699b      	ldr	r3, [r3, #24]
 c009e72:	6888      	ldr	r0, [r1, #8]
 c009e74:	2b00      	cmp	r3, #0
 c009e76:	9308      	str	r3, [sp, #32]
 c009e78:	f340 8087 	ble.w	c009f8a <kad_op_conv2d+0x78a>
 c009e7c:	4643      	mov	r3, r8
 c009e7e:	4246      	negs	r6, r0
 c009e80:	eba9 0000 	sub.w	r0, r9, r0
 c009e84:	e9cd 2815 	strd	r2, r8, [sp, #84]	@ 0x54
 c009e88:	e9cd a917 	strd	sl, r9, [sp, #92]	@ 0x5c
 c009e8c:	eb08 0405 	add.w	r4, r8, r5
 c009e90:	46ac      	mov	ip, r5
 c009e92:	4680      	mov	r8, r0
 c009e94:	4699      	mov	r9, r3
 c009e96:	f8cd e03c 	str.w	lr, [sp, #60]	@ 0x3c
 c009e9a:	2e00      	cmp	r6, #0
 c009e9c:	46b2      	mov	sl, r6
 c009e9e:	db68      	blt.n	c009f72 <kad_op_conv2d+0x772>
 c009ea0:	2500      	movs	r5, #0
 c009ea2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 c009ea4:	9a00      	ldr	r2, [sp, #0]
 c009ea6:	699b      	ldr	r3, [r3, #24]
 c009ea8:	e9cd 8c05 	strd	r8, ip, [sp, #20]
 c009eac:	9313      	str	r3, [sp, #76]	@ 0x4c
 c009eae:	fb03 f302 	mul.w	r3, r3, r2
 c009eb2:	9311      	str	r3, [sp, #68]	@ 0x44
 c009eb4:	9b03      	ldr	r3, [sp, #12]
 c009eb6:	9607      	str	r6, [sp, #28]
 c009eb8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 c009eba:	4592      	cmp	sl, r2
 c009ebc:	da56      	bge.n	c009f6c <kad_op_conv2d+0x76c>
 c009ebe:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 c009ec0:	9800      	ldr	r0, [sp, #0]
 c009ec2:	695a      	ldr	r2, [r3, #20]
 c009ec4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 c009ec6:	fb02 1200 	mla	r2, r2, r0, r1
 c009eca:	9908      	ldr	r1, [sp, #32]
 c009ecc:	f8d3 801c 	ldr.w	r8, [r3, #28]
 c009ed0:	fb01 5202 	mla	r2, r1, r2, r5
 c009ed4:	990d      	ldr	r1, [sp, #52]	@ 0x34
 c009ed6:	fb08 f202 	mul.w	r2, r8, r2
 c009eda:	69c8      	ldr	r0, [r1, #28]
 c009edc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 c009ede:	4451      	add	r1, sl
 c009ee0:	fb00 f101 	mul.w	r1, r0, r1
 c009ee4:	fb06 f101 	mul.w	r1, r6, r1
 c009ee8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 c009eea:	eb06 0181 	add.w	r1, r6, r1, lsl #2
 c009eee:	6a9e      	ldr	r6, [r3, #40]	@ 0x28
 c009ef0:	eb06 0682 	add.w	r6, r6, r2, lsl #2
 c009ef4:	9a01      	ldr	r2, [sp, #4]
 c009ef6:	b17a      	cbz	r2, c009f18 <kad_op_conv2d+0x718>
 c009ef8:	9319      	str	r3, [sp, #100]	@ 0x64
 c009efa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c009efc:	fb03 f200 	mul.w	r2, r3, r0
 c009f00:	9802      	ldr	r0, [sp, #8]
 c009f02:	0092      	lsls	r2, r2, #2
 c009f04:	6980      	ldr	r0, [r0, #24]
 c009f06:	fb03 f000 	mul.w	r0, r3, r0
 c009f0a:	9b01      	ldr	r3, [sp, #4]
 c009f0c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 c009f10:	f005 fc5d 	bl	c00f7ce <memcpy>
 c009f14:	9901      	ldr	r1, [sp, #4]
 c009f16:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 c009f18:	f1b8 0f00 	cmp.w	r8, #0
 c009f1c:	bfc8      	it	gt
 c009f1e:	f04f 0c00 	movgt.w	ip, #0
 c009f22:	dd19      	ble.n	c009f58 <kad_op_conv2d+0x758>
 c009f24:	f1bb 0f00 	cmp.w	fp, #0
 c009f28:	eddf 7a5b 	vldr	s15, [pc, #364]	@ c00a098 <kad_op_conv2d+0x898>
 c009f2c:	dd09      	ble.n	c009f42 <kad_op_conv2d+0x742>
 c009f2e:	4608      	mov	r0, r1
 c009f30:	464a      	mov	r2, r9
 c009f32:	ecf2 6a01 	vldmia	r2!, {s13}
 c009f36:	ecb0 7a01 	vldmia	r0!, {s14}
 c009f3a:	4294      	cmp	r4, r2
 c009f3c:	eee6 7a87 	vfma.f32	s15, s13, s14
 c009f40:	d1f7      	bne.n	c009f32 <kad_op_conv2d+0x732>
 c009f42:	ed96 7a00 	vldr	s14, [r6]
 c009f46:	ee77 7a27 	vadd.f32	s15, s14, s15
 c009f4a:	f10c 0c01 	add.w	ip, ip, #1
 c009f4e:	45e0      	cmp	r8, ip
 c009f50:	ece6 7a01 	vstmia	r6!, {s15}
 c009f54:	4439      	add	r1, r7
 c009f56:	d1e5      	bne.n	c009f24 <kad_op_conv2d+0x724>
 c009f58:	9a02      	ldr	r2, [sp, #8]
 c009f5a:	3501      	adds	r5, #1
 c009f5c:	6852      	ldr	r2, [r2, #4]
 c009f5e:	4492      	add	sl, r2
 c009f60:	9a08      	ldr	r2, [sp, #32]
 c009f62:	4295      	cmp	r5, r2
 c009f64:	d002      	beq.n	c009f6c <kad_op_conv2d+0x76c>
 c009f66:	f1ba 0f00 	cmp.w	sl, #0
 c009f6a:	daa5      	bge.n	c009eb8 <kad_op_conv2d+0x6b8>
 c009f6c:	9e07      	ldr	r6, [sp, #28]
 c009f6e:	e9dd 8c05 	ldrd	r8, ip, [sp, #20]
 c009f72:	3601      	adds	r6, #1
 c009f74:	45b0      	cmp	r8, r6
 c009f76:	44e1      	add	r9, ip
 c009f78:	4464      	add	r4, ip
 c009f7a:	d18e      	bne.n	c009e9a <kad_op_conv2d+0x69a>
 c009f7c:	e9dd 2815 	ldrd	r2, r8, [sp, #84]	@ 0x54
 c009f80:	e9dd a917 	ldrd	sl, r9, [sp, #92]	@ 0x5c
 c009f84:	4665      	mov	r5, ip
 c009f86:	f8dd e03c 	ldr.w	lr, [sp, #60]	@ 0x3c
 c009f8a:	f10e 0e01 	add.w	lr, lr, #1
 c009f8e:	45d6      	cmp	lr, sl
 c009f90:	4490      	add	r8, r2
 c009f92:	f47f af6b 	bne.w	c009e6c <kad_op_conv2d+0x66c>
 c009f96:	9b00      	ldr	r3, [sp, #0]
 c009f98:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 c009f9a:	3301      	adds	r3, #1
 c009f9c:	42a3      	cmp	r3, r4
 c009f9e:	4650      	mov	r0, sl
 c009fa0:	4629      	mov	r1, r5
 c009fa2:	f8dd a00c 	ldr.w	sl, [sp, #12]
 c009fa6:	9300      	str	r3, [sp, #0]
 c009fa8:	f47f af56 	bne.w	c009e58 <kad_op_conv2d+0x658>
 c009fac:	4601      	mov	r1, r0
 c009fae:	46ce      	mov	lr, r9
 c009fb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 c009fb2:	fb03 f101 	mul.w	r1, r3, r1
 c009fb6:	2900      	cmp	r1, #0
 c009fb8:	f77f ac37 	ble.w	c00982a <kad_op_conv2d+0x2a>
 c009fbc:	9b04      	ldr	r3, [sp, #16]
 c009fbe:	fb03 f40e 	mul.w	r4, r3, lr
 c009fc2:	e661      	b.n	c009c88 <kad_op_conv2d+0x488>
 c009fc4:	f8d9 101c 	ldr.w	r1, [r9, #28]
 c009fc8:	2700      	movs	r7, #0
 c009fca:	440b      	add	r3, r1
 c009fcc:	1898      	adds	r0, r3, r2
 c009fce:	2104      	movs	r1, #4
 c009fd0:	f005 f838 	bl	c00f044 <calloc>
 c009fd4:	9709      	str	r7, [sp, #36]	@ 0x24
 c009fd6:	9001      	str	r0, [sp, #4]
 c009fd8:	970c      	str	r7, [sp, #48]	@ 0x30
 c009fda:	e50a      	b.n	c0099f2 <kad_op_conv2d+0x1f2>
 c009fdc:	6933      	ldr	r3, [r6, #16]
 c009fde:	9908      	ldr	r1, [sp, #32]
 c009fe0:	69b2      	ldr	r2, [r6, #24]
 c009fe2:	fb03 f501 	mul.w	r5, r3, r1
 c009fe6:	9307      	str	r3, [sp, #28]
 c009fe8:	9b03      	ldr	r3, [sp, #12]
 c009fea:	9205      	str	r2, [sp, #20]
 c009fec:	fb02 f803 	mul.w	r8, r2, r3
 c009ff0:	6ab2      	ldr	r2, [r6, #40]	@ 0x28
 c009ff2:	2d00      	cmp	r5, #0
 c009ff4:	9213      	str	r2, [sp, #76]	@ 0x4c
 c009ff6:	f8cd 8070 	str.w	r8, [sp, #112]	@ 0x70
 c009ffa:	f340 8342 	ble.w	c00a682 <kad_op_conv2d+0xe82>
 c009ffe:	ea4f 0368 	mov.w	r3, r8, asr #1
 c00a002:	2b00      	cmp	r3, #0
 c00a004:	dd4a      	ble.n	c00a09c <kad_op_conv2d+0x89c>
 c00a006:	2100      	movs	r1, #0
 c00a008:	ea4f 0c88 	mov.w	ip, r8, lsl #2
 c00a00c:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 c00a010:	4610      	mov	r0, r2
 c00a012:	4462      	add	r2, ip
 c00a014:	eb0e 0400 	add.w	r4, lr, r0
 c00a018:	9400      	str	r4, [sp, #0]
 c00a01a:	4614      	mov	r4, r2
 c00a01c:	9302      	str	r3, [sp, #8]
 c00a01e:	ed34 7a01 	vldmdb	r4!, {s14}
 c00a022:	edd0 7a00 	vldr	s15, [r0]
 c00a026:	eca0 7a01 	vstmia	r0!, {s14}
 c00a02a:	9b00      	ldr	r3, [sp, #0]
 c00a02c:	edc4 7a00 	vstr	s15, [r4]
 c00a030:	4298      	cmp	r0, r3
 c00a032:	d1f4      	bne.n	c00a01e <kad_op_conv2d+0x81e>
 c00a034:	3101      	adds	r1, #1
 c00a036:	428d      	cmp	r5, r1
 c00a038:	9b02      	ldr	r3, [sp, #8]
 c00a03a:	d1e9      	bne.n	c00a010 <kad_op_conv2d+0x810>
 c00a03c:	2f00      	cmp	r7, #0
 c00a03e:	f040 8190 	bne.w	c00a362 <kad_op_conv2d+0xb62>
 c00a042:	f8d9 2010 	ldr.w	r2, [r9, #16]
 c00a046:	2a00      	cmp	r2, #0
 c00a048:	f340 8150 	ble.w	c00a2ec <kad_op_conv2d+0xaec>
 c00a04c:	9a07      	ldr	r2, [sp, #28]
 c00a04e:	2a00      	cmp	r2, #0
 c00a050:	f340 814c 	ble.w	c00a2ec <kad_op_conv2d+0xaec>
 c00a054:	9a08      	ldr	r2, [sp, #32]
 c00a056:	2a00      	cmp	r2, #0
 c00a058:	f340 8148 	ble.w	c00a2ec <kad_op_conv2d+0xaec>
 c00a05c:	9a05      	ldr	r2, [sp, #20]
 c00a05e:	2a00      	cmp	r2, #0
 c00a060:	dc2f      	bgt.n	c00a0c2 <kad_op_conv2d+0x8c2>
 c00a062:	e143      	b.n	c00a2ec <kad_op_conv2d+0xaec>
 c00a064:	f8d9 101c 	ldr.w	r1, [r9, #28]
 c00a068:	f8d9 0014 	ldr.w	r0, [r9, #20]
 c00a06c:	440b      	add	r3, r1
 c00a06e:	4413      	add	r3, r2
 c00a070:	fb03 f000 	mul.w	r0, r3, r0
 c00a074:	2104      	movs	r1, #4
 c00a076:	f004 ffe5 	bl	c00f044 <calloc>
 c00a07a:	2300      	movs	r3, #0
 c00a07c:	2701      	movs	r7, #1
 c00a07e:	9310      	str	r3, [sp, #64]	@ 0x40
 c00a080:	9001      	str	r0, [sp, #4]
 c00a082:	e4b6      	b.n	c0099f2 <kad_op_conv2d+0x1f2>
 c00a084:	2004      	movs	r0, #4
 c00a086:	e41a      	b.n	c0098be <kad_op_conv2d+0xbe>
 c00a088:	2004      	movs	r0, #4
 c00a08a:	e401      	b.n	c009890 <kad_op_conv2d+0x90>
 c00a08c:	2204      	movs	r2, #4
 c00a08e:	e4f5      	b.n	c009a7c <kad_op_conv2d+0x27c>
 c00a090:	f04f 30ff 	mov.w	r0, #4294967295
 c00a094:	f7ff bbd6 	b.w	c009844 <kad_op_conv2d+0x44>
 c00a098:	00000000 	.word	0x00000000
 c00a09c:	2f00      	cmp	r7, #0
 c00a09e:	f040 8160 	bne.w	c00a362 <kad_op_conv2d+0xb62>
 c00a0a2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 c00a0a6:	2b00      	cmp	r3, #0
 c00a0a8:	f77f ac1f 	ble.w	c0098ea <kad_op_conv2d+0xea>
 c00a0ac:	9b07      	ldr	r3, [sp, #28]
 c00a0ae:	2b00      	cmp	r3, #0
 c00a0b0:	f77f ac1b 	ble.w	c0098ea <kad_op_conv2d+0xea>
 c00a0b4:	2900      	cmp	r1, #0
 c00a0b6:	f77f ac18 	ble.w	c0098ea <kad_op_conv2d+0xea>
 c00a0ba:	9b05      	ldr	r3, [sp, #20]
 c00a0bc:	2b00      	cmp	r3, #0
 c00a0be:	f77f ac14 	ble.w	c0098ea <kad_op_conv2d+0xea>
 c00a0c2:	2300      	movs	r3, #0
 c00a0c4:	930a      	str	r3, [sp, #40]	@ 0x28
 c00a0c6:	9b03      	ldr	r3, [sp, #12]
 c00a0c8:	ea4f 0488 	mov.w	r4, r8, lsl #2
 c00a0cc:	009a      	lsls	r2, r3, #2
 c00a0ce:	f8cd 9050 	str.w	r9, [sp, #80]	@ 0x50
 c00a0d2:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 c00a0d6:	46a9      	mov	r9, r5
 c00a0d8:	46ba      	mov	sl, r7
 c00a0da:	4615      	mov	r5, r2
 c00a0dc:	4632      	mov	r2, r6
 c00a0de:	4626      	mov	r6, r4
 c00a0e0:	f8cd b074 	str.w	fp, [sp, #116]	@ 0x74
 c00a0e4:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 c00a0e8:	2400      	movs	r4, #0
 c00a0ea:	4647      	mov	r7, r8
 c00a0ec:	940b      	str	r4, [sp, #44]	@ 0x2c
 c00a0ee:	9b05      	ldr	r3, [sp, #20]
 c00a0f0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 c00a0f2:	fb03 f304 	mul.w	r3, r3, r4
 c00a0f6:	fb05 1303 	mla	r3, r5, r3, r1
 c00a0fa:	eb03 0805 	add.w	r8, r3, r5
 c00a0fe:	2300      	movs	r3, #0
 c00a100:	46a6      	mov	lr, r4
 c00a102:	462c      	mov	r4, r5
 c00a104:	4645      	mov	r5, r8
 c00a106:	46b8      	mov	r8, r7
 c00a108:	930d      	str	r3, [sp, #52]	@ 0x34
 c00a10a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 c00a10c:	f8cd a078 	str.w	sl, [sp, #120]	@ 0x78
 c00a110:	990e      	ldr	r1, [sp, #56]	@ 0x38
 c00a112:	6989      	ldr	r1, [r1, #24]
 c00a114:	4608      	mov	r0, r1
 c00a116:	2800      	cmp	r0, #0
 c00a118:	9106      	str	r1, [sp, #24]
 c00a11a:	6899      	ldr	r1, [r3, #8]
 c00a11c:	f340 80b6 	ble.w	c00a28c <kad_op_conv2d+0xa8c>
 c00a120:	9805      	ldr	r0, [sp, #20]
 c00a122:	424f      	negs	r7, r1
 c00a124:	1a41      	subs	r1, r0, r1
 c00a126:	9803      	ldr	r0, [sp, #12]
 c00a128:	e9cd 261f 	strd	r2, r6, [sp, #124]	@ 0x7c
 c00a12c:	ebc0 7c40 	rsb	ip, r0, r0, lsl #29
 c00a130:	f8cd 9084 	str.w	r9, [sp, #132]	@ 0x84
 c00a134:	46aa      	mov	sl, r5
 c00a136:	46a1      	mov	r9, r4
 c00a138:	460e      	mov	r6, r1
 c00a13a:	4664      	mov	r4, ip
 c00a13c:	2f00      	cmp	r7, #0
 c00a13e:	9700      	str	r7, [sp, #0]
 c00a140:	ebaa 0c09 	sub.w	ip, sl, r9
 c00a144:	f2c0 8097 	blt.w	c00a276 <kad_op_conv2d+0xa76>
 c00a148:	2200      	movs	r2, #0
 c00a14a:	e9cd 9715 	strd	r9, r7, [sp, #84]	@ 0x54
 c00a14e:	e9cd 5618 	strd	r5, r6, [sp, #96]	@ 0x60
 c00a152:	e9cd 841a 	strd	r8, r4, [sp, #104]	@ 0x68
 c00a156:	9302      	str	r3, [sp, #8]
 c00a158:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 c00a15a:	9204      	str	r2, [sp, #16]
 c00a15c:	f8cd e05c 	str.w	lr, [sp, #92]	@ 0x5c
 c00a160:	f8cd c03c 	str.w	ip, [sp, #60]	@ 0x3c
 c00a164:	6999      	ldr	r1, [r3, #24]
 c00a166:	9a00      	ldr	r2, [sp, #0]
 c00a168:	4291      	cmp	r1, r2
 c00a16a:	dd79      	ble.n	c00a260 <kad_op_conv2d+0xa60>
 c00a16c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 c00a16e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 c00a170:	695a      	ldr	r2, [r3, #20]
 c00a172:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 c00a174:	fb02 0204 	mla	r2, r2, r4, r0
 c00a178:	9800      	ldr	r0, [sp, #0]
 c00a17a:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 c00a17c:	fb01 0102 	mla	r1, r1, r2, r0
 c00a180:	980e      	ldr	r0, [sp, #56]	@ 0x38
 c00a182:	6942      	ldr	r2, [r0, #20]
 c00a184:	f8d0 801c 	ldr.w	r8, [r0, #28]
 c00a188:	fb02 5404 	mla	r4, r2, r4, r5
 c00a18c:	9a04      	ldr	r2, [sp, #16]
 c00a18e:	9d06      	ldr	r5, [sp, #24]
 c00a190:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 c00a192:	fb05 2404 	mla	r4, r5, r4, r2
 c00a196:	69da      	ldr	r2, [r3, #28]
 c00a198:	fb08 f404 	mul.w	r4, r8, r4
 c00a19c:	fb02 f501 	mul.w	r5, r2, r1
 c00a1a0:	eb00 0984 	add.w	r9, r0, r4, lsl #2
 c00a1a4:	9801      	ldr	r0, [sp, #4]
 c00a1a6:	eb06 0185 	add.w	r1, r6, r5, lsl #2
 c00a1aa:	b150      	cbz	r0, c00a1c2 <kad_op_conv2d+0x9c2>
 c00a1ac:	9311      	str	r3, [sp, #68]	@ 0x44
 c00a1ae:	9b02      	ldr	r3, [sp, #8]
 c00a1b0:	0092      	lsls	r2, r2, #2
 c00a1b2:	699d      	ldr	r5, [r3, #24]
 c00a1b4:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 c00a1b8:	4628      	mov	r0, r5
 c00a1ba:	f005 fb08 	bl	c00f7ce <memcpy>
 c00a1be:	4629      	mov	r1, r5
 c00a1c0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c00a1c2:	9a02      	ldr	r2, [sp, #8]
 c00a1c4:	6956      	ldr	r6, [r2, #20]
 c00a1c6:	9a03      	ldr	r2, [sp, #12]
 c00a1c8:	2e01      	cmp	r6, #1
 c00a1ca:	f340 80a7 	ble.w	c00a31c <kad_op_conv2d+0xb1c>
 c00a1ce:	2a00      	cmp	r2, #0
 c00a1d0:	dd39      	ble.n	c00a246 <kad_op_conv2d+0xa46>
 c00a1d2:	9a02      	ldr	r2, [sp, #8]
 c00a1d4:	eb0b 0488 	add.w	r4, fp, r8, lsl #2
 c00a1d8:	6992      	ldr	r2, [r2, #24]
 c00a1da:	9311      	str	r3, [sp, #68]	@ 0x44
 c00a1dc:	ebc2 7282 	rsb	r2, r2, r2, lsl #30
 c00a1e0:	eb01 0582 	add.w	r5, r1, r2, lsl #2
 c00a1e4:	ea4f 0288 	mov.w	r2, r8, lsl #2
 c00a1e8:	465b      	mov	r3, fp
 c00a1ea:	46cb      	mov	fp, r9
 c00a1ec:	4691      	mov	r9, r2
 c00a1ee:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 c00a1f0:	00b6      	lsls	r6, r6, #2
 c00a1f2:	464a      	mov	r2, r9
 c00a1f4:	4618      	mov	r0, r3
 c00a1f6:	2100      	movs	r1, #0
 c00a1f8:	f005 fa1a 	bl	c00f630 <memset>
 c00a1fc:	f1b8 0f00 	cmp.w	r8, #0
 c00a200:	4603      	mov	r3, r0
 c00a202:	ecf7 6a01 	vldmia	r7!, {s13}
 c00a206:	462a      	mov	r2, r5
 c00a208:	dd17      	ble.n	c00a23a <kad_op_conv2d+0xa3a>
 c00a20a:	4658      	mov	r0, fp
 c00a20c:	4619      	mov	r1, r3
 c00a20e:	edd1 7a00 	vldr	s15, [r1]
 c00a212:	ecb0 7a01 	vldmia	r0!, {s14}
 c00a216:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00a21a:	ece1 7a01 	vstmia	r1!, {s15}
 c00a21e:	428c      	cmp	r4, r1
 c00a220:	d1f5      	bne.n	c00a20e <kad_op_conv2d+0xa0e>
 c00a222:	4619      	mov	r1, r3
 c00a224:	edd2 7a00 	vldr	s15, [r2]
 c00a228:	ecb1 7a01 	vldmia	r1!, {s14}
 c00a22c:	ee77 7a87 	vadd.f32	s15, s15, s14
 c00a230:	42a1      	cmp	r1, r4
 c00a232:	edc2 7a00 	vstr	s15, [r2]
 c00a236:	4432      	add	r2, r6
 c00a238:	d1f4      	bne.n	c00a224 <kad_op_conv2d+0xa24>
 c00a23a:	4557      	cmp	r7, sl
 c00a23c:	f105 0504 	add.w	r5, r5, #4
 c00a240:	d1d7      	bne.n	c00a1f2 <kad_op_conv2d+0x9f2>
 c00a242:	469b      	mov	fp, r3
 c00a244:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c00a246:	9a02      	ldr	r2, [sp, #8]
 c00a248:	9800      	ldr	r0, [sp, #0]
 c00a24a:	6852      	ldr	r2, [r2, #4]
 c00a24c:	9904      	ldr	r1, [sp, #16]
 c00a24e:	4410      	add	r0, r2
 c00a250:	9a06      	ldr	r2, [sp, #24]
 c00a252:	3101      	adds	r1, #1
 c00a254:	4291      	cmp	r1, r2
 c00a256:	9104      	str	r1, [sp, #16]
 c00a258:	9000      	str	r0, [sp, #0]
 c00a25a:	d001      	beq.n	c00a260 <kad_op_conv2d+0xa60>
 c00a25c:	2800      	cmp	r0, #0
 c00a25e:	da81      	bge.n	c00a164 <kad_op_conv2d+0x964>
 c00a260:	f8dd e05c 	ldr.w	lr, [sp, #92]	@ 0x5c
 c00a264:	9b02      	ldr	r3, [sp, #8]
 c00a266:	f8dd c03c 	ldr.w	ip, [sp, #60]	@ 0x3c
 c00a26a:	e9dd 9715 	ldrd	r9, r7, [sp, #84]	@ 0x54
 c00a26e:	e9dd 5618 	ldrd	r5, r6, [sp, #96]	@ 0x60
 c00a272:	e9dd 841a 	ldrd	r8, r4, [sp, #104]	@ 0x68
 c00a276:	3701      	adds	r7, #1
 c00a278:	42be      	cmp	r6, r7
 c00a27a:	ebac 0ac4 	sub.w	sl, ip, r4, lsl #3
 c00a27e:	f47f af5d 	bne.w	c00a13c <kad_op_conv2d+0x93c>
 c00a282:	e9dd 261f 	ldrd	r2, r6, [sp, #124]	@ 0x7c
 c00a286:	464c      	mov	r4, r9
 c00a288:	f8dd 9084 	ldr.w	r9, [sp, #132]	@ 0x84
 c00a28c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 c00a28e:	9808      	ldr	r0, [sp, #32]
 c00a290:	3101      	adds	r1, #1
 c00a292:	4288      	cmp	r0, r1
 c00a294:	910d      	str	r1, [sp, #52]	@ 0x34
 c00a296:	4435      	add	r5, r6
 c00a298:	f47f af3a 	bne.w	c00a110 <kad_op_conv2d+0x910>
 c00a29c:	4625      	mov	r5, r4
 c00a29e:	4674      	mov	r4, lr
 c00a2a0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 c00a2a2:	9907      	ldr	r1, [sp, #28]
 c00a2a4:	3301      	adds	r3, #1
 c00a2a6:	4299      	cmp	r1, r3
 c00a2a8:	4647      	mov	r7, r8
 c00a2aa:	f8dd a078 	ldr.w	sl, [sp, #120]	@ 0x78
 c00a2ae:	930b      	str	r3, [sp, #44]	@ 0x2c
 c00a2b0:	4404      	add	r4, r0
 c00a2b2:	f47f af1c 	bne.w	c00a0ee <kad_op_conv2d+0x8ee>
 c00a2b6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 c00a2b8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 c00a2ba:	691b      	ldr	r3, [r3, #16]
 c00a2bc:	3101      	adds	r1, #1
 c00a2be:	428b      	cmp	r3, r1
 c00a2c0:	910a      	str	r1, [sp, #40]	@ 0x28
 c00a2c2:	f73f af11 	bgt.w	c00a0e8 <kad_op_conv2d+0x8e8>
 c00a2c6:	4616      	mov	r6, r2
 c00a2c8:	4657      	mov	r7, sl
 c00a2ca:	464d      	mov	r5, r9
 c00a2cc:	f8dd b074 	ldr.w	fp, [sp, #116]	@ 0x74
 c00a2d0:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 c00a2d4:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
 c00a2d8:	2d00      	cmp	r5, #0
 c00a2da:	f340 81e2 	ble.w	c00a6a2 <kad_op_conv2d+0xea2>
 c00a2de:	ea4f 0368 	mov.w	r3, r8, asr #1
 c00a2e2:	2b00      	cmp	r3, #0
 c00a2e4:	f77f ab01 	ble.w	c0098ea <kad_op_conv2d+0xea>
 c00a2e8:	ea4f 0c88 	mov.w	ip, r8, lsl #2
 c00a2ec:	2100      	movs	r1, #0
 c00a2ee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 c00a2f0:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 c00a2f4:	4613      	mov	r3, r2
 c00a2f6:	4462      	add	r2, ip
 c00a2f8:	4610      	mov	r0, r2
 c00a2fa:	eb0e 0403 	add.w	r4, lr, r3
 c00a2fe:	ed70 7a01 	vldmdb	r0!, {s15}
 c00a302:	f8d3 8000 	ldr.w	r8, [r3]
 c00a306:	ece3 7a01 	vstmia	r3!, {s15}
 c00a30a:	42a3      	cmp	r3, r4
 c00a30c:	f8c0 8000 	str.w	r8, [r0]
 c00a310:	d1f5      	bne.n	c00a2fe <kad_op_conv2d+0xafe>
 c00a312:	3101      	adds	r1, #1
 c00a314:	428d      	cmp	r5, r1
 c00a316:	d1ed      	bne.n	c00a2f4 <kad_op_conv2d+0xaf4>
 c00a318:	f7ff bae7 	b.w	c0098ea <kad_op_conv2d+0xea>
 c00a31c:	2a00      	cmp	r2, #0
 c00a31e:	dd92      	ble.n	c00a246 <kad_op_conv2d+0xa46>
 c00a320:	9a02      	ldr	r2, [sp, #8]
 c00a322:	f1b8 0f00 	cmp.w	r8, #0
 c00a326:	6992      	ldr	r2, [r2, #24]
 c00a328:	dd8d      	ble.n	c00a246 <kad_op_conv2d+0xa46>
 c00a32a:	eba8 0202 	sub.w	r2, r8, r2
 c00a32e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 c00a330:	ebc8 7888 	rsb	r8, r8, r8, lsl #30
 c00a334:	eb01 0082 	add.w	r0, r1, r2, lsl #2
 c00a338:	ea4f 0488 	mov.w	r4, r8, lsl #2
 c00a33c:	ecf5 6a01 	vldmia	r5!, {s13}
 c00a340:	4649      	mov	r1, r9
 c00a342:	1822      	adds	r2, r4, r0
 c00a344:	edd2 7a00 	vldr	s15, [r2]
 c00a348:	ecb1 7a01 	vldmia	r1!, {s14}
 c00a34c:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00a350:	ece2 7a01 	vstmia	r2!, {s15}
 c00a354:	4282      	cmp	r2, r0
 c00a356:	d1f5      	bne.n	c00a344 <kad_op_conv2d+0xb44>
 c00a358:	45aa      	cmp	sl, r5
 c00a35a:	f100 0004 	add.w	r0, r0, #4
 c00a35e:	d1ed      	bne.n	c00a33c <kad_op_conv2d+0xb3c>
 c00a360:	e771      	b.n	c00a246 <kad_op_conv2d+0xa46>
 c00a362:	f899 2000 	ldrb.w	r2, [r9]
 c00a366:	2a00      	cmp	r2, #0
 c00a368:	f000 8167 	beq.w	c00a63a <kad_op_conv2d+0xe3a>
 c00a36c:	2a01      	cmp	r2, #1
 c00a36e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 c00a372:	d00e      	beq.n	c00a392 <kad_op_conv2d+0xb92>
 c00a374:	f8d9 1014 	ldr.w	r1, [r9, #20]
 c00a378:	2a02      	cmp	r2, #2
 c00a37a:	fb01 f303 	mul.w	r3, r1, r3
 c00a37e:	d008      	beq.n	c00a392 <kad_op_conv2d+0xb92>
 c00a380:	f8d9 1018 	ldr.w	r1, [r9, #24]
 c00a384:	2a03      	cmp	r2, #3
 c00a386:	fb01 f303 	mul.w	r3, r1, r3
 c00a38a:	bf1c      	itt	ne
 c00a38c:	f8d9 201c 	ldrne.w	r2, [r9, #28]
 c00a390:	4353      	mulne	r3, r2
 c00a392:	009a      	lsls	r2, r3, #2
 c00a394:	2100      	movs	r1, #0
 c00a396:	980c      	ldr	r0, [sp, #48]	@ 0x30
 c00a398:	f005 f94a 	bl	c00f630 <memset>
 c00a39c:	9b07      	ldr	r3, [sp, #28]
 c00a39e:	2b00      	cmp	r3, #0
 c00a3a0:	f340 8143 	ble.w	c00a62a <kad_op_conv2d+0xe2a>
 c00a3a4:	f8d6 e014 	ldr.w	lr, [r6, #20]
 c00a3a8:	f1be 0f00 	cmp.w	lr, #0
 c00a3ac:	f340 8147 	ble.w	c00a63e <kad_op_conv2d+0xe3e>
 c00a3b0:	9a05      	ldr	r2, [sp, #20]
 c00a3b2:	2a00      	cmp	r2, #0
 c00a3b4:	f340 8139 	ble.w	c00a62a <kad_op_conv2d+0xe2a>
 c00a3b8:	2000      	movs	r0, #0
 c00a3ba:	69f1      	ldr	r1, [r6, #28]
 c00a3bc:	ea4f 038e 	mov.w	r3, lr, lsl #2
 c00a3c0:	9300      	str	r3, [sp, #0]
 c00a3c2:	fb0e f301 	mul.w	r3, lr, r1
 c00a3c6:	009b      	lsls	r3, r3, #2
 c00a3c8:	9304      	str	r3, [sp, #16]
 c00a3ca:	008b      	lsls	r3, r1, #2
 c00a3cc:	930a      	str	r3, [sp, #40]	@ 0x28
 c00a3ce:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 c00a3d2:	465b      	mov	r3, fp
 c00a3d4:	4604      	mov	r4, r0
 c00a3d6:	46cb      	mov	fp, r9
 c00a3d8:	4684      	mov	ip, r0
 c00a3da:	46b9      	mov	r9, r7
 c00a3dc:	4690      	mov	r8, r2
 c00a3de:	462f      	mov	r7, r5
 c00a3e0:	fb00 f201 	mul.w	r2, r0, r1
 c00a3e4:	fb0e f202 	mul.w	r2, lr, r2
 c00a3e8:	9206      	str	r2, [sp, #24]
 c00a3ea:	2200      	movs	r2, #0
 c00a3ec:	fb08 f504 	mul.w	r5, r8, r4
 c00a3f0:	2900      	cmp	r1, #0
 c00a3f2:	dd32      	ble.n	c00a45a <kad_op_conv2d+0xc5a>
 c00a3f4:	f8cd 9050 	str.w	r9, [sp, #80]	@ 0x50
 c00a3f8:	46a1      	mov	r9, r4
 c00a3fa:	e9cd 3b0d 	strd	r3, fp, [sp, #52]	@ 0x34
 c00a3fe:	960f      	str	r6, [sp, #60]	@ 0x3c
 c00a400:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 c00a404:	f04f 0c00 	mov.w	ip, #0
 c00a408:	9c06      	ldr	r4, [sp, #24]
 c00a40a:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 c00a40c:	fb05 f301 	mul.w	r3, r5, r1
 c00a410:	1914      	adds	r4, r2, r4
 c00a412:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 c00a416:	9402      	str	r4, [sp, #8]
 c00a418:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 c00a41a:	18ce      	adds	r6, r1, r3
 c00a41c:	eb04 0b86 	add.w	fp, r4, r6, lsl #2
 c00a420:	9c02      	ldr	r4, [sp, #8]
 c00a422:	9215      	str	r2, [sp, #84]	@ 0x54
 c00a424:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 c00a426:	9102      	str	r1, [sp, #8]
 c00a428:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 c00a42c:	4622      	mov	r2, r4
 c00a42e:	ecf3 7a01 	vldmia	r3!, {s15}
 c00a432:	9900      	ldr	r1, [sp, #0]
 c00a434:	455b      	cmp	r3, fp
 c00a436:	edc2 7a00 	vstr	s15, [r2]
 c00a43a:	440a      	add	r2, r1
 c00a43c:	d1f7      	bne.n	c00a42e <kad_op_conv2d+0xc2e>
 c00a43e:	9a04      	ldr	r2, [sp, #16]
 c00a440:	f10c 0c01 	add.w	ip, ip, #1
 c00a444:	4414      	add	r4, r2
 c00a446:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c00a448:	45e0      	cmp	r8, ip
 c00a44a:	eb03 0b02 	add.w	fp, r3, r2
 c00a44e:	9902      	ldr	r1, [sp, #8]
 c00a450:	4633      	mov	r3, r6
 c00a452:	f000 8107 	beq.w	c00a664 <kad_op_conv2d+0xe64>
 c00a456:	440e      	add	r6, r1
 c00a458:	e7e4      	b.n	c00a424 <kad_op_conv2d+0xc24>
 c00a45a:	3201      	adds	r2, #1
 c00a45c:	4572      	cmp	r2, lr
 c00a45e:	4445      	add	r5, r8
 c00a460:	d1c6      	bne.n	c00a3f0 <kad_op_conv2d+0xbf0>
 c00a462:	9a07      	ldr	r2, [sp, #28]
 c00a464:	f10c 0c01 	add.w	ip, ip, #1
 c00a468:	4562      	cmp	r2, ip
 c00a46a:	4474      	add	r4, lr
 c00a46c:	4440      	add	r0, r8
 c00a46e:	d1b7      	bne.n	c00a3e0 <kad_op_conv2d+0xbe0>
 c00a470:	463d      	mov	r5, r7
 c00a472:	464f      	mov	r7, r9
 c00a474:	46d9      	mov	r9, fp
 c00a476:	469b      	mov	fp, r3
 c00a478:	f8d9 3014 	ldr.w	r3, [r9, #20]
 c00a47c:	f8d9 4010 	ldr.w	r4, [r9, #16]
 c00a480:	461a      	mov	r2, r3
 c00a482:	9304      	str	r3, [sp, #16]
 c00a484:	f8db 3014 	ldr.w	r3, [fp, #20]
 c00a488:	2c00      	cmp	r4, #0
 c00a48a:	fb02 f303 	mul.w	r3, r2, r3
 c00a48e:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
 c00a492:	f340 80ca 	ble.w	c00a62a <kad_op_conv2d+0xe2a>
 c00a496:	009b      	lsls	r3, r3, #2
 c00a498:	4618      	mov	r0, r3
 c00a49a:	f04f 0e00 	mov.w	lr, #0
 c00a49e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 c00a4a0:	9b05      	ldr	r3, [sp, #20]
 c00a4a2:	f8cd b008 	str.w	fp, [sp, #8]
 c00a4a6:	fb03 f301 	mul.w	r3, r3, r1
 c00a4aa:	009a      	lsls	r2, r3, #2
 c00a4ac:	9616      	str	r6, [sp, #88]	@ 0x58
 c00a4ae:	008b      	lsls	r3, r1, #2
 c00a4b0:	46f3      	mov	fp, lr
 c00a4b2:	4639      	mov	r1, r7
 c00a4b4:	4616      	mov	r6, r2
 c00a4b6:	462f      	mov	r7, r5
 c00a4b8:	4645      	mov	r5, r8
 c00a4ba:	4680      	mov	r8, r0
 c00a4bc:	9311      	str	r3, [sp, #68]	@ 0x44
 c00a4be:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 c00a4c2:	2300      	movs	r3, #0
 c00a4c4:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
 c00a4c8:	46ab      	mov	fp, r5
 c00a4ca:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 c00a4ce:	9306      	str	r3, [sp, #24]
 c00a4d0:	9417      	str	r4, [sp, #92]	@ 0x5c
 c00a4d2:	f8da 3018 	ldr.w	r3, [sl, #24]
 c00a4d6:	9a02      	ldr	r2, [sp, #8]
 c00a4d8:	2b00      	cmp	r3, #0
 c00a4da:	6890      	ldr	r0, [r2, #8]
 c00a4dc:	930f      	str	r3, [sp, #60]	@ 0x3c
 c00a4de:	f340 808b 	ble.w	c00a5f8 <kad_op_conv2d+0xdf8>
 c00a4e2:	9b05      	ldr	r3, [sp, #20]
 c00a4e4:	4632      	mov	r2, r6
 c00a4e6:	eba3 0c00 	sub.w	ip, r3, r0
 c00a4ea:	463b      	mov	r3, r7
 c00a4ec:	464c      	mov	r4, r9
 c00a4ee:	4667      	mov	r7, ip
 c00a4f0:	465e      	mov	r6, fp
 c00a4f2:	469c      	mov	ip, r3
 c00a4f4:	4245      	negs	r5, r0
 c00a4f6:	f8cd 9060 	str.w	r9, [sp, #96]	@ 0x60
 c00a4fa:	2d00      	cmp	r5, #0
 c00a4fc:	46a9      	mov	r9, r5
 c00a4fe:	db71      	blt.n	c00a5e4 <kad_op_conv2d+0xde4>
 c00a500:	970e      	str	r7, [sp, #56]	@ 0x38
 c00a502:	f04f 0b00 	mov.w	fp, #0
 c00a506:	4613      	mov	r3, r2
 c00a508:	4667      	mov	r7, ip
 c00a50a:	910b      	str	r1, [sp, #44]	@ 0x2c
 c00a50c:	950d      	str	r5, [sp, #52]	@ 0x34
 c00a50e:	9400      	str	r4, [sp, #0]
 c00a510:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c00a512:	6991      	ldr	r1, [r2, #24]
 c00a514:	4549      	cmp	r1, r9
 c00a516:	dd5f      	ble.n	c00a5d8 <kad_op_conv2d+0xdd8>
 c00a518:	9814      	ldr	r0, [sp, #80]	@ 0x50
 c00a51a:	9d06      	ldr	r5, [sp, #24]
 c00a51c:	f8da 2014 	ldr.w	r2, [sl, #20]
 c00a520:	fb00 9101 	mla	r1, r0, r1, r9
 c00a524:	fb02 5200 	mla	r2, r2, r0, r5
 c00a528:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 c00a52a:	9d04      	ldr	r5, [sp, #16]
 c00a52c:	fb00 b002 	mla	r0, r0, r2, fp
 c00a530:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c00a532:	f8da 402c 	ldr.w	r4, [sl, #44]	@ 0x2c
 c00a536:	69d2      	ldr	r2, [r2, #28]
 c00a538:	fb02 f101 	mul.w	r1, r2, r1
 c00a53c:	fb05 f101 	mul.w	r1, r5, r1
 c00a540:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 c00a542:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 c00a546:	f8da 501c 	ldr.w	r5, [sl, #28]
 c00a54a:	fb05 f000 	mul.w	r0, r5, r0
 c00a54e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 c00a552:	9015      	str	r0, [sp, #84]	@ 0x54
 c00a554:	9801      	ldr	r0, [sp, #4]
 c00a556:	b178      	cbz	r0, c00a578 <kad_op_conv2d+0xd78>
 c00a558:	9c02      	ldr	r4, [sp, #8]
 c00a55a:	9319      	str	r3, [sp, #100]	@ 0x64
 c00a55c:	69a0      	ldr	r0, [r4, #24]
 c00a55e:	9b04      	ldr	r3, [sp, #16]
 c00a560:	9c01      	ldr	r4, [sp, #4]
 c00a562:	fb03 f202 	mul.w	r2, r3, r2
 c00a566:	fb03 f000 	mul.w	r0, r3, r0
 c00a56a:	0092      	lsls	r2, r2, #2
 c00a56c:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 c00a570:	f005 f92d 	bl	c00f7ce <memcpy>
 c00a574:	4621      	mov	r1, r4
 c00a576:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 c00a578:	2d00      	cmp	r5, #0
 c00a57a:	dd22      	ble.n	c00a5c2 <kad_op_conv2d+0xdc2>
 c00a57c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 c00a57e:	2a00      	cmp	r2, #0
 c00a580:	dd1f      	ble.n	c00a5c2 <kad_op_conv2d+0xdc2>
 c00a582:	f04f 0c00 	mov.w	ip, #0
 c00a586:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 c00a588:	9c00      	ldr	r4, [sp, #0]
 c00a58a:	f8dd e054 	ldr.w	lr, [sp, #84]	@ 0x54
 c00a58e:	1888      	adds	r0, r1, r2
 c00a590:	f8cd b054 	str.w	fp, [sp, #84]	@ 0x54
 c00a594:	ecfe 6a01 	vldmia	lr!, {s13}
 c00a598:	460a      	mov	r2, r1
 c00a59a:	46a3      	mov	fp, r4
 c00a59c:	edd2 7a00 	vldr	s15, [r2]
 c00a5a0:	ecbb 7a01 	vldmia	fp!, {s14}
 c00a5a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00a5a8:	ece2 7a01 	vstmia	r2!, {s15}
 c00a5ac:	4282      	cmp	r2, r0
 c00a5ae:	d1f5      	bne.n	c00a59c <kad_op_conv2d+0xd9c>
 c00a5b0:	f10c 0c01 	add.w	ip, ip, #1
 c00a5b4:	4565      	cmp	r5, ip
 c00a5b6:	4441      	add	r1, r8
 c00a5b8:	4440      	add	r0, r8
 c00a5ba:	d1eb      	bne.n	c00a594 <kad_op_conv2d+0xd94>
 c00a5bc:	f8dd b054 	ldr.w	fp, [sp, #84]	@ 0x54
 c00a5c0:	9400      	str	r4, [sp, #0]
 c00a5c2:	9a02      	ldr	r2, [sp, #8]
 c00a5c4:	f10b 0b01 	add.w	fp, fp, #1
 c00a5c8:	6852      	ldr	r2, [r2, #4]
 c00a5ca:	4491      	add	r9, r2
 c00a5cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 c00a5ce:	4593      	cmp	fp, r2
 c00a5d0:	d002      	beq.n	c00a5d8 <kad_op_conv2d+0xdd8>
 c00a5d2:	f1b9 0f00 	cmp.w	r9, #0
 c00a5d6:	da9b      	bge.n	c00a510 <kad_op_conv2d+0xd10>
 c00a5d8:	461a      	mov	r2, r3
 c00a5da:	46bc      	mov	ip, r7
 c00a5dc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 c00a5de:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 c00a5e0:	9c00      	ldr	r4, [sp, #0]
 c00a5e2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 c00a5e4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c00a5e6:	3501      	adds	r5, #1
 c00a5e8:	42bd      	cmp	r5, r7
 c00a5ea:	441c      	add	r4, r3
 c00a5ec:	d185      	bne.n	c00a4fa <kad_op_conv2d+0xcfa>
 c00a5ee:	46b3      	mov	fp, r6
 c00a5f0:	4667      	mov	r7, ip
 c00a5f2:	4616      	mov	r6, r2
 c00a5f4:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 c00a5f8:	9b06      	ldr	r3, [sp, #24]
 c00a5fa:	9a07      	ldr	r2, [sp, #28]
 c00a5fc:	3301      	adds	r3, #1
 c00a5fe:	429a      	cmp	r2, r3
 c00a600:	9306      	str	r3, [sp, #24]
 c00a602:	44b1      	add	r9, r6
 c00a604:	f47f af65 	bne.w	c00a4d2 <kad_op_conv2d+0xcd2>
 c00a608:	465d      	mov	r5, fp
 c00a60a:	f8dd b050 	ldr.w	fp, [sp, #80]	@ 0x50
 c00a60e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 c00a610:	f10b 0b01 	add.w	fp, fp, #1
 c00a614:	455c      	cmp	r4, fp
 c00a616:	f47f af54 	bne.w	c00a4c2 <kad_op_conv2d+0xcc2>
 c00a61a:	46a8      	mov	r8, r5
 c00a61c:	463d      	mov	r5, r7
 c00a61e:	460f      	mov	r7, r1
 c00a620:	f8dd b008 	ldr.w	fp, [sp, #8]
 c00a624:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 c00a628:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 c00a62a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 c00a62c:	f8d9 202c 	ldr.w	r2, [r9, #44]	@ 0x2c
 c00a630:	f109 0010 	add.w	r0, r9, #16
 c00a634:	f7f9 fd3c 	bl	c0040b0 <conv2d_add_3to1>
 c00a638:	e64e      	b.n	c00a2d8 <kad_op_conv2d+0xad8>
 c00a63a:	2204      	movs	r2, #4
 c00a63c:	e6aa      	b.n	c00a394 <kad_op_conv2d+0xb94>
 c00a63e:	f8d9 3014 	ldr.w	r3, [r9, #20]
 c00a642:	f8d9 4010 	ldr.w	r4, [r9, #16]
 c00a646:	461a      	mov	r2, r3
 c00a648:	9304      	str	r3, [sp, #16]
 c00a64a:	f8db 3014 	ldr.w	r3, [fp, #20]
 c00a64e:	2c00      	cmp	r4, #0
 c00a650:	fb02 f303 	mul.w	r3, r2, r3
 c00a654:	dde9      	ble.n	c00a62a <kad_op_conv2d+0xe2a>
 c00a656:	009b      	lsls	r3, r3, #2
 c00a658:	4618      	mov	r0, r3
 c00a65a:	9b05      	ldr	r3, [sp, #20]
 c00a65c:	2b00      	cmp	r3, #0
 c00a65e:	f73f af1c 	bgt.w	c00a49a <kad_op_conv2d+0xc9a>
 c00a662:	e7e2      	b.n	c00a62a <kad_op_conv2d+0xe2a>
 c00a664:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 c00a666:	4445      	add	r5, r8
 c00a668:	3201      	adds	r2, #1
 c00a66a:	4596      	cmp	lr, r2
 c00a66c:	f47f aeca 	bne.w	c00a404 <kad_op_conv2d+0xc04>
 c00a670:	e9dd 3b0d 	ldrd	r3, fp, [sp, #52]	@ 0x34
 c00a674:	464c      	mov	r4, r9
 c00a676:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 c00a678:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 c00a67c:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
 c00a680:	e6ef      	b.n	c00a462 <kad_op_conv2d+0xc62>
 c00a682:	2f00      	cmp	r7, #0
 c00a684:	f47f ae6d 	bne.w	c00a362 <kad_op_conv2d+0xb62>
 c00a688:	f8d9 3010 	ldr.w	r3, [r9, #16]
 c00a68c:	2b00      	cmp	r3, #0
 c00a68e:	dd08      	ble.n	c00a6a2 <kad_op_conv2d+0xea2>
 c00a690:	9b07      	ldr	r3, [sp, #28]
 c00a692:	2b00      	cmp	r3, #0
 c00a694:	dd05      	ble.n	c00a6a2 <kad_op_conv2d+0xea2>
 c00a696:	2900      	cmp	r1, #0
 c00a698:	dd03      	ble.n	c00a6a2 <kad_op_conv2d+0xea2>
 c00a69a:	9b05      	ldr	r3, [sp, #20]
 c00a69c:	2b00      	cmp	r3, #0
 c00a69e:	f73f ad10 	bgt.w	c00a0c2 <kad_op_conv2d+0x8c2>
 c00a6a2:	7873      	ldrb	r3, [r6, #1]
 c00a6a4:	07db      	lsls	r3, r3, #31
 c00a6a6:	f57f a8c0 	bpl.w	c00982a <kad_op_conv2d+0x2a>
 c00a6aa:	f8d6 802c 	ldr.w	r8, [r6, #44]	@ 0x2c
 c00a6ae:	2f00      	cmp	r7, #0
 c00a6b0:	f040 8150 	bne.w	c00a954 <kad_op_conv2d+0x1154>
 c00a6b4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 c00a6b8:	2b00      	cmp	r3, #0
 c00a6ba:	dc09      	bgt.n	c00a6d0 <kad_op_conv2d+0xed0>
 c00a6bc:	f7ff b8b5 	b.w	c00982a <kad_op_conv2d+0x2a>
 c00a6c0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 c00a6c4:	2f00      	cmp	r7, #0
 c00a6c6:	f040 8145 	bne.w	c00a954 <kad_op_conv2d+0x1154>
 c00a6ca:	2b00      	cmp	r3, #0
 c00a6cc:	f77f a8ad 	ble.w	c00982a <kad_op_conv2d+0x2a>
 c00a6d0:	9b07      	ldr	r3, [sp, #28]
 c00a6d2:	2b00      	cmp	r3, #0
 c00a6d4:	f340 80f7 	ble.w	c00a8c6 <kad_op_conv2d+0x10c6>
 c00a6d8:	9b08      	ldr	r3, [sp, #32]
 c00a6da:	2b00      	cmp	r3, #0
 c00a6dc:	f340 80f3 	ble.w	c00a8c6 <kad_op_conv2d+0x10c6>
 c00a6e0:	9805      	ldr	r0, [sp, #20]
 c00a6e2:	2800      	cmp	r0, #0
 c00a6e4:	f340 80ef 	ble.w	c00a8c6 <kad_op_conv2d+0x10c6>
 c00a6e8:	9a03      	ldr	r2, [sp, #12]
 c00a6ea:	4646      	mov	r6, r8
 c00a6ec:	0093      	lsls	r3, r2, #2
 c00a6ee:	ebc2 7242 	rsb	r2, r2, r2, lsl #29
 c00a6f2:	00d1      	lsls	r1, r2, #3
 c00a6f4:	2200      	movs	r2, #0
 c00a6f6:	468c      	mov	ip, r1
 c00a6f8:	fb03 f700 	mul.w	r7, r3, r0
 c00a6fc:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
 c00a700:	46ca      	mov	sl, r9
 c00a702:	f8dd 9040 	ldr.w	r9, [sp, #64]	@ 0x40
 c00a706:	9206      	str	r2, [sp, #24]
 c00a708:	2400      	movs	r4, #0
 c00a70a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 c00a70e:	940a      	str	r4, [sp, #40]	@ 0x28
 c00a710:	fb08 f204 	mul.w	r2, r8, r4
 c00a714:	fb03 6202 	mla	r2, r3, r2, r6
 c00a718:	2100      	movs	r1, #0
 c00a71a:	441a      	add	r2, r3
 c00a71c:	e9cd 6416 	strd	r6, r4, [sp, #88]	@ 0x58
 c00a720:	4614      	mov	r4, r2
 c00a722:	461a      	mov	r2, r3
 c00a724:	46c6      	mov	lr, r8
 c00a726:	f8dd 8054 	ldr.w	r8, [sp, #84]	@ 0x54
 c00a72a:	910b      	str	r1, [sp, #44]	@ 0x2c
 c00a72c:	9714      	str	r7, [sp, #80]	@ 0x50
 c00a72e:	9518      	str	r5, [sp, #96]	@ 0x60
 c00a730:	f8d8 3018 	ldr.w	r3, [r8, #24]
 c00a734:	4619      	mov	r1, r3
 c00a736:	2900      	cmp	r1, #0
 c00a738:	9302      	str	r3, [sp, #8]
 c00a73a:	f8db 3008 	ldr.w	r3, [fp, #8]
 c00a73e:	f340 80a1 	ble.w	c00a884 <kad_op_conv2d+0x1084>
 c00a742:	425d      	negs	r5, r3
 c00a744:	ebae 0303 	sub.w	r3, lr, r3
 c00a748:	4627      	mov	r7, r4
 c00a74a:	e9cd e419 	strd	lr, r4, [sp, #100]	@ 0x64
 c00a74e:	4666      	mov	r6, ip
 c00a750:	462c      	mov	r4, r5
 c00a752:	4615      	mov	r5, r2
 c00a754:	461a      	mov	r2, r3
 c00a756:	1b79      	subs	r1, r7, r5
 c00a758:	2c00      	cmp	r4, #0
 c00a75a:	4623      	mov	r3, r4
 c00a75c:	910d      	str	r1, [sp, #52]	@ 0x34
 c00a75e:	f2c0 8086 	blt.w	c00a86e <kad_op_conv2d+0x106e>
 c00a762:	2100      	movs	r1, #0
 c00a764:	e9cd 4511 	strd	r4, r5, [sp, #68]	@ 0x44
 c00a768:	9100      	str	r1, [sp, #0]
 c00a76a:	f8da 1018 	ldr.w	r1, [sl, #24]
 c00a76e:	920f      	str	r2, [sp, #60]	@ 0x3c
 c00a770:	9104      	str	r1, [sp, #16]
 c00a772:	9613      	str	r6, [sp, #76]	@ 0x4c
 c00a774:	9a04      	ldr	r2, [sp, #16]
 c00a776:	4293      	cmp	r3, r2
 c00a778:	da75      	bge.n	c00a866 <kad_op_conv2d+0x1066>
 c00a77a:	9906      	ldr	r1, [sp, #24]
 c00a77c:	f8da 2014 	ldr.w	r2, [sl, #20]
 c00a780:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c00a782:	f8d8 401c 	ldr.w	r4, [r8, #28]
 c00a786:	fb02 0501 	mla	r5, r2, r1, r0
 c00a78a:	9a04      	ldr	r2, [sp, #16]
 c00a78c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 c00a78e:	fb02 3505 	mla	r5, r2, r5, r3
 c00a792:	f8d8 2014 	ldr.w	r2, [r8, #20]
 c00a796:	fb02 0001 	mla	r0, r2, r1, r0
 c00a79a:	9a00      	ldr	r2, [sp, #0]
 c00a79c:	9902      	ldr	r1, [sp, #8]
 c00a79e:	fb01 2000 	mla	r0, r1, r0, r2
 c00a7a2:	f8da 201c 	ldr.w	r2, [sl, #28]
 c00a7a6:	fb04 f000 	mul.w	r0, r4, r0
 c00a7aa:	fb02 f505 	mul.w	r5, r2, r5
 c00a7ae:	f8da 1028 	ldr.w	r1, [sl, #40]	@ 0x28
 c00a7b2:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 c00a7b6:	f8d8 502c 	ldr.w	r5, [r8, #44]	@ 0x2c
 c00a7ba:	eb05 0580 	add.w	r5, r5, r0, lsl #2
 c00a7be:	9801      	ldr	r0, [sp, #4]
 c00a7c0:	b150      	cbz	r0, c00a7d8 <kad_op_conv2d+0xfd8>
 c00a7c2:	f8db 6018 	ldr.w	r6, [fp, #24]
 c00a7c6:	0092      	lsls	r2, r2, #2
 c00a7c8:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 c00a7cc:	4630      	mov	r0, r6
 c00a7ce:	930e      	str	r3, [sp, #56]	@ 0x38
 c00a7d0:	f004 fffd 	bl	c00f7ce <memcpy>
 c00a7d4:	4631      	mov	r1, r6
 c00a7d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c00a7d8:	f8db 2014 	ldr.w	r2, [fp, #20]
 c00a7dc:	2a01      	cmp	r2, #1
 c00a7de:	f340 8093 	ble.w	c00a908 <kad_op_conv2d+0x1108>
 c00a7e2:	9803      	ldr	r0, [sp, #12]
 c00a7e4:	2800      	cmp	r0, #0
 c00a7e6:	dd31      	ble.n	c00a84c <kad_op_conv2d+0x104c>
 c00a7e8:	f8db 0018 	ldr.w	r0, [fp, #24]
 c00a7ec:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 c00a7f0:	ebc0 7080 	rsb	r0, r0, r0, lsl #30
 c00a7f4:	eb01 0680 	add.w	r6, r1, r0, lsl #2
 c00a7f8:	0092      	lsls	r2, r2, #2
 c00a7fa:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 c00a7fe:	eb05 0184 	add.w	r1, r5, r4, lsl #2
 c00a802:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 c00a806:	2c00      	cmp	r4, #0
 c00a808:	46b6      	mov	lr, r6
 c00a80a:	dd7a      	ble.n	c00a902 <kad_op_conv2d+0x1102>
 c00a80c:	46cb      	mov	fp, r9
 c00a80e:	edde 7a00 	vldr	s15, [lr]
 c00a812:	eceb 7a01 	vstmia	fp!, {s15}
 c00a816:	4558      	cmp	r0, fp
 c00a818:	4496      	add	lr, r2
 c00a81a:	d1f8      	bne.n	c00a80e <kad_op_conv2d+0x100e>
 c00a81c:	eddf 7a7b 	vldr	s15, [pc, #492]	@ c00aa0c <kad_op_conv2d+0x120c>
 c00a820:	46cb      	mov	fp, r9
 c00a822:	46ae      	mov	lr, r5
 c00a824:	ecfe 6a01 	vldmia	lr!, {s13}
 c00a828:	ecbb 7a01 	vldmia	fp!, {s14}
 c00a82c:	4571      	cmp	r1, lr
 c00a82e:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00a832:	d1f7      	bne.n	c00a824 <kad_op_conv2d+0x1024>
 c00a834:	ed9c 7a00 	vldr	s14, [ip]
 c00a838:	ee77 7a27 	vadd.f32	s15, s14, s15
 c00a83c:	ecec 7a01 	vstmia	ip!, {s15}
 c00a840:	4567      	cmp	r7, ip
 c00a842:	f106 0604 	add.w	r6, r6, #4
 c00a846:	d1de      	bne.n	c00a806 <kad_op_conv2d+0x1006>
 c00a848:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 c00a84c:	9a00      	ldr	r2, [sp, #0]
 c00a84e:	3201      	adds	r2, #1
 c00a850:	4611      	mov	r1, r2
 c00a852:	9200      	str	r2, [sp, #0]
 c00a854:	f8db 2004 	ldr.w	r2, [fp, #4]
 c00a858:	4413      	add	r3, r2
 c00a85a:	460a      	mov	r2, r1
 c00a85c:	9902      	ldr	r1, [sp, #8]
 c00a85e:	428a      	cmp	r2, r1
 c00a860:	d001      	beq.n	c00a866 <kad_op_conv2d+0x1066>
 c00a862:	2b00      	cmp	r3, #0
 c00a864:	da86      	bge.n	c00a774 <kad_op_conv2d+0xf74>
 c00a866:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 c00a868:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 c00a86a:	e9dd 4511 	ldrd	r4, r5, [sp, #68]	@ 0x44
 c00a86e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 c00a870:	3401      	adds	r4, #1
 c00a872:	42a2      	cmp	r2, r4
 c00a874:	eba3 0706 	sub.w	r7, r3, r6
 c00a878:	f47f af6d 	bne.w	c00a756 <kad_op_conv2d+0xf56>
 c00a87c:	e9dd e419 	ldrd	lr, r4, [sp, #100]	@ 0x64
 c00a880:	462a      	mov	r2, r5
 c00a882:	46b4      	mov	ip, r6
 c00a884:	9914      	ldr	r1, [sp, #80]	@ 0x50
 c00a886:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 c00a888:	440c      	add	r4, r1
 c00a88a:	9908      	ldr	r1, [sp, #32]
 c00a88c:	3301      	adds	r3, #1
 c00a88e:	4299      	cmp	r1, r3
 c00a890:	930b      	str	r3, [sp, #44]	@ 0x2c
 c00a892:	f47f af4d 	bne.w	c00a730 <kad_op_conv2d+0xf30>
 c00a896:	e9dd 6416 	ldrd	r6, r4, [sp, #88]	@ 0x58
 c00a89a:	4613      	mov	r3, r2
 c00a89c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c00a89e:	440c      	add	r4, r1
 c00a8a0:	9907      	ldr	r1, [sp, #28]
 c00a8a2:	3201      	adds	r2, #1
 c00a8a4:	428a      	cmp	r2, r1
 c00a8a6:	46f0      	mov	r8, lr
 c00a8a8:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 c00a8aa:	9d18      	ldr	r5, [sp, #96]	@ 0x60
 c00a8ac:	920a      	str	r2, [sp, #40]	@ 0x28
 c00a8ae:	f47f af2f 	bne.w	c00a710 <kad_op_conv2d+0xf10>
 c00a8b2:	9a06      	ldr	r2, [sp, #24]
 c00a8b4:	3201      	adds	r2, #1
 c00a8b6:	4611      	mov	r1, r2
 c00a8b8:	9206      	str	r2, [sp, #24]
 c00a8ba:	f8da 2010 	ldr.w	r2, [sl, #16]
 c00a8be:	428a      	cmp	r2, r1
 c00a8c0:	f73f af22 	bgt.w	c00a708 <kad_op_conv2d+0xf08>
 c00a8c4:	46b0      	mov	r8, r6
 c00a8c6:	2d00      	cmp	r5, #0
 c00a8c8:	f77e afaf 	ble.w	c00982a <kad_op_conv2d+0x2a>
 c00a8cc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 c00a8ce:	1053      	asrs	r3, r2, #1
 c00a8d0:	2b00      	cmp	r3, #0
 c00a8d2:	f77e afaa 	ble.w	c00982a <kad_op_conv2d+0x2a>
 c00a8d6:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 c00a8da:	4641      	mov	r1, r8
 c00a8dc:	2000      	movs	r0, #0
 c00a8de:	009b      	lsls	r3, r3, #2
 c00a8e0:	460a      	mov	r2, r1
 c00a8e2:	4461      	add	r1, ip
 c00a8e4:	460c      	mov	r4, r1
 c00a8e6:	18d6      	adds	r6, r2, r3
 c00a8e8:	f854 ed04 	ldr.w	lr, [r4, #-4]!
 c00a8ec:	6817      	ldr	r7, [r2, #0]
 c00a8ee:	f842 eb04 	str.w	lr, [r2], #4
 c00a8f2:	4296      	cmp	r6, r2
 c00a8f4:	6027      	str	r7, [r4, #0]
 c00a8f6:	d1f7      	bne.n	c00a8e8 <kad_op_conv2d+0x10e8>
 c00a8f8:	3001      	adds	r0, #1
 c00a8fa:	4285      	cmp	r5, r0
 c00a8fc:	d1f0      	bne.n	c00a8e0 <kad_op_conv2d+0x10e0>
 c00a8fe:	f7fe bf94 	b.w	c00982a <kad_op_conv2d+0x2a>
 c00a902:	eddf 7a42 	vldr	s15, [pc, #264]	@ c00aa0c <kad_op_conv2d+0x120c>
 c00a906:	e795      	b.n	c00a834 <kad_op_conv2d+0x1034>
 c00a908:	9a03      	ldr	r2, [sp, #12]
 c00a90a:	2a00      	cmp	r2, #0
 c00a90c:	dd9e      	ble.n	c00a84c <kad_op_conv2d+0x104c>
 c00a90e:	f8db 2018 	ldr.w	r2, [fp, #24]
 c00a912:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 c00a914:	ebc2 7282 	rsb	r2, r2, r2, lsl #30
 c00a918:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 c00a91c:	eb05 0c84 	add.w	ip, r5, r4, lsl #2
 c00a920:	2c00      	cmp	r4, #0
 c00a922:	eddf 7a3a 	vldr	s15, [pc, #232]	@ c00aa0c <kad_op_conv2d+0x120c>
 c00a926:	dd0a      	ble.n	c00a93e <kad_op_conv2d+0x113e>
 c00a928:	462a      	mov	r2, r5
 c00a92a:	eb01 000e 	add.w	r0, r1, lr
 c00a92e:	ecf2 6a01 	vldmia	r2!, {s13}
 c00a932:	ecb0 7a01 	vldmia	r0!, {s14}
 c00a936:	4594      	cmp	ip, r2
 c00a938:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00a93c:	d1f7      	bne.n	c00a92e <kad_op_conv2d+0x112e>
 c00a93e:	ed96 7a00 	vldr	s14, [r6]
 c00a942:	ee77 7a27 	vadd.f32	s15, s14, s15
 c00a946:	ece6 7a01 	vstmia	r6!, {s15}
 c00a94a:	42b7      	cmp	r7, r6
 c00a94c:	f10e 0e04 	add.w	lr, lr, #4
 c00a950:	d1e6      	bne.n	c00a920 <kad_op_conv2d+0x1120>
 c00a952:	e77b      	b.n	c00a84c <kad_op_conv2d+0x104c>
 c00a954:	f8d9 3010 	ldr.w	r3, [r9, #16]
 c00a958:	f8d9 2028 	ldr.w	r2, [r9, #40]	@ 0x28
 c00a95c:	2b00      	cmp	r3, #0
 c00a95e:	9304      	str	r3, [sp, #16]
 c00a960:	9202      	str	r2, [sp, #8]
 c00a962:	f340 8192 	ble.w	c00ac8a <kad_op_conv2d+0x148a>
 c00a966:	f8d9 7014 	ldr.w	r7, [r9, #20]
 c00a96a:	2f00      	cmp	r7, #0
 c00a96c:	dd5a      	ble.n	c00aa24 <kad_op_conv2d+0x1224>
 c00a96e:	f04f 0c00 	mov.w	ip, #0
 c00a972:	46e6      	mov	lr, ip
 c00a974:	00bb      	lsls	r3, r7, #2
 c00a976:	f8d9 0018 	ldr.w	r0, [r9, #24]
 c00a97a:	930b      	str	r3, [sp, #44]	@ 0x2c
 c00a97c:	2800      	cmp	r0, #0
 c00a97e:	fb00 f20e 	mul.w	r2, r0, lr
 c00a982:	dd49      	ble.n	c00aa18 <kad_op_conv2d+0x1218>
 c00a984:	f8d9 301c 	ldr.w	r3, [r9, #28]
 c00a988:	fb00 f40c 	mul.w	r4, r0, ip
 c00a98c:	fb03 f202 	mul.w	r2, r3, r2
 c00a990:	fb07 f202 	mul.w	r2, r7, r2
 c00a994:	9208      	str	r2, [sp, #32]
 c00a996:	fb03 f207 	mul.w	r2, r3, r7
 c00a99a:	0092      	lsls	r2, r2, #2
 c00a99c:	920a      	str	r2, [sp, #40]	@ 0x28
 c00a99e:	2200      	movs	r2, #0
 c00a9a0:	0099      	lsls	r1, r3, #2
 c00a9a2:	9106      	str	r1, [sp, #24]
 c00a9a4:	2b00      	cmp	r3, #0
 c00a9a6:	dd33      	ble.n	c00aa10 <kad_op_conv2d+0x1210>
 c00a9a8:	e9cd 8c0d 	strd	r8, ip, [sp, #52]	@ 0x34
 c00a9ac:	f8cd b03c 	str.w	fp, [sp, #60]	@ 0x3c
 c00a9b0:	f8cd 9044 	str.w	r9, [sp, #68]	@ 0x44
 c00a9b4:	9600      	str	r6, [sp, #0]
 c00a9b6:	f04f 0900 	mov.w	r9, #0
 c00a9ba:	fb04 fb03 	mul.w	fp, r4, r3
 c00a9be:	9e08      	ldr	r6, [sp, #32]
 c00a9c0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 c00a9c2:	4416      	add	r6, r2
 c00a9c4:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 c00a9c8:	9902      	ldr	r1, [sp, #8]
 c00a9ca:	eb0b 0c03 	add.w	ip, fp, r3
 c00a9ce:	eb01 088c 	add.w	r8, r1, ip, lsl #2
 c00a9d2:	9900      	ldr	r1, [sp, #0]
 c00a9d4:	9413      	str	r4, [sp, #76]	@ 0x4c
 c00a9d6:	9c02      	ldr	r4, [sp, #8]
 c00a9d8:	9300      	str	r3, [sp, #0]
 c00a9da:	eb04 048b 	add.w	r4, r4, fp, lsl #2
 c00a9de:	46b3      	mov	fp, r6
 c00a9e0:	ecf4 7a01 	vldmia	r4!, {s15}
 c00a9e4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 c00a9e6:	45a0      	cmp	r8, r4
 c00a9e8:	edcb 7a00 	vstr	s15, [fp]
 c00a9ec:	449b      	add	fp, r3
 c00a9ee:	d1f7      	bne.n	c00a9e0 <kad_op_conv2d+0x11e0>
 c00a9f0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 c00a9f2:	f109 0901 	add.w	r9, r9, #1
 c00a9f6:	4426      	add	r6, r4
 c00a9f8:	9c06      	ldr	r4, [sp, #24]
 c00a9fa:	4581      	cmp	r9, r0
 c00a9fc:	46e3      	mov	fp, ip
 c00a9fe:	9b00      	ldr	r3, [sp, #0]
 c00aa00:	44a0      	add	r8, r4
 c00aa02:	f000 8133 	beq.w	c00ac6c <kad_op_conv2d+0x146c>
 c00aa06:	449c      	add	ip, r3
 c00aa08:	e7e5      	b.n	c00a9d6 <kad_op_conv2d+0x11d6>
 c00aa0a:	bf00      	nop
 c00aa0c:	00000000 	.word	0x00000000
 c00aa10:	3201      	adds	r2, #1
 c00aa12:	42ba      	cmp	r2, r7
 c00aa14:	4404      	add	r4, r0
 c00aa16:	d1c5      	bne.n	c00a9a4 <kad_op_conv2d+0x11a4>
 c00aa18:	9b04      	ldr	r3, [sp, #16]
 c00aa1a:	f10e 0e01 	add.w	lr, lr, #1
 c00aa1e:	459e      	cmp	lr, r3
 c00aa20:	44bc      	add	ip, r7
 c00aa22:	d1ab      	bne.n	c00a97c <kad_op_conv2d+0x117c>
 c00aa24:	7832      	ldrb	r2, [r6, #0]
 c00aa26:	4613      	mov	r3, r2
 c00aa28:	2a00      	cmp	r2, #0
 c00aa2a:	f000 8116 	beq.w	c00ac5a <kad_op_conv2d+0x145a>
 c00aa2e:	2b01      	cmp	r3, #1
 c00aa30:	f000 8111 	beq.w	c00ac56 <kad_op_conv2d+0x1456>
 c00aa34:	2b02      	cmp	r3, #2
 c00aa36:	462a      	mov	r2, r5
 c00aa38:	d007      	beq.n	c00aa4a <kad_op_conv2d+0x124a>
 c00aa3a:	9a05      	ldr	r2, [sp, #20]
 c00aa3c:	2b03      	cmp	r3, #3
 c00aa3e:	fb02 f205 	mul.w	r2, r2, r5
 c00aa42:	d002      	beq.n	c00aa4a <kad_op_conv2d+0x124a>
 c00aa44:	9b03      	ldr	r3, [sp, #12]
 c00aa46:	fb03 f202 	mul.w	r2, r3, r2
 c00aa4a:	0092      	lsls	r2, r2, #2
 c00aa4c:	2100      	movs	r1, #0
 c00aa4e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 c00aa50:	f004 fdee 	bl	c00f630 <memset>
 c00aa54:	9a04      	ldr	r2, [sp, #16]
 c00aa56:	f8d9 7014 	ldr.w	r7, [r9, #20]
 c00aa5a:	f8db 3014 	ldr.w	r3, [fp, #20]
 c00aa5e:	2a00      	cmp	r2, #0
 c00aa60:	fb07 f303 	mul.w	r3, r7, r3
 c00aa64:	f340 80ee 	ble.w	c00ac44 <kad_op_conv2d+0x1444>
 c00aa68:	009a      	lsls	r2, r3, #2
 c00aa6a:	9214      	str	r2, [sp, #80]	@ 0x50
 c00aa6c:	9a07      	ldr	r2, [sp, #28]
 c00aa6e:	2a00      	cmp	r2, #0
 c00aa70:	f340 80e8 	ble.w	c00ac44 <kad_op_conv2d+0x1444>
 c00aa74:	9905      	ldr	r1, [sp, #20]
 c00aa76:	2900      	cmp	r1, #0
 c00aa78:	f340 80e4 	ble.w	c00ac44 <kad_op_conv2d+0x1444>
 c00aa7c:	00db      	lsls	r3, r3, #3
 c00aa7e:	9315      	str	r3, [sp, #84]	@ 0x54
 c00aa80:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 c00aa82:	9718      	str	r7, [sp, #96]	@ 0x60
 c00aa84:	009a      	lsls	r2, r3, #2
 c00aa86:	fb02 f101 	mul.w	r1, r2, r1
 c00aa8a:	2300      	movs	r3, #0
 c00aa8c:	4647      	mov	r7, r8
 c00aa8e:	f8cd b00c 	str.w	fp, [sp, #12]
 c00aa92:	4688      	mov	r8, r1
 c00aa94:	46d3      	mov	fp, sl
 c00aa96:	462c      	mov	r4, r5
 c00aa98:	9300      	str	r3, [sp, #0]
 c00aa9a:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 c00aa9e:	4641      	mov	r1, r8
 c00aaa0:	4692      	mov	sl, r2
 c00aaa2:	2000      	movs	r0, #0
 c00aaa4:	463a      	mov	r2, r7
 c00aaa6:	46d8      	mov	r8, fp
 c00aaa8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 c00aaaa:	f8d8 7018 	ldr.w	r7, [r8, #24]
 c00aaae:	9b03      	ldr	r3, [sp, #12]
 c00aab0:	2f00      	cmp	r7, #0
 c00aab2:	689b      	ldr	r3, [r3, #8]
 c00aab4:	970e      	str	r7, [sp, #56]	@ 0x38
 c00aab6:	f340 80b2 	ble.w	c00ac1e <kad_op_conv2d+0x141e>
 c00aaba:	9f05      	ldr	r7, [sp, #20]
 c00aabc:	f1c3 0b00 	rsb	fp, r3, #0
 c00aac0:	1afb      	subs	r3, r7, r3
 c00aac2:	46a9      	mov	r9, r5
 c00aac4:	e9cd 151a 	strd	r1, r5, [sp, #104]	@ 0x68
 c00aac8:	eb05 070a 	add.w	r7, r5, sl
 c00aacc:	461d      	mov	r5, r3
 c00aace:	9619      	str	r6, [sp, #100]	@ 0x64
 c00aad0:	9011      	str	r0, [sp, #68]	@ 0x44
 c00aad2:	f1bb 0f00 	cmp.w	fp, #0
 c00aad6:	465e      	mov	r6, fp
 c00aad8:	f2c0 8096 	blt.w	c00ac08 <kad_op_conv2d+0x1408>
 c00aadc:	2100      	movs	r1, #0
 c00aade:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 c00aae0:	9102      	str	r1, [sp, #8]
 c00aae2:	699b      	ldr	r3, [r3, #24]
 c00aae4:	9900      	ldr	r1, [sp, #0]
 c00aae6:	9316      	str	r3, [sp, #88]	@ 0x58
 c00aae8:	fb03 f301 	mul.w	r3, r3, r1
 c00aaec:	e9cd ba0a 	strd	fp, sl, [sp, #40]	@ 0x28
 c00aaf0:	940d      	str	r4, [sp, #52]	@ 0x34
 c00aaf2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 c00aaf4:	9313      	str	r3, [sp, #76]	@ 0x4c
 c00aaf6:	9206      	str	r2, [sp, #24]
 c00aaf8:	9508      	str	r5, [sp, #32]
 c00aafa:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 c00aafc:	429e      	cmp	r6, r3
 c00aafe:	da7e      	bge.n	c00abfe <kad_op_conv2d+0x13fe>
 c00ab00:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 c00ab02:	9900      	ldr	r1, [sp, #0]
 c00ab04:	f8d8 3014 	ldr.w	r3, [r8, #20]
 c00ab08:	9818      	ldr	r0, [sp, #96]	@ 0x60
 c00ab0a:	fb03 2301 	mla	r3, r3, r1, r2
 c00ab0e:	9a02      	ldr	r2, [sp, #8]
 c00ab10:	990e      	ldr	r1, [sp, #56]	@ 0x38
 c00ab12:	f8d8 a01c 	ldr.w	sl, [r8, #28]
 c00ab16:	fb01 2303 	mla	r3, r1, r3, r2
 c00ab1a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 c00ab1c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 c00ab1e:	69d2      	ldr	r2, [r2, #28]
 c00ab20:	4431      	add	r1, r6
 c00ab22:	fb02 f101 	mul.w	r1, r2, r1
 c00ab26:	fb00 f101 	mul.w	r1, r0, r1
 c00ab2a:	fb0a f303 	mul.w	r3, sl, r3
 c00ab2e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 c00ab30:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 c00ab34:	f8d8 502c 	ldr.w	r5, [r8, #44]	@ 0x2c
 c00ab38:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 c00ab3c:	9b01      	ldr	r3, [sp, #4]
 c00ab3e:	b163      	cbz	r3, c00ab5a <kad_op_conv2d+0x135a>
 c00ab40:	9b03      	ldr	r3, [sp, #12]
 c00ab42:	fb00 f202 	mul.w	r2, r0, r2
 c00ab46:	699b      	ldr	r3, [r3, #24]
 c00ab48:	0092      	lsls	r2, r2, #2
 c00ab4a:	fb00 f303 	mul.w	r3, r0, r3
 c00ab4e:	9801      	ldr	r0, [sp, #4]
 c00ab50:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 c00ab54:	f004 fe3b 	bl	c00f7ce <memcpy>
 c00ab58:	9901      	ldr	r1, [sp, #4]
 c00ab5a:	f1ba 0f00 	cmp.w	sl, #0
 c00ab5e:	dd42      	ble.n	c00abe6 <kad_op_conv2d+0x13e6>
 c00ab60:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 c00ab62:	2b00      	cmp	r3, #0
 c00ab64:	dd3f      	ble.n	c00abe6 <kad_op_conv2d+0x13e6>
 c00ab66:	f10a 33ff 	add.w	r3, sl, #4294967295
 c00ab6a:	f1ba 0f02 	cmp.w	sl, #2
 c00ab6e:	9317      	str	r3, [sp, #92]	@ 0x5c
 c00ab70:	dd6f      	ble.n	c00ac52 <kad_op_conv2d+0x1452>
 c00ab72:	2301      	movs	r3, #1
 c00ab74:	f105 0b04 	add.w	fp, r5, #4
 c00ab78:	eb01 0e04 	add.w	lr, r1, r4
 c00ab7c:	ed5b 5a01 	vldr	s11, [fp, #-4]
 c00ab80:	ed95 6a01 	vldr	s12, [r5, #4]
 c00ab84:	46f4      	mov	ip, lr
 c00ab86:	4608      	mov	r0, r1
 c00ab88:	464a      	mov	r2, r9
 c00ab8a:	edd2 7a00 	vldr	s15, [r2]
 c00ab8e:	ecf0 6a01 	vldmia	r0!, {s13}
 c00ab92:	ecbc 7a01 	vldmia	ip!, {s14}
 c00ab96:	eee5 7aa6 	vfma.f32	s15, s11, s13
 c00ab9a:	eee7 7a06 	vfma.f32	s15, s14, s12
 c00ab9e:	ece2 7a01 	vstmia	r2!, {s15}
 c00aba2:	4297      	cmp	r7, r2
 c00aba4:	d1f1      	bne.n	c00ab8a <kad_op_conv2d+0x138a>
 c00aba6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 c00aba8:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 c00abaa:	4411      	add	r1, r2
 c00abac:	4496      	add	lr, r2
 c00abae:	1c9a      	adds	r2, r3, #2
 c00abb0:	4282      	cmp	r2, r0
 c00abb2:	f105 0508 	add.w	r5, r5, #8
 c00abb6:	f10b 0b08 	add.w	fp, fp, #8
 c00abba:	da01      	bge.n	c00abc0 <kad_op_conv2d+0x13c0>
 c00abbc:	4613      	mov	r3, r2
 c00abbe:	e7dd      	b.n	c00ab7c <kad_op_conv2d+0x137c>
 c00abc0:	3301      	adds	r3, #1
 c00abc2:	ecf5 6a01 	vldmia	r5!, {s13}
 c00abc6:	4608      	mov	r0, r1
 c00abc8:	464a      	mov	r2, r9
 c00abca:	edd2 7a00 	vldr	s15, [r2]
 c00abce:	ecb0 7a01 	vldmia	r0!, {s14}
 c00abd2:	eee7 7a26 	vfma.f32	s15, s14, s13
 c00abd6:	ece2 7a01 	vstmia	r2!, {s15}
 c00abda:	4297      	cmp	r7, r2
 c00abdc:	d1f5      	bne.n	c00abca <kad_op_conv2d+0x13ca>
 c00abde:	3301      	adds	r3, #1
 c00abe0:	459a      	cmp	sl, r3
 c00abe2:	4421      	add	r1, r4
 c00abe4:	dced      	bgt.n	c00abc2 <kad_op_conv2d+0x13c2>
 c00abe6:	9b03      	ldr	r3, [sp, #12]
 c00abe8:	9a02      	ldr	r2, [sp, #8]
 c00abea:	685b      	ldr	r3, [r3, #4]
 c00abec:	3201      	adds	r2, #1
 c00abee:	441e      	add	r6, r3
 c00abf0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c00abf2:	9202      	str	r2, [sp, #8]
 c00abf4:	429a      	cmp	r2, r3
 c00abf6:	d002      	beq.n	c00abfe <kad_op_conv2d+0x13fe>
 c00abf8:	2e00      	cmp	r6, #0
 c00abfa:	f6bf af7e 	bge.w	c00aafa <kad_op_conv2d+0x12fa>
 c00abfe:	9a06      	ldr	r2, [sp, #24]
 c00ac00:	9d08      	ldr	r5, [sp, #32]
 c00ac02:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 c00ac04:	e9dd ba0a 	ldrd	fp, sl, [sp, #40]	@ 0x28
 c00ac08:	f10b 0b01 	add.w	fp, fp, #1
 c00ac0c:	455d      	cmp	r5, fp
 c00ac0e:	44d1      	add	r9, sl
 c00ac10:	4457      	add	r7, sl
 c00ac12:	f47f af5e 	bne.w	c00aad2 <kad_op_conv2d+0x12d2>
 c00ac16:	e9dd 151a 	ldrd	r1, r5, [sp, #104]	@ 0x68
 c00ac1a:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 c00ac1c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 c00ac1e:	9b07      	ldr	r3, [sp, #28]
 c00ac20:	3001      	adds	r0, #1
 c00ac22:	4298      	cmp	r0, r3
 c00ac24:	440d      	add	r5, r1
 c00ac26:	f47f af40 	bne.w	c00aaaa <kad_op_conv2d+0x12aa>
 c00ac2a:	9b00      	ldr	r3, [sp, #0]
 c00ac2c:	46c3      	mov	fp, r8
 c00ac2e:	4688      	mov	r8, r1
 c00ac30:	9904      	ldr	r1, [sp, #16]
 c00ac32:	3301      	adds	r3, #1
 c00ac34:	428b      	cmp	r3, r1
 c00ac36:	4617      	mov	r7, r2
 c00ac38:	9300      	str	r3, [sp, #0]
 c00ac3a:	4652      	mov	r2, sl
 c00ac3c:	f47f af2f 	bne.w	c00aa9e <kad_op_conv2d+0x129e>
 c00ac40:	46b8      	mov	r8, r7
 c00ac42:	4625      	mov	r5, r4
 c00ac44:	4642      	mov	r2, r8
 c00ac46:	9909      	ldr	r1, [sp, #36]	@ 0x24
 c00ac48:	f106 0010 	add.w	r0, r6, #16
 c00ac4c:	f7f9 fa30 	bl	c0040b0 <conv2d_add_3to1>
 c00ac50:	e639      	b.n	c00a8c6 <kad_op_conv2d+0x10c6>
 c00ac52:	2300      	movs	r3, #0
 c00ac54:	e7b5      	b.n	c00abc2 <kad_op_conv2d+0x13c2>
 c00ac56:	9a07      	ldr	r2, [sp, #28]
 c00ac58:	e6f7      	b.n	c00aa4a <kad_op_conv2d+0x124a>
 c00ac5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c00ac5c:	f8d9 7014 	ldr.w	r7, [r9, #20]
 c00ac60:	601a      	str	r2, [r3, #0]
 c00ac62:	f8db 3014 	ldr.w	r3, [fp, #20]
 c00ac66:	fb07 f303 	mul.w	r3, r7, r3
 c00ac6a:	e6fd      	b.n	c00aa68 <kad_op_conv2d+0x1268>
 c00ac6c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 c00ac6e:	3201      	adds	r2, #1
 c00ac70:	4297      	cmp	r7, r2
 c00ac72:	9100      	str	r1, [sp, #0]
 c00ac74:	4404      	add	r4, r0
 c00ac76:	f47f ae9e 	bne.w	c00a9b6 <kad_op_conv2d+0x11b6>
 c00ac7a:	e9dd 8c0d 	ldrd	r8, ip, [sp, #52]	@ 0x34
 c00ac7e:	460e      	mov	r6, r1
 c00ac80:	f8dd b03c 	ldr.w	fp, [sp, #60]	@ 0x3c
 c00ac84:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 c00ac88:	e6c6      	b.n	c00aa18 <kad_op_conv2d+0x1218>
 c00ac8a:	7832      	ldrb	r2, [r6, #0]
 c00ac8c:	4613      	mov	r3, r2
 c00ac8e:	2a00      	cmp	r2, #0
 c00ac90:	f47f aecd 	bne.w	c00aa2e <kad_op_conv2d+0x122e>
 c00ac94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c00ac96:	601a      	str	r2, [r3, #0]
 c00ac98:	e7d4      	b.n	c00ac44 <kad_op_conv2d+0x1444>
 c00ac9a:	fb03 f101 	mul.w	r1, r3, r1
 c00ac9e:	9b04      	ldr	r3, [sp, #16]
 c00aca0:	fb0e f403 	mul.w	r4, lr, r3
 c00aca4:	f7fe bff0 	b.w	c009c88 <kad_op_conv2d+0x488>
 c00aca8:	f8d9 3028 	ldr.w	r3, [r9, #40]	@ 0x28
 c00acac:	f1b8 0f00 	cmp.w	r8, #0
 c00acb0:	9300      	str	r3, [sp, #0]
 c00acb2:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 c00acb4:	6931      	ldr	r1, [r6, #16]
 c00acb6:	930b      	str	r3, [sp, #44]	@ 0x2c
 c00acb8:	69f3      	ldr	r3, [r6, #28]
 c00acba:	9304      	str	r3, [sp, #16]
 c00acbc:	e9d6 3e05 	ldrd	r3, lr, [r6, #20]
 c00acc0:	930a      	str	r3, [sp, #40]	@ 0x28
 c00acc2:	dd7a      	ble.n	c00adba <kad_op_conv2d+0x15ba>
 c00acc4:	f8d9 c014 	ldr.w	ip, [r9, #20]
 c00acc8:	f1bc 0f00 	cmp.w	ip, #0
 c00accc:	dd70      	ble.n	c00adb0 <kad_op_conv2d+0x15b0>
 c00acce:	ea4f 038c 	mov.w	r3, ip, lsl #2
 c00acd2:	2500      	movs	r5, #0
 c00acd4:	9307      	str	r3, [sp, #28]
 c00acd6:	4673      	mov	r3, lr
 c00acd8:	f8d9 7018 	ldr.w	r7, [r9, #24]
 c00acdc:	46ce      	mov	lr, r9
 c00acde:	462e      	mov	r6, r5
 c00ace0:	460c      	mov	r4, r1
 c00ace2:	4699      	mov	r9, r3
 c00ace4:	2f00      	cmp	r7, #0
 c00ace6:	fb07 f206 	mul.w	r2, r7, r6
 c00acea:	f77f a814 	ble.w	c009d16 <kad_op_conv2d+0x516>
 c00acee:	f8de 301c 	ldr.w	r3, [lr, #28]
 c00acf2:	fb07 f005 	mul.w	r0, r7, r5
 c00acf6:	fb03 f202 	mul.w	r2, r3, r2
 c00acfa:	fb0c f202 	mul.w	r2, ip, r2
 c00acfe:	9203      	str	r2, [sp, #12]
 c00ad00:	fb0c f203 	mul.w	r2, ip, r3
 c00ad04:	0092      	lsls	r2, r2, #2
 c00ad06:	9205      	str	r2, [sp, #20]
 c00ad08:	2200      	movs	r2, #0
 c00ad0a:	0099      	lsls	r1, r3, #2
 c00ad0c:	9102      	str	r1, [sp, #8]
 c00ad0e:	2b00      	cmp	r3, #0
 c00ad10:	f77e affc 	ble.w	c009d0c <kad_op_conv2d+0x50c>
 c00ad14:	4629      	mov	r1, r5
 c00ad16:	e9cd e60d 	strd	lr, r6, [sp, #52]	@ 0x34
 c00ad1a:	f8cd b020 	str.w	fp, [sp, #32]
 c00ad1e:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 c00ad22:	f04f 0800 	mov.w	r8, #0
 c00ad26:	9d03      	ldr	r5, [sp, #12]
 c00ad28:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 c00ad2a:	fb00 fb03 	mul.w	fp, r0, r3
 c00ad2e:	1955      	adds	r5, r2, r5
 c00ad30:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 c00ad34:	9506      	str	r5, [sp, #24]
 c00ad36:	9d00      	ldr	r5, [sp, #0]
 c00ad38:	eb03 060b 	add.w	r6, r3, fp
 c00ad3c:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 c00ad40:	9d06      	ldr	r5, [sp, #24]
 c00ad42:	9211      	str	r2, [sp, #68]	@ 0x44
 c00ad44:	9a00      	ldr	r2, [sp, #0]
 c00ad46:	9306      	str	r3, [sp, #24]
 c00ad48:	eb02 028b 	add.w	r2, r2, fp, lsl #2
 c00ad4c:	46ab      	mov	fp, r5
 c00ad4e:	ecf2 7a01 	vldmia	r2!, {s15}
 c00ad52:	9b07      	ldr	r3, [sp, #28]
 c00ad54:	4596      	cmp	lr, r2
 c00ad56:	edcb 7a00 	vstr	s15, [fp]
 c00ad5a:	449b      	add	fp, r3
 c00ad5c:	d1f7      	bne.n	c00ad4e <kad_op_conv2d+0x154e>
 c00ad5e:	9a05      	ldr	r2, [sp, #20]
 c00ad60:	f108 0801 	add.w	r8, r8, #1
 c00ad64:	4415      	add	r5, r2
 c00ad66:	9a02      	ldr	r2, [sp, #8]
 c00ad68:	45b8      	cmp	r8, r7
 c00ad6a:	46b3      	mov	fp, r6
 c00ad6c:	9b06      	ldr	r3, [sp, #24]
 c00ad6e:	4496      	add	lr, r2
 c00ad70:	d010      	beq.n	c00ad94 <kad_op_conv2d+0x1594>
 c00ad72:	441e      	add	r6, r3
 c00ad74:	e7e6      	b.n	c00ad44 <kad_op_conv2d+0x1544>
 c00ad76:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 c00ad78:	fb02 f303 	mul.w	r3, r2, r3
 c00ad7c:	f7ff b848 	b.w	c009e10 <kad_op_conv2d+0x610>
 c00ad80:	4618      	mov	r0, r3
 c00ad82:	9a04      	ldr	r2, [sp, #16]
 c00ad84:	f8db 3014 	ldr.w	r3, [fp, #20]
 c00ad88:	fb00 f702 	mul.w	r7, r0, r2
 c00ad8c:	fb03 f30c 	mul.w	r3, r3, ip
 c00ad90:	f7ff b847 	b.w	c009e22 <kad_op_conv2d+0x622>
 c00ad94:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 c00ad96:	4438      	add	r0, r7
 c00ad98:	3201      	adds	r2, #1
 c00ad9a:	4594      	cmp	ip, r2
 c00ad9c:	d1c1      	bne.n	c00ad22 <kad_op_conv2d+0x1522>
 c00ad9e:	e9dd e60d 	ldrd	lr, r6, [sp, #52]	@ 0x34
 c00ada2:	460d      	mov	r5, r1
 c00ada4:	f8dd b020 	ldr.w	fp, [sp, #32]
 c00ada8:	f8dd 803c 	ldr.w	r8, [sp, #60]	@ 0x3c
 c00adac:	f7fe bfb3 	b.w	c009d16 <kad_op_conv2d+0x516>
 c00adb0:	2900      	cmp	r1, #0
 c00adb2:	f73e afbc 	bgt.w	c009d2e <kad_op_conv2d+0x52e>
 c00adb6:	f7ff b8fb 	b.w	c009fb0 <kad_op_conv2d+0x7b0>
 c00adba:	2900      	cmp	r1, #0
 c00adbc:	f77f a8f8 	ble.w	c009fb0 <kad_op_conv2d+0x7b0>
 c00adc0:	2b00      	cmp	r3, #0
 c00adc2:	f77e ad32 	ble.w	c00982a <kad_op_conv2d+0x2a>
 c00adc6:	f1be 0f00 	cmp.w	lr, #0
 c00adca:	f77f a8f1 	ble.w	c009fb0 <kad_op_conv2d+0x7b0>
 c00adce:	f8d9 c014 	ldr.w	ip, [r9, #20]
 c00add2:	f7fe bfb4 	b.w	c009d3e <kad_op_conv2d+0x53e>
 c00add6:	bf00      	nop

0c00add8 <kad_const>:
 c00add8:	b40e      	push	{r1, r2, r3}
 c00adda:	b5f0      	push	{r4, r5, r6, r7, lr}
 c00addc:	b082      	sub	sp, #8
 c00adde:	ad07      	add	r5, sp, #28
 c00ade0:	f855 6b04 	ldr.w	r6, [r5], #4
 c00ade4:	2e04      	cmp	r6, #4
 c00ade6:	9501      	str	r5, [sp, #4]
 c00ade8:	dc1d      	bgt.n	c00ae26 <kad_const+0x4e>
 c00adea:	4607      	mov	r7, r0
 c00adec:	2140      	movs	r1, #64	@ 0x40
 c00adee:	2001      	movs	r0, #1
 c00adf0:	f004 f928 	bl	c00f044 <calloc>
 c00adf4:	4a0d      	ldr	r2, [pc, #52]	@ (c00ae2c <kad_const+0x54>)
 c00adf6:	2e00      	cmp	r6, #0
 c00adf8:	6813      	ldr	r3, [r2, #0]
 c00adfa:	4604      	mov	r4, r0
 c00adfc:	f103 0340 	add.w	r3, r3, #64	@ 0x40
 c00ae00:	6013      	str	r3, [r2, #0]
 c00ae02:	7006      	strb	r6, [r0, #0]
 c00ae04:	dd04      	ble.n	c00ae10 <kad_const+0x38>
 c00ae06:	4629      	mov	r1, r5
 c00ae08:	00b2      	lsls	r2, r6, #2
 c00ae0a:	3010      	adds	r0, #16
 c00ae0c:	f004 fcdf 	bl	c00f7ce <memcpy>
 c00ae10:	2200      	movs	r2, #0
 c00ae12:	2302      	movs	r3, #2
 c00ae14:	e9c4 720a 	strd	r7, r2, [r4, #40]	@ 0x28
 c00ae18:	7063      	strb	r3, [r4, #1]
 c00ae1a:	4620      	mov	r0, r4
 c00ae1c:	b002      	add	sp, #8
 c00ae1e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 c00ae22:	b003      	add	sp, #12
 c00ae24:	4770      	bx	lr
 c00ae26:	2400      	movs	r4, #0
 c00ae28:	e7f7      	b.n	c00ae1a <kad_const+0x42>
 c00ae2a:	bf00      	nop
 c00ae2c:	30000254 	.word	0x30000254

0c00ae30 <kad_feed>:
 c00ae30:	b40f      	push	{r0, r1, r2, r3}
 c00ae32:	b570      	push	{r4, r5, r6, lr}
 c00ae34:	b082      	sub	sp, #8
 c00ae36:	ad06      	add	r5, sp, #24
 c00ae38:	f855 6b04 	ldr.w	r6, [r5], #4
 c00ae3c:	2e04      	cmp	r6, #4
 c00ae3e:	9501      	str	r5, [sp, #4]
 c00ae40:	dc1d      	bgt.n	c00ae7e <kad_feed+0x4e>
 c00ae42:	2140      	movs	r1, #64	@ 0x40
 c00ae44:	2001      	movs	r0, #1
 c00ae46:	f004 f8fd 	bl	c00f044 <calloc>
 c00ae4a:	4a0e      	ldr	r2, [pc, #56]	@ (c00ae84 <kad_feed+0x54>)
 c00ae4c:	2e00      	cmp	r6, #0
 c00ae4e:	6813      	ldr	r3, [r2, #0]
 c00ae50:	4604      	mov	r4, r0
 c00ae52:	f103 0340 	add.w	r3, r3, #64	@ 0x40
 c00ae56:	6013      	str	r3, [r2, #0]
 c00ae58:	7006      	strb	r6, [r0, #0]
 c00ae5a:	dd04      	ble.n	c00ae66 <kad_feed+0x36>
 c00ae5c:	4629      	mov	r1, r5
 c00ae5e:	00b2      	lsls	r2, r6, #2
 c00ae60:	3010      	adds	r0, #16
 c00ae62:	f004 fcb4 	bl	c00f7ce <memcpy>
 c00ae66:	2000      	movs	r0, #0
 c00ae68:	2100      	movs	r1, #0
 c00ae6a:	2300      	movs	r3, #0
 c00ae6c:	e9c4 010a 	strd	r0, r1, [r4, #40]	@ 0x28
 c00ae70:	7063      	strb	r3, [r4, #1]
 c00ae72:	4620      	mov	r0, r4
 c00ae74:	b002      	add	sp, #8
 c00ae76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 c00ae7a:	b004      	add	sp, #16
 c00ae7c:	4770      	bx	lr
 c00ae7e:	2400      	movs	r4, #0
 c00ae80:	e7f7      	b.n	c00ae72 <kad_feed+0x42>
 c00ae82:	bf00      	nop
 c00ae84:	30000254 	.word	0x30000254

0c00ae88 <kad_var>:
 c00ae88:	b40c      	push	{r2, r3}
 c00ae8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00ae8e:	b082      	sub	sp, #8
 c00ae90:	ad08      	add	r5, sp, #32
 c00ae92:	f855 6b04 	ldr.w	r6, [r5], #4
 c00ae96:	2e04      	cmp	r6, #4
 c00ae98:	9501      	str	r5, [sp, #4]
 c00ae9a:	dc1d      	bgt.n	c00aed8 <kad_var+0x50>
 c00ae9c:	4680      	mov	r8, r0
 c00ae9e:	460f      	mov	r7, r1
 c00aea0:	2001      	movs	r0, #1
 c00aea2:	2140      	movs	r1, #64	@ 0x40
 c00aea4:	f004 f8ce 	bl	c00f044 <calloc>
 c00aea8:	4a0c      	ldr	r2, [pc, #48]	@ (c00aedc <kad_var+0x54>)
 c00aeaa:	2e00      	cmp	r6, #0
 c00aeac:	6813      	ldr	r3, [r2, #0]
 c00aeae:	4604      	mov	r4, r0
 c00aeb0:	f103 0340 	add.w	r3, r3, #64	@ 0x40
 c00aeb4:	6013      	str	r3, [r2, #0]
 c00aeb6:	7006      	strb	r6, [r0, #0]
 c00aeb8:	dd04      	ble.n	c00aec4 <kad_var+0x3c>
 c00aeba:	4629      	mov	r1, r5
 c00aebc:	00b2      	lsls	r2, r6, #2
 c00aebe:	3010      	adds	r0, #16
 c00aec0:	f004 fc85 	bl	c00f7ce <memcpy>
 c00aec4:	2301      	movs	r3, #1
 c00aec6:	e9c4 870a 	strd	r8, r7, [r4, #40]	@ 0x28
 c00aeca:	7063      	strb	r3, [r4, #1]
 c00aecc:	4620      	mov	r0, r4
 c00aece:	b002      	add	sp, #8
 c00aed0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 c00aed4:	b002      	add	sp, #8
 c00aed6:	4770      	bx	lr
 c00aed8:	2400      	movs	r4, #0
 c00aeda:	e7f7      	b.n	c00aecc <kad_var+0x44>
 c00aedc:	30000254 	.word	0x30000254

0c00aee0 <kad_add>:
 c00aee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00aee4:	4680      	mov	r8, r0
 c00aee6:	460f      	mov	r7, r1
 c00aee8:	2001      	movs	r0, #1
 c00aeea:	2140      	movs	r1, #64	@ 0x40
 c00aeec:	f004 f8aa 	bl	c00f044 <calloc>
 c00aef0:	2400      	movs	r4, #0
 c00aef2:	2202      	movs	r2, #2
 c00aef4:	f04f 0c01 	mov.w	ip, #1
 c00aef8:	4e20      	ldr	r6, [pc, #128]	@ (c00af7c <kad_add+0x9c>)
 c00aefa:	4605      	mov	r5, r0
 c00aefc:	6833      	ldr	r3, [r6, #0]
 c00aefe:	f8a0 c002 	strh.w	ip, [r0, #2]
 c00af02:	3340      	adds	r3, #64	@ 0x40
 c00af04:	6042      	str	r2, [r0, #4]
 c00af06:	2104      	movs	r1, #4
 c00af08:	7004      	strb	r4, [r0, #0]
 c00af0a:	4610      	mov	r0, r2
 c00af0c:	6033      	str	r3, [r6, #0]
 c00af0e:	f004 f899 	bl	c00f044 <calloc>
 c00af12:	4603      	mov	r3, r0
 c00af14:	6832      	ldr	r2, [r6, #0]
 c00af16:	2104      	movs	r1, #4
 c00af18:	3208      	adds	r2, #8
 c00af1a:	6032      	str	r2, [r6, #0]
 c00af1c:	4a18      	ldr	r2, [pc, #96]	@ (c00af80 <kad_add+0xa0>)
 c00af1e:	4628      	mov	r0, r5
 c00af20:	e9c3 8700 	strd	r8, r7, [r3]
 c00af24:	6852      	ldr	r2, [r2, #4]
 c00af26:	63ab      	str	r3, [r5, #56]	@ 0x38
 c00af28:	4790      	blx	r2
 c00af2a:	42a0      	cmp	r0, r4
 c00af2c:	db17      	blt.n	c00af5e <kad_add+0x7e>
 c00af2e:	6868      	ldr	r0, [r5, #4]
 c00af30:	42a0      	cmp	r0, r4
 c00af32:	dd11      	ble.n	c00af58 <kad_add+0x78>
 c00af34:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00af36:	4623      	mov	r3, r4
 c00af38:	3a04      	subs	r2, #4
 c00af3a:	e002      	b.n	c00af42 <kad_add+0x62>
 c00af3c:	3301      	adds	r3, #1
 c00af3e:	4298      	cmp	r0, r3
 c00af40:	d00a      	beq.n	c00af58 <kad_add+0x78>
 c00af42:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00af46:	7849      	ldrb	r1, [r1, #1]
 c00af48:	07c9      	lsls	r1, r1, #31
 c00af4a:	d5f7      	bpl.n	c00af3c <kad_add+0x5c>
 c00af4c:	4283      	cmp	r3, r0
 c00af4e:	da03      	bge.n	c00af58 <kad_add+0x78>
 c00af50:	786b      	ldrb	r3, [r5, #1]
 c00af52:	f043 0301 	orr.w	r3, r3, #1
 c00af56:	706b      	strb	r3, [r5, #1]
 c00af58:	4628      	mov	r0, r5
 c00af5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00af5e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 c00af60:	b108      	cbz	r0, c00af66 <kad_add+0x86>
 c00af62:	f004 f893 	bl	c00f08c <free>
 c00af66:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 c00af68:	f004 f890 	bl	c00f08c <free>
 c00af6c:	4628      	mov	r0, r5
 c00af6e:	2500      	movs	r5, #0
 c00af70:	f004 f88c 	bl	c00f08c <free>
 c00af74:	4628      	mov	r0, r5
 c00af76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00af7a:	bf00      	nop
 c00af7c:	30000254 	.word	0x30000254
 c00af80:	30000004 	.word	0x30000004

0c00af84 <kad_mul>:
 c00af84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00af88:	4680      	mov	r8, r0
 c00af8a:	460f      	mov	r7, r1
 c00af8c:	2001      	movs	r0, #1
 c00af8e:	2140      	movs	r1, #64	@ 0x40
 c00af90:	f004 f858 	bl	c00f044 <calloc>
 c00af94:	2400      	movs	r4, #0
 c00af96:	4605      	mov	r5, r0
 c00af98:	2302      	movs	r3, #2
 c00af9a:	4e1f      	ldr	r6, [pc, #124]	@ (c00b018 <kad_mul+0x94>)
 c00af9c:	2104      	movs	r1, #4
 c00af9e:	6832      	ldr	r2, [r6, #0]
 c00afa0:	4618      	mov	r0, r3
 c00afa2:	3240      	adds	r2, #64	@ 0x40
 c00afa4:	806b      	strh	r3, [r5, #2]
 c00afa6:	606b      	str	r3, [r5, #4]
 c00afa8:	702c      	strb	r4, [r5, #0]
 c00afaa:	6032      	str	r2, [r6, #0]
 c00afac:	f004 f84a 	bl	c00f044 <calloc>
 c00afb0:	4603      	mov	r3, r0
 c00afb2:	6832      	ldr	r2, [r6, #0]
 c00afb4:	2104      	movs	r1, #4
 c00afb6:	3208      	adds	r2, #8
 c00afb8:	6032      	str	r2, [r6, #0]
 c00afba:	4a18      	ldr	r2, [pc, #96]	@ (c00b01c <kad_mul+0x98>)
 c00afbc:	4628      	mov	r0, r5
 c00afbe:	e9c3 8700 	strd	r8, r7, [r3]
 c00afc2:	6892      	ldr	r2, [r2, #8]
 c00afc4:	63ab      	str	r3, [r5, #56]	@ 0x38
 c00afc6:	4790      	blx	r2
 c00afc8:	42a0      	cmp	r0, r4
 c00afca:	db17      	blt.n	c00affc <kad_mul+0x78>
 c00afcc:	6868      	ldr	r0, [r5, #4]
 c00afce:	42a0      	cmp	r0, r4
 c00afd0:	dd11      	ble.n	c00aff6 <kad_mul+0x72>
 c00afd2:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00afd4:	4623      	mov	r3, r4
 c00afd6:	3a04      	subs	r2, #4
 c00afd8:	e002      	b.n	c00afe0 <kad_mul+0x5c>
 c00afda:	3301      	adds	r3, #1
 c00afdc:	4298      	cmp	r0, r3
 c00afde:	d00a      	beq.n	c00aff6 <kad_mul+0x72>
 c00afe0:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00afe4:	7849      	ldrb	r1, [r1, #1]
 c00afe6:	07c9      	lsls	r1, r1, #31
 c00afe8:	d5f7      	bpl.n	c00afda <kad_mul+0x56>
 c00afea:	4283      	cmp	r3, r0
 c00afec:	da03      	bge.n	c00aff6 <kad_mul+0x72>
 c00afee:	786b      	ldrb	r3, [r5, #1]
 c00aff0:	f043 0301 	orr.w	r3, r3, #1
 c00aff4:	706b      	strb	r3, [r5, #1]
 c00aff6:	4628      	mov	r0, r5
 c00aff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00affc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 c00affe:	b108      	cbz	r0, c00b004 <kad_mul+0x80>
 c00b000:	f004 f844 	bl	c00f08c <free>
 c00b004:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 c00b006:	f004 f841 	bl	c00f08c <free>
 c00b00a:	4628      	mov	r0, r5
 c00b00c:	2500      	movs	r5, #0
 c00b00e:	f004 f83d 	bl	c00f08c <free>
 c00b012:	4628      	mov	r0, r5
 c00b014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00b018:	30000254 	.word	0x30000254
 c00b01c:	30000004 	.word	0x30000004

0c00b020 <kad_cmul>:
 c00b020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00b024:	4680      	mov	r8, r0
 c00b026:	460f      	mov	r7, r1
 c00b028:	2001      	movs	r0, #1
 c00b02a:	2140      	movs	r1, #64	@ 0x40
 c00b02c:	f004 f80a 	bl	c00f044 <calloc>
 c00b030:	2400      	movs	r4, #0
 c00b032:	2202      	movs	r2, #2
 c00b034:	f04f 0c03 	mov.w	ip, #3
 c00b038:	4e20      	ldr	r6, [pc, #128]	@ (c00b0bc <kad_cmul+0x9c>)
 c00b03a:	4605      	mov	r5, r0
 c00b03c:	6833      	ldr	r3, [r6, #0]
 c00b03e:	f8a0 c002 	strh.w	ip, [r0, #2]
 c00b042:	3340      	adds	r3, #64	@ 0x40
 c00b044:	6042      	str	r2, [r0, #4]
 c00b046:	2104      	movs	r1, #4
 c00b048:	7004      	strb	r4, [r0, #0]
 c00b04a:	4610      	mov	r0, r2
 c00b04c:	6033      	str	r3, [r6, #0]
 c00b04e:	f003 fff9 	bl	c00f044 <calloc>
 c00b052:	4603      	mov	r3, r0
 c00b054:	6832      	ldr	r2, [r6, #0]
 c00b056:	2104      	movs	r1, #4
 c00b058:	3208      	adds	r2, #8
 c00b05a:	6032      	str	r2, [r6, #0]
 c00b05c:	4a18      	ldr	r2, [pc, #96]	@ (c00b0c0 <kad_cmul+0xa0>)
 c00b05e:	4628      	mov	r0, r5
 c00b060:	e9c3 8700 	strd	r8, r7, [r3]
 c00b064:	68d2      	ldr	r2, [r2, #12]
 c00b066:	63ab      	str	r3, [r5, #56]	@ 0x38
 c00b068:	4790      	blx	r2
 c00b06a:	42a0      	cmp	r0, r4
 c00b06c:	db17      	blt.n	c00b09e <kad_cmul+0x7e>
 c00b06e:	6868      	ldr	r0, [r5, #4]
 c00b070:	42a0      	cmp	r0, r4
 c00b072:	dd11      	ble.n	c00b098 <kad_cmul+0x78>
 c00b074:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00b076:	4623      	mov	r3, r4
 c00b078:	3a04      	subs	r2, #4
 c00b07a:	e002      	b.n	c00b082 <kad_cmul+0x62>
 c00b07c:	3301      	adds	r3, #1
 c00b07e:	4298      	cmp	r0, r3
 c00b080:	d00a      	beq.n	c00b098 <kad_cmul+0x78>
 c00b082:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00b086:	7849      	ldrb	r1, [r1, #1]
 c00b088:	07c9      	lsls	r1, r1, #31
 c00b08a:	d5f7      	bpl.n	c00b07c <kad_cmul+0x5c>
 c00b08c:	4283      	cmp	r3, r0
 c00b08e:	da03      	bge.n	c00b098 <kad_cmul+0x78>
 c00b090:	786b      	ldrb	r3, [r5, #1]
 c00b092:	f043 0301 	orr.w	r3, r3, #1
 c00b096:	706b      	strb	r3, [r5, #1]
 c00b098:	4628      	mov	r0, r5
 c00b09a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00b09e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 c00b0a0:	b108      	cbz	r0, c00b0a6 <kad_cmul+0x86>
 c00b0a2:	f003 fff3 	bl	c00f08c <free>
 c00b0a6:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 c00b0a8:	f003 fff0 	bl	c00f08c <free>
 c00b0ac:	4628      	mov	r0, r5
 c00b0ae:	2500      	movs	r5, #0
 c00b0b0:	f003 ffec 	bl	c00f08c <free>
 c00b0b4:	4628      	mov	r0, r5
 c00b0b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00b0ba:	bf00      	nop
 c00b0bc:	30000254 	.word	0x30000254
 c00b0c0:	30000004 	.word	0x30000004

0c00b0c4 <kad_ce_multi>:
 c00b0c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00b0c8:	4680      	mov	r8, r0
 c00b0ca:	460f      	mov	r7, r1
 c00b0cc:	2001      	movs	r0, #1
 c00b0ce:	2140      	movs	r1, #64	@ 0x40
 c00b0d0:	f003 ffb8 	bl	c00f044 <calloc>
 c00b0d4:	2400      	movs	r4, #0
 c00b0d6:	2202      	movs	r2, #2
 c00b0d8:	f04f 0c0d 	mov.w	ip, #13
 c00b0dc:	4e20      	ldr	r6, [pc, #128]	@ (c00b160 <kad_ce_multi+0x9c>)
 c00b0de:	4605      	mov	r5, r0
 c00b0e0:	6833      	ldr	r3, [r6, #0]
 c00b0e2:	f8a0 c002 	strh.w	ip, [r0, #2]
 c00b0e6:	3340      	adds	r3, #64	@ 0x40
 c00b0e8:	6042      	str	r2, [r0, #4]
 c00b0ea:	2104      	movs	r1, #4
 c00b0ec:	7004      	strb	r4, [r0, #0]
 c00b0ee:	4610      	mov	r0, r2
 c00b0f0:	6033      	str	r3, [r6, #0]
 c00b0f2:	f003 ffa7 	bl	c00f044 <calloc>
 c00b0f6:	4603      	mov	r3, r0
 c00b0f8:	6832      	ldr	r2, [r6, #0]
 c00b0fa:	2104      	movs	r1, #4
 c00b0fc:	3208      	adds	r2, #8
 c00b0fe:	6032      	str	r2, [r6, #0]
 c00b100:	4a18      	ldr	r2, [pc, #96]	@ (c00b164 <kad_ce_multi+0xa0>)
 c00b102:	4628      	mov	r0, r5
 c00b104:	e9c3 8700 	strd	r8, r7, [r3]
 c00b108:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 c00b10a:	63ab      	str	r3, [r5, #56]	@ 0x38
 c00b10c:	4790      	blx	r2
 c00b10e:	42a0      	cmp	r0, r4
 c00b110:	db17      	blt.n	c00b142 <kad_ce_multi+0x7e>
 c00b112:	6868      	ldr	r0, [r5, #4]
 c00b114:	42a0      	cmp	r0, r4
 c00b116:	dd11      	ble.n	c00b13c <kad_ce_multi+0x78>
 c00b118:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00b11a:	4623      	mov	r3, r4
 c00b11c:	3a04      	subs	r2, #4
 c00b11e:	e002      	b.n	c00b126 <kad_ce_multi+0x62>
 c00b120:	3301      	adds	r3, #1
 c00b122:	4298      	cmp	r0, r3
 c00b124:	d00a      	beq.n	c00b13c <kad_ce_multi+0x78>
 c00b126:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00b12a:	7849      	ldrb	r1, [r1, #1]
 c00b12c:	07c9      	lsls	r1, r1, #31
 c00b12e:	d5f7      	bpl.n	c00b120 <kad_ce_multi+0x5c>
 c00b130:	4283      	cmp	r3, r0
 c00b132:	da03      	bge.n	c00b13c <kad_ce_multi+0x78>
 c00b134:	786b      	ldrb	r3, [r5, #1]
 c00b136:	f043 0301 	orr.w	r3, r3, #1
 c00b13a:	706b      	strb	r3, [r5, #1]
 c00b13c:	4628      	mov	r0, r5
 c00b13e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00b142:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 c00b144:	b108      	cbz	r0, c00b14a <kad_ce_multi+0x86>
 c00b146:	f003 ffa1 	bl	c00f08c <free>
 c00b14a:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 c00b14c:	f003 ff9e 	bl	c00f08c <free>
 c00b150:	4628      	mov	r0, r5
 c00b152:	2500      	movs	r5, #0
 c00b154:	f003 ff9a 	bl	c00f08c <free>
 c00b158:	4628      	mov	r0, r5
 c00b15a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00b15e:	bf00      	nop
 c00b160:	30000254 	.word	0x30000254
 c00b164:	30000004 	.word	0x30000004

0c00b168 <kad_sigm>:
 c00b168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00b16a:	2140      	movs	r1, #64	@ 0x40
 c00b16c:	4607      	mov	r7, r0
 c00b16e:	2001      	movs	r0, #1
 c00b170:	f003 ff68 	bl	c00f044 <calloc>
 c00b174:	4e1f      	ldr	r6, [pc, #124]	@ (c00b1f4 <kad_sigm+0x8c>)
 c00b176:	4605      	mov	r5, r0
 c00b178:	6833      	ldr	r3, [r6, #0]
 c00b17a:	2206      	movs	r2, #6
 c00b17c:	3340      	adds	r3, #64	@ 0x40
 c00b17e:	2400      	movs	r4, #0
 c00b180:	6033      	str	r3, [r6, #0]
 c00b182:	2301      	movs	r3, #1
 c00b184:	2104      	movs	r1, #4
 c00b186:	4618      	mov	r0, r3
 c00b188:	606b      	str	r3, [r5, #4]
 c00b18a:	806a      	strh	r2, [r5, #2]
 c00b18c:	702c      	strb	r4, [r5, #0]
 c00b18e:	f003 ff59 	bl	c00f044 <calloc>
 c00b192:	4603      	mov	r3, r0
 c00b194:	6832      	ldr	r2, [r6, #0]
 c00b196:	2104      	movs	r1, #4
 c00b198:	3204      	adds	r2, #4
 c00b19a:	6032      	str	r2, [r6, #0]
 c00b19c:	4a16      	ldr	r2, [pc, #88]	@ (c00b1f8 <kad_sigm+0x90>)
 c00b19e:	4628      	mov	r0, r5
 c00b1a0:	6992      	ldr	r2, [r2, #24]
 c00b1a2:	63ab      	str	r3, [r5, #56]	@ 0x38
 c00b1a4:	601f      	str	r7, [r3, #0]
 c00b1a6:	4790      	blx	r2
 c00b1a8:	42a0      	cmp	r0, r4
 c00b1aa:	db16      	blt.n	c00b1da <kad_sigm+0x72>
 c00b1ac:	6868      	ldr	r0, [r5, #4]
 c00b1ae:	42a0      	cmp	r0, r4
 c00b1b0:	dd11      	ble.n	c00b1d6 <kad_sigm+0x6e>
 c00b1b2:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00b1b4:	4623      	mov	r3, r4
 c00b1b6:	3a04      	subs	r2, #4
 c00b1b8:	e002      	b.n	c00b1c0 <kad_sigm+0x58>
 c00b1ba:	3301      	adds	r3, #1
 c00b1bc:	4298      	cmp	r0, r3
 c00b1be:	d00a      	beq.n	c00b1d6 <kad_sigm+0x6e>
 c00b1c0:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00b1c4:	7849      	ldrb	r1, [r1, #1]
 c00b1c6:	07c9      	lsls	r1, r1, #31
 c00b1c8:	d5f7      	bpl.n	c00b1ba <kad_sigm+0x52>
 c00b1ca:	4283      	cmp	r3, r0
 c00b1cc:	da03      	bge.n	c00b1d6 <kad_sigm+0x6e>
 c00b1ce:	786b      	ldrb	r3, [r5, #1]
 c00b1d0:	f043 0301 	orr.w	r3, r3, #1
 c00b1d4:	706b      	strb	r3, [r5, #1]
 c00b1d6:	4628      	mov	r0, r5
 c00b1d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b1da:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 c00b1dc:	b108      	cbz	r0, c00b1e2 <kad_sigm+0x7a>
 c00b1de:	f003 ff55 	bl	c00f08c <free>
 c00b1e2:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 c00b1e4:	f003 ff52 	bl	c00f08c <free>
 c00b1e8:	4628      	mov	r0, r5
 c00b1ea:	2500      	movs	r5, #0
 c00b1ec:	f003 ff4e 	bl	c00f08c <free>
 c00b1f0:	4628      	mov	r0, r5
 c00b1f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b1f4:	30000254 	.word	0x30000254
 c00b1f8:	30000004 	.word	0x30000004

0c00b1fc <kad_tanh>:
 c00b1fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00b1fe:	2140      	movs	r1, #64	@ 0x40
 c00b200:	4607      	mov	r7, r0
 c00b202:	2001      	movs	r0, #1
 c00b204:	f003 ff1e 	bl	c00f044 <calloc>
 c00b208:	4e1f      	ldr	r6, [pc, #124]	@ (c00b288 <kad_tanh+0x8c>)
 c00b20a:	4605      	mov	r5, r0
 c00b20c:	6833      	ldr	r3, [r6, #0]
 c00b20e:	2207      	movs	r2, #7
 c00b210:	3340      	adds	r3, #64	@ 0x40
 c00b212:	2400      	movs	r4, #0
 c00b214:	6033      	str	r3, [r6, #0]
 c00b216:	2301      	movs	r3, #1
 c00b218:	2104      	movs	r1, #4
 c00b21a:	4618      	mov	r0, r3
 c00b21c:	606b      	str	r3, [r5, #4]
 c00b21e:	806a      	strh	r2, [r5, #2]
 c00b220:	702c      	strb	r4, [r5, #0]
 c00b222:	f003 ff0f 	bl	c00f044 <calloc>
 c00b226:	4603      	mov	r3, r0
 c00b228:	6832      	ldr	r2, [r6, #0]
 c00b22a:	2104      	movs	r1, #4
 c00b22c:	3204      	adds	r2, #4
 c00b22e:	6032      	str	r2, [r6, #0]
 c00b230:	4a16      	ldr	r2, [pc, #88]	@ (c00b28c <kad_tanh+0x90>)
 c00b232:	4628      	mov	r0, r5
 c00b234:	69d2      	ldr	r2, [r2, #28]
 c00b236:	63ab      	str	r3, [r5, #56]	@ 0x38
 c00b238:	601f      	str	r7, [r3, #0]
 c00b23a:	4790      	blx	r2
 c00b23c:	42a0      	cmp	r0, r4
 c00b23e:	db16      	blt.n	c00b26e <kad_tanh+0x72>
 c00b240:	6868      	ldr	r0, [r5, #4]
 c00b242:	42a0      	cmp	r0, r4
 c00b244:	dd11      	ble.n	c00b26a <kad_tanh+0x6e>
 c00b246:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00b248:	4623      	mov	r3, r4
 c00b24a:	3a04      	subs	r2, #4
 c00b24c:	e002      	b.n	c00b254 <kad_tanh+0x58>
 c00b24e:	3301      	adds	r3, #1
 c00b250:	4298      	cmp	r0, r3
 c00b252:	d00a      	beq.n	c00b26a <kad_tanh+0x6e>
 c00b254:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00b258:	7849      	ldrb	r1, [r1, #1]
 c00b25a:	07c9      	lsls	r1, r1, #31
 c00b25c:	d5f7      	bpl.n	c00b24e <kad_tanh+0x52>
 c00b25e:	4283      	cmp	r3, r0
 c00b260:	da03      	bge.n	c00b26a <kad_tanh+0x6e>
 c00b262:	786b      	ldrb	r3, [r5, #1]
 c00b264:	f043 0301 	orr.w	r3, r3, #1
 c00b268:	706b      	strb	r3, [r5, #1]
 c00b26a:	4628      	mov	r0, r5
 c00b26c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b26e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 c00b270:	b108      	cbz	r0, c00b276 <kad_tanh+0x7a>
 c00b272:	f003 ff0b 	bl	c00f08c <free>
 c00b276:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 c00b278:	f003 ff08 	bl	c00f08c <free>
 c00b27c:	4628      	mov	r0, r5
 c00b27e:	2500      	movs	r5, #0
 c00b280:	f003 ff04 	bl	c00f08c <free>
 c00b284:	4628      	mov	r0, r5
 c00b286:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b288:	30000254 	.word	0x30000254
 c00b28c:	30000004 	.word	0x30000004

0c00b290 <kad_softmax>:
 c00b290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00b292:	2140      	movs	r1, #64	@ 0x40
 c00b294:	4607      	mov	r7, r0
 c00b296:	2001      	movs	r0, #1
 c00b298:	f003 fed4 	bl	c00f044 <calloc>
 c00b29c:	4e1f      	ldr	r6, [pc, #124]	@ (c00b31c <kad_softmax+0x8c>)
 c00b29e:	4605      	mov	r5, r0
 c00b2a0:	6833      	ldr	r3, [r6, #0]
 c00b2a2:	220e      	movs	r2, #14
 c00b2a4:	3340      	adds	r3, #64	@ 0x40
 c00b2a6:	2400      	movs	r4, #0
 c00b2a8:	6033      	str	r3, [r6, #0]
 c00b2aa:	2301      	movs	r3, #1
 c00b2ac:	2104      	movs	r1, #4
 c00b2ae:	4618      	mov	r0, r3
 c00b2b0:	606b      	str	r3, [r5, #4]
 c00b2b2:	806a      	strh	r2, [r5, #2]
 c00b2b4:	702c      	strb	r4, [r5, #0]
 c00b2b6:	f003 fec5 	bl	c00f044 <calloc>
 c00b2ba:	4603      	mov	r3, r0
 c00b2bc:	6832      	ldr	r2, [r6, #0]
 c00b2be:	2104      	movs	r1, #4
 c00b2c0:	3204      	adds	r2, #4
 c00b2c2:	6032      	str	r2, [r6, #0]
 c00b2c4:	4a16      	ldr	r2, [pc, #88]	@ (c00b320 <kad_softmax+0x90>)
 c00b2c6:	4628      	mov	r0, r5
 c00b2c8:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 c00b2ca:	63ab      	str	r3, [r5, #56]	@ 0x38
 c00b2cc:	601f      	str	r7, [r3, #0]
 c00b2ce:	4790      	blx	r2
 c00b2d0:	42a0      	cmp	r0, r4
 c00b2d2:	db16      	blt.n	c00b302 <kad_softmax+0x72>
 c00b2d4:	6868      	ldr	r0, [r5, #4]
 c00b2d6:	42a0      	cmp	r0, r4
 c00b2d8:	dd11      	ble.n	c00b2fe <kad_softmax+0x6e>
 c00b2da:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00b2dc:	4623      	mov	r3, r4
 c00b2de:	3a04      	subs	r2, #4
 c00b2e0:	e002      	b.n	c00b2e8 <kad_softmax+0x58>
 c00b2e2:	3301      	adds	r3, #1
 c00b2e4:	4298      	cmp	r0, r3
 c00b2e6:	d00a      	beq.n	c00b2fe <kad_softmax+0x6e>
 c00b2e8:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00b2ec:	7849      	ldrb	r1, [r1, #1]
 c00b2ee:	07c9      	lsls	r1, r1, #31
 c00b2f0:	d5f7      	bpl.n	c00b2e2 <kad_softmax+0x52>
 c00b2f2:	4283      	cmp	r3, r0
 c00b2f4:	da03      	bge.n	c00b2fe <kad_softmax+0x6e>
 c00b2f6:	786b      	ldrb	r3, [r5, #1]
 c00b2f8:	f043 0301 	orr.w	r3, r3, #1
 c00b2fc:	706b      	strb	r3, [r5, #1]
 c00b2fe:	4628      	mov	r0, r5
 c00b300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b302:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 c00b304:	b108      	cbz	r0, c00b30a <kad_softmax+0x7a>
 c00b306:	f003 fec1 	bl	c00f08c <free>
 c00b30a:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 c00b30c:	f003 febe 	bl	c00f08c <free>
 c00b310:	4628      	mov	r0, r5
 c00b312:	2500      	movs	r5, #0
 c00b314:	f003 feba 	bl	c00f08c <free>
 c00b318:	4628      	mov	r0, r5
 c00b31a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b31c:	30000254 	.word	0x30000254
 c00b320:	30000004 	.word	0x30000004

0c00b324 <kad_stdnorm>:
 c00b324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00b326:	2140      	movs	r1, #64	@ 0x40
 c00b328:	4607      	mov	r7, r0
 c00b32a:	2001      	movs	r0, #1
 c00b32c:	f003 fe8a 	bl	c00f044 <calloc>
 c00b330:	4e20      	ldr	r6, [pc, #128]	@ (c00b3b4 <kad_stdnorm+0x90>)
 c00b332:	4605      	mov	r5, r0
 c00b334:	6833      	ldr	r3, [r6, #0]
 c00b336:	2220      	movs	r2, #32
 c00b338:	3340      	adds	r3, #64	@ 0x40
 c00b33a:	2400      	movs	r4, #0
 c00b33c:	6033      	str	r3, [r6, #0]
 c00b33e:	2301      	movs	r3, #1
 c00b340:	2104      	movs	r1, #4
 c00b342:	4618      	mov	r0, r3
 c00b344:	606b      	str	r3, [r5, #4]
 c00b346:	806a      	strh	r2, [r5, #2]
 c00b348:	702c      	strb	r4, [r5, #0]
 c00b34a:	f003 fe7b 	bl	c00f044 <calloc>
 c00b34e:	4603      	mov	r3, r0
 c00b350:	6832      	ldr	r2, [r6, #0]
 c00b352:	2104      	movs	r1, #4
 c00b354:	3204      	adds	r2, #4
 c00b356:	6032      	str	r2, [r6, #0]
 c00b358:	4a17      	ldr	r2, [pc, #92]	@ (c00b3b8 <kad_stdnorm+0x94>)
 c00b35a:	4628      	mov	r0, r5
 c00b35c:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 c00b360:	63ab      	str	r3, [r5, #56]	@ 0x38
 c00b362:	601f      	str	r7, [r3, #0]
 c00b364:	4790      	blx	r2
 c00b366:	42a0      	cmp	r0, r4
 c00b368:	db16      	blt.n	c00b398 <kad_stdnorm+0x74>
 c00b36a:	6868      	ldr	r0, [r5, #4]
 c00b36c:	42a0      	cmp	r0, r4
 c00b36e:	dd11      	ble.n	c00b394 <kad_stdnorm+0x70>
 c00b370:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00b372:	4623      	mov	r3, r4
 c00b374:	3a04      	subs	r2, #4
 c00b376:	e002      	b.n	c00b37e <kad_stdnorm+0x5a>
 c00b378:	3301      	adds	r3, #1
 c00b37a:	4298      	cmp	r0, r3
 c00b37c:	d00a      	beq.n	c00b394 <kad_stdnorm+0x70>
 c00b37e:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00b382:	7849      	ldrb	r1, [r1, #1]
 c00b384:	07c9      	lsls	r1, r1, #31
 c00b386:	d5f7      	bpl.n	c00b378 <kad_stdnorm+0x54>
 c00b388:	4283      	cmp	r3, r0
 c00b38a:	da03      	bge.n	c00b394 <kad_stdnorm+0x70>
 c00b38c:	786b      	ldrb	r3, [r5, #1]
 c00b38e:	f043 0301 	orr.w	r3, r3, #1
 c00b392:	706b      	strb	r3, [r5, #1]
 c00b394:	4628      	mov	r0, r5
 c00b396:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b398:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 c00b39a:	b108      	cbz	r0, c00b3a0 <kad_stdnorm+0x7c>
 c00b39c:	f003 fe76 	bl	c00f08c <free>
 c00b3a0:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 c00b3a2:	f003 fe73 	bl	c00f08c <free>
 c00b3a6:	4628      	mov	r0, r5
 c00b3a8:	2500      	movs	r5, #0
 c00b3aa:	f003 fe6f 	bl	c00f08c <free>
 c00b3ae:	4628      	mov	r0, r5
 c00b3b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b3b2:	bf00      	nop
 c00b3b4:	30000254 	.word	0x30000254
 c00b3b8:	30000004 	.word	0x30000004

0c00b3bc <kad_avg>:
 c00b3bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00b3be:	4605      	mov	r5, r0
 c00b3c0:	460f      	mov	r7, r1
 c00b3c2:	2001      	movs	r0, #1
 c00b3c4:	2140      	movs	r1, #64	@ 0x40
 c00b3c6:	f003 fe3d 	bl	c00f044 <calloc>
 c00b3ca:	2100      	movs	r1, #0
 c00b3cc:	220a      	movs	r2, #10
 c00b3ce:	4e26      	ldr	r6, [pc, #152]	@ (c00b468 <kad_avg+0xac>)
 c00b3d0:	4604      	mov	r4, r0
 c00b3d2:	6833      	ldr	r3, [r6, #0]
 c00b3d4:	7001      	strb	r1, [r0, #0]
 c00b3d6:	3340      	adds	r3, #64	@ 0x40
 c00b3d8:	6033      	str	r3, [r6, #0]
 c00b3da:	8042      	strh	r2, [r0, #2]
 c00b3dc:	6045      	str	r5, [r0, #4]
 c00b3de:	bb0d      	cbnz	r5, c00b424 <kad_avg+0x68>
 c00b3e0:	7843      	ldrb	r3, [r0, #1]
 c00b3e2:	f043 0304 	orr.w	r3, r3, #4
 c00b3e6:	7043      	strb	r3, [r0, #1]
 c00b3e8:	4b20      	ldr	r3, [pc, #128]	@ (c00b46c <kad_avg+0xb0>)
 c00b3ea:	2104      	movs	r1, #4
 c00b3ec:	4620      	mov	r0, r4
 c00b3ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 c00b3f0:	4798      	blx	r3
 c00b3f2:	2800      	cmp	r0, #0
 c00b3f4:	db2b      	blt.n	c00b44e <kad_avg+0x92>
 c00b3f6:	6860      	ldr	r0, [r4, #4]
 c00b3f8:	2800      	cmp	r0, #0
 c00b3fa:	dd11      	ble.n	c00b420 <kad_avg+0x64>
 c00b3fc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 c00b3fe:	2300      	movs	r3, #0
 c00b400:	3a04      	subs	r2, #4
 c00b402:	e002      	b.n	c00b40a <kad_avg+0x4e>
 c00b404:	3301      	adds	r3, #1
 c00b406:	4298      	cmp	r0, r3
 c00b408:	d00a      	beq.n	c00b420 <kad_avg+0x64>
 c00b40a:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00b40e:	7849      	ldrb	r1, [r1, #1]
 c00b410:	07c9      	lsls	r1, r1, #31
 c00b412:	d5f7      	bpl.n	c00b404 <kad_avg+0x48>
 c00b414:	4283      	cmp	r3, r0
 c00b416:	da03      	bge.n	c00b420 <kad_avg+0x64>
 c00b418:	7863      	ldrb	r3, [r4, #1]
 c00b41a:	f043 0301 	orr.w	r3, r3, #1
 c00b41e:	7063      	strb	r3, [r4, #1]
 c00b420:	4620      	mov	r0, r4
 c00b422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b424:	2104      	movs	r1, #4
 c00b426:	4628      	mov	r0, r5
 c00b428:	f003 fe0c 	bl	c00f044 <calloc>
 c00b42c:	6833      	ldr	r3, [r6, #0]
 c00b42e:	2d00      	cmp	r5, #0
 c00b430:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 c00b434:	6033      	str	r3, [r6, #0]
 c00b436:	7863      	ldrb	r3, [r4, #1]
 c00b438:	63a0      	str	r0, [r4, #56]	@ 0x38
 c00b43a:	f043 0304 	orr.w	r3, r3, #4
 c00b43e:	7063      	strb	r3, [r4, #1]
 c00b440:	ea4f 0285 	mov.w	r2, r5, lsl #2
 c00b444:	ddd0      	ble.n	c00b3e8 <kad_avg+0x2c>
 c00b446:	4639      	mov	r1, r7
 c00b448:	f004 f9c1 	bl	c00f7ce <memcpy>
 c00b44c:	e7cc      	b.n	c00b3e8 <kad_avg+0x2c>
 c00b44e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 c00b450:	b108      	cbz	r0, c00b456 <kad_avg+0x9a>
 c00b452:	f003 fe1b 	bl	c00f08c <free>
 c00b456:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 c00b458:	f003 fe18 	bl	c00f08c <free>
 c00b45c:	4620      	mov	r0, r4
 c00b45e:	2400      	movs	r4, #0
 c00b460:	f003 fe14 	bl	c00f08c <free>
 c00b464:	4620      	mov	r0, r4
 c00b466:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00b468:	30000254 	.word	0x30000254
 c00b46c:	30000004 	.word	0x30000004

0c00b470 <kad_sync_dim>:
 c00b470:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00b474:	1e06      	subs	r6, r0, #0
 c00b476:	4617      	mov	r7, r2
 c00b478:	dd5a      	ble.n	c00b530 <kad_sync_dim+0xc0>
 c00b47a:	2a00      	cmp	r2, #0
 c00b47c:	4689      	mov	r9, r1
 c00b47e:	f1a1 0404 	sub.w	r4, r1, #4
 c00b482:	dd3d      	ble.n	c00b500 <kad_sync_dim+0x90>
 c00b484:	f04f 0800 	mov.w	r8, #0
 c00b488:	46a3      	mov	fp, r4
 c00b48a:	46c2      	mov	sl, r8
 c00b48c:	4645      	mov	r5, r8
 c00b48e:	f85b 0f04 	ldr.w	r0, [fp, #4]!
 c00b492:	6842      	ldr	r2, [r0, #4]
 c00b494:	2a00      	cmp	r2, #0
 c00b496:	d125      	bne.n	c00b4e4 <kad_sync_dim+0x74>
 c00b498:	7842      	ldrb	r2, [r0, #1]
 c00b49a:	0793      	lsls	r3, r2, #30
 c00b49c:	d106      	bne.n	c00b4ac <kad_sync_dim+0x3c>
 c00b49e:	f8d0 8010 	ldr.w	r8, [r0, #16]
 c00b4a2:	4547      	cmp	r7, r8
 c00b4a4:	d002      	beq.n	c00b4ac <kad_sync_dim+0x3c>
 c00b4a6:	f04f 0a01 	mov.w	sl, #1
 c00b4aa:	6107      	str	r7, [r0, #16]
 c00b4ac:	3501      	adds	r5, #1
 c00b4ae:	42ae      	cmp	r6, r5
 c00b4b0:	d1ed      	bne.n	c00b48e <kad_sync_dim+0x1e>
 c00b4b2:	00b1      	lsls	r1, r6, #2
 c00b4b4:	45b8      	cmp	r8, r7
 c00b4b6:	4623      	mov	r3, r4
 c00b4b8:	bfac      	ite	ge
 c00b4ba:	2200      	movge	r2, #0
 c00b4bc:	2201      	movlt	r2, #1
 c00b4be:	4421      	add	r1, r4
 c00b4c0:	f853 4f04 	ldr.w	r4, [r3, #4]!
 c00b4c4:	6860      	ldr	r0, [r4, #4]
 c00b4c6:	2800      	cmp	r0, #0
 c00b4c8:	dd03      	ble.n	c00b4d2 <kad_sync_dim+0x62>
 c00b4ca:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 c00b4cc:	2800      	cmp	r0, #0
 c00b4ce:	bf08      	it	eq
 c00b4d0:	2201      	moveq	r2, #1
 c00b4d2:	4299      	cmp	r1, r3
 c00b4d4:	d1f4      	bne.n	c00b4c0 <kad_sync_dim+0x50>
 c00b4d6:	bb32      	cbnz	r2, c00b526 <kad_sync_dim+0xb6>
 c00b4d8:	2f00      	cmp	r7, #0
 c00b4da:	dd00      	ble.n	c00b4de <kad_sync_dim+0x6e>
 c00b4dc:	46b8      	mov	r8, r7
 c00b4de:	4640      	mov	r0, r8
 c00b4e0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00b4e4:	dde2      	ble.n	c00b4ac <kad_sync_dim+0x3c>
 c00b4e6:	f1ba 0f00 	cmp.w	sl, #0
 c00b4ea:	d0df      	beq.n	c00b4ac <kad_sync_dim+0x3c>
 c00b4ec:	8842      	ldrh	r2, [r0, #2]
 c00b4ee:	4b14      	ldr	r3, [pc, #80]	@ (c00b540 <kad_sync_dim+0xd0>)
 c00b4f0:	2104      	movs	r1, #4
 c00b4f2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 c00b4f6:	3501      	adds	r5, #1
 c00b4f8:	4790      	blx	r2
 c00b4fa:	42ae      	cmp	r6, r5
 c00b4fc:	d1c7      	bne.n	c00b48e <kad_sync_dim+0x1e>
 c00b4fe:	e7d8      	b.n	c00b4b2 <kad_sync_dim+0x42>
 c00b500:	4623      	mov	r3, r4
 c00b502:	f04f 0800 	mov.w	r8, #0
 c00b506:	00b1      	lsls	r1, r6, #2
 c00b508:	eb04 0586 	add.w	r5, r4, r6, lsl #2
 c00b50c:	f853 0f04 	ldr.w	r0, [r3, #4]!
 c00b510:	6842      	ldr	r2, [r0, #4]
 c00b512:	b92a      	cbnz	r2, c00b520 <kad_sync_dim+0xb0>
 c00b514:	7842      	ldrb	r2, [r0, #1]
 c00b516:	f012 0f03 	tst.w	r2, #3
 c00b51a:	bf08      	it	eq
 c00b51c:	f8d0 8010 	ldreq.w	r8, [r0, #16]
 c00b520:	42ab      	cmp	r3, r5
 c00b522:	d1f3      	bne.n	c00b50c <kad_sync_dim+0x9c>
 c00b524:	e7c6      	b.n	c00b4b4 <kad_sync_dim+0x44>
 c00b526:	4649      	mov	r1, r9
 c00b528:	4630      	mov	r0, r6
 c00b52a:	f7fc fb87 	bl	c007c3c <kad_allocate_internal>
 c00b52e:	e7d3      	b.n	c00b4d8 <kad_sync_dim+0x68>
 c00b530:	2a00      	cmp	r2, #0
 c00b532:	dc02      	bgt.n	c00b53a <kad_sync_dim+0xca>
 c00b534:	f04f 0800 	mov.w	r8, #0
 c00b538:	e7d1      	b.n	c00b4de <kad_sync_dim+0x6e>
 c00b53a:	f7fc fb7f 	bl	c007c3c <kad_allocate_internal>
 c00b53e:	e7cd      	b.n	c00b4dc <kad_sync_dim+0x6c>
 c00b540:	30000004 	.word	0x30000004

0c00b544 <kad_compile_array>:
 c00b544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00b548:	1e0b      	subs	r3, r1, #0
 c00b54a:	b085      	sub	sp, #20
 c00b54c:	9003      	str	r0, [sp, #12]
 c00b54e:	9301      	str	r3, [sp, #4]
 c00b550:	f340 80f0 	ble.w	c00b734 <kad_compile_array+0x1f0>
 c00b554:	2700      	movs	r7, #0
 c00b556:	1f13      	subs	r3, r2, #4
 c00b558:	461e      	mov	r6, r3
 c00b55a:	4698      	mov	r8, r3
 c00b55c:	f04f 0a01 	mov.w	sl, #1
 c00b560:	463c      	mov	r4, r7
 c00b562:	46b9      	mov	r9, r7
 c00b564:	9302      	str	r3, [sp, #8]
 c00b566:	e005      	b.n	c00b574 <kad_compile_array+0x30>
 c00b568:	9b01      	ldr	r3, [sp, #4]
 c00b56a:	f847 5024 	str.w	r5, [r7, r4, lsl #2]
 c00b56e:	3401      	adds	r4, #1
 c00b570:	42a3      	cmp	r3, r4
 c00b572:	d013      	beq.n	c00b59c <kad_compile_array+0x58>
 c00b574:	f858 5f04 	ldr.w	r5, [r8, #4]!
 c00b578:	454c      	cmp	r4, r9
 c00b57a:	f8c5 a008 	str.w	sl, [r5, #8]
 c00b57e:	d1f3      	bne.n	c00b568 <kad_compile_array+0x24>
 c00b580:	b394      	cbz	r4, c00b5e8 <kad_compile_array+0xa4>
 c00b582:	ea4f 0944 	mov.w	r9, r4, lsl #1
 c00b586:	00e1      	lsls	r1, r4, #3
 c00b588:	4638      	mov	r0, r7
 c00b58a:	f003 fe35 	bl	c00f1f8 <realloc>
 c00b58e:	4607      	mov	r7, r0
 c00b590:	9b01      	ldr	r3, [sp, #4]
 c00b592:	f847 5024 	str.w	r5, [r7, r4, lsl #2]
 c00b596:	3401      	adds	r4, #1
 c00b598:	42a3      	cmp	r3, r4
 c00b59a:	d1eb      	bne.n	c00b574 <kad_compile_array+0x30>
 c00b59c:	f103 38ff 	add.w	r8, r3, #4294967295
 c00b5a0:	686a      	ldr	r2, [r5, #4]
 c00b5a2:	2a00      	cmp	r2, #0
 c00b5a4:	dd24      	ble.n	c00b5f0 <kad_compile_array+0xac>
 c00b5a6:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 c00b5a8:	f1a3 0b04 	sub.w	fp, r3, #4
 c00b5ac:	eb0b 0a82 	add.w	sl, fp, r2, lsl #2
 c00b5b0:	e007      	b.n	c00b5c2 <kad_compile_array+0x7e>
 c00b5b2:	f847 5028 	str.w	r5, [r7, r8, lsl #2]
 c00b5b6:	f108 0801 	add.w	r8, r8, #1
 c00b5ba:	3402      	adds	r4, #2
 c00b5bc:	45da      	cmp	sl, fp
 c00b5be:	60ac      	str	r4, [r5, #8]
 c00b5c0:	d016      	beq.n	c00b5f0 <kad_compile_array+0xac>
 c00b5c2:	f85b 5f04 	ldr.w	r5, [fp, #4]!
 c00b5c6:	68ac      	ldr	r4, [r5, #8]
 c00b5c8:	2c00      	cmp	r4, #0
 c00b5ca:	d1f6      	bne.n	c00b5ba <kad_compile_array+0x76>
 c00b5cc:	45c1      	cmp	r9, r8
 c00b5ce:	d1f0      	bne.n	c00b5b2 <kad_compile_array+0x6e>
 c00b5d0:	f1b9 0f00 	cmp.w	r9, #0
 c00b5d4:	d014      	beq.n	c00b600 <kad_compile_array+0xbc>
 c00b5d6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 c00b5da:	ea4f 0189 	mov.w	r1, r9, lsl #2
 c00b5de:	4638      	mov	r0, r7
 c00b5e0:	f003 fe0a 	bl	c00f1f8 <realloc>
 c00b5e4:	4607      	mov	r7, r0
 c00b5e6:	e7e4      	b.n	c00b5b2 <kad_compile_array+0x6e>
 c00b5e8:	2108      	movs	r1, #8
 c00b5ea:	f04f 0902 	mov.w	r9, #2
 c00b5ee:	e7cb      	b.n	c00b588 <kad_compile_array+0x44>
 c00b5f0:	f1b8 0f00 	cmp.w	r8, #0
 c00b5f4:	d008      	beq.n	c00b608 <kad_compile_array+0xc4>
 c00b5f6:	f108 38ff 	add.w	r8, r8, #4294967295
 c00b5fa:	f857 5028 	ldr.w	r5, [r7, r8, lsl #2]
 c00b5fe:	e7cf      	b.n	c00b5a0 <kad_compile_array+0x5c>
 c00b600:	2108      	movs	r1, #8
 c00b602:	f04f 0902 	mov.w	r9, #2
 c00b606:	e7ea      	b.n	c00b5de <kad_compile_array+0x9a>
 c00b608:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 c00b60c:	4644      	mov	r4, r8
 c00b60e:	eb03 0a82 	add.w	sl, r3, r2, lsl #2
 c00b612:	e004      	b.n	c00b61e <kad_compile_array+0xda>
 c00b614:	f847 5024 	str.w	r5, [r7, r4, lsl #2]
 c00b618:	3401      	adds	r4, #1
 c00b61a:	45b2      	cmp	sl, r6
 c00b61c:	d010      	beq.n	c00b640 <kad_compile_array+0xfc>
 c00b61e:	f856 5f04 	ldr.w	r5, [r6, #4]!
 c00b622:	68ab      	ldr	r3, [r5, #8]
 c00b624:	085b      	lsrs	r3, r3, #1
 c00b626:	d1f8      	bne.n	c00b61a <kad_compile_array+0xd6>
 c00b628:	454c      	cmp	r4, r9
 c00b62a:	d1f3      	bne.n	c00b614 <kad_compile_array+0xd0>
 c00b62c:	2c00      	cmp	r4, #0
 c00b62e:	d07d      	beq.n	c00b72c <kad_compile_array+0x1e8>
 c00b630:	ea4f 0944 	mov.w	r9, r4, lsl #1
 c00b634:	00e1      	lsls	r1, r4, #3
 c00b636:	4638      	mov	r0, r7
 c00b638:	f003 fdde 	bl	c00f1f8 <realloc>
 c00b63c:	4607      	mov	r7, r0
 c00b63e:	e7e9      	b.n	c00b614 <kad_compile_array+0xd0>
 c00b640:	2c00      	cmp	r4, #0
 c00b642:	d078      	beq.n	c00b736 <kad_compile_array+0x1f2>
 c00b644:	f04f 0b00 	mov.w	fp, #0
 c00b648:	f8cd b004 	str.w	fp, [sp, #4]
 c00b64c:	3c01      	subs	r4, #1
 c00b64e:	45c3      	cmp	fp, r8
 c00b650:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 c00b654:	d05a      	beq.n	c00b70c <kad_compile_array+0x1c8>
 c00b656:	686b      	ldr	r3, [r5, #4]
 c00b658:	9a01      	ldr	r2, [sp, #4]
 c00b65a:	f10b 0b01 	add.w	fp, fp, #1
 c00b65e:	eb02 028b 	add.w	r2, r2, fp, lsl #2
 c00b662:	2b00      	cmp	r3, #0
 c00b664:	9202      	str	r2, [sp, #8]
 c00b666:	f842 5c04 	str.w	r5, [r2, #-4]
 c00b66a:	dd1c      	ble.n	c00b6a6 <kad_compile_array+0x162>
 c00b66c:	6bae      	ldr	r6, [r5, #56]	@ 0x38
 c00b66e:	3e04      	subs	r6, #4
 c00b670:	eb06 0a83 	add.w	sl, r6, r3, lsl #2
 c00b674:	e004      	b.n	c00b680 <kad_compile_array+0x13c>
 c00b676:	f847 5024 	str.w	r5, [r7, r4, lsl #2]
 c00b67a:	3401      	adds	r4, #1
 c00b67c:	45b2      	cmp	sl, r6
 c00b67e:	d012      	beq.n	c00b6a6 <kad_compile_array+0x162>
 c00b680:	f856 5f04 	ldr.w	r5, [r6, #4]!
 c00b684:	68a9      	ldr	r1, [r5, #8]
 c00b686:	3902      	subs	r1, #2
 c00b688:	60a9      	str	r1, [r5, #8]
 c00b68a:	0849      	lsrs	r1, r1, #1
 c00b68c:	d1f6      	bne.n	c00b67c <kad_compile_array+0x138>
 c00b68e:	454c      	cmp	r4, r9
 c00b690:	d1f1      	bne.n	c00b676 <kad_compile_array+0x132>
 c00b692:	2c00      	cmp	r4, #0
 c00b694:	d036      	beq.n	c00b704 <kad_compile_array+0x1c0>
 c00b696:	ea4f 0944 	mov.w	r9, r4, lsl #1
 c00b69a:	00e1      	lsls	r1, r4, #3
 c00b69c:	4638      	mov	r0, r7
 c00b69e:	f003 fdab 	bl	c00f1f8 <realloc>
 c00b6a2:	4607      	mov	r7, r0
 c00b6a4:	e7e7      	b.n	c00b676 <kad_compile_array+0x132>
 c00b6a6:	2c00      	cmp	r4, #0
 c00b6a8:	d1d0      	bne.n	c00b64c <kad_compile_array+0x108>
 c00b6aa:	4638      	mov	r0, r7
 c00b6ac:	f003 fcee 	bl	c00f08c <free>
 c00b6b0:	f1bb 0f00 	cmp.w	fp, #0
 c00b6b4:	dd4d      	ble.n	c00b752 <kad_compile_array+0x20e>
 c00b6b6:	9b01      	ldr	r3, [sp, #4]
 c00b6b8:	1f1d      	subs	r5, r3, #4
 c00b6ba:	4628      	mov	r0, r5
 c00b6bc:	f850 1f04 	ldr.w	r1, [r0, #4]!
 c00b6c0:	688b      	ldr	r3, [r1, #8]
 c00b6c2:	105b      	asrs	r3, r3, #1
 c00b6c4:	d13e      	bne.n	c00b744 <kad_compile_array+0x200>
 c00b6c6:	3401      	adds	r4, #1
 c00b6c8:	45a3      	cmp	fp, r4
 c00b6ca:	608b      	str	r3, [r1, #8]
 c00b6cc:	d1f6      	bne.n	c00b6bc <kad_compile_array+0x178>
 c00b6ce:	1061      	asrs	r1, r4, #1
 c00b6d0:	d03f      	beq.n	c00b752 <kad_compile_array+0x20e>
 c00b6d2:	e9dd 3a01 	ldrd	r3, sl, [sp, #4]
 c00b6d6:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 c00b6da:	3904      	subs	r1, #4
 c00b6dc:	f855 3f04 	ldr.w	r3, [r5, #4]!
 c00b6e0:	f85a 2d04 	ldr.w	r2, [sl, #-4]!
 c00b6e4:	42a9      	cmp	r1, r5
 c00b6e6:	602a      	str	r2, [r5, #0]
 c00b6e8:	f8ca 3000 	str.w	r3, [sl]
 c00b6ec:	d1f6      	bne.n	c00b6dc <kad_compile_array+0x198>
 c00b6ee:	9d01      	ldr	r5, [sp, #4]
 c00b6f0:	4620      	mov	r0, r4
 c00b6f2:	4629      	mov	r1, r5
 c00b6f4:	f7fc faa2 	bl	c007c3c <kad_allocate_internal>
 c00b6f8:	4628      	mov	r0, r5
 c00b6fa:	9b03      	ldr	r3, [sp, #12]
 c00b6fc:	601c      	str	r4, [r3, #0]
 c00b6fe:	b005      	add	sp, #20
 c00b700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00b704:	2108      	movs	r1, #8
 c00b706:	f04f 0902 	mov.w	r9, #2
 c00b70a:	e7c7      	b.n	c00b69c <kad_compile_array+0x158>
 c00b70c:	f1bb 0f00 	cmp.w	fp, #0
 c00b710:	d008      	beq.n	c00b724 <kad_compile_array+0x1e0>
 c00b712:	ea4f 084b 	mov.w	r8, fp, lsl #1
 c00b716:	ea4f 01cb 	mov.w	r1, fp, lsl #3
 c00b71a:	9801      	ldr	r0, [sp, #4]
 c00b71c:	f003 fd6c 	bl	c00f1f8 <realloc>
 c00b720:	9001      	str	r0, [sp, #4]
 c00b722:	e798      	b.n	c00b656 <kad_compile_array+0x112>
 c00b724:	2108      	movs	r1, #8
 c00b726:	f04f 0802 	mov.w	r8, #2
 c00b72a:	e7f6      	b.n	c00b71a <kad_compile_array+0x1d6>
 c00b72c:	2108      	movs	r1, #8
 c00b72e:	f04f 0902 	mov.w	r9, #2
 c00b732:	e780      	b.n	c00b636 <kad_compile_array+0xf2>
 c00b734:	2700      	movs	r7, #0
 c00b736:	2300      	movs	r3, #0
 c00b738:	4638      	mov	r0, r7
 c00b73a:	461c      	mov	r4, r3
 c00b73c:	9301      	str	r3, [sp, #4]
 c00b73e:	f003 fca5 	bl	c00f08c <free>
 c00b742:	e7d4      	b.n	c00b6ee <kad_compile_array+0x1aa>
 c00b744:	f44f 71f1 	mov.w	r1, #482	@ 0x1e2
 c00b748:	4b03      	ldr	r3, [pc, #12]	@ (c00b758 <kad_compile_array+0x214>)
 c00b74a:	4a04      	ldr	r2, [pc, #16]	@ (c00b75c <kad_compile_array+0x218>)
 c00b74c:	4804      	ldr	r0, [pc, #16]	@ (c00b760 <kad_compile_array+0x21c>)
 c00b74e:	f003 fc5b 	bl	c00f008 <__assert_func>
 c00b752:	465c      	mov	r4, fp
 c00b754:	e7cb      	b.n	c00b6ee <kad_compile_array+0x1aa>
 c00b756:	bf00      	nop
 c00b758:	0c011bc4 	.word	0x0c011bc4
 c00b75c:	0c011d10 	.word	0x0c011d10
 c00b760:	0c011b04 	.word	0x0c011b04

0c00b764 <kad_delete>:
 c00b764:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00b766:	1e06      	subs	r6, r0, #0
 c00b768:	460f      	mov	r7, r1
 c00b76a:	dd1d      	ble.n	c00b7a8 <kad_delete+0x44>
 c00b76c:	1f0d      	subs	r5, r1, #4
 c00b76e:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 c00b772:	e00d      	b.n	c00b790 <kad_delete+0x2c>
 c00b774:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 c00b776:	f003 fc89 	bl	c00f08c <free>
 c00b77a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 c00b77c:	f003 fc86 	bl	c00f08c <free>
 c00b780:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 c00b782:	f003 fc83 	bl	c00f08c <free>
 c00b786:	4620      	mov	r0, r4
 c00b788:	f003 fc80 	bl	c00f08c <free>
 c00b78c:	42b5      	cmp	r5, r6
 c00b78e:	d00b      	beq.n	c00b7a8 <kad_delete+0x44>
 c00b790:	f855 4f04 	ldr.w	r4, [r5, #4]!
 c00b794:	6863      	ldr	r3, [r4, #4]
 c00b796:	2b00      	cmp	r3, #0
 c00b798:	d0ec      	beq.n	c00b774 <kad_delete+0x10>
 c00b79a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 c00b79c:	f003 fc76 	bl	c00f08c <free>
 c00b7a0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 c00b7a2:	f003 fc73 	bl	c00f08c <free>
 c00b7a6:	e7e5      	b.n	c00b774 <kad_delete+0x10>
 c00b7a8:	4638      	mov	r0, r7
 c00b7aa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 c00b7ae:	f003 bc6d 	b.w	c00f08c <free>
 c00b7b2:	bf00      	nop

0c00b7b4 <kad_size_var>:
 c00b7b4:	f1b0 0c00 	subs.w	ip, r0, #0
 c00b7b8:	f04f 0000 	mov.w	r0, #0
 c00b7bc:	dd32      	ble.n	c00b824 <kad_size_var+0x70>
 c00b7be:	3904      	subs	r1, #4
 c00b7c0:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 c00b7c4:	e001      	b.n	c00b7ca <kad_size_var+0x16>
 c00b7c6:	4561      	cmp	r1, ip
 c00b7c8:	d029      	beq.n	c00b81e <kad_size_var+0x6a>
 c00b7ca:	f851 3f04 	ldr.w	r3, [r1, #4]!
 c00b7ce:	685a      	ldr	r2, [r3, #4]
 c00b7d0:	2a00      	cmp	r2, #0
 c00b7d2:	d1f8      	bne.n	c00b7c6 <kad_size_var+0x12>
 c00b7d4:	785a      	ldrb	r2, [r3, #1]
 c00b7d6:	07d2      	lsls	r2, r2, #31
 c00b7d8:	d5f5      	bpl.n	c00b7c6 <kad_size_var+0x12>
 c00b7da:	b430      	push	{r4, r5}
 c00b7dc:	781c      	ldrb	r4, [r3, #0]
 c00b7de:	b1fc      	cbz	r4, c00b820 <kad_size_var+0x6c>
 c00b7e0:	2c01      	cmp	r4, #1
 c00b7e2:	691a      	ldr	r2, [r3, #16]
 c00b7e4:	d00c      	beq.n	c00b800 <kad_size_var+0x4c>
 c00b7e6:	695d      	ldr	r5, [r3, #20]
 c00b7e8:	2c02      	cmp	r4, #2
 c00b7ea:	fb05 f202 	mul.w	r2, r5, r2
 c00b7ee:	d007      	beq.n	c00b800 <kad_size_var+0x4c>
 c00b7f0:	699d      	ldr	r5, [r3, #24]
 c00b7f2:	2c03      	cmp	r4, #3
 c00b7f4:	fb05 f202 	mul.w	r2, r5, r2
 c00b7f8:	d002      	beq.n	c00b800 <kad_size_var+0x4c>
 c00b7fa:	69db      	ldr	r3, [r3, #28]
 c00b7fc:	fb03 f202 	mul.w	r2, r3, r2
 c00b800:	4410      	add	r0, r2
 c00b802:	4561      	cmp	r1, ip
 c00b804:	d009      	beq.n	c00b81a <kad_size_var+0x66>
 c00b806:	f851 3f04 	ldr.w	r3, [r1, #4]!
 c00b80a:	685a      	ldr	r2, [r3, #4]
 c00b80c:	2a00      	cmp	r2, #0
 c00b80e:	d1f8      	bne.n	c00b802 <kad_size_var+0x4e>
 c00b810:	785a      	ldrb	r2, [r3, #1]
 c00b812:	07d4      	lsls	r4, r2, #31
 c00b814:	d4e2      	bmi.n	c00b7dc <kad_size_var+0x28>
 c00b816:	4561      	cmp	r1, ip
 c00b818:	d1f5      	bne.n	c00b806 <kad_size_var+0x52>
 c00b81a:	bc30      	pop	{r4, r5}
 c00b81c:	4770      	bx	lr
 c00b81e:	4770      	bx	lr
 c00b820:	2201      	movs	r2, #1
 c00b822:	e7ed      	b.n	c00b800 <kad_size_var+0x4c>
 c00b824:	4770      	bx	lr
 c00b826:	bf00      	nop

0c00b828 <kad_size_const>:
 c00b828:	f1b0 0c00 	subs.w	ip, r0, #0
 c00b82c:	f04f 0000 	mov.w	r0, #0
 c00b830:	dd32      	ble.n	c00b898 <kad_size_const+0x70>
 c00b832:	3904      	subs	r1, #4
 c00b834:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 c00b838:	e001      	b.n	c00b83e <kad_size_const+0x16>
 c00b83a:	4561      	cmp	r1, ip
 c00b83c:	d029      	beq.n	c00b892 <kad_size_const+0x6a>
 c00b83e:	f851 3f04 	ldr.w	r3, [r1, #4]!
 c00b842:	685a      	ldr	r2, [r3, #4]
 c00b844:	2a00      	cmp	r2, #0
 c00b846:	d1f8      	bne.n	c00b83a <kad_size_const+0x12>
 c00b848:	785a      	ldrb	r2, [r3, #1]
 c00b84a:	0792      	lsls	r2, r2, #30
 c00b84c:	d5f5      	bpl.n	c00b83a <kad_size_const+0x12>
 c00b84e:	b430      	push	{r4, r5}
 c00b850:	781c      	ldrb	r4, [r3, #0]
 c00b852:	b1fc      	cbz	r4, c00b894 <kad_size_const+0x6c>
 c00b854:	2c01      	cmp	r4, #1
 c00b856:	691a      	ldr	r2, [r3, #16]
 c00b858:	d00c      	beq.n	c00b874 <kad_size_const+0x4c>
 c00b85a:	695d      	ldr	r5, [r3, #20]
 c00b85c:	2c02      	cmp	r4, #2
 c00b85e:	fb05 f202 	mul.w	r2, r5, r2
 c00b862:	d007      	beq.n	c00b874 <kad_size_const+0x4c>
 c00b864:	699d      	ldr	r5, [r3, #24]
 c00b866:	2c03      	cmp	r4, #3
 c00b868:	fb05 f202 	mul.w	r2, r5, r2
 c00b86c:	d002      	beq.n	c00b874 <kad_size_const+0x4c>
 c00b86e:	69db      	ldr	r3, [r3, #28]
 c00b870:	fb03 f202 	mul.w	r2, r3, r2
 c00b874:	4410      	add	r0, r2
 c00b876:	4561      	cmp	r1, ip
 c00b878:	d009      	beq.n	c00b88e <kad_size_const+0x66>
 c00b87a:	f851 3f04 	ldr.w	r3, [r1, #4]!
 c00b87e:	685a      	ldr	r2, [r3, #4]
 c00b880:	2a00      	cmp	r2, #0
 c00b882:	d1f8      	bne.n	c00b876 <kad_size_const+0x4e>
 c00b884:	785a      	ldrb	r2, [r3, #1]
 c00b886:	0794      	lsls	r4, r2, #30
 c00b888:	d4e2      	bmi.n	c00b850 <kad_size_const+0x28>
 c00b88a:	4561      	cmp	r1, ip
 c00b88c:	d1f5      	bne.n	c00b87a <kad_size_const+0x52>
 c00b88e:	bc30      	pop	{r4, r5}
 c00b890:	4770      	bx	lr
 c00b892:	4770      	bx	lr
 c00b894:	2201      	movs	r2, #1
 c00b896:	e7ed      	b.n	c00b874 <kad_size_const+0x4c>
 c00b898:	4770      	bx	lr
 c00b89a:	bf00      	nop

0c00b89c <kad_eval_at>:
 c00b89c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00b8a0:	f1b2 0a00 	subs.w	sl, r2, #0
 c00b8a4:	4689      	mov	r9, r1
 c00b8a6:	db38      	blt.n	c00b91a <kad_eval_at+0x7e>
 c00b8a8:	4582      	cmp	sl, r0
 c00b8aa:	da36      	bge.n	c00b91a <kad_eval_at+0x7e>
 c00b8ac:	f1a9 0804 	sub.w	r8, r9, #4
 c00b8b0:	4645      	mov	r5, r8
 c00b8b2:	4643      	mov	r3, r8
 c00b8b4:	2400      	movs	r4, #0
 c00b8b6:	eba4 060a 	sub.w	r6, r4, sl
 c00b8ba:	fab6 f686 	clz	r6, r6
 c00b8be:	46a3      	mov	fp, r4
 c00b8c0:	f853 1f04 	ldr.w	r1, [r3, #4]!
 c00b8c4:	3401      	adds	r4, #1
 c00b8c6:	0976      	lsrs	r6, r6, #5
 c00b8c8:	42a0      	cmp	r0, r4
 c00b8ca:	608e      	str	r6, [r1, #8]
 c00b8cc:	d1f3      	bne.n	c00b8b6 <kad_eval_at+0x1a>
 c00b8ce:	4649      	mov	r1, r9
 c00b8d0:	4620      	mov	r0, r4
 c00b8d2:	f7f8 fb0d 	bl	c003ef0 <kad_propagate_marks>
 c00b8d6:	4647      	mov	r7, r8
 c00b8d8:	2600      	movs	r6, #0
 c00b8da:	e000      	b.n	c00b8de <kad_eval_at+0x42>
 c00b8dc:	461e      	mov	r6, r3
 c00b8de:	f857 0f04 	ldr.w	r0, [r7, #4]!
 c00b8e2:	6843      	ldr	r3, [r0, #4]
 c00b8e4:	b143      	cbz	r3, c00b8f8 <kad_eval_at+0x5c>
 c00b8e6:	6883      	ldr	r3, [r0, #8]
 c00b8e8:	2b00      	cmp	r3, #0
 c00b8ea:	dd05      	ble.n	c00b8f8 <kad_eval_at+0x5c>
 c00b8ec:	8843      	ldrh	r3, [r0, #2]
 c00b8ee:	4a11      	ldr	r2, [pc, #68]	@ (c00b934 <kad_eval_at+0x98>)
 c00b8f0:	2102      	movs	r1, #2
 c00b8f2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 c00b8f6:	4798      	blx	r3
 c00b8f8:	455e      	cmp	r6, fp
 c00b8fa:	f106 0301 	add.w	r3, r6, #1
 c00b8fe:	d1ed      	bne.n	c00b8dc <kad_eval_at+0x40>
 c00b900:	2100      	movs	r1, #0
 c00b902:	eb08 0884 	add.w	r8, r8, r4, lsl #2
 c00b906:	f855 3f04 	ldr.w	r3, [r5, #4]!
 c00b90a:	45a8      	cmp	r8, r5
 c00b90c:	6099      	str	r1, [r3, #8]
 c00b90e:	d1fa      	bne.n	c00b906 <kad_eval_at+0x6a>
 c00b910:	f859 302a 	ldr.w	r3, [r9, sl, lsl #2]
 c00b914:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 c00b916:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00b91a:	2800      	cmp	r0, #0
 c00b91c:	f100 3aff 	add.w	sl, r0, #4294967295
 c00b920:	dcc4      	bgt.n	c00b8ac <kad_eval_at+0x10>
 c00b922:	4649      	mov	r1, r9
 c00b924:	f7f8 fae4 	bl	c003ef0 <kad_propagate_marks>
 c00b928:	f859 302a 	ldr.w	r3, [r9, sl, lsl #2]
 c00b92c:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 c00b92e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00b932:	bf00      	nop
 c00b934:	30000004 	.word	0x30000004

0c00b938 <kad_grad>:
 c00b938:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 c00b93c:	1e15      	subs	r5, r2, #0
 c00b93e:	4688      	mov	r8, r1
 c00b940:	db01      	blt.n	c00b946 <kad_grad+0xe>
 c00b942:	4285      	cmp	r5, r0
 c00b944:	db63      	blt.n	c00ba0e <kad_grad+0xd6>
 c00b946:	1e45      	subs	r5, r0, #1
 c00b948:	f858 9025 	ldr.w	r9, [r8, r5, lsl #2]
 c00b94c:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 c00b950:	f899 3000 	ldrb.w	r3, [r9]
 c00b954:	eb08 0785 	add.w	r7, r8, r5, lsl #2
 c00b958:	2b00      	cmp	r3, #0
 c00b95a:	d162      	bne.n	c00ba22 <kad_grad+0xea>
 c00b95c:	2800      	cmp	r0, #0
 c00b95e:	dd0c      	ble.n	c00b97a <kad_grad+0x42>
 c00b960:	2300      	movs	r3, #0
 c00b962:	f1a8 0204 	sub.w	r2, r8, #4
 c00b966:	1aee      	subs	r6, r5, r3
 c00b968:	fab6 f686 	clz	r6, r6
 c00b96c:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00b970:	3301      	adds	r3, #1
 c00b972:	0976      	lsrs	r6, r6, #5
 c00b974:	4298      	cmp	r0, r3
 c00b976:	608e      	str	r6, [r1, #8]
 c00b978:	d1f5      	bne.n	c00b966 <kad_grad+0x2e>
 c00b97a:	4641      	mov	r1, r8
 c00b97c:	f7f8 fab8 	bl	c003ef0 <kad_propagate_marks>
 c00b980:	2d00      	cmp	r5, #0
 c00b982:	db57      	blt.n	c00ba34 <kad_grad+0xfc>
 c00b984:	f1a8 0504 	sub.w	r5, r8, #4
 c00b988:	462e      	mov	r6, r5
 c00b98a:	e001      	b.n	c00b990 <kad_grad+0x58>
 c00b98c:	42b7      	cmp	r7, r6
 c00b98e:	d01f      	beq.n	c00b9d0 <kad_grad+0x98>
 c00b990:	f856 3f04 	ldr.w	r3, [r6, #4]!
 c00b994:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 c00b996:	2800      	cmp	r0, #0
 c00b998:	d0f8      	beq.n	c00b98c <kad_grad+0x54>
 c00b99a:	689a      	ldr	r2, [r3, #8]
 c00b99c:	2a00      	cmp	r2, #0
 c00b99e:	ddf5      	ble.n	c00b98c <kad_grad+0x54>
 c00b9a0:	7819      	ldrb	r1, [r3, #0]
 c00b9a2:	2900      	cmp	r1, #0
 c00b9a4:	d044      	beq.n	c00ba30 <kad_grad+0xf8>
 c00b9a6:	2901      	cmp	r1, #1
 c00b9a8:	691a      	ldr	r2, [r3, #16]
 c00b9aa:	d00b      	beq.n	c00b9c4 <kad_grad+0x8c>
 c00b9ac:	695c      	ldr	r4, [r3, #20]
 c00b9ae:	2902      	cmp	r1, #2
 c00b9b0:	fb04 f202 	mul.w	r2, r4, r2
 c00b9b4:	d006      	beq.n	c00b9c4 <kad_grad+0x8c>
 c00b9b6:	699c      	ldr	r4, [r3, #24]
 c00b9b8:	2903      	cmp	r1, #3
 c00b9ba:	fb04 f202 	mul.w	r2, r4, r2
 c00b9be:	bf1c      	itt	ne
 c00b9c0:	69db      	ldrne	r3, [r3, #28]
 c00b9c2:	435a      	mulne	r2, r3
 c00b9c4:	0092      	lsls	r2, r2, #2
 c00b9c6:	2100      	movs	r1, #0
 c00b9c8:	f003 fe32 	bl	c00f630 <memset>
 c00b9cc:	42b7      	cmp	r7, r6
 c00b9ce:	d1df      	bne.n	c00b990 <kad_grad+0x58>
 c00b9d0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 c00b9d4:	683b      	ldr	r3, [r7, #0]
 c00b9d6:	f10a 0404 	add.w	r4, sl, #4
 c00b9da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 c00b9dc:	4e19      	ldr	r6, [pc, #100]	@ (c00ba44 <kad_grad+0x10c>)
 c00b9de:	4444      	add	r4, r8
 c00b9e0:	601a      	str	r2, [r3, #0]
 c00b9e2:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 c00b9e6:	6843      	ldr	r3, [r0, #4]
 c00b9e8:	b13b      	cbz	r3, c00b9fa <kad_grad+0xc2>
 c00b9ea:	6883      	ldr	r3, [r0, #8]
 c00b9ec:	2b00      	cmp	r3, #0
 c00b9ee:	dd04      	ble.n	c00b9fa <kad_grad+0xc2>
 c00b9f0:	8843      	ldrh	r3, [r0, #2]
 c00b9f2:	2103      	movs	r1, #3
 c00b9f4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 c00b9f8:	4798      	blx	r3
 c00b9fa:	4544      	cmp	r4, r8
 c00b9fc:	d1f1      	bne.n	c00b9e2 <kad_grad+0xaa>
 c00b9fe:	2200      	movs	r2, #0
 c00ba00:	f855 3f04 	ldr.w	r3, [r5, #4]!
 c00ba04:	42af      	cmp	r7, r5
 c00ba06:	609a      	str	r2, [r3, #8]
 c00ba08:	d1fa      	bne.n	c00ba00 <kad_grad+0xc8>
 c00ba0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c00ba0e:	f851 9025 	ldr.w	r9, [r1, r5, lsl #2]
 c00ba12:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 c00ba16:	f899 3000 	ldrb.w	r3, [r9]
 c00ba1a:	eb01 0785 	add.w	r7, r1, r5, lsl #2
 c00ba1e:	2b00      	cmp	r3, #0
 c00ba20:	d09e      	beq.n	c00b960 <kad_grad+0x28>
 c00ba22:	f240 2151 	movw	r1, #593	@ 0x251
 c00ba26:	4b08      	ldr	r3, [pc, #32]	@ (c00ba48 <kad_grad+0x110>)
 c00ba28:	4a08      	ldr	r2, [pc, #32]	@ (c00ba4c <kad_grad+0x114>)
 c00ba2a:	4809      	ldr	r0, [pc, #36]	@ (c00ba50 <kad_grad+0x118>)
 c00ba2c:	f003 faec 	bl	c00f008 <__assert_func>
 c00ba30:	2204      	movs	r2, #4
 c00ba32:	e7c8      	b.n	c00b9c6 <kad_grad+0x8e>
 c00ba34:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 c00ba38:	f8d9 302c 	ldr.w	r3, [r9, #44]	@ 0x2c
 c00ba3c:	601a      	str	r2, [r3, #0]
 c00ba3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c00ba42:	bf00      	nop
 c00ba44:	30000004 	.word	0x30000004
 c00ba48:	0c011bd8 	.word	0x0c011bd8
 c00ba4c:	0c011d04 	.word	0x0c011d04
 c00ba50:	0c011b04 	.word	0x0c011b04

0c00ba54 <kad_n_pivots>:
 c00ba54:	f1b0 0c00 	subs.w	ip, r0, #0
 c00ba58:	f04f 0000 	mov.w	r0, #0
 c00ba5c:	dd0e      	ble.n	c00ba7c <kad_n_pivots+0x28>
 c00ba5e:	3904      	subs	r1, #4
 c00ba60:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 c00ba64:	f851 3f04 	ldr.w	r3, [r1, #4]!
 c00ba68:	685a      	ldr	r2, [r3, #4]
 c00ba6a:	2a01      	cmp	r2, #1
 c00ba6c:	d103      	bne.n	c00ba76 <kad_n_pivots+0x22>
 c00ba6e:	785b      	ldrb	r3, [r3, #1]
 c00ba70:	075b      	lsls	r3, r3, #29
 c00ba72:	bf48      	it	mi
 c00ba74:	3001      	addmi	r0, #1
 c00ba76:	458c      	cmp	ip, r1
 c00ba78:	d1f4      	bne.n	c00ba64 <kad_n_pivots+0x10>
 c00ba7a:	4770      	bx	lr
 c00ba7c:	4770      	bx	lr
 c00ba7e:	bf00      	nop

0c00ba80 <kad_rng>:
 c00ba80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00ba84:	2120      	movs	r1, #32
 c00ba86:	b083      	sub	sp, #12
 c00ba88:	2001      	movs	r0, #1
 c00ba8a:	f003 fadb 	bl	c00f044 <calloc>
 c00ba8e:	4a51      	ldr	r2, [pc, #324]	@ (c00bbd4 <kad_rng+0x154>)
 c00ba90:	4951      	ldr	r1, [pc, #324]	@ (c00bbd8 <kad_rng+0x158>)
 c00ba92:	6813      	ldr	r3, [r2, #0]
 c00ba94:	2500      	movs	r5, #0
 c00ba96:	3320      	adds	r3, #32
 c00ba98:	4682      	mov	sl, r0
 c00ba9a:	6013      	str	r3, [r2, #0]
 c00ba9c:	460b      	mov	r3, r1
 c00ba9e:	680c      	ldr	r4, [r1, #0]
 c00baa0:	462e      	mov	r6, r5
 c00baa2:	e9d1 e101 	ldrd	lr, r1, [r1, #4]
 c00baa6:	46a8      	mov	r8, r5
 c00baa8:	462f      	mov	r7, r5
 c00baaa:	4628      	mov	r0, r5
 c00baac:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 c00bab0:	f8df 9130 	ldr.w	r9, [pc, #304]	@ c00bbe4 <kad_rng+0x164>
 c00bab4:	f8cd a004 	str.w	sl, [sp, #4]
 c00bab8:	e001      	b.n	c00babe <kad_rng+0x3e>
 c00baba:	461c      	mov	r4, r3
 c00babc:	4696      	mov	lr, r2
 c00babe:	4b47      	ldr	r3, [pc, #284]	@ (c00bbdc <kad_rng+0x15c>)
 c00bac0:	f1c0 0b20 	rsb	fp, r0, #32
 c00bac4:	f1a0 0a20 	sub.w	sl, r0, #32
 c00bac8:	40c3      	lsrs	r3, r0
 c00baca:	fa09 fb0b 	lsl.w	fp, r9, fp
 c00bace:	ea43 030b 	orr.w	r3, r3, fp
 c00bad2:	fa29 fa0a 	lsr.w	sl, r9, sl
 c00bad6:	ea43 030a 	orr.w	r3, r3, sl
 c00bada:	07db      	lsls	r3, r3, #31
 c00badc:	ea8e 020c 	eor.w	r2, lr, ip
 c00bae0:	ea84 0b01 	eor.w	fp, r4, r1
 c00bae4:	f100 0001 	add.w	r0, r0, #1
 c00bae8:	d506      	bpl.n	c00baf8 <kad_rng+0x78>
 c00baea:	ea84 0808 	eor.w	r8, r4, r8
 c00baee:	ea8e 0707 	eor.w	r7, lr, r7
 c00baf2:	404d      	eors	r5, r1
 c00baf4:	ea86 060c 	eor.w	r6, r6, ip
 c00baf8:	0a63      	lsrs	r3, r4, #9
 c00bafa:	ea4f 215e 	mov.w	r1, lr, lsr #9
 c00bafe:	ea41 51c4 	orr.w	r1, r1, r4, lsl #23
 c00bb02:	ea4f 3a82 	mov.w	sl, r2, lsl #14
 c00bb06:	ea43 53ce 	orr.w	r3, r3, lr, lsl #23
 c00bb0a:	404a      	eors	r2, r1
 c00bb0c:	ea83 030b 	eor.w	r3, r3, fp
 c00bb10:	ea4a 4a9b 	orr.w	sl, sl, fp, lsr #18
 c00bb14:	0f21      	lsrs	r1, r4, #28
 c00bb16:	ea4f 7c1e 	mov.w	ip, lr, lsr #28
 c00bb1a:	2840      	cmp	r0, #64	@ 0x40
 c00bb1c:	ea83 338b 	eor.w	r3, r3, fp, lsl #14
 c00bb20:	ea82 020a 	eor.w	r2, r2, sl
 c00bb24:	ea41 110e 	orr.w	r1, r1, lr, lsl #4
 c00bb28:	ea4c 1c04 	orr.w	ip, ip, r4, lsl #4
 c00bb2c:	d1c5      	bne.n	c00baba <kad_rng+0x3a>
 c00bb2e:	f04f 0e00 	mov.w	lr, #0
 c00bb32:	460c      	mov	r4, r1
 c00bb34:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ c00bbe8 <kad_rng+0x168>
 c00bb38:	e001      	b.n	c00bb3e <kad_rng+0xbe>
 c00bb3a:	4603      	mov	r3, r0
 c00bb3c:	460a      	mov	r2, r1
 c00bb3e:	4928      	ldr	r1, [pc, #160]	@ (c00bbe0 <kad_rng+0x160>)
 c00bb40:	f1ce 0b20 	rsb	fp, lr, #32
 c00bb44:	fa21 f00e 	lsr.w	r0, r1, lr
 c00bb48:	f1ae 0a20 	sub.w	sl, lr, #32
 c00bb4c:	fa09 fb0b 	lsl.w	fp, r9, fp
 c00bb50:	ea40 000b 	orr.w	r0, r0, fp
 c00bb54:	fa29 fa0a 	lsr.w	sl, r9, sl
 c00bb58:	ea40 000a 	orr.w	r0, r0, sl
 c00bb5c:	07c0      	lsls	r0, r0, #31
 c00bb5e:	ea82 010c 	eor.w	r1, r2, ip
 c00bb62:	ea83 0b04 	eor.w	fp, r3, r4
 c00bb66:	f10e 0e01 	add.w	lr, lr, #1
 c00bb6a:	d505      	bpl.n	c00bb78 <kad_rng+0xf8>
 c00bb6c:	ea88 0803 	eor.w	r8, r8, r3
 c00bb70:	4057      	eors	r7, r2
 c00bb72:	4065      	eors	r5, r4
 c00bb74:	ea86 060c 	eor.w	r6, r6, ip
 c00bb78:	0a58      	lsrs	r0, r3, #9
 c00bb7a:	0a54      	lsrs	r4, r2, #9
 c00bb7c:	ea44 54c3 	orr.w	r4, r4, r3, lsl #23
 c00bb80:	ea4f 3a81 	mov.w	sl, r1, lsl #14
 c00bb84:	ea40 50c2 	orr.w	r0, r0, r2, lsl #23
 c00bb88:	4061      	eors	r1, r4
 c00bb8a:	ea80 000b 	eor.w	r0, r0, fp
 c00bb8e:	ea4a 4a9b 	orr.w	sl, sl, fp, lsr #18
 c00bb92:	0f1c      	lsrs	r4, r3, #28
 c00bb94:	ea4f 7c12 	mov.w	ip, r2, lsr #28
 c00bb98:	f1be 0f40 	cmp.w	lr, #64	@ 0x40
 c00bb9c:	ea80 308b 	eor.w	r0, r0, fp, lsl #14
 c00bba0:	ea81 010a 	eor.w	r1, r1, sl
 c00bba4:	ea44 1402 	orr.w	r4, r4, r2, lsl #4
 c00bba8:	ea4c 1c03 	orr.w	ip, ip, r3, lsl #4
 c00bbac:	d1c5      	bne.n	c00bb3a <kad_rng+0xba>
 c00bbae:	f8dd a004 	ldr.w	sl, [sp, #4]
 c00bbb2:	4b09      	ldr	r3, [pc, #36]	@ (c00bbd8 <kad_rng+0x158>)
 c00bbb4:	4650      	mov	r0, sl
 c00bbb6:	e9c3 7501 	strd	r7, r5, [r3, #4]
 c00bbba:	e9ca 7501 	strd	r7, r5, [sl, #4]
 c00bbbe:	f8c3 8000 	str.w	r8, [r3]
 c00bbc2:	f8ca 8000 	str.w	r8, [sl]
 c00bbc6:	60de      	str	r6, [r3, #12]
 c00bbc8:	f8ca 600c 	str.w	r6, [sl, #12]
 c00bbcc:	b003      	add	sp, #12
 c00bbce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00bbd2:	bf00      	nop
 c00bbd4:	30000254 	.word	0x30000254
 c00bbd8:	30000108 	.word	0x30000108
 c00bbdc:	eba5facb 	.word	0xeba5facb
 c00bbe0:	86aa9922 	.word	0x86aa9922
 c00bbe4:	beac0467 	.word	0xbeac0467
 c00bbe8:	d86b048b 	.word	0xd86b048b
 c00bbec:	00000000 	.word	0x00000000

0c00bbf0 <kad_unroll>:
 c00bbf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00bbf4:	ed2d 8b02 	vpush	{d8}
 c00bbf8:	4689      	mov	r9, r1
 c00bbfa:	4604      	mov	r4, r0
 c00bbfc:	b09b      	sub	sp, #108	@ 0x6c
 c00bbfe:	2104      	movs	r1, #4
 c00bc00:	4692      	mov	sl, r2
 c00bc02:	461e      	mov	r6, r3
 c00bc04:	9010      	str	r0, [sp, #64]	@ 0x40
 c00bc06:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 c00bc0a:	f003 fa1b 	bl	c00f044 <calloc>
 c00bc0e:	2c00      	cmp	r4, #0
 c00bc10:	f340 8379 	ble.w	c00c306 <kad_unroll+0x716>
 c00bc14:	4622      	mov	r2, r4
 c00bc16:	f1a9 0404 	sub.w	r4, r9, #4
 c00bc1a:	4680      	mov	r8, r0
 c00bc1c:	4623      	mov	r3, r4
 c00bc1e:	2000      	movs	r0, #0
 c00bc20:	f8cd 9050 	str.w	r9, [sp, #80]	@ 0x50
 c00bc24:	eb04 0782 	add.w	r7, r4, r2, lsl #2
 c00bc28:	f853 2f04 	ldr.w	r2, [r3, #4]!
 c00bc2c:	6851      	ldr	r1, [r2, #4]
 c00bc2e:	2901      	cmp	r1, #1
 c00bc30:	d103      	bne.n	c00bc3a <kad_unroll+0x4a>
 c00bc32:	7852      	ldrb	r2, [r2, #1]
 c00bc34:	0751      	lsls	r1, r2, #29
 c00bc36:	bf48      	it	mi
 c00bc38:	3001      	addmi	r0, #1
 c00bc3a:	429f      	cmp	r7, r3
 c00bc3c:	d1f4      	bne.n	c00bc28 <kad_unroll+0x38>
 c00bc3e:	4622      	mov	r2, r4
 c00bc40:	2300      	movs	r3, #0
 c00bc42:	900e      	str	r0, [sp, #56]	@ 0x38
 c00bc44:	9810      	ldr	r0, [sp, #64]	@ 0x40
 c00bc46:	f852 1f04 	ldr.w	r1, [r2, #4]!
 c00bc4a:	461d      	mov	r5, r3
 c00bc4c:	608b      	str	r3, [r1, #8]
 c00bc4e:	3301      	adds	r3, #1
 c00bc50:	4298      	cmp	r0, r3
 c00bc52:	d1f8      	bne.n	c00bc46 <kad_unroll+0x56>
 c00bc54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c00bc56:	2b00      	cmp	r3, #0
 c00bc58:	f040 80d8 	bne.w	c00be0c <kad_unroll+0x21c>
 c00bc5c:	e9cd 3304 	strd	r3, r3, [sp, #16]
 c00bc60:	2600      	movs	r6, #0
 c00bc62:	9500      	str	r5, [sp, #0]
 c00bc64:	46b3      	mov	fp, r6
 c00bc66:	f8df 93ac 	ldr.w	r9, [pc, #940]	@ c00c014 <kad_unroll+0x424>
 c00bc6a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 c00bc6c:	9702      	str	r7, [sp, #8]
 c00bc6e:	9403      	str	r4, [sp, #12]
 c00bc70:	f8cd a018 	str.w	sl, [sp, #24]
 c00bc74:	e006      	b.n	c00bc84 <kad_unroll+0x94>
 c00bc76:	9a00      	ldr	r2, [sp, #0]
 c00bc78:	1c73      	adds	r3, r6, #1
 c00bc7a:	42b2      	cmp	r2, r6
 c00bc7c:	f105 0504 	add.w	r5, r5, #4
 c00bc80:	d057      	beq.n	c00bd32 <kad_unroll+0x142>
 c00bc82:	461e      	mov	r6, r3
 c00bc84:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 c00bc88:	2b00      	cmp	r3, #0
 c00bc8a:	d1f4      	bne.n	c00bc76 <kad_unroll+0x86>
 c00bc8c:	2040      	movs	r0, #64	@ 0x40
 c00bc8e:	682f      	ldr	r7, [r5, #0]
 c00bc90:	f003 f9f4 	bl	c00f07c <malloc>
 c00bc94:	463c      	mov	r4, r7
 c00bc96:	4682      	mov	sl, r0
 c00bc98:	4684      	mov	ip, r0
 c00bc9a:	f8d9 3000 	ldr.w	r3, [r9]
 c00bc9e:	f107 0e40 	add.w	lr, r7, #64	@ 0x40
 c00bca2:	3340      	adds	r3, #64	@ 0x40
 c00bca4:	f8c9 3000 	str.w	r3, [r9]
 c00bca8:	9701      	str	r7, [sp, #4]
 c00bcaa:	4667      	mov	r7, ip
 c00bcac:	6820      	ldr	r0, [r4, #0]
 c00bcae:	6861      	ldr	r1, [r4, #4]
 c00bcb0:	68a2      	ldr	r2, [r4, #8]
 c00bcb2:	68e3      	ldr	r3, [r4, #12]
 c00bcb4:	3410      	adds	r4, #16
 c00bcb6:	4574      	cmp	r4, lr
 c00bcb8:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 c00bcba:	f10c 0c10 	add.w	ip, ip, #16
 c00bcbe:	d1f4      	bne.n	c00bcaa <kad_unroll+0xba>
 c00bcc0:	9f01      	ldr	r7, [sp, #4]
 c00bcc2:	f8ca b03c 	str.w	fp, [sl, #60]	@ 0x3c
 c00bcc6:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 c00bcc8:	f8ca b008 	str.w	fp, [sl, #8]
 c00bccc:	f8ca b034 	str.w	fp, [sl, #52]	@ 0x34
 c00bcd0:	b1b1      	cbz	r1, c00bd00 <kad_unroll+0x110>
 c00bcd2:	68fc      	ldr	r4, [r7, #12]
 c00bcd4:	2c00      	cmp	r4, #0
 c00bcd6:	dd13      	ble.n	c00bd00 <kad_unroll+0x110>
 c00bcd8:	887b      	ldrh	r3, [r7, #2]
 c00bcda:	2b0f      	cmp	r3, #15
 c00bcdc:	d058      	beq.n	c00bd90 <kad_unroll+0x1a0>
 c00bcde:	2b18      	cmp	r3, #24
 c00bce0:	d056      	beq.n	c00bd90 <kad_unroll+0x1a0>
 c00bce2:	4620      	mov	r0, r4
 c00bce4:	9101      	str	r1, [sp, #4]
 c00bce6:	f003 f9c9 	bl	c00f07c <malloc>
 c00bcea:	f8d9 3000 	ldr.w	r3, [r9]
 c00bcee:	4622      	mov	r2, r4
 c00bcf0:	4423      	add	r3, r4
 c00bcf2:	9901      	ldr	r1, [sp, #4]
 c00bcf4:	f8ca 0030 	str.w	r0, [sl, #48]	@ 0x30
 c00bcf8:	f8c9 3000 	str.w	r3, [r9]
 c00bcfc:	f003 fd67 	bl	c00f7ce <memcpy>
 c00bd00:	f8da 4004 	ldr.w	r4, [sl, #4]
 c00bd04:	2c00      	cmp	r4, #0
 c00bd06:	d156      	bne.n	c00bdb6 <kad_unroll+0x1c6>
 c00bd08:	687b      	ldr	r3, [r7, #4]
 c00bd0a:	f848 a026 	str.w	sl, [r8, r6, lsl #2]
 c00bd0e:	2b00      	cmp	r3, #0
 c00bd10:	dc66      	bgt.n	c00bde0 <kad_unroll+0x1f0>
 c00bd12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c00bd14:	9a05      	ldr	r2, [sp, #20]
 c00bd16:	4293      	cmp	r3, r2
 c00bd18:	d044      	beq.n	c00bda4 <kad_unroll+0x1b4>
 c00bd1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c00bd1c:	9a04      	ldr	r2, [sp, #16]
 c00bd1e:	3504      	adds	r5, #4
 c00bd20:	f842 a023 	str.w	sl, [r2, r3, lsl #2]
 c00bd24:	9a00      	ldr	r2, [sp, #0]
 c00bd26:	3301      	adds	r3, #1
 c00bd28:	42b2      	cmp	r2, r6
 c00bd2a:	930e      	str	r3, [sp, #56]	@ 0x38
 c00bd2c:	f106 0301 	add.w	r3, r6, #1
 c00bd30:	d1a7      	bne.n	c00bc82 <kad_unroll+0x92>
 c00bd32:	e9dd 7402 	ldrd	r7, r4, [sp, #8]
 c00bd36:	4640      	mov	r0, r8
 c00bd38:	f8dd a018 	ldr.w	sl, [sp, #24]
 c00bd3c:	f003 f9a6 	bl	c00f08c <free>
 c00bd40:	2200      	movs	r2, #0
 c00bd42:	f854 3f04 	ldr.w	r3, [r4, #4]!
 c00bd46:	42a7      	cmp	r7, r4
 c00bd48:	609a      	str	r2, [r3, #8]
 c00bd4a:	d1fa      	bne.n	c00bd42 <kad_unroll+0x152>
 c00bd4c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c00bd4e:	2b00      	cmp	r3, #0
 c00bd50:	dd11      	ble.n	c00bd76 <kad_unroll+0x186>
 c00bd52:	2400      	movs	r4, #0
 c00bd54:	461f      	mov	r7, r3
 c00bd56:	9b04      	ldr	r3, [sp, #16]
 c00bd58:	4ead      	ldr	r6, [pc, #692]	@ (c00c010 <kad_unroll+0x420>)
 c00bd5a:	1f1d      	subs	r5, r3, #4
 c00bd5c:	f855 0f04 	ldr.w	r0, [r5, #4]!
 c00bd60:	6843      	ldr	r3, [r0, #4]
 c00bd62:	2b00      	cmp	r3, #0
 c00bd64:	dd04      	ble.n	c00bd70 <kad_unroll+0x180>
 c00bd66:	8843      	ldrh	r3, [r0, #2]
 c00bd68:	2104      	movs	r1, #4
 c00bd6a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 c00bd6e:	4798      	blx	r3
 c00bd70:	3401      	adds	r4, #1
 c00bd72:	42a7      	cmp	r7, r4
 c00bd74:	d1f2      	bne.n	c00bd5c <kad_unroll+0x16c>
 c00bd76:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 c00bd78:	9904      	ldr	r1, [sp, #16]
 c00bd7a:	4620      	mov	r0, r4
 c00bd7c:	f7fb ff5e 	bl	c007c3c <kad_allocate_internal>
 c00bd80:	9804      	ldr	r0, [sp, #16]
 c00bd82:	f8ca 4000 	str.w	r4, [sl]
 c00bd86:	b01b      	add	sp, #108	@ 0x6c
 c00bd88:	ecbd 8b02 	vpop	{d8}
 c00bd8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00bd90:	787b      	ldrb	r3, [r7, #1]
 c00bd92:	06da      	lsls	r2, r3, #27
 c00bd94:	d4a5      	bmi.n	c00bce2 <kad_unroll+0xf2>
 c00bd96:	2c20      	cmp	r4, #32
 c00bd98:	d1a3      	bne.n	c00bce2 <kad_unroll+0xf2>
 c00bd9a:	f7ff fe71 	bl	c00ba80 <kad_rng>
 c00bd9e:	f8ca 0030 	str.w	r0, [sl, #48]	@ 0x30
 c00bda2:	e7ad      	b.n	c00bd00 <kad_unroll+0x110>
 c00bda4:	bb73      	cbnz	r3, c00be04 <kad_unroll+0x214>
 c00bda6:	2310      	movs	r3, #16
 c00bda8:	2140      	movs	r1, #64	@ 0x40
 c00bdaa:	9305      	str	r3, [sp, #20]
 c00bdac:	9804      	ldr	r0, [sp, #16]
 c00bdae:	f003 fa23 	bl	c00f1f8 <realloc>
 c00bdb2:	9004      	str	r0, [sp, #16]
 c00bdb4:	e7b1      	b.n	c00bd1a <kad_unroll+0x12a>
 c00bdb6:	2300      	movs	r3, #0
 c00bdb8:	2200      	movs	r2, #0
 c00bdba:	2104      	movs	r1, #4
 c00bdbc:	e9ca 230a 	strd	r2, r3, [sl, #40]	@ 0x28
 c00bdc0:	4620      	mov	r0, r4
 c00bdc2:	f003 f93f 	bl	c00f044 <calloc>
 c00bdc6:	f8d9 3000 	ldr.w	r3, [r9]
 c00bdca:	f8ca 0038 	str.w	r0, [sl, #56]	@ 0x38
 c00bdce:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 c00bdd2:	f8c9 3000 	str.w	r3, [r9]
 c00bdd6:	687b      	ldr	r3, [r7, #4]
 c00bdd8:	f848 a026 	str.w	sl, [r8, r6, lsl #2]
 c00bddc:	2b00      	cmp	r3, #0
 c00bdde:	dd98      	ble.n	c00bd12 <kad_unroll+0x122>
 c00bde0:	2300      	movs	r3, #0
 c00bde2:	f8da 2038 	ldr.w	r2, [sl, #56]	@ 0x38
 c00bde6:	3a04      	subs	r2, #4
 c00bde8:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 c00bdea:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 c00bdee:	3301      	adds	r3, #1
 c00bdf0:	6889      	ldr	r1, [r1, #8]
 c00bdf2:	f858 1021 	ldr.w	r1, [r8, r1, lsl #2]
 c00bdf6:	f842 1f04 	str.w	r1, [r2, #4]!
 c00bdfa:	682f      	ldr	r7, [r5, #0]
 c00bdfc:	6879      	ldr	r1, [r7, #4]
 c00bdfe:	4299      	cmp	r1, r3
 c00be00:	dcf2      	bgt.n	c00bde8 <kad_unroll+0x1f8>
 c00be02:	e786      	b.n	c00bd12 <kad_unroll+0x122>
 c00be04:	005a      	lsls	r2, r3, #1
 c00be06:	9205      	str	r2, [sp, #20]
 c00be08:	00d9      	lsls	r1, r3, #3
 c00be0a:	e7cf      	b.n	c00bdac <kad_unroll+0x1bc>
 c00be0c:	4618      	mov	r0, r3
 c00be0e:	2104      	movs	r1, #4
 c00be10:	f003 f918 	bl	c00f044 <calloc>
 c00be14:	f04f 0c00 	mov.w	ip, #0
 c00be18:	4681      	mov	r9, r0
 c00be1a:	4623      	mov	r3, r4
 c00be1c:	4660      	mov	r0, ip
 c00be1e:	f853 2f04 	ldr.w	r2, [r3, #4]!
 c00be22:	6851      	ldr	r1, [r2, #4]
 c00be24:	2901      	cmp	r1, #1
 c00be26:	d106      	bne.n	c00be36 <kad_unroll+0x246>
 c00be28:	7852      	ldrb	r2, [r2, #1]
 c00be2a:	0752      	lsls	r2, r2, #29
 c00be2c:	bf44      	itt	mi
 c00be2e:	f849 002c 	strmi.w	r0, [r9, ip, lsl #2]
 c00be32:	f10c 0c01 	addmi.w	ip, ip, #1
 c00be36:	429f      	cmp	r7, r3
 c00be38:	f100 0001 	add.w	r0, r0, #1
 c00be3c:	d1ef      	bne.n	c00be1e <kad_unroll+0x22e>
 c00be3e:	1f33      	subs	r3, r6, #4
 c00be40:	9311      	str	r3, [sp, #68]	@ 0x44
 c00be42:	2300      	movs	r3, #0
 c00be44:	ed9f 8b70 	vldr	d8, [pc, #448]	@ c00c008 <kad_unroll+0x418>
 c00be48:	469b      	mov	fp, r3
 c00be4a:	e9cd 7915 	strd	r7, r9, [sp, #84]	@ 0x54
 c00be4e:	e9cd 5417 	strd	r5, r4, [sp, #92]	@ 0x5c
 c00be52:	f1a9 0204 	sub.w	r2, r9, #4
 c00be56:	9304      	str	r3, [sp, #16]
 c00be58:	9212      	str	r2, [sp, #72]	@ 0x48
 c00be5a:	9305      	str	r3, [sp, #20]
 c00be5c:	9300      	str	r3, [sp, #0]
 c00be5e:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 c00be62:	f8cd a064 	str.w	sl, [sp, #100]	@ 0x64
 c00be66:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 c00be68:	990d      	ldr	r1, [sp, #52]	@ 0x34
 c00be6a:	f853 af04 	ldr.w	sl, [r3, #4]!
 c00be6e:	9312      	str	r3, [sp, #72]	@ 0x48
 c00be70:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 c00be72:	f851 802a 	ldr.w	r8, [r1, sl, lsl #2]
 c00be76:	f853 2f04 	ldr.w	r2, [r3, #4]!
 c00be7a:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 c00be7e:	920c      	str	r2, [sp, #48]	@ 0x30
 c00be80:	f8d8 2004 	ldr.w	r2, [r8, #4]
 c00be84:	9311      	str	r3, [sp, #68]	@ 0x44
 c00be86:	2a01      	cmp	r2, #1
 c00be88:	ea4f 038a 	mov.w	r3, sl, lsl #2
 c00be8c:	9101      	str	r1, [sp, #4]
 c00be8e:	f040 8241 	bne.w	c00c314 <kad_unroll+0x724>
 c00be92:	f898 2001 	ldrb.w	r2, [r8, #1]
 c00be96:	0750      	lsls	r0, r2, #29
 c00be98:	f140 823c 	bpl.w	c00c314 <kad_unroll+0x724>
 c00be9c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 c00be9e:	18d3      	adds	r3, r2, r3
 c00bea0:	9308      	str	r3, [sp, #32]
 c00bea2:	f852 302a 	ldr.w	r3, [r2, sl, lsl #2]
 c00bea6:	2b00      	cmp	r3, #0
 c00bea8:	f040 8234 	bne.w	c00c314 <kad_unroll+0x724>
 c00beac:	2040      	movs	r0, #64	@ 0x40
 c00beae:	f003 f8e5 	bl	c00f07c <malloc>
 c00beb2:	4644      	mov	r4, r8
 c00beb4:	4681      	mov	r9, r0
 c00beb6:	4606      	mov	r6, r0
 c00beb8:	4a56      	ldr	r2, [pc, #344]	@ (c00c014 <kad_unroll+0x424>)
 c00beba:	f108 0740 	add.w	r7, r8, #64	@ 0x40
 c00bebe:	6813      	ldr	r3, [r2, #0]
 c00bec0:	3340      	adds	r3, #64	@ 0x40
 c00bec2:	6013      	str	r3, [r2, #0]
 c00bec4:	4635      	mov	r5, r6
 c00bec6:	6820      	ldr	r0, [r4, #0]
 c00bec8:	6861      	ldr	r1, [r4, #4]
 c00beca:	68a2      	ldr	r2, [r4, #8]
 c00becc:	68e3      	ldr	r3, [r4, #12]
 c00bece:	3410      	adds	r4, #16
 c00bed0:	42bc      	cmp	r4, r7
 c00bed2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 c00bed4:	f106 0610 	add.w	r6, r6, #16
 c00bed8:	d1f4      	bne.n	c00bec4 <kad_unroll+0x2d4>
 c00beda:	2300      	movs	r3, #0
 c00bedc:	f8d8 5030 	ldr.w	r5, [r8, #48]	@ 0x30
 c00bee0:	f8c9 303c 	str.w	r3, [r9, #60]	@ 0x3c
 c00bee4:	f8c9 3008 	str.w	r3, [r9, #8]
 c00bee8:	f8c9 3034 	str.w	r3, [r9, #52]	@ 0x34
 c00beec:	b1c5      	cbz	r5, c00bf20 <kad_unroll+0x330>
 c00beee:	f8d8 400c 	ldr.w	r4, [r8, #12]
 c00bef2:	429c      	cmp	r4, r3
 c00bef4:	dd14      	ble.n	c00bf20 <kad_unroll+0x330>
 c00bef6:	f8b8 3002 	ldrh.w	r3, [r8, #2]
 c00befa:	2b0f      	cmp	r3, #15
 c00befc:	f000 81f2 	beq.w	c00c2e4 <kad_unroll+0x6f4>
 c00bf00:	2b18      	cmp	r3, #24
 c00bf02:	f000 81ef 	beq.w	c00c2e4 <kad_unroll+0x6f4>
 c00bf06:	4620      	mov	r0, r4
 c00bf08:	f003 f8b8 	bl	c00f07c <malloc>
 c00bf0c:	4a41      	ldr	r2, [pc, #260]	@ (c00c014 <kad_unroll+0x424>)
 c00bf0e:	4629      	mov	r1, r5
 c00bf10:	6813      	ldr	r3, [r2, #0]
 c00bf12:	f8c9 0030 	str.w	r0, [r9, #48]	@ 0x30
 c00bf16:	4423      	add	r3, r4
 c00bf18:	6013      	str	r3, [r2, #0]
 c00bf1a:	4622      	mov	r2, r4
 c00bf1c:	f003 fc57 	bl	c00f7ce <memcpy>
 c00bf20:	f8d9 4004 	ldr.w	r4, [r9, #4]
 c00bf24:	2c00      	cmp	r4, #0
 c00bf26:	f040 81cf 	bne.w	c00c2c8 <kad_unroll+0x6d8>
 c00bf2a:	f8d9 0038 	ldr.w	r0, [r9, #56]	@ 0x38
 c00bf2e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 c00bf30:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 c00bf32:	0099      	lsls	r1, r3, #2
 c00bf34:	f8c9 3004 	str.w	r3, [r9, #4]
 c00bf38:	f842 902a 	str.w	r9, [r2, sl, lsl #2]
 c00bf3c:	f003 f95c 	bl	c00f1f8 <realloc>
 c00bf40:	2101      	movs	r1, #1
 c00bf42:	f8c9 0038 	str.w	r0, [r9, #56]	@ 0x38
 c00bf46:	9810      	ldr	r0, [sp, #64]	@ 0x40
 c00bf48:	f003 f87c 	bl	c00f044 <calloc>
 c00bf4c:	2510      	movs	r5, #16
 c00bf4e:	f1ba 0f00 	cmp.w	sl, #0
 c00bf52:	4604      	mov	r4, r0
 c00bf54:	f800 500a 	strb.w	r5, [r0, sl]
 c00bf58:	db7d      	blt.n	c00c056 <kad_unroll+0x466>
 c00bf5a:	f10a 0701 	add.w	r7, sl, #1
 c00bf5e:	4427      	add	r7, r4
 c00bf60:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
 c00bf64:	4650      	mov	r0, sl
 c00bf66:	06da      	lsls	r2, r3, #27
 c00bf68:	9e01      	ldr	r6, [sp, #4]
 c00bf6a:	d409      	bmi.n	c00bf80 <kad_unroll+0x390>
 c00bf6c:	1e41      	subs	r1, r0, #1
 c00bf6e:	458a      	cmp	sl, r1
 c00bf70:	f1a6 0604 	sub.w	r6, r6, #4
 c00bf74:	dc17      	bgt.n	c00bfa6 <kad_unroll+0x3b6>
 c00bf76:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
 c00bf7a:	4608      	mov	r0, r1
 c00bf7c:	06da      	lsls	r2, r3, #27
 c00bf7e:	d5f5      	bpl.n	c00bf6c <kad_unroll+0x37c>
 c00bf80:	6833      	ldr	r3, [r6, #0]
 c00bf82:	6859      	ldr	r1, [r3, #4]
 c00bf84:	2900      	cmp	r1, #0
 c00bf86:	ddf1      	ble.n	c00bf6c <kad_unroll+0x37c>
 c00bf88:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 c00bf8a:	3b04      	subs	r3, #4
 c00bf8c:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 c00bf90:	f853 2f04 	ldr.w	r2, [r3, #4]!
 c00bf94:	6892      	ldr	r2, [r2, #8]
 c00bf96:	4299      	cmp	r1, r3
 c00bf98:	54a5      	strb	r5, [r4, r2]
 c00bf9a:	d1f9      	bne.n	c00bf90 <kad_unroll+0x3a0>
 c00bf9c:	1e41      	subs	r1, r0, #1
 c00bf9e:	458a      	cmp	sl, r1
 c00bfa0:	f1a6 0604 	sub.w	r6, r6, #4
 c00bfa4:	dde7      	ble.n	c00bf76 <kad_unroll+0x386>
 c00bfa6:	1c4d      	adds	r5, r1, #1
 c00bfa8:	d023      	beq.n	c00bff2 <kad_unroll+0x402>
 c00bfaa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 c00bfac:	2610      	movs	r6, #16
 c00bfae:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 c00bfb2:	4421      	add	r1, r4
 c00bfb4:	e004      	b.n	c00bfc0 <kad_unroll+0x3d0>
 c00bfb6:	428c      	cmp	r4, r1
 c00bfb8:	f101 33ff 	add.w	r3, r1, #4294967295
 c00bfbc:	d019      	beq.n	c00bff2 <kad_unroll+0x402>
 c00bfbe:	4619      	mov	r1, r3
 c00bfc0:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 c00bfc4:	6855      	ldr	r5, [r2, #4]
 c00bfc6:	2d01      	cmp	r5, #1
 c00bfc8:	f000 816c 	beq.w	c00c2a4 <kad_unroll+0x6b4>
 c00bfcc:	780b      	ldrb	r3, [r1, #0]
 c00bfce:	06df      	lsls	r7, r3, #27
 c00bfd0:	d5f1      	bpl.n	c00bfb6 <kad_unroll+0x3c6>
 c00bfd2:	2d00      	cmp	r5, #0
 c00bfd4:	ddef      	ble.n	c00bfb6 <kad_unroll+0x3c6>
 c00bfd6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 c00bfd8:	3b04      	subs	r3, #4
 c00bfda:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 c00bfde:	f853 2f04 	ldr.w	r2, [r3, #4]!
 c00bfe2:	6892      	ldr	r2, [r2, #8]
 c00bfe4:	429d      	cmp	r5, r3
 c00bfe6:	54a6      	strb	r6, [r4, r2]
 c00bfe8:	d1f9      	bne.n	c00bfde <kad_unroll+0x3ee>
 c00bfea:	428c      	cmp	r4, r1
 c00bfec:	f101 33ff 	add.w	r3, r1, #4294967295
 c00bff0:	d1e5      	bne.n	c00bfbe <kad_unroll+0x3ce>
 c00bff2:	f1ba 0f00 	cmp.w	sl, #0
 c00bff6:	d02e      	beq.n	c00c056 <kad_unroll+0x466>
 c00bff8:	f10a 36ff 	add.w	r6, sl, #4294967295
 c00bffc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 c00bffe:	4426      	add	r6, r4
 c00c000:	1e63      	subs	r3, r4, #1
 c00c002:	e01a      	b.n	c00c03a <kad_unroll+0x44a>
 c00c004:	f3af 8000 	nop.w
	...
 c00c010:	30000004 	.word	0x30000004
 c00c014:	30000254 	.word	0x30000254
 c00c018:	7845      	ldrb	r5, [r0, #1]
 c00c01a:	07af      	lsls	r7, r5, #30
 c00c01c:	d002      	beq.n	c00c024 <kad_unroll+0x434>
 c00c01e:	f041 0101 	orr.w	r1, r1, #1
 c00c022:	7019      	strb	r1, [r3, #0]
 c00c024:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
 c00c026:	b121      	cbz	r1, c00c032 <kad_unroll+0x442>
 c00c028:	6888      	ldr	r0, [r1, #8]
 c00c02a:	5c21      	ldrb	r1, [r4, r0]
 c00c02c:	f041 0102 	orr.w	r1, r1, #2
 c00c030:	5421      	strb	r1, [r4, r0]
 c00c032:	42b3      	cmp	r3, r6
 c00c034:	f102 0204 	add.w	r2, r2, #4
 c00c038:	d00d      	beq.n	c00c056 <kad_unroll+0x466>
 c00c03a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 c00c03e:	06c8      	lsls	r0, r1, #27
 c00c040:	d5f7      	bpl.n	c00c032 <kad_unroll+0x442>
 c00c042:	6810      	ldr	r0, [r2, #0]
 c00c044:	6845      	ldr	r5, [r0, #4]
 c00c046:	2d00      	cmp	r5, #0
 c00c048:	d0e6      	beq.n	c00c018 <kad_unroll+0x428>
 c00c04a:	2d01      	cmp	r5, #1
 c00c04c:	d1ea      	bne.n	c00c024 <kad_unroll+0x434>
 c00c04e:	7845      	ldrb	r5, [r0, #1]
 c00c050:	076d      	lsls	r5, r5, #29
 c00c052:	d5e7      	bpl.n	c00c024 <kad_unroll+0x434>
 c00c054:	e7e3      	b.n	c00c01e <kad_unroll+0x42e>
 c00c056:	2104      	movs	r1, #4
 c00c058:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 c00c05a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 c00c05c:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
 c00c060:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 c00c062:	681b      	ldr	r3, [r3, #0]
 c00c064:	689a      	ldr	r2, [r3, #8]
 c00c066:	5ca3      	ldrb	r3, [r4, r2]
 c00c068:	430b      	orrs	r3, r1
 c00c06a:	54a3      	strb	r3, [r4, r2]
 c00c06c:	f002 ffea 	bl	c00f044 <calloc>
 c00c070:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 c00c072:	900b      	str	r0, [sp, #44]	@ 0x2c
 c00c074:	2b00      	cmp	r3, #0
 c00c076:	f340 80ae 	ble.w	c00c1d6 <kad_unroll+0x5e6>
 c00c07a:	2200      	movs	r2, #0
 c00c07c:	3b01      	subs	r3, #1
 c00c07e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 c00c080:	9307      	str	r3, [sp, #28]
 c00c082:	f8cd b04c 	str.w	fp, [sp, #76]	@ 0x4c
 c00c086:	f1ba 0f00 	cmp.w	sl, #0
 c00c08a:	f340 809a 	ble.w	c00c1c2 <kad_unroll+0x5d2>
 c00c08e:	f10a 33ff 	add.w	r3, sl, #4294967295
 c00c092:	18e3      	adds	r3, r4, r3
 c00c094:	f104 3bff 	add.w	fp, r4, #4294967295
 c00c098:	9301      	str	r3, [sp, #4]
 c00c09a:	0093      	lsls	r3, r2, #2
 c00c09c:	465e      	mov	r6, fp
 c00c09e:	f04f 0900 	mov.w	r9, #0
 c00c0a2:	46ab      	mov	fp, r5
 c00c0a4:	e9cd a409 	strd	sl, r4, [sp, #36]	@ 0x24
 c00c0a8:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 c00c0ac:	9306      	str	r3, [sp, #24]
 c00c0ae:	9202      	str	r2, [sp, #8]
 c00c0b0:	e009      	b.n	c00c0c6 <kad_unroll+0x4d6>
 c00c0b2:	f85b 3029 	ldr.w	r3, [fp, r9, lsl #2]
 c00c0b6:	b173      	cbz	r3, c00c0d6 <kad_unroll+0x4e6>
 c00c0b8:	9b01      	ldr	r3, [sp, #4]
 c00c0ba:	f109 0901 	add.w	r9, r9, #1
 c00c0be:	429e      	cmp	r6, r3
 c00c0c0:	f108 0804 	add.w	r8, r8, #4
 c00c0c4:	d078      	beq.n	c00c1b8 <kad_unroll+0x5c8>
 c00c0c6:	f816 af01 	ldrb.w	sl, [r6, #1]!
 c00c0ca:	f01a 0f10 	tst.w	sl, #16
 c00c0ce:	d0f3      	beq.n	c00c0b8 <kad_unroll+0x4c8>
 c00c0d0:	f01a 0f03 	tst.w	sl, #3
 c00c0d4:	d1ed      	bne.n	c00c0b2 <kad_unroll+0x4c2>
 c00c0d6:	2040      	movs	r0, #64	@ 0x40
 c00c0d8:	f8d8 7000 	ldr.w	r7, [r8]
 c00c0dc:	f002 ffce 	bl	c00f07c <malloc>
 c00c0e0:	463c      	mov	r4, r7
 c00c0e2:	4605      	mov	r5, r0
 c00c0e4:	4684      	mov	ip, r0
 c00c0e6:	4a8f      	ldr	r2, [pc, #572]	@ (c00c324 <kad_unroll+0x734>)
 c00c0e8:	f107 0e40 	add.w	lr, r7, #64	@ 0x40
 c00c0ec:	6813      	ldr	r3, [r2, #0]
 c00c0ee:	f8cd b00c 	str.w	fp, [sp, #12]
 c00c0f2:	3340      	adds	r3, #64	@ 0x40
 c00c0f4:	6013      	str	r3, [r2, #0]
 c00c0f6:	46e3      	mov	fp, ip
 c00c0f8:	6820      	ldr	r0, [r4, #0]
 c00c0fa:	6861      	ldr	r1, [r4, #4]
 c00c0fc:	68a2      	ldr	r2, [r4, #8]
 c00c0fe:	68e3      	ldr	r3, [r4, #12]
 c00c100:	3410      	adds	r4, #16
 c00c102:	4574      	cmp	r4, lr
 c00c104:	e8ab 000f 	stmia.w	fp!, {r0, r1, r2, r3}
 c00c108:	f10c 0c10 	add.w	ip, ip, #16
 c00c10c:	d1f3      	bne.n	c00c0f6 <kad_unroll+0x506>
 c00c10e:	2300      	movs	r3, #0
 c00c110:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 c00c112:	f8dd b00c 	ldr.w	fp, [sp, #12]
 c00c116:	63eb      	str	r3, [r5, #60]	@ 0x3c
 c00c118:	60ab      	str	r3, [r5, #8]
 c00c11a:	636b      	str	r3, [r5, #52]	@ 0x34
 c00c11c:	b1b1      	cbz	r1, c00c14c <kad_unroll+0x55c>
 c00c11e:	68fc      	ldr	r4, [r7, #12]
 c00c120:	429c      	cmp	r4, r3
 c00c122:	dd13      	ble.n	c00c14c <kad_unroll+0x55c>
 c00c124:	887b      	ldrh	r3, [r7, #2]
 c00c126:	2b0f      	cmp	r3, #15
 c00c128:	f000 80ad 	beq.w	c00c286 <kad_unroll+0x696>
 c00c12c:	2b18      	cmp	r3, #24
 c00c12e:	f000 80aa 	beq.w	c00c286 <kad_unroll+0x696>
 c00c132:	4620      	mov	r0, r4
 c00c134:	9103      	str	r1, [sp, #12]
 c00c136:	f002 ffa1 	bl	c00f07c <malloc>
 c00c13a:	4a7a      	ldr	r2, [pc, #488]	@ (c00c324 <kad_unroll+0x734>)
 c00c13c:	9903      	ldr	r1, [sp, #12]
 c00c13e:	6813      	ldr	r3, [r2, #0]
 c00c140:	6328      	str	r0, [r5, #48]	@ 0x30
 c00c142:	4423      	add	r3, r4
 c00c144:	6013      	str	r3, [r2, #0]
 c00c146:	4622      	mov	r2, r4
 c00c148:	f003 fb41 	bl	c00f7ce <memcpy>
 c00c14c:	686c      	ldr	r4, [r5, #4]
 c00c14e:	2c00      	cmp	r4, #0
 c00c150:	d16f      	bne.n	c00c232 <kad_unroll+0x642>
 c00c152:	687b      	ldr	r3, [r7, #4]
 c00c154:	f84b 5029 	str.w	r5, [fp, r9, lsl #2]
 c00c158:	2b00      	cmp	r3, #0
 c00c15a:	dc7b      	bgt.n	c00c254 <kad_unroll+0x664>
 c00c15c:	f01a 0f04 	tst.w	sl, #4
 c00c160:	d006      	beq.n	c00c170 <kad_unroll+0x580>
 c00c162:	9b08      	ldr	r3, [sp, #32]
 c00c164:	9a06      	ldr	r2, [sp, #24]
 c00c166:	681b      	ldr	r3, [r3, #0]
 c00c168:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 c00c16a:	509d      	str	r5, [r3, r2]
 c00c16c:	f8d8 7000 	ldr.w	r7, [r8]
 c00c170:	9b02      	ldr	r3, [sp, #8]
 c00c172:	b92b      	cbnz	r3, c00c180 <kad_unroll+0x590>
 c00c174:	f01a 0f02 	tst.w	sl, #2
 c00c178:	bf1c      	itt	ne
 c00c17a:	9b0b      	ldrne	r3, [sp, #44]	@ 0x2c
 c00c17c:	f843 5029 	strne.w	r5, [r3, r9, lsl #2]
 c00c180:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 c00c182:	b143      	cbz	r3, c00c196 <kad_unroll+0x5a6>
 c00c184:	9a07      	ldr	r2, [sp, #28]
 c00c186:	9902      	ldr	r1, [sp, #8]
 c00c188:	689b      	ldr	r3, [r3, #8]
 c00c18a:	428a      	cmp	r2, r1
 c00c18c:	f84b 5023 	str.w	r5, [fp, r3, lsl #2]
 c00c190:	d072      	beq.n	c00c278 <kad_unroll+0x688>
 c00c192:	f85b 5029 	ldr.w	r5, [fp, r9, lsl #2]
 c00c196:	9b05      	ldr	r3, [sp, #20]
 c00c198:	9a00      	ldr	r2, [sp, #0]
 c00c19a:	4293      	cmp	r3, r2
 c00c19c:	d03f      	beq.n	c00c21e <kad_unroll+0x62e>
 c00c19e:	9b00      	ldr	r3, [sp, #0]
 c00c1a0:	9a04      	ldr	r2, [sp, #16]
 c00c1a2:	f109 0901 	add.w	r9, r9, #1
 c00c1a6:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 c00c1aa:	3301      	adds	r3, #1
 c00c1ac:	9300      	str	r3, [sp, #0]
 c00c1ae:	9b01      	ldr	r3, [sp, #4]
 c00c1b0:	f108 0804 	add.w	r8, r8, #4
 c00c1b4:	429e      	cmp	r6, r3
 c00c1b6:	d186      	bne.n	c00c0c6 <kad_unroll+0x4d6>
 c00c1b8:	465d      	mov	r5, fp
 c00c1ba:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 c00c1be:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 c00c1c0:	9a02      	ldr	r2, [sp, #8]
 c00c1c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 c00c1c4:	3201      	adds	r2, #1
 c00c1c6:	4293      	cmp	r3, r2
 c00c1c8:	f47f af5d 	bne.w	c00c086 <kad_unroll+0x496>
 c00c1cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 c00c1ce:	f8dd b04c 	ldr.w	fp, [sp, #76]	@ 0x4c
 c00c1d2:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
 c00c1d6:	9d00      	ldr	r5, [sp, #0]
 c00c1d8:	9b05      	ldr	r3, [sp, #20]
 c00c1da:	42ab      	cmp	r3, r5
 c00c1dc:	d06b      	beq.n	c00c2b6 <kad_unroll+0x6c6>
 c00c1de:	9b04      	ldr	r3, [sp, #16]
 c00c1e0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 c00c1e2:	f843 9025 	str.w	r9, [r3, r5, lsl #2]
 c00c1e6:	f002 ff51 	bl	c00f08c <free>
 c00c1ea:	4620      	mov	r0, r4
 c00c1ec:	f002 ff4e 	bl	c00f08c <free>
 c00c1f0:	9b00      	ldr	r3, [sp, #0]
 c00c1f2:	f10b 0b01 	add.w	fp, fp, #1
 c00c1f6:	3301      	adds	r3, #1
 c00c1f8:	9300      	str	r3, [sp, #0]
 c00c1fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 c00c1fc:	459b      	cmp	fp, r3
 c00c1fe:	f47f ae32 	bne.w	c00be66 <kad_unroll+0x276>
 c00c202:	e9dd 7915 	ldrd	r7, r9, [sp, #84]	@ 0x54
 c00c206:	e9dd 5417 	ldrd	r5, r4, [sp, #92]	@ 0x5c
 c00c20a:	4648      	mov	r0, r9
 c00c20c:	f8dd 803c 	ldr.w	r8, [sp, #60]	@ 0x3c
 c00c210:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 c00c214:	f002 ff3a 	bl	c00f08c <free>
 c00c218:	9b00      	ldr	r3, [sp, #0]
 c00c21a:	930e      	str	r3, [sp, #56]	@ 0x38
 c00c21c:	e520      	b.n	c00bc60 <kad_unroll+0x70>
 c00c21e:	2b00      	cmp	r3, #0
 c00c220:	d03c      	beq.n	c00c29c <kad_unroll+0x6ac>
 c00c222:	005b      	lsls	r3, r3, #1
 c00c224:	9305      	str	r3, [sp, #20]
 c00c226:	0099      	lsls	r1, r3, #2
 c00c228:	9804      	ldr	r0, [sp, #16]
 c00c22a:	f002 ffe5 	bl	c00f1f8 <realloc>
 c00c22e:	9004      	str	r0, [sp, #16]
 c00c230:	e7b5      	b.n	c00c19e <kad_unroll+0x5ae>
 c00c232:	ed85 8b0a 	vstr	d8, [r5, #40]	@ 0x28
 c00c236:	2104      	movs	r1, #4
 c00c238:	4620      	mov	r0, r4
 c00c23a:	f002 ff03 	bl	c00f044 <calloc>
 c00c23e:	4a39      	ldr	r2, [pc, #228]	@ (c00c324 <kad_unroll+0x734>)
 c00c240:	63a8      	str	r0, [r5, #56]	@ 0x38
 c00c242:	6813      	ldr	r3, [r2, #0]
 c00c244:	f84b 5029 	str.w	r5, [fp, r9, lsl #2]
 c00c248:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 c00c24c:	6013      	str	r3, [r2, #0]
 c00c24e:	687b      	ldr	r3, [r7, #4]
 c00c250:	2b00      	cmp	r3, #0
 c00c252:	dd83      	ble.n	c00c15c <kad_unroll+0x56c>
 c00c254:	2300      	movs	r3, #0
 c00c256:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 c00c258:	3a04      	subs	r2, #4
 c00c25a:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 c00c25c:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 c00c260:	3301      	adds	r3, #1
 c00c262:	6889      	ldr	r1, [r1, #8]
 c00c264:	f85b 1021 	ldr.w	r1, [fp, r1, lsl #2]
 c00c268:	f842 1f04 	str.w	r1, [r2, #4]!
 c00c26c:	f8d8 7000 	ldr.w	r7, [r8]
 c00c270:	6879      	ldr	r1, [r7, #4]
 c00c272:	428b      	cmp	r3, r1
 c00c274:	dbf1      	blt.n	c00c25a <kad_unroll+0x66a>
 c00c276:	e771      	b.n	c00c15c <kad_unroll+0x56c>
 c00c278:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 c00c27a:	f85b 5029 	ldr.w	r5, [fp, r9, lsl #2]
 c00c27e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 c00c282:	63eb      	str	r3, [r5, #60]	@ 0x3c
 c00c284:	e787      	b.n	c00c196 <kad_unroll+0x5a6>
 c00c286:	787b      	ldrb	r3, [r7, #1]
 c00c288:	06d8      	lsls	r0, r3, #27
 c00c28a:	f53f af52 	bmi.w	c00c132 <kad_unroll+0x542>
 c00c28e:	2c20      	cmp	r4, #32
 c00c290:	f47f af4f 	bne.w	c00c132 <kad_unroll+0x542>
 c00c294:	f7ff fbf4 	bl	c00ba80 <kad_rng>
 c00c298:	6328      	str	r0, [r5, #48]	@ 0x30
 c00c29a:	e757      	b.n	c00c14c <kad_unroll+0x55c>
 c00c29c:	2310      	movs	r3, #16
 c00c29e:	2140      	movs	r1, #64	@ 0x40
 c00c2a0:	9305      	str	r3, [sp, #20]
 c00c2a2:	e7c1      	b.n	c00c228 <kad_unroll+0x638>
 c00c2a4:	7853      	ldrb	r3, [r2, #1]
 c00c2a6:	075b      	lsls	r3, r3, #29
 c00c2a8:	f53f ae85 	bmi.w	c00bfb6 <kad_unroll+0x3c6>
 c00c2ac:	780b      	ldrb	r3, [r1, #0]
 c00c2ae:	06db      	lsls	r3, r3, #27
 c00c2b0:	f57f ae81 	bpl.w	c00bfb6 <kad_unroll+0x3c6>
 c00c2b4:	e68f      	b.n	c00bfd6 <kad_unroll+0x3e6>
 c00c2b6:	b313      	cbz	r3, c00c2fe <kad_unroll+0x70e>
 c00c2b8:	005b      	lsls	r3, r3, #1
 c00c2ba:	9305      	str	r3, [sp, #20]
 c00c2bc:	0099      	lsls	r1, r3, #2
 c00c2be:	9804      	ldr	r0, [sp, #16]
 c00c2c0:	f002 ff9a 	bl	c00f1f8 <realloc>
 c00c2c4:	9004      	str	r0, [sp, #16]
 c00c2c6:	e78a      	b.n	c00c1de <kad_unroll+0x5ee>
 c00c2c8:	ed89 8b0a 	vstr	d8, [r9, #40]	@ 0x28
 c00c2cc:	2104      	movs	r1, #4
 c00c2ce:	4620      	mov	r0, r4
 c00c2d0:	f002 feb8 	bl	c00f044 <calloc>
 c00c2d4:	4a13      	ldr	r2, [pc, #76]	@ (c00c324 <kad_unroll+0x734>)
 c00c2d6:	f8c9 0038 	str.w	r0, [r9, #56]	@ 0x38
 c00c2da:	6813      	ldr	r3, [r2, #0]
 c00c2dc:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 c00c2e0:	6013      	str	r3, [r2, #0]
 c00c2e2:	e624      	b.n	c00bf2e <kad_unroll+0x33e>
 c00c2e4:	f898 3001 	ldrb.w	r3, [r8, #1]
 c00c2e8:	06d9      	lsls	r1, r3, #27
 c00c2ea:	f53f ae0c 	bmi.w	c00bf06 <kad_unroll+0x316>
 c00c2ee:	2c20      	cmp	r4, #32
 c00c2f0:	f47f ae09 	bne.w	c00bf06 <kad_unroll+0x316>
 c00c2f4:	f7ff fbc4 	bl	c00ba80 <kad_rng>
 c00c2f8:	f8c9 0030 	str.w	r0, [r9, #48]	@ 0x30
 c00c2fc:	e610      	b.n	c00bf20 <kad_unroll+0x330>
 c00c2fe:	2310      	movs	r3, #16
 c00c300:	2140      	movs	r1, #64	@ 0x40
 c00c302:	9305      	str	r3, [sp, #20]
 c00c304:	e7db      	b.n	c00c2be <kad_unroll+0x6ce>
 c00c306:	2300      	movs	r3, #0
 c00c308:	461c      	mov	r4, r3
 c00c30a:	9304      	str	r3, [sp, #16]
 c00c30c:	f002 febe 	bl	c00f08c <free>
 c00c310:	940e      	str	r4, [sp, #56]	@ 0x38
 c00c312:	e530      	b.n	c00bd76 <kad_unroll+0x186>
 c00c314:	f240 21ff 	movw	r1, #767	@ 0x2ff
 c00c318:	4b03      	ldr	r3, [pc, #12]	@ (c00c328 <kad_unroll+0x738>)
 c00c31a:	4a04      	ldr	r2, [pc, #16]	@ (c00c32c <kad_unroll+0x73c>)
 c00c31c:	4804      	ldr	r0, [pc, #16]	@ (c00c330 <kad_unroll+0x740>)
 c00c31e:	f002 fe73 	bl	c00f008 <__assert_func>
 c00c322:	bf00      	nop
 c00c324:	30000254 	.word	0x30000254
 c00c328:	0c011bec 	.word	0x0c011bec
 c00c32c:	0c011cf0 	.word	0x0c011cf0
 c00c330:	0c011b04 	.word	0x0c011b04

0c00c334 <kad_drand>:
 c00c334:	4b1f      	ldr	r3, [pc, #124]	@ (c00c3b4 <kad_drand+0x80>)
 c00c336:	b570      	push	{r4, r5, r6, lr}
 c00c338:	2800      	cmp	r0, #0
 c00c33a:	bf14      	ite	ne
 c00c33c:	4602      	movne	r2, r0
 c00c33e:	461a      	moveq	r2, r3
 c00c340:	6811      	ldr	r1, [r2, #0]
 c00c342:	e9d2 3001 	ldrd	r3, r0, [r2, #4]
 c00c346:	ea81 0c00 	eor.w	ip, r1, r0
 c00c34a:	180c      	adds	r4, r1, r0
 c00c34c:	ea4f 2051 	mov.w	r0, r1, lsr #9
 c00c350:	ea40 50c3 	orr.w	r0, r0, r3, lsl #23
 c00c354:	ea80 000c 	eor.w	r0, r0, ip
 c00c358:	68d6      	ldr	r6, [r2, #12]
 c00c35a:	ea80 308c 	eor.w	r0, r0, ip, lsl #14
 c00c35e:	6010      	str	r0, [r2, #0]
 c00c360:	ea4f 2053 	mov.w	r0, r3, lsr #9
 c00c364:	ea83 0506 	eor.w	r5, r3, r6
 c00c368:	ea40 50c1 	orr.w	r0, r0, r1, lsl #23
 c00c36c:	ea80 0005 	eor.w	r0, r0, r5
 c00c370:	ea4f 3585 	mov.w	r5, r5, lsl #14
 c00c374:	ea45 459c 	orr.w	r5, r5, ip, lsr #18
 c00c378:	ea80 0005 	eor.w	r0, r0, r5
 c00c37c:	eb43 0e06 	adc.w	lr, r3, r6
 c00c380:	6050      	str	r0, [r2, #4]
 c00c382:	0f08      	lsrs	r0, r1, #28
 c00c384:	ea4f 351e 	mov.w	r5, lr, lsr #12
 c00c388:	ea40 1003 	orr.w	r0, r0, r3, lsl #4
 c00c38c:	0f1b      	lsrs	r3, r3, #28
 c00c38e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 c00c392:	0b24      	lsrs	r4, r4, #12
 c00c394:	f045 517f 	orr.w	r1, r5, #1069547520	@ 0x3fc00000
 c00c398:	6090      	str	r0, [r2, #8]
 c00c39a:	60d3      	str	r3, [r2, #12]
 c00c39c:	ea44 500e 	orr.w	r0, r4, lr, lsl #20
 c00c3a0:	2200      	movs	r2, #0
 c00c3a2:	4b05      	ldr	r3, [pc, #20]	@ (c00c3b8 <kad_drand+0x84>)
 c00c3a4:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 c00c3a8:	f7f3 ff78 	bl	c00029c <__aeabi_dsub>
 c00c3ac:	ec41 0b10 	vmov	d0, r0, r1
 c00c3b0:	bd70      	pop	{r4, r5, r6, pc}
 c00c3b2:	bf00      	nop
 c00c3b4:	30000108 	.word	0x30000108
 c00c3b8:	3ff00000 	.word	0x3ff00000

0c00c3bc <kad_drand_normal>:
 c00c3bc:	4602      	mov	r2, r0
 c00c3be:	4b6e      	ldr	r3, [pc, #440]	@ (c00c578 <kad_drand_normal+0x1bc>)
 c00c3c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00c3c4:	2800      	cmp	r0, #0
 c00c3c6:	bf08      	it	eq
 c00c3c8:	461a      	moveq	r2, r3
 c00c3ca:	6993      	ldr	r3, [r2, #24]
 c00c3cc:	b089      	sub	sp, #36	@ 0x24
 c00c3ce:	9207      	str	r2, [sp, #28]
 c00c3d0:	2b00      	cmp	r3, #0
 c00c3d2:	f040 80c9 	bne.w	c00c568 <kad_drand_normal+0x1ac>
 c00c3d6:	e9d2 6500 	ldrd	r6, r5, [r2]
 c00c3da:	e9d2 7402 	ldrd	r7, r4, [r2, #8]
 c00c3de:	ea87 0206 	eor.w	r2, r7, r6
 c00c3e2:	19bf      	adds	r7, r7, r6
 c00c3e4:	ea84 0305 	eor.w	r3, r4, r5
 c00c3e8:	ea4f 3717 	mov.w	r7, r7, lsr #12
 c00c3ec:	eb45 0404 	adc.w	r4, r5, r4
 c00c3f0:	ea47 5a04 	orr.w	sl, r7, r4, lsl #20
 c00c3f4:	0b24      	lsrs	r4, r4, #12
 c00c3f6:	f044 5b7f 	orr.w	fp, r4, #1069547520	@ 0x3fc00000
 c00c3fa:	0a6c      	lsrs	r4, r5, #9
 c00c3fc:	ea4f 2856 	mov.w	r8, r6, lsr #9
 c00c400:	ea44 54c6 	orr.w	r4, r4, r6, lsl #23
 c00c404:	ea48 58c5 	orr.w	r8, r8, r5, lsl #23
 c00c408:	405c      	eors	r4, r3
 c00c40a:	039b      	lsls	r3, r3, #14
 c00c40c:	ea43 4392 	orr.w	r3, r3, r2, lsr #18
 c00c410:	ea88 0802 	eor.w	r8, r8, r2
 c00c414:	f44b 1b40 	orr.w	fp, fp, #3145728	@ 0x300000
 c00c418:	ea88 3882 	eor.w	r8, r8, r2, lsl #14
 c00c41c:	405c      	eors	r4, r3
 c00c41e:	2200      	movs	r2, #0
 c00c420:	4b56      	ldr	r3, [pc, #344]	@ (c00c57c <kad_drand_normal+0x1c0>)
 c00c422:	4650      	mov	r0, sl
 c00c424:	4659      	mov	r1, fp
 c00c426:	f7f3 ff39 	bl	c00029c <__aeabi_dsub>
 c00c42a:	4602      	mov	r2, r0
 c00c42c:	460b      	mov	r3, r1
 c00c42e:	f7f3 ff37 	bl	c0002a0 <__adddf3>
 c00c432:	2200      	movs	r2, #0
 c00c434:	4b51      	ldr	r3, [pc, #324]	@ (c00c57c <kad_drand_normal+0x1c0>)
 c00c436:	f7f3 ff31 	bl	c00029c <__aeabi_dsub>
 c00c43a:	0f37      	lsrs	r7, r6, #28
 c00c43c:	ea47 1705 	orr.w	r7, r7, r5, lsl #4
 c00c440:	0f2d      	lsrs	r5, r5, #28
 c00c442:	eb18 0207 	adds.w	r2, r8, r7
 c00c446:	ea45 1506 	orr.w	r5, r5, r6, lsl #4
 c00c44a:	eb44 0305 	adc.w	r3, r4, r5
 c00c44e:	0b12      	lsrs	r2, r2, #12
 c00c450:	ea42 5203 	orr.w	r2, r2, r3, lsl #20
 c00c454:	0b1b      	lsrs	r3, r3, #12
 c00c456:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 c00c45a:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 c00c45e:	9301      	str	r3, [sp, #4]
 c00c460:	0a63      	lsrs	r3, r4, #9
 c00c462:	4065      	eors	r5, r4
 c00c464:	ea43 53c8 	orr.w	r3, r3, r8, lsl #23
 c00c468:	ea88 0707 	eor.w	r7, r8, r7
 c00c46c:	406b      	eors	r3, r5
 c00c46e:	03ad      	lsls	r5, r5, #14
 c00c470:	9200      	str	r2, [sp, #0]
 c00c472:	ea45 4597 	orr.w	r5, r5, r7, lsr #18
 c00c476:	2200      	movs	r2, #0
 c00c478:	e9cd 0102 	strd	r0, r1, [sp, #8]
 c00c47c:	e9dd 0100 	ldrd	r0, r1, [sp]
 c00c480:	405d      	eors	r5, r3
 c00c482:	4b3e      	ldr	r3, [pc, #248]	@ (c00c57c <kad_drand_normal+0x1c0>)
 c00c484:	f7f3 ff0a 	bl	c00029c <__aeabi_dsub>
 c00c488:	4602      	mov	r2, r0
 c00c48a:	460b      	mov	r3, r1
 c00c48c:	f7f3 ff08 	bl	c0002a0 <__adddf3>
 c00c490:	2200      	movs	r2, #0
 c00c492:	4b3a      	ldr	r3, [pc, #232]	@ (c00c57c <kad_drand_normal+0x1c0>)
 c00c494:	f7f3 ff02 	bl	c00029c <__aeabi_dsub>
 c00c498:	ea4f 2658 	mov.w	r6, r8, lsr #9
 c00c49c:	ea46 56c4 	orr.w	r6, r6, r4, lsl #23
 c00c4a0:	407e      	eors	r6, r7
 c00c4a2:	ea86 3687 	eor.w	r6, r6, r7, lsl #14
 c00c4a6:	ea4f 7718 	mov.w	r7, r8, lsr #28
 c00c4aa:	ea47 1704 	orr.w	r7, r7, r4, lsl #4
 c00c4ae:	0f24      	lsrs	r4, r4, #28
 c00c4b0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 c00c4b4:	ea44 1408 	orr.w	r4, r4, r8, lsl #4
 c00c4b8:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 c00c4bc:	4642      	mov	r2, r8
 c00c4be:	464b      	mov	r3, r9
 c00c4c0:	4640      	mov	r0, r8
 c00c4c2:	4649      	mov	r1, r9
 c00c4c4:	f7f4 f8a2 	bl	c00060c <__aeabi_dmul>
 c00c4c8:	4680      	mov	r8, r0
 c00c4ca:	4689      	mov	r9, r1
 c00c4cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 c00c4d0:	4602      	mov	r2, r0
 c00c4d2:	460b      	mov	r3, r1
 c00c4d4:	f7f4 f89a 	bl	c00060c <__aeabi_dmul>
 c00c4d8:	4602      	mov	r2, r0
 c00c4da:	460b      	mov	r3, r1
 c00c4dc:	4640      	mov	r0, r8
 c00c4de:	4649      	mov	r1, r9
 c00c4e0:	f7f3 fede 	bl	c0002a0 <__adddf3>
 c00c4e4:	2200      	movs	r2, #0
 c00c4e6:	4b25      	ldr	r3, [pc, #148]	@ (c00c57c <kad_drand_normal+0x1c0>)
 c00c4e8:	4680      	mov	r8, r0
 c00c4ea:	4689      	mov	r9, r1
 c00c4ec:	f7f4 fb14 	bl	c000b18 <__aeabi_dcmpge>
 c00c4f0:	2800      	cmp	r0, #0
 c00c4f2:	f47f af74 	bne.w	c00c3de <kad_drand_normal+0x22>
 c00c4f6:	2200      	movs	r2, #0
 c00c4f8:	2300      	movs	r3, #0
 c00c4fa:	4640      	mov	r0, r8
 c00c4fc:	4649      	mov	r1, r9
 c00c4fe:	f7f4 faed 	bl	c000adc <__aeabi_dcmpeq>
 c00c502:	2800      	cmp	r0, #0
 c00c504:	f47f af6b 	bne.w	c00c3de <kad_drand_normal+0x22>
 c00c508:	9b07      	ldr	r3, [sp, #28]
 c00c50a:	ec49 8b10 	vmov	d0, r8, r9
 c00c50e:	e9c3 6500 	strd	r6, r5, [r3]
 c00c512:	e9c3 7402 	strd	r7, r4, [r3, #8]
 c00c516:	461e      	mov	r6, r3
 c00c518:	f003 ff32 	bl	c010380 <log>
 c00c51c:	2200      	movs	r2, #0
 c00c51e:	ec51 0b10 	vmov	r0, r1, d0
 c00c522:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 c00c526:	f7f4 f871 	bl	c00060c <__aeabi_dmul>
 c00c52a:	4642      	mov	r2, r8
 c00c52c:	464b      	mov	r3, r9
 c00c52e:	f7f4 f997 	bl	c000860 <__aeabi_ddiv>
 c00c532:	ec41 0b10 	vmov	d0, r0, r1
 c00c536:	f003 ff61 	bl	c0103fc <sqrt>
 c00c53a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 c00c53e:	ec55 4b10 	vmov	r4, r5, d0
 c00c542:	4622      	mov	r2, r4
 c00c544:	462b      	mov	r3, r5
 c00c546:	f7f4 f861 	bl	c00060c <__aeabi_dmul>
 c00c54a:	4622      	mov	r2, r4
 c00c54c:	2401      	movs	r4, #1
 c00c54e:	e9c6 0104 	strd	r0, r1, [r6, #16]
 c00c552:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 c00c556:	462b      	mov	r3, r5
 c00c558:	61b4      	str	r4, [r6, #24]
 c00c55a:	f7f4 f857 	bl	c00060c <__aeabi_dmul>
 c00c55e:	ec41 0b10 	vmov	d0, r0, r1
 c00c562:	b009      	add	sp, #36	@ 0x24
 c00c564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00c568:	2300      	movs	r3, #0
 c00c56a:	ed92 0b04 	vldr	d0, [r2, #16]
 c00c56e:	6193      	str	r3, [r2, #24]
 c00c570:	b009      	add	sp, #36	@ 0x24
 c00c572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00c576:	bf00      	nop
 c00c578:	30000108 	.word	0x30000108
 c00c57c:	3ff00000 	.word	0x3ff00000

0c00c580 <kad_op_sample_normal>:
 c00c580:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 c00c584:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 c00c586:	4604      	mov	r4, r0
 c00c588:	681d      	ldr	r5, [r3, #0]
 c00c58a:	782b      	ldrb	r3, [r5, #0]
 c00c58c:	b37b      	cbz	r3, c00c5ee <kad_op_sample_normal+0x6e>
 c00c58e:	2b01      	cmp	r3, #1
 c00c590:	692e      	ldr	r6, [r5, #16]
 c00c592:	d00c      	beq.n	c00c5ae <kad_op_sample_normal+0x2e>
 c00c594:	696a      	ldr	r2, [r5, #20]
 c00c596:	2b02      	cmp	r3, #2
 c00c598:	fb02 f606 	mul.w	r6, r2, r6
 c00c59c:	d007      	beq.n	c00c5ae <kad_op_sample_normal+0x2e>
 c00c59e:	69aa      	ldr	r2, [r5, #24]
 c00c5a0:	2b03      	cmp	r3, #3
 c00c5a2:	fb02 f606 	mul.w	r6, r2, r6
 c00c5a6:	d002      	beq.n	c00c5ae <kad_op_sample_normal+0x2e>
 c00c5a8:	69ea      	ldr	r2, [r5, #28]
 c00c5aa:	fb02 f606 	mul.w	r6, r2, r6
 c00c5ae:	2904      	cmp	r1, #4
 c00c5b0:	d012      	beq.n	c00c5d8 <kad_op_sample_normal+0x58>
 c00c5b2:	2901      	cmp	r1, #1
 c00c5b4:	d007      	beq.n	c00c5c6 <kad_op_sample_normal+0x46>
 c00c5b6:	2902      	cmp	r1, #2
 c00c5b8:	d040      	beq.n	c00c63c <kad_op_sample_normal+0xbc>
 c00c5ba:	2903      	cmp	r1, #3
 c00c5bc:	d025      	beq.n	c00c60a <kad_op_sample_normal+0x8a>
 c00c5be:	2000      	movs	r0, #0
 c00c5c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c00c5c4:	460e      	mov	r6, r1
 c00c5c6:	786b      	ldrb	r3, [r5, #1]
 c00c5c8:	07d9      	lsls	r1, r3, #31
 c00c5ca:	d5f8      	bpl.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c5cc:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 c00c5ce:	00b1      	lsls	r1, r6, #2
 c00c5d0:	f002 fe12 	bl	c00f1f8 <realloc>
 c00c5d4:	6360      	str	r0, [r4, #52]	@ 0x34
 c00c5d6:	e7f2      	b.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c5d8:	4620      	mov	r0, r4
 c00c5da:	009a      	lsls	r2, r3, #2
 c00c5dc:	f105 0110 	add.w	r1, r5, #16
 c00c5e0:	f800 3b10 	strb.w	r3, [r0], #16
 c00c5e4:	f003 f8f3 	bl	c00f7ce <memcpy>
 c00c5e8:	2000      	movs	r0, #0
 c00c5ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c00c5ee:	2904      	cmp	r1, #4
 c00c5f0:	d022      	beq.n	c00c638 <kad_op_sample_normal+0xb8>
 c00c5f2:	2901      	cmp	r1, #1
 c00c5f4:	d0e6      	beq.n	c00c5c4 <kad_op_sample_normal+0x44>
 c00c5f6:	2902      	cmp	r1, #2
 c00c5f8:	d05d      	beq.n	c00c6b6 <kad_op_sample_normal+0x136>
 c00c5fa:	2903      	cmp	r1, #3
 c00c5fc:	d1df      	bne.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c5fe:	786b      	ldrb	r3, [r5, #1]
 c00c600:	07da      	lsls	r2, r3, #31
 c00c602:	d5dc      	bpl.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c604:	2601      	movs	r6, #1
 c00c606:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 c00c608:	e005      	b.n	c00c616 <kad_op_sample_normal+0x96>
 c00c60a:	786b      	ldrb	r3, [r5, #1]
 c00c60c:	07db      	lsls	r3, r3, #31
 c00c60e:	d5d6      	bpl.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c610:	2e00      	cmp	r6, #0
 c00c612:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 c00c614:	ddd3      	ble.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c616:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 c00c618:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 c00c61a:	eb03 0686 	add.w	r6, r3, r6, lsl #2
 c00c61e:	edd3 7a00 	vldr	s15, [r3]
 c00c622:	ecf1 6a01 	vldmia	r1!, {s13}
 c00c626:	ecb2 7a01 	vldmia	r2!, {s14}
 c00c62a:	eee6 7a87 	vfma.f32	s15, s13, s14
 c00c62e:	ece3 7a01 	vstmia	r3!, {s15}
 c00c632:	42b3      	cmp	r3, r6
 c00c634:	d1f3      	bne.n	c00c61e <kad_op_sample_normal+0x9e>
 c00c636:	e7c2      	b.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c638:	7003      	strb	r3, [r0, #0]
 c00c63a:	e7c0      	b.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c63c:	2e00      	cmp	r6, #0
 c00c63e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 c00c640:	ddbd      	ble.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c642:	4698      	mov	r8, r3
 c00c644:	f8d4 9030 	ldr.w	r9, [r4, #48]	@ 0x30
 c00c648:	b1db      	cbz	r3, c00c682 <kad_op_sample_normal+0x102>
 c00c64a:	2700      	movs	r7, #0
 c00c64c:	4648      	mov	r0, r9
 c00c64e:	f7ff feb5 	bl	c00c3bc <kad_drand_normal>
 c00c652:	ec51 0b10 	vmov	r0, r1, d0
 c00c656:	f7f4 fab1 	bl	c000bbc <__aeabi_d2f>
 c00c65a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c00c65c:	ee07 0a90 	vmov	s15, r0
 c00c660:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 c00c664:	ed93 7a00 	vldr	s14, [r3]
 c00c668:	ee27 7a27 	vmul.f32	s14, s14, s15
 c00c66c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 c00c66e:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 c00c672:	3701      	adds	r7, #1
 c00c674:	42b7      	cmp	r7, r6
 c00c676:	ed83 7a00 	vstr	s14, [r3]
 c00c67a:	f848 0b04 	str.w	r0, [r8], #4
 c00c67e:	d1e5      	bne.n	c00c64c <kad_op_sample_normal+0xcc>
 c00c680:	e79d      	b.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c682:	4648      	mov	r0, r9
 c00c684:	f7ff fe9a 	bl	c00c3bc <kad_drand_normal>
 c00c688:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 c00c68a:	ec51 0b10 	vmov	r0, r1, d0
 c00c68e:	eb03 0a88 	add.w	sl, r3, r8, lsl #2
 c00c692:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 c00c694:	eb03 0788 	add.w	r7, r3, r8, lsl #2
 c00c698:	f7f4 fa90 	bl	c000bbc <__aeabi_d2f>
 c00c69c:	edda 7a00 	vldr	s15, [sl]
 c00c6a0:	ee07 0a10 	vmov	s14, r0
 c00c6a4:	ee67 7a87 	vmul.f32	s15, s15, s14
 c00c6a8:	f108 0801 	add.w	r8, r8, #1
 c00c6ac:	45b0      	cmp	r8, r6
 c00c6ae:	edc7 7a00 	vstr	s15, [r7]
 c00c6b2:	d1e6      	bne.n	c00c682 <kad_op_sample_normal+0x102>
 c00c6b4:	e783      	b.n	c00c5be <kad_op_sample_normal+0x3e>
 c00c6b6:	2601      	movs	r6, #1
 c00c6b8:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 c00c6ba:	e7c2      	b.n	c00c642 <kad_op_sample_normal+0xc2>

0c00c6bc <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 c00c6bc:	f8df d034 	ldr.w	sp, [pc, #52]	@ c00c6f4 <LoopForever+0x2>

/* Call the clock system initialization function.*/
  bl  SystemInit
 c00c6c0:	f7f5 fd14 	bl	c0020ec <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 c00c6c4:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 c00c6c6:	e003      	b.n	c00c6d0 <LoopCopyDataInit>

0c00c6c8 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 c00c6c8:	4b0b      	ldr	r3, [pc, #44]	@ (c00c6f8 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 c00c6ca:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 c00c6cc:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 c00c6ce:	3104      	adds	r1, #4

0c00c6d0 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 c00c6d0:	480a      	ldr	r0, [pc, #40]	@ (c00c6fc <LoopForever+0xa>)
	ldr	r3, =_edata
 c00c6d2:	4b0b      	ldr	r3, [pc, #44]	@ (c00c700 <LoopForever+0xe>)
	adds	r2, r0, r1
 c00c6d4:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 c00c6d6:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 c00c6d8:	d3f6      	bcc.n	c00c6c8 <CopyDataInit>
	ldr	r2, =_sbss
 c00c6da:	4a0a      	ldr	r2, [pc, #40]	@ (c00c704 <LoopForever+0x12>)
	b	LoopFillZerobss
 c00c6dc:	e002      	b.n	c00c6e4 <LoopFillZerobss>

0c00c6de <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 c00c6de:	2300      	movs	r3, #0
	str	r3, [r2], #4
 c00c6e0:	f842 3b04 	str.w	r3, [r2], #4

0c00c6e4 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 c00c6e4:	4b08      	ldr	r3, [pc, #32]	@ (c00c708 <LoopForever+0x16>)
	cmp	r2, r3
 c00c6e6:	429a      	cmp	r2, r3
	bcc	FillZerobss
 c00c6e8:	d3f9      	bcc.n	c00c6de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 c00c6ea:	f003 f849 	bl	c00f780 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 c00c6ee:	f7f5 f953 	bl	c001998 <main>

0c00c6f2 <LoopForever>:

LoopForever:
    b LoopForever
 c00c6f2:	e7fe      	b.n	c00c6f2 <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 c00c6f4:	30010000 	.word	0x30010000
	ldr	r3, =_sidata
 c00c6f8:	0c0121b4 	.word	0x0c0121b4
	ldr	r0, =_sdata
 c00c6fc:	30000000 	.word	0x30000000
	ldr	r3, =_edata
 c00c700:	300001a0 	.word	0x300001a0
	ldr	r2, =_sbss
 c00c704:	300001a0 	.word	0x300001a0
	ldr	r3, = _ebss
 c00c708:	300004e0 	.word	0x300004e0

0c00c70c <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 c00c70c:	e7fe      	b.n	c00c70c <ADC1_2_IRQHandler>
	...

0c00c710 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 c00c710:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef  status = HAL_OK;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/
  if ((uint32_t)uwTickFreq != 0U)
 c00c712:	4b0f      	ldr	r3, [pc, #60]	@ (c00c750 <HAL_InitTick+0x40>)
 c00c714:	781b      	ldrb	r3, [r3, #0]
 c00c716:	b90b      	cbnz	r3, c00c71c <HAL_InitTick+0xc>
        status = HAL_ERROR;
      }
    }
    else
    {
      status = HAL_ERROR;
 c00c718:	2001      	movs	r0, #1
    status = HAL_ERROR;
  }

  /* Return function status */
  return status;
}
 c00c71a:	bd38      	pop	{r3, r4, r5, pc}
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / (uint32_t)uwTickFreq)) == 0U)
 c00c71c:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 c00c720:	fbb2 f3f3 	udiv	r3, r2, r3
 c00c724:	490b      	ldr	r1, [pc, #44]	@ (c00c754 <HAL_InitTick+0x44>)
 c00c726:	4605      	mov	r5, r0
 c00c728:	6808      	ldr	r0, [r1, #0]
 c00c72a:	fbb0 f0f3 	udiv	r0, r0, r3
 c00c72e:	f000 f895 	bl	c00c85c <HAL_SYSTICK_Config>
 c00c732:	4604      	mov	r4, r0
 c00c734:	2800      	cmp	r0, #0
 c00c736:	d1ef      	bne.n	c00c718 <HAL_InitTick+0x8>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 c00c738:	2d07      	cmp	r5, #7
 c00c73a:	d8ed      	bhi.n	c00c718 <HAL_InitTick+0x8>
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 c00c73c:	4602      	mov	r2, r0
 c00c73e:	4629      	mov	r1, r5
 c00c740:	f04f 30ff 	mov.w	r0, #4294967295
 c00c744:	f000 f840 	bl	c00c7c8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 c00c748:	4b03      	ldr	r3, [pc, #12]	@ (c00c758 <HAL_InitTick+0x48>)
 c00c74a:	4620      	mov	r0, r4
 c00c74c:	601d      	str	r5, [r3, #0]
}
 c00c74e:	bd38      	pop	{r3, r4, r5, pc}
 c00c750:	30000128 	.word	0x30000128
 c00c754:	30000000 	.word	0x30000000
 c00c758:	3000012c 	.word	0x3000012c

0c00c75c <HAL_Init>:
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_3);
 c00c75c:	2004      	movs	r0, #4
{
 c00c75e:	b510      	push	{r4, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_3);
 c00c760:	f000 f820 	bl	c00c7a4 <HAL_NVIC_SetPriorityGrouping>
  SystemCoreClockUpdate();
 c00c764:	f7f5 fd48 	bl	c0021f8 <SystemCoreClockUpdate>
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 c00c768:	2007      	movs	r0, #7
 c00c76a:	f7ff ffd1 	bl	c00c710 <HAL_InitTick>
 c00c76e:	b110      	cbz	r0, c00c776 <HAL_Init+0x1a>
    status = HAL_ERROR;
 c00c770:	2401      	movs	r4, #1
}
 c00c772:	4620      	mov	r0, r4
 c00c774:	bd10      	pop	{r4, pc}
 c00c776:	4604      	mov	r4, r0
    HAL_MspInit();
 c00c778:	f7f5 fbd8 	bl	c001f2c <HAL_MspInit>
}
 c00c77c:	4620      	mov	r0, r4
 c00c77e:	bd10      	pop	{r4, pc}

0c00c780 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 c00c780:	4a03      	ldr	r2, [pc, #12]	@ (c00c790 <HAL_IncTick+0x10>)
 c00c782:	4b04      	ldr	r3, [pc, #16]	@ (c00c794 <HAL_IncTick+0x14>)
 c00c784:	6811      	ldr	r1, [r2, #0]
 c00c786:	781b      	ldrb	r3, [r3, #0]
 c00c788:	440b      	add	r3, r1
 c00c78a:	6013      	str	r3, [r2, #0]
}
 c00c78c:	4770      	bx	lr
 c00c78e:	bf00      	nop
 c00c790:	30000390 	.word	0x30000390
 c00c794:	30000128 	.word	0x30000128

0c00c798 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 c00c798:	4b01      	ldr	r3, [pc, #4]	@ (c00c7a0 <HAL_GetTick+0x8>)
 c00c79a:	6818      	ldr	r0, [r3, #0]
}
 c00c79c:	4770      	bx	lr
 c00c79e:	bf00      	nop
 c00c7a0:	30000390 	.word	0x30000390

0c00c7a4 <HAL_NVIC_SetPriorityGrouping>:
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 c00c7a4:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 c00c7a8:	4906      	ldr	r1, [pc, #24]	@ (c00c7c4 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 c00c7aa:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 c00c7ac:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 c00c7ae:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 c00c7b2:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 c00c7b6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 c00c7b8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 c00c7bc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 c00c7c0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 c00c7c2:	4770      	bx	lr
 c00c7c4:	e000ed00 	.word	0xe000ed00

0c00c7c8 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 c00c7c8:	4b1b      	ldr	r3, [pc, #108]	@ (c00c838 <HAL_NVIC_SetPriority+0x70>)
  *         This parameter can be a value between 0 and 7
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 c00c7ca:	b500      	push	{lr}
 c00c7cc:	68db      	ldr	r3, [r3, #12]
 c00c7ce:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 c00c7d2:	f1c3 0e07 	rsb	lr, r3, #7
 c00c7d6:	f1be 0f03 	cmp.w	lr, #3
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 c00c7da:	f103 0c03 	add.w	ip, r3, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 c00c7de:	bf28      	it	cs
 c00c7e0:	f04f 0e03 	movcs.w	lr, #3
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 c00c7e4:	f1bc 0f06 	cmp.w	ip, #6
 c00c7e8:	d91c      	bls.n	c00c824 <HAL_NVIC_SetPriority+0x5c>
 c00c7ea:	f1a3 0c04 	sub.w	ip, r3, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 c00c7ee:	f04f 33ff 	mov.w	r3, #4294967295
 c00c7f2:	fa03 f30c 	lsl.w	r3, r3, ip
 c00c7f6:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 c00c7fa:	f04f 33ff 	mov.w	r3, #4294967295
 c00c7fe:	fa03 f30e 	lsl.w	r3, r3, lr
 c00c802:	ea21 0303 	bic.w	r3, r1, r3
 c00c806:	fa03 f30c 	lsl.w	r3, r3, ip
 c00c80a:	4313      	orrs	r3, r2
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 c00c80c:	015b      	lsls	r3, r3, #5
  if ((int32_t)(IRQn) >= 0)
 c00c80e:	2800      	cmp	r0, #0
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 c00c810:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 c00c812:	db0a      	blt.n	c00c82a <HAL_NVIC_SetPriority+0x62>
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 c00c814:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 c00c818:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 c00c81c:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 c00c820:	f85d fb04 	ldr.w	pc, [sp], #4
 c00c824:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 c00c826:	4694      	mov	ip, r2
 c00c828:	e7e7      	b.n	c00c7fa <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 c00c82a:	4a04      	ldr	r2, [pc, #16]	@ (c00c83c <HAL_NVIC_SetPriority+0x74>)
 c00c82c:	f000 000f 	and.w	r0, r0, #15
 c00c830:	4402      	add	r2, r0
 c00c832:	7613      	strb	r3, [r2, #24]
 c00c834:	f85d fb04 	ldr.w	pc, [sp], #4
 c00c838:	e000ed00 	.word	0xe000ed00
 c00c83c:	e000ecfc 	.word	0xe000ecfc

0c00c840 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 c00c840:	2800      	cmp	r0, #0
 c00c842:	db07      	blt.n	c00c854 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 c00c844:	2301      	movs	r3, #1
 c00c846:	f000 011f 	and.w	r1, r0, #31
 c00c84a:	4a03      	ldr	r2, [pc, #12]	@ (c00c858 <HAL_NVIC_EnableIRQ+0x18>)
 c00c84c:	0940      	lsrs	r0, r0, #5
 c00c84e:	408b      	lsls	r3, r1
 c00c850:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 c00c854:	4770      	bx	lr
 c00c856:	bf00      	nop
 c00c858:	e000e100 	.word	0xe000e100

0c00c85c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 c00c85c:	3801      	subs	r0, #1
 c00c85e:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 c00c862:	d301      	bcc.n	c00c868 <HAL_SYSTICK_Config+0xc>
  {
    return (1UL);                                                   /* Reload value impossible */
 c00c864:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
  return SysTick_Config(TicksNumb);
}
 c00c866:	4770      	bx	lr
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 c00c868:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 c00c86c:	f04f 0ce0 	mov.w	ip, #224	@ 0xe0
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 c00c870:	2200      	movs	r2, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 c00c872:	2107      	movs	r1, #7
{
 c00c874:	b410      	push	{r4}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 c00c876:	4c05      	ldr	r4, [pc, #20]	@ (c00c88c <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 c00c878:	6158      	str	r0, [r3, #20]
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 c00c87a:	f884 c023 	strb.w	ip, [r4, #35]	@ 0x23
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 c00c87e:	4610      	mov	r0, r2
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 c00c880:	619a      	str	r2, [r3, #24]
}
 c00c882:	f85d 4b04 	ldr.w	r4, [sp], #4
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 c00c886:	6119      	str	r1, [r3, #16]
 c00c888:	4770      	bx	lr
 c00c88a:	bf00      	nop
 c00c88c:	e000ed00 	.word	0xe000ed00

0c00c890 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 c00c890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0U)
 c00c894:	680c      	ldr	r4, [r1, #0]
 c00c896:	2c00      	cmp	r4, #0
 c00c898:	f000 808d 	beq.w	c00c9b6 <HAL_GPIO_Init+0x126>
  uint32_t position = 0U;
 c00c89c:	2200      	movs	r2, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 c00c89e:	f04f 0901 	mov.w	r9, #1
 c00c8a2:	fa09 f502 	lsl.w	r5, r9, r2

    if(iocurrent != 0U)
 c00c8a6:	ea15 0a04 	ands.w	sl, r5, r4
 c00c8aa:	d07f      	beq.n	c00c9ac <HAL_GPIO_Init+0x11c>
        GPIOx->OTYPER = temp;
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 c00c8ac:	2603      	movs	r6, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 c00c8ae:	684b      	ldr	r3, [r1, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 c00c8b0:	688f      	ldr	r7, [r1, #8]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 c00c8b2:	f023 0e10 	bic.w	lr, r3, #16
 c00c8b6:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 c00c8ba:	f10e 3bff 	add.w	fp, lr, #4294967295
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 c00c8be:	fa07 f80c 	lsl.w	r8, r7, ip
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 c00c8c2:	f1bb 0f01 	cmp.w	fp, #1
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 c00c8c6:	fa06 f70c 	lsl.w	r7, r6, ip
 c00c8ca:	ea6f 0707 	mvn.w	r7, r7
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 c00c8ce:	d974      	bls.n	c00c9ba <HAL_GPIO_Init+0x12a>
      temp = GPIOx->PUPDR;
 c00c8d0:	68c5      	ldr	r5, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 c00c8d2:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 c00c8d4:	ea45 0508 	orr.w	r5, r5, r8
      GPIOx->PUPDR = temp;
 c00c8d8:	60c5      	str	r5, [r0, #12]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
        GPIOx->AFR[position >> 3U] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 c00c8da:	6805      	ldr	r5, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 c00c8dc:	402f      	ands	r7, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 c00c8de:	ea03 0506 	and.w	r5, r3, r6
 c00c8e2:	fa05 f50c 	lsl.w	r5, r5, ip
 c00c8e6:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 c00c8e8:	00df      	lsls	r7, r3, #3
      GPIOx->MODER = temp;
 c00c8ea:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 c00c8ec:	d55e      	bpl.n	c00c9ac <HAL_GPIO_Init+0x11c>
      {
        temp = EXTI->EXTICR[position >> 2U];
        temp &= ~((0x0FU) << (8U * (position & 0x03U)));
 c00c8ee:	260f      	movs	r6, #15
 c00c8f0:	f022 0503 	bic.w	r5, r2, #3
 c00c8f4:	f002 0c03 	and.w	ip, r2, #3
 c00c8f8:	f105 45a0 	add.w	r5, r5, #1342177280	@ 0x50000000
 c00c8fc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 c00c900:	fa06 fe0c 	lsl.w	lr, r6, ip
 c00c904:	f505 353d 	add.w	r5, r5, #193536	@ 0x2f400
        temp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 c00c908:	4e62      	ldr	r6, [pc, #392]	@ (c00ca94 <HAL_GPIO_Init+0x204>)
        temp = EXTI->EXTICR[position >> 2U];
 c00c90a:	6e2f      	ldr	r7, [r5, #96]	@ 0x60
        temp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 c00c90c:	42b0      	cmp	r0, r6
        temp &= ~((0x0FU) << (8U * (position & 0x03U)));
 c00c90e:	ea27 070e 	bic.w	r7, r7, lr
        temp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 c00c912:	d023      	beq.n	c00c95c <HAL_GPIO_Init+0xcc>
 c00c914:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 c00c918:	42b0      	cmp	r0, r6
 c00c91a:	f000 80a0 	beq.w	c00ca5e <HAL_GPIO_Init+0x1ce>
 c00c91e:	4e5e      	ldr	r6, [pc, #376]	@ (c00ca98 <HAL_GPIO_Init+0x208>)
 c00c920:	42b0      	cmp	r0, r6
 c00c922:	f000 80a1 	beq.w	c00ca68 <HAL_GPIO_Init+0x1d8>
 c00c926:	f8df e178 	ldr.w	lr, [pc, #376]	@ c00caa0 <HAL_GPIO_Init+0x210>
 c00c92a:	4570      	cmp	r0, lr
 c00c92c:	f000 8091 	beq.w	c00ca52 <HAL_GPIO_Init+0x1c2>
 c00c930:	f8df e170 	ldr.w	lr, [pc, #368]	@ c00caa4 <HAL_GPIO_Init+0x214>
 c00c934:	4570      	cmp	r0, lr
 c00c936:	f000 809e 	beq.w	c00ca76 <HAL_GPIO_Init+0x1e6>
 c00c93a:	f8df e16c 	ldr.w	lr, [pc, #364]	@ c00caa8 <HAL_GPIO_Init+0x218>
 c00c93e:	4570      	cmp	r0, lr
 c00c940:	f000 80a0 	beq.w	c00ca84 <HAL_GPIO_Init+0x1f4>
 c00c944:	f8df e164 	ldr.w	lr, [pc, #356]	@ c00caac <HAL_GPIO_Init+0x21c>
 c00c948:	4570      	cmp	r0, lr
 c00c94a:	bf0c      	ite	eq
 c00c94c:	f04f 0e06 	moveq.w	lr, #6
 c00c950:	f04f 0e07 	movne.w	lr, #7
 c00c954:	fa0e fc0c 	lsl.w	ip, lr, ip
 c00c958:	ea47 070c 	orr.w	r7, r7, ip
        EXTI->EXTICR[position >> 2U] = temp;
 c00c95c:	662f      	str	r7, [r5, #96]	@ 0x60

        /* Clear EXTI line configuration */
        temp = EXTI->IMR1;
        temp &= ~(iocurrent);
 c00c95e:	ea6f 070a 	mvn.w	r7, sl
        temp = EXTI->IMR1;
 c00c962:	4d4e      	ldr	r5, [pc, #312]	@ (c00ca9c <HAL_GPIO_Init+0x20c>)
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 c00c964:	03de      	lsls	r6, r3, #15
        temp = EXTI->IMR1;
 c00c966:	f8d5 5080 	ldr.w	r5, [r5, #128]	@ 0x80
        {
          temp |= iocurrent;
        }
        EXTI->IMR1 = temp;
 c00c96a:	4e4c      	ldr	r6, [pc, #304]	@ (c00ca9c <HAL_GPIO_Init+0x20c>)
        temp &= ~(iocurrent);
 c00c96c:	bf54      	ite	pl
 c00c96e:	403d      	andpl	r5, r7
          temp |= iocurrent;
 c00c970:	ea4a 0505 	orrmi.w	r5, sl, r5
        EXTI->IMR1 = temp;
 c00c974:	f8c6 5080 	str.w	r5, [r6, #128]	@ 0x80

        temp = EXTI->EMR1;
 c00c978:	f8d6 5084 	ldr.w	r5, [r6, #132]	@ 0x84
        temp &= ~(iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 c00c97c:	039e      	lsls	r6, r3, #14
        {
          temp |= iocurrent;
        }
        EXTI->EMR1 = temp;
 c00c97e:	4e47      	ldr	r6, [pc, #284]	@ (c00ca9c <HAL_GPIO_Init+0x20c>)
        temp &= ~(iocurrent);
 c00c980:	bf54      	ite	pl
 c00c982:	403d      	andpl	r5, r7
          temp |= iocurrent;
 c00c984:	ea4a 0505 	orrmi.w	r5, sl, r5
        EXTI->EMR1 = temp;
 c00c988:	f8c6 5084 	str.w	r5, [r6, #132]	@ 0x84

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 c00c98c:	6835      	ldr	r5, [r6, #0]
        temp &= ~(iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 c00c98e:	02de      	lsls	r6, r3, #11
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
 c00c990:	4e42      	ldr	r6, [pc, #264]	@ (c00ca9c <HAL_GPIO_Init+0x20c>)
        temp &= ~(iocurrent);
 c00c992:	bf54      	ite	pl
 c00c994:	403d      	andpl	r5, r7
          temp |= iocurrent;
 c00c996:	ea4a 0505 	orrmi.w	r5, sl, r5
        EXTI->RTSR1 = temp;
 c00c99a:	6035      	str	r5, [r6, #0]

        temp = EXTI->FTSR1;
 c00c99c:	6875      	ldr	r5, [r6, #4]
        temp &= ~(iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 c00c99e:	029b      	lsls	r3, r3, #10
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
 c00c9a0:	4b3e      	ldr	r3, [pc, #248]	@ (c00ca9c <HAL_GPIO_Init+0x20c>)
        temp &= ~(iocurrent);
 c00c9a2:	bf54      	ite	pl
 c00c9a4:	403d      	andpl	r5, r7
          temp |= iocurrent;
 c00c9a6:	ea4a 0505 	orrmi.w	r5, sl, r5
        EXTI->FTSR1 = temp;
 c00c9aa:	605d      	str	r5, [r3, #4]
      }
    }

    position++;
 c00c9ac:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0U)
 c00c9ae:	fa34 f302 	lsrs.w	r3, r4, r2
 c00c9b2:	f47f af76 	bne.w	c00c8a2 <HAL_GPIO_Init+0x12>
  }
}
 c00c9b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp = GPIOx->OSPEEDR;
 c00c9ba:	f8d0 b008 	ldr.w	fp, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 c00c9be:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 c00c9c0:	ea0b 0b07 	and.w	fp, fp, r7
        temp |= (GPIO_Init->Speed << (position * 2U));
 c00c9c4:	fa06 fa0c 	lsl.w	sl, r6, ip
 c00c9c8:	ea4a 0a0b 	orr.w	sl, sl, fp
        GPIOx->OSPEEDR = temp;
 c00c9cc:	f8c0 a008 	str.w	sl, [r0, #8]
        temp = GPIOx->OTYPER;
 c00c9d0:	f8d0 a004 	ldr.w	sl, [r0, #4]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 c00c9d4:	f1be 0f02 	cmp.w	lr, #2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 c00c9d8:	ea2a 0a05 	bic.w	sl, sl, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 c00c9dc:	ea4f 1513 	mov.w	r5, r3, lsr #4
 c00c9e0:	fa05 f502 	lsl.w	r5, r5, r2
 c00c9e4:	ea45 050a 	orr.w	r5, r5, sl
        GPIOx->OTYPER = temp;
 c00c9e8:	6045      	str	r5, [r0, #4]
      temp = GPIOx->PUPDR;
 c00c9ea:	68c5      	ldr	r5, [r0, #12]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 c00c9ec:	f003 0303 	and.w	r3, r3, #3
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 c00c9f0:	ea05 0507 	and.w	r5, r5, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 c00c9f4:	ea45 0508 	orr.w	r5, r5, r8
      GPIOx->PUPDR = temp;
 c00c9f8:	60c5      	str	r5, [r0, #12]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 c00c9fa:	fa03 f30c 	lsl.w	r3, r3, ip
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 c00c9fe:	d009      	beq.n	c00ca14 <HAL_GPIO_Init+0x184>
      temp = GPIOx->MODER;
 c00ca00:	6805      	ldr	r5, [r0, #0]
    position++;
 c00ca02:	3201      	adds	r2, #1
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 c00ca04:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 c00ca06:	432b      	orrs	r3, r5
      GPIOx->MODER = temp;
 c00ca08:	6003      	str	r3, [r0, #0]
  while (((GPIO_Init->Pin) >> position) != 0U)
 c00ca0a:	fa34 f302 	lsrs.w	r3, r4, r2
 c00ca0e:	f47f af48 	bne.w	c00c8a2 <HAL_GPIO_Init+0x12>
 c00ca12:	e7d0      	b.n	c00c9b6 <HAL_GPIO_Init+0x126>
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 c00ca14:	690e      	ldr	r6, [r1, #16]
        temp &= ~(0x0FUL << ((position & 0x07U) * 4U)) ;
 c00ca16:	f002 0507 	and.w	r5, r2, #7
 c00ca1a:	00ad      	lsls	r5, r5, #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 c00ca1c:	fa06 fe05 	lsl.w	lr, r6, r5
        temp &= ~(0x0FUL << ((position & 0x07U) * 4U)) ;
 c00ca20:	260f      	movs	r6, #15
        temp = GPIOx->AFR[position >> 3U];
 c00ca22:	ea4f 0cd2 	mov.w	ip, r2, lsr #3
 c00ca26:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 c00ca2a:	f8dc 8020 	ldr.w	r8, [ip, #32]
        temp &= ~(0x0FUL << ((position & 0x07U) * 4U)) ;
 c00ca2e:	fa06 f505 	lsl.w	r5, r6, r5
 c00ca32:	ea28 0505 	bic.w	r5, r8, r5
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 c00ca36:	ea4e 0505 	orr.w	r5, lr, r5
        GPIOx->AFR[position >> 3U] = temp;
 c00ca3a:	f8cc 5020 	str.w	r5, [ip, #32]
      temp = GPIOx->MODER;
 c00ca3e:	6805      	ldr	r5, [r0, #0]
    position++;
 c00ca40:	3201      	adds	r2, #1
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 c00ca42:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 c00ca44:	432b      	orrs	r3, r5
      GPIOx->MODER = temp;
 c00ca46:	6003      	str	r3, [r0, #0]
  while (((GPIO_Init->Pin) >> position) != 0U)
 c00ca48:	fa34 f302 	lsrs.w	r3, r4, r2
 c00ca4c:	f47f af29 	bne.w	c00c8a2 <HAL_GPIO_Init+0x12>
 c00ca50:	e7b1      	b.n	c00c9b6 <HAL_GPIO_Init+0x126>
        temp |= (GPIO_GET_INDEX(GPIOx) << (8U * (position & 0x03U)));
 c00ca52:	2603      	movs	r6, #3
 c00ca54:	fa06 fc0c 	lsl.w	ip, r6, ip
 c00ca58:	ea47 070c 	orr.w	r7, r7, ip
 c00ca5c:	e77e      	b.n	c00c95c <HAL_GPIO_Init+0xcc>
 c00ca5e:	fa09 fc0c 	lsl.w	ip, r9, ip
 c00ca62:	ea47 070c 	orr.w	r7, r7, ip
 c00ca66:	e779      	b.n	c00c95c <HAL_GPIO_Init+0xcc>
 c00ca68:	f04f 0e02 	mov.w	lr, #2
 c00ca6c:	fa0e fc0c 	lsl.w	ip, lr, ip
 c00ca70:	ea47 070c 	orr.w	r7, r7, ip
 c00ca74:	e772      	b.n	c00c95c <HAL_GPIO_Init+0xcc>
 c00ca76:	f04f 0e04 	mov.w	lr, #4
 c00ca7a:	fa0e fc0c 	lsl.w	ip, lr, ip
 c00ca7e:	ea47 070c 	orr.w	r7, r7, ip
 c00ca82:	e76b      	b.n	c00c95c <HAL_GPIO_Init+0xcc>
 c00ca84:	f04f 0e05 	mov.w	lr, #5
 c00ca88:	fa0e fc0c 	lsl.w	ip, lr, ip
 c00ca8c:	ea47 070c 	orr.w	r7, r7, ip
 c00ca90:	e764      	b.n	c00c95c <HAL_GPIO_Init+0xcc>
 c00ca92:	bf00      	nop
 c00ca94:	52020000 	.word	0x52020000
 c00ca98:	52020800 	.word	0x52020800
 c00ca9c:	5002f400 	.word	0x5002f400
 c00caa0:	52020c00 	.word	0x52020c00
 c00caa4:	52021000 	.word	0x52021000
 c00caa8:	52021400 	.word	0x52021400
 c00caac:	52021800 	.word	0x52021800

0c00cab0 <HAL_GTZC_TZSC_ConfigPeriphAttributes>:
                                                       uint32_t PeriphAttributes)
{
  uint32_t register_address;

  /* check entry parameters */
  if ((PeriphAttributes > (GTZC_TZSC_PERIPH_SEC | GTZC_TZSC_PERIPH_PRIV))
 c00cab0:	f5b1 7f41 	cmp.w	r1, #772	@ 0x304
 c00cab4:	d22a      	bcs.n	c00cb0c <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x5c>
      || (HAL_GTZC_GET_ARRAY_INDEX(PeriphId) >= GTZC_TZSC_PERIPH_NUMBER)
 c00cab6:	ea4f 7c10 	mov.w	ip, r0, lsr #28
 c00caba:	f000 021f 	and.w	r2, r0, #31
 c00cabe:	eb02 134c 	add.w	r3, r2, ip, lsl #5
 c00cac2:	2b32      	cmp	r3, #50	@ 0x32
 c00cac4:	d822      	bhi.n	c00cb0c <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x5c>
      || (((PeriphId & GTZC_PERIPH_ALL) != 0U) && (HAL_GTZC_GET_ARRAY_INDEX(PeriphId) != 0U)))
 c00cac6:	0680      	lsls	r0, r0, #26
{
 c00cac8:	b410      	push	{r4}
      || (((PeriphId & GTZC_PERIPH_ALL) != 0U) && (HAL_GTZC_GET_ARRAY_INDEX(PeriphId) != 0U)))
 c00caca:	d421      	bmi.n	c00cb10 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x60>
    /* common case where only one peripheral is configured */

#if defined(__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
    /* secure configuration */
    register_address = (uint32_t) &(GTZC_TZSC->SECCFGR1) + (4U * GTZC_GET_REG_INDEX(PeriphId));
    if ((PeriphAttributes & GTZC_TZSC_PERIPH_SEC) == GTZC_TZSC_PERIPH_SEC)
 c00cacc:	f240 1001 	movw	r0, #257	@ 0x101
    register_address = (uint32_t) &(GTZC_TZSC->SECCFGR1) + (4U * GTZC_GET_REG_INDEX(PeriphId));
 c00cad0:	4b31      	ldr	r3, [pc, #196]	@ (c00cb98 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xe8>)
    if ((PeriphAttributes & GTZC_TZSC_PERIPH_SEC) == GTZC_TZSC_PERIPH_SEC)
 c00cad2:	4388      	bics	r0, r1
    register_address = (uint32_t) &(GTZC_TZSC->SECCFGR1) + (4U * GTZC_GET_REG_INDEX(PeriphId));
 c00cad4:	4463      	add	r3, ip
 c00cad6:	ea4f 0383 	mov.w	r3, r3, lsl #2
    if ((PeriphAttributes & GTZC_TZSC_PERIPH_SEC) == GTZC_TZSC_PERIPH_SEC)
 c00cada:	d03b      	beq.n	c00cb54 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xa4>
    {
      SET_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
    }
    else if ((PeriphAttributes & GTZC_TZSC_PERIPH_NSEC) == GTZC_TZSC_PERIPH_NSEC)
 c00cadc:	05c8      	lsls	r0, r1, #23
 c00cade:	d507      	bpl.n	c00caf0 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x40>
    {
      CLEAR_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
 c00cae0:	f04f 0c01 	mov.w	ip, #1
 c00cae4:	6818      	ldr	r0, [r3, #0]
 c00cae6:	fa0c fc02 	lsl.w	ip, ip, r2
 c00caea:	ea20 000c 	bic.w	r0, r0, ip
 c00caee:	6018      	str	r0, [r3, #0]
    }
#endif /* defined(__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */

    /* privilege configuration */
    register_address = (uint32_t) &(GTZC_TZSC->PRIVCFGR1) + (4U * GTZC_GET_REG_INDEX(PeriphId));
    if ((PeriphAttributes & GTZC_TZSC_PERIPH_PRIV) == GTZC_TZSC_PERIPH_PRIV)
 c00caf0:	f240 2002 	movw	r0, #514	@ 0x202
 c00caf4:	4388      	bics	r0, r1
 c00caf6:	d047      	beq.n	c00cb88 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xd8>
    {
      SET_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
    }
    else if ((PeriphAttributes & GTZC_TZSC_PERIPH_NPRIV) == GTZC_TZSC_PERIPH_NPRIV)
 c00caf8:	0589      	lsls	r1, r1, #22
 c00cafa:	d525      	bpl.n	c00cb48 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x98>
    {
      CLEAR_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
 c00cafc:	2001      	movs	r0, #1
 c00cafe:	6919      	ldr	r1, [r3, #16]
 c00cb00:	fa00 f202 	lsl.w	r2, r0, r2
 c00cb04:	ea21 0202 	bic.w	r2, r1, r2
 c00cb08:	611a      	str	r2, [r3, #16]
 c00cb0a:	e01d      	b.n	c00cb48 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x98>
    return HAL_ERROR;
 c00cb0c:	2001      	movs	r0, #1
    {
      /* do nothing */
    }
  }
  return HAL_OK;
}
 c00cb0e:	4770      	bx	lr
      || (((PeriphId & GTZC_PERIPH_ALL) != 0U) && (HAL_GTZC_GET_ARRAY_INDEX(PeriphId) != 0U)))
 c00cb10:	b9f3      	cbnz	r3, c00cb50 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xa0>
    if ((PeriphAttributes & GTZC_TZSC_PERIPH_SEC) == GTZC_TZSC_PERIPH_SEC)
 c00cb12:	f240 1201 	movw	r2, #257	@ 0x101
 c00cb16:	438a      	bics	r2, r1
 c00cb18:	d02c      	beq.n	c00cb74 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xc4>
    else if ((PeriphAttributes & GTZC_TZSC_PERIPH_NSEC) == GTZC_TZSC_PERIPH_NSEC)
 c00cb1a:	05ca      	lsls	r2, r1, #23
 c00cb1c:	d506      	bpl.n	c00cb2c <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x7c>
      CLEAR_BIT(GTZC_TZSC->SECCFGR1, TZSC_SECCFGR1_ALL);
 c00cb1e:	4a1f      	ldr	r2, [pc, #124]	@ (c00cb9c <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xec>)
      CLEAR_BIT(GTZC_TZSC->SECCFGR2, TZSC_SECCFGR2_ALL);
 c00cb20:	481f      	ldr	r0, [pc, #124]	@ (c00cba0 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xf0>)
      CLEAR_BIT(GTZC_TZSC->SECCFGR1, TZSC_SECCFGR1_ALL);
 c00cb22:	6914      	ldr	r4, [r2, #16]
 c00cb24:	6113      	str	r3, [r2, #16]
      CLEAR_BIT(GTZC_TZSC->SECCFGR2, TZSC_SECCFGR2_ALL);
 c00cb26:	6953      	ldr	r3, [r2, #20]
 c00cb28:	4018      	ands	r0, r3
 c00cb2a:	6150      	str	r0, [r2, #20]
    if ((PeriphAttributes & GTZC_TZSC_PERIPH_PRIV) == GTZC_TZSC_PERIPH_PRIV)
 c00cb2c:	f240 2302 	movw	r3, #514	@ 0x202
 c00cb30:	438b      	bics	r3, r1
 c00cb32:	d015      	beq.n	c00cb60 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xb0>
    else if ((PeriphAttributes & GTZC_TZSC_PERIPH_NPRIV) == GTZC_TZSC_PERIPH_NPRIV)
 c00cb34:	058c      	lsls	r4, r1, #22
 c00cb36:	d507      	bpl.n	c00cb48 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x98>
      CLEAR_BIT(GTZC_TZSC->PRIVCFGR1, TZSC_PRIVCFGR1_ALL);
 c00cb38:	2100      	movs	r1, #0
 c00cb3a:	4b18      	ldr	r3, [pc, #96]	@ (c00cb9c <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xec>)
      CLEAR_BIT(GTZC_TZSC->PRIVCFGR2, TZSC_PRIVCFGR2_ALL);
 c00cb3c:	4a18      	ldr	r2, [pc, #96]	@ (c00cba0 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xf0>)
      CLEAR_BIT(GTZC_TZSC->PRIVCFGR1, TZSC_PRIVCFGR1_ALL);
 c00cb3e:	6a18      	ldr	r0, [r3, #32]
 c00cb40:	6219      	str	r1, [r3, #32]
      CLEAR_BIT(GTZC_TZSC->PRIVCFGR2, TZSC_PRIVCFGR2_ALL);
 c00cb42:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 c00cb44:	400a      	ands	r2, r1
 c00cb46:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
 c00cb48:	2000      	movs	r0, #0
}
 c00cb4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 c00cb4e:	4770      	bx	lr
    return HAL_ERROR;
 c00cb50:	2001      	movs	r0, #1
 c00cb52:	e7fa      	b.n	c00cb4a <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x9a>
      SET_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
 c00cb54:	2001      	movs	r0, #1
 c00cb56:	681c      	ldr	r4, [r3, #0]
 c00cb58:	4090      	lsls	r0, r2
 c00cb5a:	4320      	orrs	r0, r4
 c00cb5c:	6018      	str	r0, [r3, #0]
 c00cb5e:	e7c7      	b.n	c00caf0 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x40>
      SET_BIT(GTZC_TZSC->PRIVCFGR1, TZSC_PRIVCFGR1_ALL);
 c00cb60:	f04f 31ff 	mov.w	r1, #4294967295
 c00cb64:	4b0d      	ldr	r3, [pc, #52]	@ (c00cb9c <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xec>)
      SET_BIT(GTZC_TZSC->PRIVCFGR2, TZSC_PRIVCFGR2_ALL);
 c00cb66:	4a0f      	ldr	r2, [pc, #60]	@ (c00cba4 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xf4>)
      SET_BIT(GTZC_TZSC->PRIVCFGR1, TZSC_PRIVCFGR1_ALL);
 c00cb68:	6a18      	ldr	r0, [r3, #32]
 c00cb6a:	6219      	str	r1, [r3, #32]
      SET_BIT(GTZC_TZSC->PRIVCFGR2, TZSC_PRIVCFGR2_ALL);
 c00cb6c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 c00cb6e:	430a      	orrs	r2, r1
 c00cb70:	625a      	str	r2, [r3, #36]	@ 0x24
 c00cb72:	e7e9      	b.n	c00cb48 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x98>
      SET_BIT(GTZC_TZSC->SECCFGR1, TZSC_SECCFGR1_ALL);
 c00cb74:	f04f 30ff 	mov.w	r0, #4294967295
 c00cb78:	4b08      	ldr	r3, [pc, #32]	@ (c00cb9c <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xec>)
      SET_BIT(GTZC_TZSC->SECCFGR2, TZSC_SECCFGR2_ALL);
 c00cb7a:	4a0a      	ldr	r2, [pc, #40]	@ (c00cba4 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0xf4>)
      SET_BIT(GTZC_TZSC->SECCFGR1, TZSC_SECCFGR1_ALL);
 c00cb7c:	691c      	ldr	r4, [r3, #16]
 c00cb7e:	6118      	str	r0, [r3, #16]
      SET_BIT(GTZC_TZSC->SECCFGR2, TZSC_SECCFGR2_ALL);
 c00cb80:	6958      	ldr	r0, [r3, #20]
 c00cb82:	4302      	orrs	r2, r0
 c00cb84:	615a      	str	r2, [r3, #20]
 c00cb86:	e7d1      	b.n	c00cb2c <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x7c>
      SET_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
 c00cb88:	2101      	movs	r1, #1
 c00cb8a:	6918      	ldr	r0, [r3, #16]
 c00cb8c:	fa01 f202 	lsl.w	r2, r1, r2
 c00cb90:	4302      	orrs	r2, r0
 c00cb92:	611a      	str	r2, [r3, #16]
 c00cb94:	e7d8      	b.n	c00cb48 <HAL_GTZC_TZSC_ConfigPeriphAttributes+0x98>
 c00cb96:	bf00      	nop
 c00cb98:	1400c904 	.word	0x1400c904
 c00cb9c:	50032400 	.word	0x50032400
 c00cba0:	fff89000 	.word	0xfff89000
 c00cba4:	00076fff 	.word	0x00076fff

0c00cba8 <HAL_GTZC_MPCBB_ConfigMem>:
  uint32_t size_mask;
  uint32_t size_in_superblocks;
  uint32_t i;

  /* check entry parameters */
  if ((!(IS_GTZC_BASE_ADDRESS(SRAM1, MemBaseAddress))
 c00cba8:	f1b0 5f00 	cmp.w	r0, #536870912	@ 0x20000000
{
 c00cbac:	b510      	push	{r4, lr}
  if ((!(IS_GTZC_BASE_ADDRESS(SRAM1, MemBaseAddress))
 c00cbae:	d00b      	beq.n	c00cbc8 <HAL_GTZC_MPCBB_ConfigMem+0x20>
 c00cbb0:	f1b0 5f40 	cmp.w	r0, #805306368	@ 0x30000000
 c00cbb4:	d008      	beq.n	c00cbc8 <HAL_GTZC_MPCBB_ConfigMem+0x20>
       &&  !(IS_GTZC_BASE_ADDRESS(SRAM2, MemBaseAddress)))
 c00cbb6:	4b2e      	ldr	r3, [pc, #184]	@ (c00cc70 <HAL_GTZC_MPCBB_ConfigMem+0xc8>)
 c00cbb8:	4298      	cmp	r0, r3
 c00cbba:	d03c      	beq.n	c00cc36 <HAL_GTZC_MPCBB_ConfigMem+0x8e>
 c00cbbc:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 c00cbc0:	4298      	cmp	r0, r3
 c00cbc2:	d038      	beq.n	c00cc36 <HAL_GTZC_MPCBB_ConfigMem+0x8e>
      || ((pMPCBB_desc->SecureRWIllegalMode != GTZC_MPCBB_SRWILADIS_ENABLE)
          && (pMPCBB_desc->SecureRWIllegalMode != GTZC_MPCBB_SRWILADIS_DISABLE))
      || ((pMPCBB_desc->InvertSecureState != GTZC_MPCBB_INVSECSTATE_NOT_INVERTED)
          && (pMPCBB_desc->InvertSecureState != GTZC_MPCBB_INVSECSTATE_INVERTED)))
  {
    return HAL_ERROR;
 c00cbc4:	2001      	movs	r0, #1
    WRITE_REG(mpcbb_ptr->VCTR[i],
              pMPCBB_desc->AttributeConfig.MPCBB_SecConfig_array[i]);
  }

  return HAL_OK;
}
 c00cbc6:	bd10      	pop	{r4, pc}
      || ((pMPCBB_desc->SecureRWIllegalMode != GTZC_MPCBB_SRWILADIS_ENABLE)
 c00cbc8:	680a      	ldr	r2, [r1, #0]
 c00cbca:	b1aa      	cbz	r2, c00cbf8 <HAL_GTZC_MPCBB_ConfigMem+0x50>
          && (pMPCBB_desc->SecureRWIllegalMode != GTZC_MPCBB_SRWILADIS_DISABLE))
 c00cbcc:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 c00cbd0:	d1f8      	bne.n	c00cbc4 <HAL_GTZC_MPCBB_ConfigMem+0x1c>
      || ((pMPCBB_desc->InvertSecureState != GTZC_MPCBB_INVSECSTATE_NOT_INVERTED)
 c00cbd2:	684b      	ldr	r3, [r1, #4]
 c00cbd4:	b193      	cbz	r3, c00cbfc <HAL_GTZC_MPCBB_ConfigMem+0x54>
          && (pMPCBB_desc->InvertSecureState != GTZC_MPCBB_INVSECSTATE_INVERTED)))
 c00cbd6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 c00cbda:	d1f3      	bne.n	c00cbc4 <HAL_GTZC_MPCBB_ConfigMem+0x1c>
  if (IS_GTZC_BASE_ADDRESS(SRAM1, MemBaseAddress))
 c00cbdc:	f1b0 5f00 	cmp.w	r0, #536870912	@ 0x20000000
 c00cbe0:	d03d      	beq.n	c00cc5e <HAL_GTZC_MPCBB_ConfigMem+0xb6>
 c00cbe2:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
 c00cbe6:	f1b0 5f40 	cmp.w	r0, #805306368	@ 0x30000000
 c00cbea:	d007      	beq.n	c00cbfc <HAL_GTZC_MPCBB_ConfigMem+0x54>
 c00cbec:	f06f 0eff 	mvn.w	lr, #255	@ 0xff
 c00cbf0:	f04f 0c08 	mov.w	ip, #8
    mpcbb_ptr = GTZC_MPCBB2_S;
 c00cbf4:	4c1f      	ldr	r4, [pc, #124]	@ (c00cc74 <HAL_GTZC_MPCBB_ConfigMem+0xcc>)
 c00cbf6:	e006      	b.n	c00cc06 <HAL_GTZC_MPCBB_ConfigMem+0x5e>
      || ((pMPCBB_desc->InvertSecureState != GTZC_MPCBB_INVSECSTATE_NOT_INVERTED)
 c00cbf8:	684a      	ldr	r2, [r1, #4]
 c00cbfa:	bb62      	cbnz	r2, c00cc56 <HAL_GTZC_MPCBB_ConfigMem+0xae>
          && (pMPCBB_desc->InvertSecureState != GTZC_MPCBB_INVSECSTATE_INVERTED)))
 c00cbfc:	f04f 4e7f 	mov.w	lr, #4278190080	@ 0xff000000
 c00cc00:	f04f 0c18 	mov.w	ip, #24
    mpcbb_ptr = GTZC_MPCBB1_S;
 c00cc04:	4c1c      	ldr	r4, [pc, #112]	@ (c00cc78 <HAL_GTZC_MPCBB_ConfigMem+0xd0>)
  for (i = 0U; i < size_in_superblocks; i++)
 c00cc06:	2300      	movs	r3, #0
  MODIFY_REG(mpcbb_ptr->CR,
 c00cc08:	6820      	ldr	r0, [r4, #0]
 c00cc0a:	3104      	adds	r1, #4
 c00cc0c:	f020 4040 	bic.w	r0, r0, #3221225472	@ 0xc0000000
 c00cc10:	4302      	orrs	r2, r0
 c00cc12:	6022      	str	r2, [r4, #0]
  MODIFY_REG(mpcbb_ptr->LCKVTR1, size_mask, pMPCBB_desc->AttributeConfig.MPCBB_LockConfig_array[0]);
 c00cc14:	6922      	ldr	r2, [r4, #16]
 c00cc16:	6e48      	ldr	r0, [r1, #100]	@ 0x64
 c00cc18:	ea02 020e 	and.w	r2, r2, lr
 c00cc1c:	4302      	orrs	r2, r0
 c00cc1e:	6122      	str	r2, [r4, #16]
    WRITE_REG(mpcbb_ptr->VCTR[i],
 c00cc20:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 c00cc24:	f851 0f04 	ldr.w	r0, [r1, #4]!
  for (i = 0U; i < size_in_superblocks; i++)
 c00cc28:	3301      	adds	r3, #1
 c00cc2a:	4563      	cmp	r3, ip
    WRITE_REG(mpcbb_ptr->VCTR[i],
 c00cc2c:	f844 0022 	str.w	r0, [r4, r2, lsl #2]
  for (i = 0U; i < size_in_superblocks; i++)
 c00cc30:	d1f6      	bne.n	c00cc20 <HAL_GTZC_MPCBB_ConfigMem+0x78>
  return HAL_OK;
 c00cc32:	2000      	movs	r0, #0
}
 c00cc34:	bd10      	pop	{r4, pc}
      || ((pMPCBB_desc->SecureRWIllegalMode != GTZC_MPCBB_SRWILADIS_ENABLE)
 c00cc36:	680a      	ldr	r2, [r1, #0]
 c00cc38:	b132      	cbz	r2, c00cc48 <HAL_GTZC_MPCBB_ConfigMem+0xa0>
          && (pMPCBB_desc->SecureRWIllegalMode != GTZC_MPCBB_SRWILADIS_DISABLE))
 c00cc3a:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 c00cc3e:	d1c1      	bne.n	c00cbc4 <HAL_GTZC_MPCBB_ConfigMem+0x1c>
      || ((pMPCBB_desc->InvertSecureState != GTZC_MPCBB_INVSECSTATE_NOT_INVERTED)
 c00cc40:	684b      	ldr	r3, [r1, #4]
 c00cc42:	2b00      	cmp	r3, #0
 c00cc44:	d1c7      	bne.n	c00cbd6 <HAL_GTZC_MPCBB_ConfigMem+0x2e>
 c00cc46:	e7ce      	b.n	c00cbe6 <HAL_GTZC_MPCBB_ConfigMem+0x3e>
 c00cc48:	684a      	ldr	r2, [r1, #4]
 c00cc4a:	2a00      	cmp	r2, #0
 c00cc4c:	d0ce      	beq.n	c00cbec <HAL_GTZC_MPCBB_ConfigMem+0x44>
          && (pMPCBB_desc->InvertSecureState != GTZC_MPCBB_INVSECSTATE_INVERTED)))
 c00cc4e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 c00cc52:	d1b7      	bne.n	c00cbc4 <HAL_GTZC_MPCBB_ConfigMem+0x1c>
 c00cc54:	e7ca      	b.n	c00cbec <HAL_GTZC_MPCBB_ConfigMem+0x44>
 c00cc56:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 c00cc5a:	d0cf      	beq.n	c00cbfc <HAL_GTZC_MPCBB_ConfigMem+0x54>
 c00cc5c:	e7b2      	b.n	c00cbc4 <HAL_GTZC_MPCBB_ConfigMem+0x1c>
 c00cc5e:	f04f 4e7f 	mov.w	lr, #4278190080	@ 0xff000000
 c00cc62:	f04f 0c18 	mov.w	ip, #24
 c00cc66:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
    mpcbb_ptr = GTZC_MPCBB1_S;
 c00cc6a:	4c03      	ldr	r4, [pc, #12]	@ (c00cc78 <HAL_GTZC_MPCBB_ConfigMem+0xd0>)
 c00cc6c:	e7cb      	b.n	c00cc06 <HAL_GTZC_MPCBB_ConfigMem+0x5e>
 c00cc6e:	bf00      	nop
 c00cc70:	20030000 	.word	0x20030000
 c00cc74:	50033000 	.word	0x50033000
 c00cc78:	50032c00 	.word	0x50032c00

0c00cc7c <HAL_GTZC_TZIC_EnableIT>:
HAL_StatusTypeDef HAL_GTZC_TZIC_EnableIT(uint32_t PeriphId)
{
  uint32_t register_address;

  /* check entry parameters */
  if ((HAL_GTZC_GET_ARRAY_INDEX(PeriphId) >= GTZC_TZIC_PERIPH_NUMBER)
 c00cc7c:	0f03      	lsrs	r3, r0, #28
 c00cc7e:	f000 011f 	and.w	r1, r0, #31
 c00cc82:	eb01 1243 	add.w	r2, r1, r3, lsl #5
 c00cc86:	2a47      	cmp	r2, #71	@ 0x47
 c00cc88:	d818      	bhi.n	c00ccbc <HAL_GTZC_TZIC_EnableIT+0x40>
      || (((PeriphId & GTZC_PERIPH_ALL) != 0U) && (HAL_GTZC_GET_ARRAY_INDEX(PeriphId) != 0U)))
 c00cc8a:	0680      	lsls	r0, r0, #26
 c00cc8c:	d50a      	bpl.n	c00cca4 <HAL_GTZC_TZIC_EnableIT+0x28>
 c00cc8e:	b9aa      	cbnz	r2, c00ccbc <HAL_GTZC_TZIC_EnableIT+0x40>
  }

  if ((PeriphId & GTZC_PERIPH_ALL) != 0U)
  {
    /* same configuration is applied to all peripherals */
    WRITE_REG(GTZC_TZIC->IER1, TZIC_IER1_ALL);
 c00cc90:	f04f 30ff 	mov.w	r0, #4294967295
    WRITE_REG(GTZC_TZIC->IER2, TZIC_IER2_ALL);
    WRITE_REG(GTZC_TZIC->IER3, TZIC_IER3_ALL);
 c00cc94:	22ff      	movs	r2, #255	@ 0xff
    WRITE_REG(GTZC_TZIC->IER1, TZIC_IER1_ALL);
 c00cc96:	4b0a      	ldr	r3, [pc, #40]	@ (c00ccc0 <HAL_GTZC_TZIC_EnableIT+0x44>)
    WRITE_REG(GTZC_TZIC->IER2, TZIC_IER2_ALL);
 c00cc98:	490a      	ldr	r1, [pc, #40]	@ (c00ccc4 <HAL_GTZC_TZIC_EnableIT+0x48>)
    WRITE_REG(GTZC_TZIC->IER1, TZIC_IER1_ALL);
 c00cc9a:	6018      	str	r0, [r3, #0]
    WRITE_REG(GTZC_TZIC->IER2, TZIC_IER2_ALL);
 c00cc9c:	6059      	str	r1, [r3, #4]
    /* common case where only one peripheral is configured */
    register_address = (uint32_t) &(GTZC_TZIC->IER1) + (4U * GTZC_GET_REG_INDEX(PeriphId));
    SET_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
  }

  return HAL_OK;
 c00cc9e:	2000      	movs	r0, #0
    WRITE_REG(GTZC_TZIC->IER3, TZIC_IER3_ALL);
 c00cca0:	609a      	str	r2, [r3, #8]
 c00cca2:	4770      	bx	lr
    SET_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
 c00cca4:	2201      	movs	r2, #1
    register_address = (uint32_t) &(GTZC_TZIC->IER1) + (4U * GTZC_GET_REG_INDEX(PeriphId));
 c00cca6:	f103 53a0 	add.w	r3, r3, #335544320	@ 0x14000000
 c00ccaa:	f503 434a 	add.w	r3, r3, #51712	@ 0xca00
 c00ccae:	009b      	lsls	r3, r3, #2
    SET_BIT(*(__IO uint32_t *)register_address, 1UL << GTZC_GET_PERIPH_POS(PeriphId));
 c00ccb0:	6818      	ldr	r0, [r3, #0]
 c00ccb2:	408a      	lsls	r2, r1
 c00ccb4:	4302      	orrs	r2, r0
 c00ccb6:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 c00ccb8:	2000      	movs	r0, #0
 c00ccba:	4770      	bx	lr
    return HAL_ERROR;
 c00ccbc:	2001      	movs	r0, #1
}
 c00ccbe:	4770      	bx	lr
 c00ccc0:	50032800 	.word	0x50032800
 c00ccc4:	3fff6fff 	.word	0x3fff6fff

0c00ccc8 <HAL_GTZC_TZIC_Callback>:
  UNUSED(PeriphId);

  /* NOTE: This function should not be modified. When the callback is needed,
   * the HAL_GTZC_TZIC_Callback is to be implemented in the user file
   */
}
 c00ccc8:	4770      	bx	lr
 c00ccca:	bf00      	nop

0c00cccc <HAL_GTZC_IRQHandler>:
  ier_itsources = READ_REG(GTZC_TZIC->IER1);
 c00cccc:	4a22      	ldr	r2, [pc, #136]	@ (c00cd58 <HAL_GTZC_IRQHandler+0x8c>)
{
 c00ccce:	b538      	push	{r3, r4, r5, lr}
  ier_itsources = READ_REG(GTZC_TZIC->IER1);
 c00ccd0:	6815      	ldr	r5, [r2, #0]
  sr_flags      = READ_REG(GTZC_TZIC->SR1);
 c00ccd2:	6913      	ldr	r3, [r2, #16]
  if (flag != 0U)
 c00ccd4:	401d      	ands	r5, r3
 c00ccd6:	d010      	beq.n	c00ccfa <HAL_GTZC_IRQHandler+0x2e>
    while ((flag >> position) != 0U)
 c00ccd8:	462b      	mov	r3, r5
    position = 0U;
 c00ccda:	2400      	movs	r4, #0
    WRITE_REG(GTZC_TZIC->FCR1, flag);
 c00ccdc:	6215      	str	r5, [r2, #32]
    while ((flag >> position) != 0U)
 c00ccde:	e003      	b.n	c00cce8 <HAL_GTZC_IRQHandler+0x1c>
      position++;
 c00cce0:	3401      	adds	r4, #1
    while ((flag >> position) != 0U)
 c00cce2:	fa35 f304 	lsrs.w	r3, r5, r4
 c00cce6:	d008      	beq.n	c00ccfa <HAL_GTZC_IRQHandler+0x2e>
      if ((flag & (1UL << position)) != 0U)
 c00cce8:	07d9      	lsls	r1, r3, #31
 c00ccea:	d5f9      	bpl.n	c00cce0 <HAL_GTZC_IRQHandler+0x14>
        HAL_GTZC_TZIC_Callback(GTZC_PERIPH_REG1 | position);
 c00ccec:	4620      	mov	r0, r4
      position++;
 c00ccee:	3401      	adds	r4, #1
        HAL_GTZC_TZIC_Callback(GTZC_PERIPH_REG1 | position);
 c00ccf0:	f7ff ffea 	bl	c00ccc8 <HAL_GTZC_TZIC_Callback>
    while ((flag >> position) != 0U)
 c00ccf4:	fa35 f304 	lsrs.w	r3, r5, r4
 c00ccf8:	d1f6      	bne.n	c00cce8 <HAL_GTZC_IRQHandler+0x1c>
  ier_itsources = READ_REG(GTZC_TZIC->IER2);
 c00ccfa:	4a17      	ldr	r2, [pc, #92]	@ (c00cd58 <HAL_GTZC_IRQHandler+0x8c>)
 c00ccfc:	6855      	ldr	r5, [r2, #4]
  sr_flags      = READ_REG(GTZC_TZIC->SR2);
 c00ccfe:	6953      	ldr	r3, [r2, #20]
  if (flag != 0U)
 c00cd00:	401d      	ands	r5, r3
 c00cd02:	d011      	beq.n	c00cd28 <HAL_GTZC_IRQHandler+0x5c>
    while ((flag >> position) != 0U)
 c00cd04:	462b      	mov	r3, r5
    position = 0U;
 c00cd06:	2400      	movs	r4, #0
    WRITE_REG(GTZC_TZIC->FCR2, flag);
 c00cd08:	6255      	str	r5, [r2, #36]	@ 0x24
    while ((flag >> position) != 0U)
 c00cd0a:	e003      	b.n	c00cd14 <HAL_GTZC_IRQHandler+0x48>
      position++;
 c00cd0c:	3401      	adds	r4, #1
    while ((flag >> position) != 0U)
 c00cd0e:	fa35 f304 	lsrs.w	r3, r5, r4
 c00cd12:	d009      	beq.n	c00cd28 <HAL_GTZC_IRQHandler+0x5c>
      if ((flag & (1UL << position)) != 0U)
 c00cd14:	07da      	lsls	r2, r3, #31
 c00cd16:	d5f9      	bpl.n	c00cd0c <HAL_GTZC_IRQHandler+0x40>
        HAL_GTZC_TZIC_Callback(GTZC_PERIPH_REG2 | position);
 c00cd18:	f044 5080 	orr.w	r0, r4, #268435456	@ 0x10000000
      position++;
 c00cd1c:	3401      	adds	r4, #1
        HAL_GTZC_TZIC_Callback(GTZC_PERIPH_REG2 | position);
 c00cd1e:	f7ff ffd3 	bl	c00ccc8 <HAL_GTZC_TZIC_Callback>
    while ((flag >> position) != 0U)
 c00cd22:	fa35 f304 	lsrs.w	r3, r5, r4
 c00cd26:	d1f5      	bne.n	c00cd14 <HAL_GTZC_IRQHandler+0x48>
  ier_itsources = READ_REG(GTZC_TZIC->IER3);
 c00cd28:	4a0b      	ldr	r2, [pc, #44]	@ (c00cd58 <HAL_GTZC_IRQHandler+0x8c>)
 c00cd2a:	6895      	ldr	r5, [r2, #8]
  sr_flags      = READ_REG(GTZC_TZIC->SR3);
 c00cd2c:	6993      	ldr	r3, [r2, #24]
  if (flag != 0U)
 c00cd2e:	401d      	ands	r5, r3
 c00cd30:	d011      	beq.n	c00cd56 <HAL_GTZC_IRQHandler+0x8a>
    while ((flag >> position) != 0U)
 c00cd32:	462b      	mov	r3, r5
    position = 0U;
 c00cd34:	2400      	movs	r4, #0
    WRITE_REG(GTZC_TZIC->FCR3, flag);
 c00cd36:	6295      	str	r5, [r2, #40]	@ 0x28
    while ((flag >> position) != 0U)
 c00cd38:	e003      	b.n	c00cd42 <HAL_GTZC_IRQHandler+0x76>
      position++;
 c00cd3a:	3401      	adds	r4, #1
    while ((flag >> position) != 0U)
 c00cd3c:	fa35 f304 	lsrs.w	r3, r5, r4
 c00cd40:	d009      	beq.n	c00cd56 <HAL_GTZC_IRQHandler+0x8a>
      if ((flag & (1UL << position)) != 0U)
 c00cd42:	07db      	lsls	r3, r3, #31
 c00cd44:	d5f9      	bpl.n	c00cd3a <HAL_GTZC_IRQHandler+0x6e>
        HAL_GTZC_TZIC_Callback(GTZC_PERIPH_REG3 | position);
 c00cd46:	f044 5000 	orr.w	r0, r4, #536870912	@ 0x20000000
      position++;
 c00cd4a:	3401      	adds	r4, #1
        HAL_GTZC_TZIC_Callback(GTZC_PERIPH_REG3 | position);
 c00cd4c:	f7ff ffbc 	bl	c00ccc8 <HAL_GTZC_TZIC_Callback>
    while ((flag >> position) != 0U)
 c00cd50:	fa35 f304 	lsrs.w	r3, r5, r4
 c00cd54:	d1f5      	bne.n	c00cd42 <HAL_GTZC_IRQHandler+0x76>
}
 c00cd56:	bd38      	pop	{r3, r4, r5, pc}
 c00cd58:	50032800 	.word	0x50032800

0c00cd5c <HAL_PWR_ConfigAttributes>:
  /* Check the parameters */
  assert_param(IS_PWR_ITEMS_ATTRIBUTES(Item));
  assert_param(IS_PWR_ATTRIBUTES(Attributes));

  /* Privilege/non-privilege attribute */
  if ((Attributes & PWR_PRIV) == PWR_PRIV)
 c00cd5c:	f240 2302 	movw	r3, #514	@ 0x202
 c00cd60:	438b      	bics	r3, r1
 c00cd62:	d01d      	beq.n	c00cda0 <HAL_PWR_ConfigAttributes+0x44>
  {
    SET_BIT(PWR->PRIVCFGR, PWR_PRIVCFGR_PRIV);
  }
  else if ((Attributes & PWR_NPRIV) == PWR_NPRIV)
 c00cd64:	058a      	lsls	r2, r1, #22
 c00cd66:	d40b      	bmi.n	c00cd80 <HAL_PWR_ConfigAttributes+0x24>


#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)

  /* Secure/non-secure attribute */
  if ((Attributes & PWR_SEC) == PWR_SEC)
 c00cd68:	f240 1301 	movw	r3, #257	@ 0x101
 c00cd6c:	438b      	bics	r3, r1
 c00cd6e:	d012      	beq.n	c00cd96 <HAL_PWR_ConfigAttributes+0x3a>
  {
    SET_BIT(PWR_S->SECCFGR, Item);
  }
  else if ((Attributes & PWR_NSEC) == PWR_NSEC)
 c00cd70:	05cb      	lsls	r3, r1, #23
 c00cd72:	d504      	bpl.n	c00cd7e <HAL_PWR_ConfigAttributes+0x22>
  {
    CLEAR_BIT(PWR_S->SECCFGR, Item);
 c00cd74:	4a0e      	ldr	r2, [pc, #56]	@ (c00cdb0 <HAL_PWR_ConfigAttributes+0x54>)
 c00cd76:	6f93      	ldr	r3, [r2, #120]	@ 0x78
 c00cd78:	ea23 0300 	bic.w	r3, r3, r0
 c00cd7c:	6793      	str	r3, [r2, #120]	@ 0x78
  {
    /* do nothing */
  }

#endif /* __ARM_FEATURE_CMSE */
}
 c00cd7e:	4770      	bx	lr
    CLEAR_BIT(PWR->PRIVCFGR, PWR_PRIVCFGR_PRIV);
 c00cd80:	4a0b      	ldr	r2, [pc, #44]	@ (c00cdb0 <HAL_PWR_ConfigAttributes+0x54>)
 c00cd82:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
 c00cd86:	f023 0301 	bic.w	r3, r3, #1
 c00cd8a:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
  if ((Attributes & PWR_SEC) == PWR_SEC)
 c00cd8e:	f240 1301 	movw	r3, #257	@ 0x101
 c00cd92:	438b      	bics	r3, r1
 c00cd94:	d1ec      	bne.n	c00cd70 <HAL_PWR_ConfigAttributes+0x14>
    SET_BIT(PWR_S->SECCFGR, Item);
 c00cd96:	4a06      	ldr	r2, [pc, #24]	@ (c00cdb0 <HAL_PWR_ConfigAttributes+0x54>)
 c00cd98:	6f93      	ldr	r3, [r2, #120]	@ 0x78
 c00cd9a:	4303      	orrs	r3, r0
 c00cd9c:	6793      	str	r3, [r2, #120]	@ 0x78
 c00cd9e:	4770      	bx	lr
    SET_BIT(PWR->PRIVCFGR, PWR_PRIVCFGR_PRIV);
 c00cda0:	4a03      	ldr	r2, [pc, #12]	@ (c00cdb0 <HAL_PWR_ConfigAttributes+0x54>)
 c00cda2:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
 c00cda6:	f043 0301 	orr.w	r3, r3, #1
 c00cdaa:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 c00cdae:	e7db      	b.n	c00cd68 <HAL_PWR_ConfigAttributes+0xc>
 c00cdb0:	50007000 	.word	0x50007000

0c00cdb4 <HAL_PWREx_GetVoltageRange>:
  * @brief Return Voltage Scaling Range.
  * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE0, PWR_REGULATOR_VOLTAGE_SCALE1 or PWR_REGULATOR_VOLTAGE_SCALE2)
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
  return (PWR->CR1 & PWR_CR1_VOS);
 c00cdb4:	4b02      	ldr	r3, [pc, #8]	@ (c00cdc0 <HAL_PWREx_GetVoltageRange+0xc>)
 c00cdb6:	6818      	ldr	r0, [r3, #0]
}
 c00cdb8:	f400 60c0 	and.w	r0, r0, #1536	@ 0x600
 c00cdbc:	4770      	bx	lr
 c00cdbe:	bf00      	nop
 c00cdc0:	50007000 	.word	0x50007000

0c00cdc4 <HAL_PWREx_ControlVoltageScaling>:
{
  uint32_t wait_loop_index;

  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  uint32_t vos_old = READ_BIT(PWR->CR1, PWR_CR1_VOS);
 c00cdc4:	4a1b      	ldr	r2, [pc, #108]	@ (c00ce34 <HAL_PWREx_ControlVoltageScaling+0x70>)
 c00cdc6:	6813      	ldr	r3, [r2, #0]
uint32_t HAL_PWREx_SMPS_GetEffectiveMode(void)
{
  uint32_t mode;
  uint32_t pwr_sr1;

  pwr_sr1 = READ_REG(PWR->SR1);
 c00cdc8:	6911      	ldr	r1, [r2, #16]
  if (READ_BIT(pwr_sr1, PWR_SR1_SMPSBYPRDY) != 0U)
  {
    mode = PWR_SMPS_BYPASS;
  }
  else if (READ_BIT(pwr_sr1, PWR_SR1_SMPSHPRDY) == 0U)
 c00cdca:	f411 4f10 	tst.w	r1, #36864	@ 0x9000
 c00cdce:	d02c      	beq.n	c00ce2a <HAL_PWREx_ControlVoltageScaling+0x66>
  if (READ_BIT(PWR->CR4, PWR_CR4_SMPSLPEN) == PWR_CR4_SMPSLPEN)
 c00cdd0:	68d1      	ldr	r1, [r2, #12]
 c00cdd2:	0409      	lsls	r1, r1, #16
 c00cdd4:	d429      	bmi.n	c00ce2a <HAL_PWREx_ControlVoltageScaling+0x66>
  uint32_t vos_old = READ_BIT(PWR->CR1, PWR_CR1_VOS);
 c00cdd6:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
  if (vos_old == VoltageScaling)
 c00cdda:	4283      	cmp	r3, r0
 c00cddc:	d023      	beq.n	c00ce26 <HAL_PWREx_ControlVoltageScaling+0x62>
  wait_loop_index = ((PWR_VOSF_SETTING_DELAY_VALUE * (SystemCoreClock / 100000U)) / 10U) + 1U;
 c00cdde:	f04f 0c32 	mov.w	ip, #50	@ 0x32
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 c00cde2:	6813      	ldr	r3, [r2, #0]
  wait_loop_index = ((PWR_VOSF_SETTING_DELAY_VALUE * (SystemCoreClock / 100000U)) / 10U) + 1U;
 c00cde4:	4914      	ldr	r1, [pc, #80]	@ (c00ce38 <HAL_PWREx_ControlVoltageScaling+0x74>)
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 c00cde6:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 c00cdea:	4303      	orrs	r3, r0
 c00cdec:	6013      	str	r3, [r2, #0]
  wait_loop_index = ((PWR_VOSF_SETTING_DELAY_VALUE * (SystemCoreClock / 100000U)) / 10U) + 1U;
 c00cdee:	680b      	ldr	r3, [r1, #0]
 c00cdf0:	4912      	ldr	r1, [pc, #72]	@ (c00ce3c <HAL_PWREx_ControlVoltageScaling+0x78>)
 c00cdf2:	095b      	lsrs	r3, r3, #5
 c00cdf4:	fba1 1303 	umull	r1, r3, r1, r3
 c00cdf8:	09db      	lsrs	r3, r3, #7
 c00cdfa:	fb0c f303 	mul.w	r3, ip, r3
 c00cdfe:	4910      	ldr	r1, [pc, #64]	@ (c00ce40 <HAL_PWREx_ControlVoltageScaling+0x7c>)
  while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 c00ce00:	6950      	ldr	r0, [r2, #20]
  wait_loop_index = ((PWR_VOSF_SETTING_DELAY_VALUE * (SystemCoreClock / 100000U)) / 10U) + 1U;
 c00ce02:	fba1 1303 	umull	r1, r3, r1, r3
  while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 c00ce06:	0540      	lsls	r0, r0, #21
  wait_loop_index = ((PWR_VOSF_SETTING_DELAY_VALUE * (SystemCoreClock / 100000U)) / 10U) + 1U;
 c00ce08:	ea4f 03d3 	mov.w	r3, r3, lsr #3
 c00ce0c:	f103 0301 	add.w	r3, r3, #1
  while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 c00ce10:	d505      	bpl.n	c00ce1e <HAL_PWREx_ControlVoltageScaling+0x5a>
 c00ce12:	e000      	b.n	c00ce16 <HAL_PWREx_ControlVoltageScaling+0x52>
 c00ce14:	b11b      	cbz	r3, c00ce1e <HAL_PWREx_ControlVoltageScaling+0x5a>
 c00ce16:	6951      	ldr	r1, [r2, #20]
    wait_loop_index--;
 c00ce18:	3b01      	subs	r3, #1
  while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 c00ce1a:	0549      	lsls	r1, r1, #21
 c00ce1c:	d4fa      	bmi.n	c00ce14 <HAL_PWREx_ControlVoltageScaling+0x50>
  if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 c00ce1e:	4b05      	ldr	r3, [pc, #20]	@ (c00ce34 <HAL_PWREx_ControlVoltageScaling+0x70>)
 c00ce20:	695b      	ldr	r3, [r3, #20]
 c00ce22:	055b      	lsls	r3, r3, #21
 c00ce24:	d403      	bmi.n	c00ce2e <HAL_PWREx_ControlVoltageScaling+0x6a>
    return HAL_OK;
 c00ce26:	2000      	movs	r0, #0
 c00ce28:	4770      	bx	lr
    return HAL_ERROR;
 c00ce2a:	2001      	movs	r0, #1
}
 c00ce2c:	4770      	bx	lr
    return HAL_TIMEOUT;
 c00ce2e:	2003      	movs	r0, #3
 c00ce30:	4770      	bx	lr
 c00ce32:	bf00      	nop
 c00ce34:	50007000 	.word	0x50007000
 c00ce38:	30000000 	.word	0x30000000
 c00ce3c:	0a7c5ac5 	.word	0x0a7c5ac5
 c00ce40:	cccccccd 	.word	0xcccccccd

0c00ce44 <HAL_PWREx_EnableVddIO2>:
  SET_BIT(PWR->CR2, PWR_CR2_IOSV);
 c00ce44:	4a02      	ldr	r2, [pc, #8]	@ (c00ce50 <HAL_PWREx_EnableVddIO2+0xc>)
 c00ce46:	6853      	ldr	r3, [r2, #4]
 c00ce48:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 c00ce4c:	6053      	str	r3, [r2, #4]
}
 c00ce4e:	4770      	bx	lr
 c00ce50:	50007000 	.word	0x50007000

0c00ce54 <HAL_PWREx_DisableUCPDDeadBattery>:
  SET_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 c00ce54:	4a02      	ldr	r2, [pc, #8]	@ (c00ce60 <HAL_PWREx_DisableUCPDDeadBattery+0xc>)
 c00ce56:	6893      	ldr	r3, [r2, #8]
 c00ce58:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 c00ce5c:	6093      	str	r3, [r2, #8]
}
 c00ce5e:	4770      	bx	lr
 c00ce60:	50007000 	.word	0x50007000

0c00ce64 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 c00ce64:	b530      	push	{r4, r5, lr}
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
  uint32_t vos;

  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 c00ce66:	4c1e      	ldr	r4, [pc, #120]	@ (c00cee0 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
{
 c00ce68:	4605      	mov	r5, r0
  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 c00ce6a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
{
 c00ce6c:	b083      	sub	sp, #12
  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 c00ce6e:	00db      	lsls	r3, r3, #3
 c00ce70:	d521      	bpl.n	c00ceb6 <RCC_SetFlashLatencyFromMSIRange+0x52>
  {
    vos = HAL_PWREx_GetVoltageRange();
 c00ce72:	f7ff ff9f 	bl	c00cdb4 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE0) || (vos == PWR_REGULATOR_VOLTAGE_SCALE1))
 c00ce76:	f430 7300 	bics.w	r3, r0, #512	@ 0x200
 c00ce7a:	d015      	beq.n	c00cea8 <RCC_SetFlashLatencyFromMSIRange+0x44>
    }
    /* else MSI <= 16Mhz default FLASH_LATENCY_0 0WS */
  }
  else
  {
    if (msirange > RCC_MSIRANGE_8)
 c00ce7c:	2d80      	cmp	r5, #128	@ 0x80
 c00ce7e:	d82a      	bhi.n	c00ced6 <RCC_SetFlashLatencyFromMSIRange+0x72>
      /* MSI > 16Mhz */
      latency = FLASH_LATENCY_3; /* 3WS */
    }
    else
    {
      if (msirange == RCC_MSIRANGE_8)
 c00ce80:	d02b      	beq.n	c00ceda <RCC_SetFlashLatencyFromMSIRange+0x76>
      {
        /* MSI 16Mhz */
        latency = FLASH_LATENCY_2; /* 2WS */
      }
      else if (msirange == RCC_MSIRANGE_7)
 c00ce82:	f1a5 0370 	sub.w	r3, r5, #112	@ 0x70
 c00ce86:	fab3 f383 	clz	r3, r3
 c00ce8a:	095b      	lsrs	r3, r3, #5
        /* MSI < 8Mhz default FLASH_LATENCY_0 0WS */
      }
    }
  }

  __HAL_FLASH_SET_LATENCY(latency);
 c00ce8c:	4915      	ldr	r1, [pc, #84]	@ (c00cee4 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 c00ce8e:	680a      	ldr	r2, [r1, #0]
 c00ce90:	f022 020f 	bic.w	r2, r2, #15
 c00ce94:	431a      	orrs	r2, r3
 c00ce96:	600a      	str	r2, [r1, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
     memory by reading the FLASH_ACR register */
  if ((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 c00ce98:	6808      	ldr	r0, [r1, #0]
 c00ce9a:	f000 000f 	and.w	r0, r0, #15
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 c00ce9e:	1ac0      	subs	r0, r0, r3
 c00cea0:	bf18      	it	ne
 c00cea2:	2001      	movne	r0, #1
 c00cea4:	b003      	add	sp, #12
 c00cea6:	bd30      	pop	{r4, r5, pc}
    if (msirange > RCC_MSIRANGE_8)
 c00cea8:	2d80      	cmp	r5, #128	@ 0x80
 c00ceaa:	d9ef      	bls.n	c00ce8c <RCC_SetFlashLatencyFromMSIRange+0x28>
        latency = FLASH_LATENCY_2; /* 2WS */
 c00ceac:	2da1      	cmp	r5, #161	@ 0xa1
 c00ceae:	bf34      	ite	cc
 c00ceb0:	2301      	movcc	r3, #1
 c00ceb2:	2302      	movcs	r3, #2
 c00ceb4:	e7ea      	b.n	c00ce8c <RCC_SetFlashLatencyFromMSIRange+0x28>
    __HAL_RCC_PWR_CLK_ENABLE();
 c00ceb6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 c00ceb8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 c00cebc:	65a3      	str	r3, [r4, #88]	@ 0x58
 c00cebe:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 c00cec0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 c00cec4:	9301      	str	r3, [sp, #4]
 c00cec6:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 c00cec8:	f7ff ff74 	bl	c00cdb4 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 c00cecc:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 c00cece:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 c00ced2:	65a3      	str	r3, [r4, #88]	@ 0x58
 c00ced4:	e7cf      	b.n	c00ce76 <RCC_SetFlashLatencyFromMSIRange+0x12>
      latency = FLASH_LATENCY_3; /* 3WS */
 c00ced6:	2303      	movs	r3, #3
 c00ced8:	e7d8      	b.n	c00ce8c <RCC_SetFlashLatencyFromMSIRange+0x28>
        latency = FLASH_LATENCY_2; /* 2WS */
 c00ceda:	2302      	movs	r3, #2
 c00cedc:	e7d6      	b.n	c00ce8c <RCC_SetFlashLatencyFromMSIRange+0x28>
 c00cede:	bf00      	nop
 c00cee0:	50021000 	.word	0x50021000
 c00cee4:	50022000 	.word	0x50022000

0c00cee8 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 c00cee8:	4a28      	ldr	r2, [pc, #160]	@ (c00cf8c <HAL_RCC_GetSysClockFreq+0xa4>)
 c00ceea:	6893      	ldr	r3, [r2, #8]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 c00ceec:	68d2      	ldr	r2, [r2, #12]
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 c00ceee:	f013 030c 	ands.w	r3, r3, #12
 c00cef2:	d00b      	beq.n	c00cf0c <HAL_RCC_GetSysClockFreq+0x24>
 c00cef4:	2b0c      	cmp	r3, #12
 c00cef6:	d03b      	beq.n	c00cf70 <HAL_RCC_GetSysClockFreq+0x88>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 c00cef8:	f46f 7288 	mvn.w	r2, #272	@ 0x110
 c00cefc:	fa42 f303 	asr.w	r3, r2, r3
    sysclockfreq = HSE_VALUE;
 c00cf00:	f013 0f01 	tst.w	r3, #1
 c00cf04:	4822      	ldr	r0, [pc, #136]	@ (c00cf90 <HAL_RCC_GetSysClockFreq+0xa8>)
 c00cf06:	bf18      	it	ne
 c00cf08:	2000      	movne	r0, #0
 c00cf0a:	4770      	bx	lr
    if (READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 c00cf0c:	4a1f      	ldr	r2, [pc, #124]	@ (c00cf8c <HAL_RCC_GetSysClockFreq+0xa4>)
 c00cf0e:	6811      	ldr	r1, [r2, #0]
 c00cf10:	0709      	lsls	r1, r1, #28
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 c00cf12:	bf54      	ite	pl
 c00cf14:	f8d2 2094 	ldrpl.w	r2, [r2, #148]	@ 0x94
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 c00cf18:	6812      	ldrmi	r2, [r2, #0]
    msirange = MSIRangeTable[msirange];
 c00cf1a:	491e      	ldr	r1, [pc, #120]	@ (c00cf94 <HAL_RCC_GetSysClockFreq+0xac>)
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 c00cf1c:	bf54      	ite	pl
 c00cf1e:	f3c2 2203 	ubfxpl	r2, r2, #8, #4
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 c00cf22:	f3c2 1203 	ubfxmi	r2, r2, #4, #4
    msirange = MSIRangeTable[msirange];
 c00cf26:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 c00cf2a:	b303      	cbz	r3, c00cf6e <HAL_RCC_GetSysClockFreq+0x86>
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 c00cf2c:	2b0c      	cmp	r3, #12
 c00cf2e:	d11d      	bne.n	c00cf6c <HAL_RCC_GetSysClockFreq+0x84>
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c00cf30:	4916      	ldr	r1, [pc, #88]	@ (c00cf8c <HAL_RCC_GetSysClockFreq+0xa4>)
 c00cf32:	68ca      	ldr	r2, [r1, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00cf34:	68cb      	ldr	r3, [r1, #12]
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c00cf36:	f002 0203 	and.w	r2, r2, #3
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00cf3a:	f3c3 1303 	ubfx	r3, r3, #4, #4
    switch (pllsource)
 c00cf3e:	2a02      	cmp	r2, #2
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00cf40:	f103 0301 	add.w	r3, r3, #1
    switch (pllsource)
 c00cf44:	d001      	beq.n	c00cf4a <HAL_RCC_GetSysClockFreq+0x62>
 c00cf46:	2a03      	cmp	r2, #3
 c00cf48:	d118      	bne.n	c00cf7c <HAL_RCC_GetSysClockFreq+0x94>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 c00cf4a:	4a11      	ldr	r2, [pc, #68]	@ (c00cf90 <HAL_RCC_GetSysClockFreq+0xa8>)
 c00cf4c:	68c8      	ldr	r0, [r1, #12]
 c00cf4e:	fbb2 f3f3 	udiv	r3, r2, r3
 c00cf52:	f3c0 2006 	ubfx	r0, r0, #8, #7
 c00cf56:	fb03 f000 	mul.w	r0, r3, r0
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U) * 2U;
 c00cf5a:	4b0c      	ldr	r3, [pc, #48]	@ (c00cf8c <HAL_RCC_GetSysClockFreq+0xa4>)
 c00cf5c:	68db      	ldr	r3, [r3, #12]
 c00cf5e:	f3c3 6341 	ubfx	r3, r3, #25, #2
 c00cf62:	3301      	adds	r3, #1
 c00cf64:	005b      	lsls	r3, r3, #1
    sysclockfreq = pllvco / pllr;
 c00cf66:	fbb0 f0f3 	udiv	r0, r0, r3
 c00cf6a:	4770      	bx	lr
  uint32_t msirange = 0U, sysclockfreq = 0U;
 c00cf6c:	2000      	movs	r0, #0
}
 c00cf6e:	4770      	bx	lr
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 c00cf70:	f002 0203 	and.w	r2, r2, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 c00cf74:	2a01      	cmp	r2, #1
 c00cf76:	d0c9      	beq.n	c00cf0c <HAL_RCC_GetSysClockFreq+0x24>
  uint32_t msirange = 0U, sysclockfreq = 0U;
 c00cf78:	2000      	movs	r0, #0
 c00cf7a:	e7d9      	b.n	c00cf30 <HAL_RCC_GetSysClockFreq+0x48>
        pllvco = (msirange / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 c00cf7c:	fbb0 f0f3 	udiv	r0, r0, r3
 c00cf80:	68cb      	ldr	r3, [r1, #12]
 c00cf82:	f3c3 2306 	ubfx	r3, r3, #8, #7
 c00cf86:	fb03 f000 	mul.w	r0, r3, r0
        break;
 c00cf8a:	e7e6      	b.n	c00cf5a <HAL_RCC_GetSysClockFreq+0x72>
 c00cf8c:	50021000 	.word	0x50021000
 c00cf90:	00f42400 	.word	0x00f42400
 c00cf94:	0c011a38 	.word	0x0c011a38

0c00cf98 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
 c00cf98:	2800      	cmp	r0, #0
 c00cf9a:	f000 83bd 	beq.w	c00d718 <HAL_RCC_OscConfig+0x780>
{
 c00cf9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 c00cfa2:	4aa4      	ldr	r2, [pc, #656]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 c00cfa4:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 c00cfa6:	6895      	ldr	r5, [r2, #8]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 c00cfa8:	68d6      	ldr	r6, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 c00cfaa:	06df      	lsls	r7, r3, #27
 c00cfac:	4604      	mov	r4, r0
{
 c00cfae:	b082      	sub	sp, #8
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 c00cfb0:	f005 050c 	and.w	r5, r5, #12
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 c00cfb4:	f006 0603 	and.w	r6, r6, #3
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 c00cfb8:	d534      	bpl.n	c00d024 <HAL_RCC_OscConfig+0x8c>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 c00cfba:	2d00      	cmp	r5, #0
 c00cfbc:	f000 817a 	beq.w	c00d2b4 <HAL_RCC_OscConfig+0x31c>
 c00cfc0:	2d0c      	cmp	r5, #12
 c00cfc2:	f000 8174 	beq.w	c00d2ae <HAL_RCC_OscConfig+0x316>
      if (RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 c00cfc6:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_MSI_ENABLE();
 c00cfc8:	4f9a      	ldr	r7, [pc, #616]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
      if (RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 c00cfca:	2b00      	cmp	r3, #0
 c00cfcc:	f000 81fb 	beq.w	c00d3c6 <HAL_RCC_OscConfig+0x42e>
        __HAL_RCC_MSI_ENABLE();
 c00cfd0:	683b      	ldr	r3, [r7, #0]
 c00cfd2:	f043 0301 	orr.w	r3, r3, #1
 c00cfd6:	603b      	str	r3, [r7, #0]
        tickstart = HAL_GetTick();
 c00cfd8:	f7ff fbde 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 c00cfdc:	683b      	ldr	r3, [r7, #0]
        tickstart = HAL_GetTick();
 c00cfde:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 c00cfe0:	079a      	lsls	r2, r3, #30
 c00cfe2:	d40c      	bmi.n	c00cffe <HAL_RCC_OscConfig+0x66>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 c00cfe4:	f7ff fbd8 	bl	c00c798 <HAL_GetTick>
 c00cfe8:	eba0 0008 	sub.w	r0, r0, r8
 c00cfec:	2802      	cmp	r0, #2
 c00cfee:	d903      	bls.n	c00cff8 <HAL_RCC_OscConfig+0x60>
            if (READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 c00cff0:	683b      	ldr	r3, [r7, #0]
 c00cff2:	079b      	lsls	r3, r3, #30
 c00cff4:	f140 81fe 	bpl.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 c00cff8:	683b      	ldr	r3, [r7, #0]
 c00cffa:	0799      	lsls	r1, r3, #30
 c00cffc:	d5f2      	bpl.n	c00cfe4 <HAL_RCC_OscConfig+0x4c>
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 c00cffe:	4b8d      	ldr	r3, [pc, #564]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d000:	681a      	ldr	r2, [r3, #0]
 c00d002:	f042 0208 	orr.w	r2, r2, #8
 c00d006:	601a      	str	r2, [r3, #0]
 c00d008:	681a      	ldr	r2, [r3, #0]
 c00d00a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 c00d00c:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 c00d010:	430a      	orrs	r2, r1
 c00d012:	601a      	str	r2, [r3, #0]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 c00d014:	685a      	ldr	r2, [r3, #4]
 c00d016:	6a21      	ldr	r1, [r4, #32]
 c00d018:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 c00d01c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 c00d020:	605a      	str	r2, [r3, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 c00d022:	6823      	ldr	r3, [r4, #0]
 c00d024:	07da      	lsls	r2, r3, #31
 c00d026:	d52e      	bpl.n	c00d086 <HAL_RCC_OscConfig+0xee>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 c00d028:	2d08      	cmp	r5, #8
 c00d02a:	f000 81c2 	beq.w	c00d3b2 <HAL_RCC_OscConfig+0x41a>
 c00d02e:	2d0c      	cmp	r5, #12
 c00d030:	f000 81bc 	beq.w	c00d3ac <HAL_RCC_OscConfig+0x414>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 c00d034:	6863      	ldr	r3, [r4, #4]
 c00d036:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 c00d03a:	f000 81df 	beq.w	c00d3fc <HAL_RCC_OscConfig+0x464>
 c00d03e:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 c00d042:	f000 8316 	beq.w	c00d672 <HAL_RCC_OscConfig+0x6da>
 c00d046:	4f7b      	ldr	r7, [pc, #492]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d048:	683a      	ldr	r2, [r7, #0]
 c00d04a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 c00d04e:	603a      	str	r2, [r7, #0]
 c00d050:	683a      	ldr	r2, [r7, #0]
 c00d052:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 c00d056:	603a      	str	r2, [r7, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 c00d058:	2b00      	cmp	r3, #0
 c00d05a:	f040 81d4 	bne.w	c00d406 <HAL_RCC_OscConfig+0x46e>
        tickstart = HAL_GetTick();
 c00d05e:	f7ff fb9b 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 c00d062:	683b      	ldr	r3, [r7, #0]
        tickstart = HAL_GetTick();
 c00d064:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 c00d066:	0399      	lsls	r1, r3, #14
 c00d068:	d50c      	bpl.n	c00d084 <HAL_RCC_OscConfig+0xec>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 c00d06a:	f7ff fb95 	bl	c00c798 <HAL_GetTick>
 c00d06e:	eba0 0008 	sub.w	r0, r0, r8
 c00d072:	2864      	cmp	r0, #100	@ 0x64
 c00d074:	d903      	bls.n	c00d07e <HAL_RCC_OscConfig+0xe6>
            if (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 c00d076:	683b      	ldr	r3, [r7, #0]
 c00d078:	039a      	lsls	r2, r3, #14
 c00d07a:	f100 81bb 	bmi.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 c00d07e:	683b      	ldr	r3, [r7, #0]
 c00d080:	039b      	lsls	r3, r3, #14
 c00d082:	d4f2      	bmi.n	c00d06a <HAL_RCC_OscConfig+0xd2>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 c00d084:	6823      	ldr	r3, [r4, #0]
 c00d086:	0799      	lsls	r1, r3, #30
 c00d088:	f100 80e8 	bmi.w	c00d25c <HAL_RCC_OscConfig+0x2c4>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 c00d08c:	071a      	lsls	r2, r3, #28
 c00d08e:	d52b      	bpl.n	c00d0e8 <HAL_RCC_OscConfig+0x150>
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 c00d090:	6963      	ldr	r3, [r4, #20]
 c00d092:	2b00      	cmp	r3, #0
 c00d094:	f000 816d 	beq.w	c00d372 <HAL_RCC_OscConfig+0x3da>
      if (RCC_OscInitStruct->LSIDiv == RCC_LSI_DIV1)
 c00d098:	69a3      	ldr	r3, [r4, #24]
        CLEAR_BIT(RCC->CSR, RCC_CSR_LSIPRE);
 c00d09a:	4a66      	ldr	r2, [pc, #408]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
      if (RCC_OscInitStruct->LSIDiv == RCC_LSI_DIV1)
 c00d09c:	2b00      	cmp	r3, #0
 c00d09e:	f040 820e 	bne.w	c00d4be <HAL_RCC_OscConfig+0x526>
        CLEAR_BIT(RCC->CSR, RCC_CSR_LSIPRE);
 c00d0a2:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 c00d0a6:	f023 0310 	bic.w	r3, r3, #16
 c00d0aa:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
      __HAL_RCC_LSI_ENABLE();
 c00d0ae:	4d61      	ldr	r5, [pc, #388]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d0b0:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 c00d0b4:	f043 0301 	orr.w	r3, r3, #1
 c00d0b8:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
      tickstart = HAL_GetTick();
 c00d0bc:	f7ff fb6c 	bl	c00c798 <HAL_GetTick>
      while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 c00d0c0:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
      tickstart = HAL_GetTick();
 c00d0c4:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 c00d0c6:	079b      	lsls	r3, r3, #30
 c00d0c8:	d40d      	bmi.n	c00d0e6 <HAL_RCC_OscConfig+0x14e>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 c00d0ca:	f7ff fb65 	bl	c00c798 <HAL_GetTick>
 c00d0ce:	1b80      	subs	r0, r0, r6
 c00d0d0:	2807      	cmp	r0, #7
 c00d0d2:	d904      	bls.n	c00d0de <HAL_RCC_OscConfig+0x146>
          if (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 c00d0d4:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 c00d0d8:	079f      	lsls	r7, r3, #30
 c00d0da:	f140 818b 	bpl.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
      while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 c00d0de:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 c00d0e2:	0799      	lsls	r1, r3, #30
 c00d0e4:	d5f1      	bpl.n	c00d0ca <HAL_RCC_OscConfig+0x132>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 c00d0e6:	6823      	ldr	r3, [r4, #0]
 c00d0e8:	075d      	lsls	r5, r3, #29
 c00d0ea:	d55c      	bpl.n	c00d1a6 <HAL_RCC_OscConfig+0x20e>
    if (HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 c00d0ec:	4b51      	ldr	r3, [pc, #324]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d0ee:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 c00d0f0:	00d0      	lsls	r0, r2, #3
 c00d0f2:	f140 8121 	bpl.w	c00d338 <HAL_RCC_OscConfig+0x3a0>
    FlagStatus       pwrclkchanged = RESET;
 c00d0f6:	2500      	movs	r5, #0
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 c00d0f8:	4e4f      	ldr	r6, [pc, #316]	@ (c00d238 <HAL_RCC_OscConfig+0x2a0>)
 c00d0fa:	6833      	ldr	r3, [r6, #0]
 c00d0fc:	05d9      	lsls	r1, r3, #23
 c00d0fe:	f140 8222 	bpl.w	c00d546 <HAL_RCC_OscConfig+0x5ae>
    if ((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 c00d102:	68a3      	ldr	r3, [r4, #8]
 c00d104:	07da      	lsls	r2, r3, #31
 c00d106:	f140 8193 	bpl.w	c00d430 <HAL_RCC_OscConfig+0x498>
      if ((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 c00d10a:	075a      	lsls	r2, r3, #29
 c00d10c:	f140 824d 	bpl.w	c00d5aa <HAL_RCC_OscConfig+0x612>
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 c00d110:	4b48      	ldr	r3, [pc, #288]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d112:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
 c00d116:	f042 0204 	orr.w	r2, r2, #4
 c00d11a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 c00d11e:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
 c00d122:	f042 0201 	orr.w	r2, r2, #1
 c00d126:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
      tickstart = HAL_GetTick();
 c00d12a:	f7ff fb35 	bl	c00c798 <HAL_GetTick>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 c00d12e:	4f41      	ldr	r7, [pc, #260]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
      tickstart = HAL_GetTick();
 c00d130:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 c00d132:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d136:	079b      	lsls	r3, r3, #30
 c00d138:	d40f      	bmi.n	c00d15a <HAL_RCC_OscConfig+0x1c2>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 c00d13a:	f241 3888 	movw	r8, #5000	@ 0x1388
 c00d13e:	f7ff fb2b 	bl	c00c798 <HAL_GetTick>
 c00d142:	1b80      	subs	r0, r0, r6
 c00d144:	4540      	cmp	r0, r8
 c00d146:	d904      	bls.n	c00d152 <HAL_RCC_OscConfig+0x1ba>
          if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 c00d148:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d14c:	079a      	lsls	r2, r3, #30
 c00d14e:	f140 8151 	bpl.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 c00d152:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d156:	079b      	lsls	r3, r3, #30
 c00d158:	d5f1      	bpl.n	c00d13e <HAL_RCC_OscConfig+0x1a6>
      if ((RCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 c00d15a:	68a3      	ldr	r3, [r4, #8]
 c00d15c:	0619      	lsls	r1, r3, #24
 c00d15e:	f140 8231 	bpl.w	c00d5c4 <HAL_RCC_OscConfig+0x62c>
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 c00d162:	4f34      	ldr	r7, [pc, #208]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d164:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d168:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 c00d16c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 c00d170:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d174:	0519      	lsls	r1, r3, #20
 c00d176:	d40f      	bmi.n	c00d198 <HAL_RCC_OscConfig+0x200>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 c00d178:	f241 3888 	movw	r8, #5000	@ 0x1388
 c00d17c:	f7ff fb0c 	bl	c00c798 <HAL_GetTick>
 c00d180:	1b80      	subs	r0, r0, r6
 c00d182:	4540      	cmp	r0, r8
 c00d184:	d904      	bls.n	c00d190 <HAL_RCC_OscConfig+0x1f8>
            if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 c00d186:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d18a:	051a      	lsls	r2, r3, #20
 c00d18c:	f140 8132 	bpl.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 c00d190:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d194:	051b      	lsls	r3, r3, #20
 c00d196:	d5f1      	bpl.n	c00d17c <HAL_RCC_OscConfig+0x1e4>
    if (pwrclkchanged == SET)
 c00d198:	b125      	cbz	r5, c00d1a4 <HAL_RCC_OscConfig+0x20c>
      __HAL_RCC_PWR_CLK_DISABLE();
 c00d19a:	4a26      	ldr	r2, [pc, #152]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d19c:	6d93      	ldr	r3, [r2, #88]	@ 0x58
 c00d19e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 c00d1a2:	6593      	str	r3, [r2, #88]	@ 0x58
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 c00d1a4:	6823      	ldr	r3, [r4, #0]
 c00d1a6:	069a      	lsls	r2, r3, #26
 c00d1a8:	d51f      	bpl.n	c00d1ea <HAL_RCC_OscConfig+0x252>
    if (RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 c00d1aa:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
      __HAL_RCC_HSI48_ENABLE();
 c00d1ac:	4d21      	ldr	r5, [pc, #132]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
    if (RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 c00d1ae:	2b00      	cmp	r3, #0
 c00d1b0:	f000 81ac 	beq.w	c00d50c <HAL_RCC_OscConfig+0x574>
      __HAL_RCC_HSI48_ENABLE();
 c00d1b4:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 c00d1b8:	f043 0301 	orr.w	r3, r3, #1
 c00d1bc:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
      tickstart = HAL_GetTick();
 c00d1c0:	f7ff faea 	bl	c00c798 <HAL_GetTick>
      while (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 c00d1c4:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
      tickstart = HAL_GetTick();
 c00d1c8:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 c00d1ca:	079b      	lsls	r3, r3, #30
 c00d1cc:	d40d      	bmi.n	c00d1ea <HAL_RCC_OscConfig+0x252>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 c00d1ce:	f7ff fae3 	bl	c00c798 <HAL_GetTick>
 c00d1d2:	1b80      	subs	r0, r0, r6
 c00d1d4:	2802      	cmp	r0, #2
 c00d1d6:	d904      	bls.n	c00d1e2 <HAL_RCC_OscConfig+0x24a>
          if (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 c00d1d8:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 c00d1dc:	079f      	lsls	r7, r3, #30
 c00d1de:	f140 8109 	bpl.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
      while (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 c00d1e2:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 c00d1e6:	0799      	lsls	r1, r3, #30
 c00d1e8:	d5f1      	bpl.n	c00d1ce <HAL_RCC_OscConfig+0x236>
  if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 c00d1ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 c00d1ec:	2b00      	cmp	r3, #0
 c00d1ee:	d031      	beq.n	c00d254 <HAL_RCC_OscConfig+0x2bc>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 c00d1f0:	4d10      	ldr	r5, [pc, #64]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d1f2:	68aa      	ldr	r2, [r5, #8]
 c00d1f4:	f002 020c 	and.w	r2, r2, #12
 c00d1f8:	2a0c      	cmp	r2, #12
 c00d1fa:	f000 8200 	beq.w	c00d5fe <HAL_RCC_OscConfig+0x666>
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 c00d1fe:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
 c00d200:	682b      	ldr	r3, [r5, #0]
 c00d202:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 c00d206:	602b      	str	r3, [r5, #0]
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 c00d208:	f000 823d 	beq.w	c00d686 <HAL_RCC_OscConfig+0x6ee>
        if (READ_BIT(RCC->CR, (RCC_CR_PLLSAI1RDY | RCC_CR_PLLSAI2RDY)) == 0U)
 c00d20c:	682b      	ldr	r3, [r5, #0]
 c00d20e:	f013 5f20 	tst.w	r3, #671088640	@ 0x28000000
 c00d212:	f000 81d2 	beq.w	c00d5ba <HAL_RCC_OscConfig+0x622>
        __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 c00d216:	4c07      	ldr	r4, [pc, #28]	@ (c00d234 <HAL_RCC_OscConfig+0x29c>)
 c00d218:	68e3      	ldr	r3, [r4, #12]
 c00d21a:	f023 7388 	bic.w	r3, r3, #17825792	@ 0x1100000
 c00d21e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 c00d222:	60e3      	str	r3, [r4, #12]
        tickstart = HAL_GetTick();
 c00d224:	f7ff fab8 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 c00d228:	6823      	ldr	r3, [r4, #0]
        tickstart = HAL_GetTick();
 c00d22a:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 c00d22c:	0199      	lsls	r1, r3, #6
 c00d22e:	d511      	bpl.n	c00d254 <HAL_RCC_OscConfig+0x2bc>
 c00d230:	e004      	b.n	c00d23c <HAL_RCC_OscConfig+0x2a4>
 c00d232:	bf00      	nop
 c00d234:	50021000 	.word	0x50021000
 c00d238:	50007000 	.word	0x50007000
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 c00d23c:	f7ff faac 	bl	c00c798 <HAL_GetTick>
 c00d240:	1b40      	subs	r0, r0, r5
 c00d242:	2802      	cmp	r0, #2
 c00d244:	d903      	bls.n	c00d24e <HAL_RCC_OscConfig+0x2b6>
            if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 c00d246:	6823      	ldr	r3, [r4, #0]
 c00d248:	019a      	lsls	r2, r3, #6
 c00d24a:	f100 80d3 	bmi.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 c00d24e:	6823      	ldr	r3, [r4, #0]
 c00d250:	019b      	lsls	r3, r3, #6
 c00d252:	d4f3      	bmi.n	c00d23c <HAL_RCC_OscConfig+0x2a4>
  return HAL_OK;
 c00d254:	2000      	movs	r0, #0
}
 c00d256:	b002      	add	sp, #8
 c00d258:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 c00d25c:	2d04      	cmp	r5, #4
 c00d25e:	d078      	beq.n	c00d352 <HAL_RCC_OscConfig+0x3ba>
 c00d260:	2d0c      	cmp	r5, #12
 c00d262:	d074      	beq.n	c00d34e <HAL_RCC_OscConfig+0x3b6>
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 c00d264:	68e3      	ldr	r3, [r4, #12]
        __HAL_RCC_HSI_ENABLE();
 c00d266:	4d99      	ldr	r5, [pc, #612]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 c00d268:	2b00      	cmp	r3, #0
 c00d26a:	f000 8137 	beq.w	c00d4dc <HAL_RCC_OscConfig+0x544>
        __HAL_RCC_HSI_ENABLE();
 c00d26e:	682b      	ldr	r3, [r5, #0]
 c00d270:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 c00d274:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 c00d276:	f7ff fa8f 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 c00d27a:	682b      	ldr	r3, [r5, #0]
        tickstart = HAL_GetTick();
 c00d27c:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 c00d27e:	055f      	lsls	r7, r3, #21
 c00d280:	d40b      	bmi.n	c00d29a <HAL_RCC_OscConfig+0x302>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 c00d282:	f7ff fa89 	bl	c00c798 <HAL_GetTick>
 c00d286:	1b80      	subs	r0, r0, r6
 c00d288:	2802      	cmp	r0, #2
 c00d28a:	d903      	bls.n	c00d294 <HAL_RCC_OscConfig+0x2fc>
            if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 c00d28c:	682b      	ldr	r3, [r5, #0]
 c00d28e:	0559      	lsls	r1, r3, #21
 c00d290:	f140 80b0 	bpl.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 c00d294:	682b      	ldr	r3, [r5, #0]
 c00d296:	055a      	lsls	r2, r3, #21
 c00d298:	d5f3      	bpl.n	c00d282 <HAL_RCC_OscConfig+0x2ea>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 c00d29a:	4a8c      	ldr	r2, [pc, #560]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d29c:	6921      	ldr	r1, [r4, #16]
 c00d29e:	6853      	ldr	r3, [r2, #4]
 c00d2a0:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
 c00d2a4:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 c00d2a8:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 c00d2aa:	6823      	ldr	r3, [r4, #0]
 c00d2ac:	e6ee      	b.n	c00d08c <HAL_RCC_OscConfig+0xf4>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_MSI)))
 c00d2ae:	2e01      	cmp	r6, #1
 c00d2b0:	f47f ae89 	bne.w	c00cfc6 <HAL_RCC_OscConfig+0x2e>
      if ((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 c00d2b4:	4b85      	ldr	r3, [pc, #532]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d2b6:	681b      	ldr	r3, [r3, #0]
 c00d2b8:	0798      	lsls	r0, r3, #30
 c00d2ba:	d438      	bmi.n	c00d32e <HAL_RCC_OscConfig+0x396>
        if (RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 c00d2bc:	4b83      	ldr	r3, [pc, #524]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d2be:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 c00d2c0:	681a      	ldr	r2, [r3, #0]
 c00d2c2:	0711      	lsls	r1, r2, #28
 c00d2c4:	bf56      	itet	pl
 c00d2c6:	f8d3 3094 	ldrpl.w	r3, [r3, #148]	@ 0x94
 c00d2ca:	681b      	ldrmi	r3, [r3, #0]
 c00d2cc:	091b      	lsrpl	r3, r3, #4
 c00d2ce:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 c00d2d2:	4298      	cmp	r0, r3
 c00d2d4:	f200 8151 	bhi.w	c00d57a <HAL_RCC_OscConfig+0x5e2>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 c00d2d8:	4b7c      	ldr	r3, [pc, #496]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d2da:	681a      	ldr	r2, [r3, #0]
 c00d2dc:	f042 0208 	orr.w	r2, r2, #8
 c00d2e0:	601a      	str	r2, [r3, #0]
 c00d2e2:	681a      	ldr	r2, [r3, #0]
 c00d2e4:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 c00d2e8:	4302      	orrs	r2, r0
 c00d2ea:	601a      	str	r2, [r3, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 c00d2ec:	685a      	ldr	r2, [r3, #4]
 c00d2ee:	6a21      	ldr	r1, [r4, #32]
 c00d2f0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 c00d2f4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 c00d2f8:	605a      	str	r2, [r3, #4]
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 c00d2fa:	2d00      	cmp	r5, #0
 c00d2fc:	f000 81b3 	beq.w	c00d666 <HAL_RCC_OscConfig+0x6ce>
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00d300:	f7ff fdf2 	bl	c00cee8 <HAL_RCC_GetSysClockFreq>
 c00d304:	4603      	mov	r3, r0
 c00d306:	4a71      	ldr	r2, [pc, #452]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d308:	4971      	ldr	r1, [pc, #452]	@ (c00d4d0 <HAL_RCC_OscConfig+0x538>)
 c00d30a:	6892      	ldr	r2, [r2, #8]
 c00d30c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 c00d310:	5c89      	ldrb	r1, [r1, r2]
        status = HAL_InitTick(uwTickPrio);
 c00d312:	4a70      	ldr	r2, [pc, #448]	@ (c00d4d4 <HAL_RCC_OscConfig+0x53c>)
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00d314:	40cb      	lsrs	r3, r1
        status = HAL_InitTick(uwTickPrio);
 c00d316:	6810      	ldr	r0, [r2, #0]
        SystemCoreClock = HAL_RCC_GetHCLKFreq();
 c00d318:	4a6f      	ldr	r2, [pc, #444]	@ (c00d4d8 <HAL_RCC_OscConfig+0x540>)
 c00d31a:	6013      	str	r3, [r2, #0]
        status = HAL_InitTick(uwTickPrio);
 c00d31c:	f7ff f9f8 	bl	c00c710 <HAL_InitTick>
        if (status != HAL_OK)
 c00d320:	2800      	cmp	r0, #0
 c00d322:	d198      	bne.n	c00d256 <HAL_RCC_OscConfig+0x2be>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 c00d324:	6823      	ldr	r3, [r4, #0]
 c00d326:	07da      	lsls	r2, r3, #31
 c00d328:	f57f aead 	bpl.w	c00d086 <HAL_RCC_OscConfig+0xee>
 c00d32c:	e67c      	b.n	c00d028 <HAL_RCC_OscConfig+0x90>
      if ((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 c00d32e:	69e3      	ldr	r3, [r4, #28]
 c00d330:	2b00      	cmp	r3, #0
 c00d332:	d1c3      	bne.n	c00d2bc <HAL_RCC_OscConfig+0x324>
    return HAL_ERROR;
 c00d334:	2001      	movs	r0, #1
 c00d336:	e78e      	b.n	c00d256 <HAL_RCC_OscConfig+0x2be>
      __HAL_RCC_PWR_CLK_ENABLE();
 c00d338:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
      pwrclkchanged = SET;
 c00d33a:	2501      	movs	r5, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 c00d33c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 c00d340:	659a      	str	r2, [r3, #88]	@ 0x58
 c00d342:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 c00d344:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 c00d348:	9301      	str	r3, [sp, #4]
 c00d34a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 c00d34c:	e6d4      	b.n	c00d0f8 <HAL_RCC_OscConfig+0x160>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 c00d34e:	2e02      	cmp	r6, #2
 c00d350:	d188      	bne.n	c00d264 <HAL_RCC_OscConfig+0x2cc>
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 c00d352:	4a5e      	ldr	r2, [pc, #376]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d354:	6812      	ldr	r2, [r2, #0]
 c00d356:	0552      	lsls	r2, r2, #21
 c00d358:	d502      	bpl.n	c00d360 <HAL_RCC_OscConfig+0x3c8>
 c00d35a:	68e2      	ldr	r2, [r4, #12]
 c00d35c:	2a00      	cmp	r2, #0
 c00d35e:	d0e9      	beq.n	c00d334 <HAL_RCC_OscConfig+0x39c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 c00d360:	495a      	ldr	r1, [pc, #360]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d362:	6920      	ldr	r0, [r4, #16]
 c00d364:	684a      	ldr	r2, [r1, #4]
 c00d366:	f022 42fe 	bic.w	r2, r2, #2130706432	@ 0x7f000000
 c00d36a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 c00d36e:	604a      	str	r2, [r1, #4]
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 c00d370:	e68c      	b.n	c00d08c <HAL_RCC_OscConfig+0xf4>
      __HAL_RCC_LSI_DISABLE();
 c00d372:	4d56      	ldr	r5, [pc, #344]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d374:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 c00d378:	f023 0301 	bic.w	r3, r3, #1
 c00d37c:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
      tickstart = HAL_GetTick();
 c00d380:	f7ff fa0a 	bl	c00c798 <HAL_GetTick>
      while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 c00d384:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
      tickstart = HAL_GetTick();
 c00d388:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 c00d38a:	079a      	lsls	r2, r3, #30
 c00d38c:	f57f aeab 	bpl.w	c00d0e6 <HAL_RCC_OscConfig+0x14e>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 c00d390:	f7ff fa02 	bl	c00c798 <HAL_GetTick>
 c00d394:	1b80      	subs	r0, r0, r6
 c00d396:	2807      	cmp	r0, #7
 c00d398:	d903      	bls.n	c00d3a2 <HAL_RCC_OscConfig+0x40a>
          if (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 c00d39a:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 c00d39e:	079b      	lsls	r3, r3, #30
 c00d3a0:	d428      	bmi.n	c00d3f4 <HAL_RCC_OscConfig+0x45c>
      while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 c00d3a2:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 c00d3a6:	079f      	lsls	r7, r3, #30
 c00d3a8:	d4f2      	bmi.n	c00d390 <HAL_RCC_OscConfig+0x3f8>
 c00d3aa:	e69c      	b.n	c00d0e6 <HAL_RCC_OscConfig+0x14e>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 c00d3ac:	2e03      	cmp	r6, #3
 c00d3ae:	f47f ae41 	bne.w	c00d034 <HAL_RCC_OscConfig+0x9c>
      if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 c00d3b2:	4a46      	ldr	r2, [pc, #280]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d3b4:	6812      	ldr	r2, [r2, #0]
 c00d3b6:	0397      	lsls	r7, r2, #14
 c00d3b8:	f57f ae65 	bpl.w	c00d086 <HAL_RCC_OscConfig+0xee>
 c00d3bc:	6862      	ldr	r2, [r4, #4]
 c00d3be:	2a00      	cmp	r2, #0
 c00d3c0:	f47f ae61 	bne.w	c00d086 <HAL_RCC_OscConfig+0xee>
 c00d3c4:	e7b6      	b.n	c00d334 <HAL_RCC_OscConfig+0x39c>
        __HAL_RCC_MSI_DISABLE();
 c00d3c6:	683b      	ldr	r3, [r7, #0]
 c00d3c8:	f023 0301 	bic.w	r3, r3, #1
 c00d3cc:	603b      	str	r3, [r7, #0]
        tickstart = HAL_GetTick();
 c00d3ce:	f7ff f9e3 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 c00d3d2:	683b      	ldr	r3, [r7, #0]
        tickstart = HAL_GetTick();
 c00d3d4:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 c00d3d6:	079a      	lsls	r2, r3, #30
 c00d3d8:	d403      	bmi.n	c00d3e2 <HAL_RCC_OscConfig+0x44a>
 c00d3da:	e7a3      	b.n	c00d324 <HAL_RCC_OscConfig+0x38c>
 c00d3dc:	683b      	ldr	r3, [r7, #0]
 c00d3de:	0799      	lsls	r1, r3, #30
 c00d3e0:	d5a0      	bpl.n	c00d324 <HAL_RCC_OscConfig+0x38c>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 c00d3e2:	f7ff f9d9 	bl	c00c798 <HAL_GetTick>
 c00d3e6:	eba0 0008 	sub.w	r0, r0, r8
 c00d3ea:	2802      	cmp	r0, #2
 c00d3ec:	d9f6      	bls.n	c00d3dc <HAL_RCC_OscConfig+0x444>
            if (READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 c00d3ee:	683b      	ldr	r3, [r7, #0]
 c00d3f0:	079b      	lsls	r3, r3, #30
 c00d3f2:	d5f3      	bpl.n	c00d3dc <HAL_RCC_OscConfig+0x444>
              return HAL_TIMEOUT;
 c00d3f4:	2003      	movs	r0, #3
}
 c00d3f6:	b002      	add	sp, #8
 c00d3f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 c00d3fc:	4a33      	ldr	r2, [pc, #204]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d3fe:	6813      	ldr	r3, [r2, #0]
 c00d400:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 c00d404:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 c00d406:	f7ff f9c7 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 c00d40a:	4f30      	ldr	r7, [pc, #192]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
        tickstart = HAL_GetTick();
 c00d40c:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 c00d40e:	683b      	ldr	r3, [r7, #0]
 c00d410:	0399      	lsls	r1, r3, #14
 c00d412:	f53f ae37 	bmi.w	c00d084 <HAL_RCC_OscConfig+0xec>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 c00d416:	f7ff f9bf 	bl	c00c798 <HAL_GetTick>
 c00d41a:	eba0 0008 	sub.w	r0, r0, r8
 c00d41e:	2864      	cmp	r0, #100	@ 0x64
 c00d420:	d902      	bls.n	c00d428 <HAL_RCC_OscConfig+0x490>
            if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 c00d422:	683b      	ldr	r3, [r7, #0]
 c00d424:	039a      	lsls	r2, r3, #14
 c00d426:	d5e5      	bpl.n	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 c00d428:	683b      	ldr	r3, [r7, #0]
 c00d42a:	039b      	lsls	r3, r3, #14
 c00d42c:	d5f3      	bpl.n	c00d416 <HAL_RCC_OscConfig+0x47e>
 c00d42e:	e629      	b.n	c00d084 <HAL_RCC_OscConfig+0xec>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 c00d430:	4e26      	ldr	r6, [pc, #152]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d432:	f8d6 2090 	ldr.w	r2, [r6, #144]	@ 0x90
 c00d436:	f022 0201 	bic.w	r2, r2, #1
 c00d43a:	f8c6 2090 	str.w	r2, [r6, #144]	@ 0x90
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 c00d43e:	f8d6 2090 	ldr.w	r2, [r6, #144]	@ 0x90
 c00d442:	f022 0204 	bic.w	r2, r2, #4
 c00d446:	f8c6 2090 	str.w	r2, [r6, #144]	@ 0x90
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 c00d44a:	2b00      	cmp	r3, #0
 c00d44c:	f47f ae6d 	bne.w	c00d12a <HAL_RCC_OscConfig+0x192>
      tickstart = HAL_GetTick();
 c00d450:	f7ff f9a2 	bl	c00c798 <HAL_GetTick>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 c00d454:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
      tickstart = HAL_GetTick();
 c00d458:	4607      	mov	r7, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 c00d45a:	0799      	lsls	r1, r3, #30
 c00d45c:	d50e      	bpl.n	c00d47c <HAL_RCC_OscConfig+0x4e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 c00d45e:	f241 3888 	movw	r8, #5000	@ 0x1388
 c00d462:	f7ff f999 	bl	c00c798 <HAL_GetTick>
 c00d466:	1bc0      	subs	r0, r0, r7
 c00d468:	4540      	cmp	r0, r8
 c00d46a:	d903      	bls.n	c00d474 <HAL_RCC_OscConfig+0x4dc>
          if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 c00d46c:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 c00d470:	079b      	lsls	r3, r3, #30
 c00d472:	d4bf      	bmi.n	c00d3f4 <HAL_RCC_OscConfig+0x45c>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 c00d474:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 c00d478:	0799      	lsls	r1, r3, #30
 c00d47a:	d4f2      	bmi.n	c00d462 <HAL_RCC_OscConfig+0x4ca>
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN) != 0U)
 c00d47c:	4e13      	ldr	r6, [pc, #76]	@ (c00d4cc <HAL_RCC_OscConfig+0x534>)
 c00d47e:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 c00d482:	061a      	lsls	r2, r3, #24
 c00d484:	f57f ae88 	bpl.w	c00d198 <HAL_RCC_OscConfig+0x200>
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 c00d488:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 c00d48c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 c00d490:	f8c6 3090 	str.w	r3, [r6, #144]	@ 0x90
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 c00d494:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 c00d498:	051a      	lsls	r2, r3, #20
 c00d49a:	f57f ae7d 	bpl.w	c00d198 <HAL_RCC_OscConfig+0x200>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 c00d49e:	f241 3888 	movw	r8, #5000	@ 0x1388
 c00d4a2:	f7ff f979 	bl	c00c798 <HAL_GetTick>
 c00d4a6:	1bc0      	subs	r0, r0, r7
 c00d4a8:	4540      	cmp	r0, r8
 c00d4aa:	d903      	bls.n	c00d4b4 <HAL_RCC_OscConfig+0x51c>
            if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 c00d4ac:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 c00d4b0:	051b      	lsls	r3, r3, #20
 c00d4b2:	d49f      	bmi.n	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 c00d4b4:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 c00d4b8:	0519      	lsls	r1, r3, #20
 c00d4ba:	d4f2      	bmi.n	c00d4a2 <HAL_RCC_OscConfig+0x50a>
 c00d4bc:	e66c      	b.n	c00d198 <HAL_RCC_OscConfig+0x200>
        SET_BIT(RCC->CSR, RCC_CSR_LSIPRE);
 c00d4be:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 c00d4c2:	f043 0310 	orr.w	r3, r3, #16
 c00d4c6:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 c00d4ca:	e5f0      	b.n	c00d0ae <HAL_RCC_OscConfig+0x116>
 c00d4cc:	50021000 	.word	0x50021000
 c00d4d0:	0c011a80 	.word	0x0c011a80
 c00d4d4:	3000012c 	.word	0x3000012c
 c00d4d8:	30000000 	.word	0x30000000
        __HAL_RCC_HSI_DISABLE();
 c00d4dc:	682b      	ldr	r3, [r5, #0]
 c00d4de:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 c00d4e2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 c00d4e4:	f7ff f958 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 c00d4e8:	682b      	ldr	r3, [r5, #0]
        tickstart = HAL_GetTick();
 c00d4ea:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 c00d4ec:	055b      	lsls	r3, r3, #21
 c00d4ee:	d50b      	bpl.n	c00d508 <HAL_RCC_OscConfig+0x570>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 c00d4f0:	f7ff f952 	bl	c00c798 <HAL_GetTick>
 c00d4f4:	1b80      	subs	r0, r0, r6
 c00d4f6:	2802      	cmp	r0, #2
 c00d4f8:	d903      	bls.n	c00d502 <HAL_RCC_OscConfig+0x56a>
            if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 c00d4fa:	682b      	ldr	r3, [r5, #0]
 c00d4fc:	055f      	lsls	r7, r3, #21
 c00d4fe:	f53f af79 	bmi.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 c00d502:	682b      	ldr	r3, [r5, #0]
 c00d504:	0559      	lsls	r1, r3, #21
 c00d506:	d4f3      	bmi.n	c00d4f0 <HAL_RCC_OscConfig+0x558>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 c00d508:	6823      	ldr	r3, [r4, #0]
 c00d50a:	e5bf      	b.n	c00d08c <HAL_RCC_OscConfig+0xf4>
      __HAL_RCC_HSI48_DISABLE();
 c00d50c:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 c00d510:	f023 0301 	bic.w	r3, r3, #1
 c00d514:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
      tickstart = HAL_GetTick();
 c00d518:	f7ff f93e 	bl	c00c798 <HAL_GetTick>
      while (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 c00d51c:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
      tickstart = HAL_GetTick();
 c00d520:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 c00d522:	079a      	lsls	r2, r3, #30
 c00d524:	f57f ae61 	bpl.w	c00d1ea <HAL_RCC_OscConfig+0x252>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 c00d528:	f7ff f936 	bl	c00c798 <HAL_GetTick>
 c00d52c:	1b80      	subs	r0, r0, r6
 c00d52e:	2802      	cmp	r0, #2
 c00d530:	d904      	bls.n	c00d53c <HAL_RCC_OscConfig+0x5a4>
          if (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 c00d532:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 c00d536:	079b      	lsls	r3, r3, #30
 c00d538:	f53f af5c 	bmi.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
      while (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 c00d53c:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 c00d540:	079f      	lsls	r7, r3, #30
 c00d542:	d4f1      	bmi.n	c00d528 <HAL_RCC_OscConfig+0x590>
 c00d544:	e651      	b.n	c00d1ea <HAL_RCC_OscConfig+0x252>
      SET_BIT(PWR->CR1, PWR_CR1_DBP);
 c00d546:	6833      	ldr	r3, [r6, #0]
 c00d548:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 c00d54c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 c00d54e:	f7ff f923 	bl	c00c798 <HAL_GetTick>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 c00d552:	6833      	ldr	r3, [r6, #0]
      tickstart = HAL_GetTick();
 c00d554:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 c00d556:	05db      	lsls	r3, r3, #23
 c00d558:	f53f add3 	bmi.w	c00d102 <HAL_RCC_OscConfig+0x16a>
 c00d55c:	e003      	b.n	c00d566 <HAL_RCC_OscConfig+0x5ce>
 c00d55e:	6833      	ldr	r3, [r6, #0]
 c00d560:	05d9      	lsls	r1, r3, #23
 c00d562:	f53f adce 	bmi.w	c00d102 <HAL_RCC_OscConfig+0x16a>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 c00d566:	f7ff f917 	bl	c00c798 <HAL_GetTick>
 c00d56a:	1bc0      	subs	r0, r0, r7
 c00d56c:	2802      	cmp	r0, #2
 c00d56e:	d9f6      	bls.n	c00d55e <HAL_RCC_OscConfig+0x5c6>
          if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 c00d570:	6833      	ldr	r3, [r6, #0]
 c00d572:	05d8      	lsls	r0, r3, #23
 c00d574:	f57f af3e 	bpl.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
 c00d578:	e7f1      	b.n	c00d55e <HAL_RCC_OscConfig+0x5c6>
          if (RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 c00d57a:	f7ff fc73 	bl	c00ce64 <RCC_SetFlashLatencyFromMSIRange>
 c00d57e:	2800      	cmp	r0, #0
 c00d580:	f47f aed8 	bne.w	c00d334 <HAL_RCC_OscConfig+0x39c>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 c00d584:	4b65      	ldr	r3, [pc, #404]	@ (c00d71c <HAL_RCC_OscConfig+0x784>)
 c00d586:	681a      	ldr	r2, [r3, #0]
 c00d588:	f042 0208 	orr.w	r2, r2, #8
 c00d58c:	601a      	str	r2, [r3, #0]
 c00d58e:	681a      	ldr	r2, [r3, #0]
 c00d590:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 c00d592:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 c00d596:	430a      	orrs	r2, r1
 c00d598:	601a      	str	r2, [r3, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 c00d59a:	685a      	ldr	r2, [r3, #4]
 c00d59c:	6a21      	ldr	r1, [r4, #32]
 c00d59e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 c00d5a2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 c00d5a6:	605a      	str	r2, [r3, #4]
 c00d5a8:	e6aa      	b.n	c00d300 <HAL_RCC_OscConfig+0x368>
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 c00d5aa:	4a5c      	ldr	r2, [pc, #368]	@ (c00d71c <HAL_RCC_OscConfig+0x784>)
 c00d5ac:	f8d2 3090 	ldr.w	r3, [r2, #144]	@ 0x90
 c00d5b0:	f043 0301 	orr.w	r3, r3, #1
 c00d5b4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 c00d5b8:	e5b7      	b.n	c00d12a <HAL_RCC_OscConfig+0x192>
          MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 c00d5ba:	68eb      	ldr	r3, [r5, #12]
 c00d5bc:	f023 0303 	bic.w	r3, r3, #3
 c00d5c0:	60eb      	str	r3, [r5, #12]
 c00d5c2:	e628      	b.n	c00d216 <HAL_RCC_OscConfig+0x27e>
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 c00d5c4:	4f55      	ldr	r7, [pc, #340]	@ (c00d71c <HAL_RCC_OscConfig+0x784>)
 c00d5c6:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d5ca:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 c00d5ce:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 c00d5d2:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d5d6:	0519      	lsls	r1, r3, #20
 c00d5d8:	f57f adde 	bpl.w	c00d198 <HAL_RCC_OscConfig+0x200>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 c00d5dc:	f241 3888 	movw	r8, #5000	@ 0x1388
 c00d5e0:	f7ff f8da 	bl	c00c798 <HAL_GetTick>
 c00d5e4:	1b80      	subs	r0, r0, r6
 c00d5e6:	4540      	cmp	r0, r8
 c00d5e8:	d904      	bls.n	c00d5f4 <HAL_RCC_OscConfig+0x65c>
            if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 c00d5ea:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d5ee:	051a      	lsls	r2, r3, #20
 c00d5f0:	f53f af00 	bmi.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 c00d5f4:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 c00d5f8:	051b      	lsls	r3, r3, #20
 c00d5fa:	d4f1      	bmi.n	c00d5e0 <HAL_RCC_OscConfig+0x648>
 c00d5fc:	e5cc      	b.n	c00d198 <HAL_RCC_OscConfig+0x200>
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_OFF)
 c00d5fe:	2b01      	cmp	r3, #1
 c00d600:	f43f ae98 	beq.w	c00d334 <HAL_RCC_OscConfig+0x39c>
        pll_config = RCC->PLLCFGR;
 c00d604:	68eb      	ldr	r3, [r5, #12]
        if ((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 c00d606:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 c00d608:	f003 0103 	and.w	r1, r3, #3
 c00d60c:	4291      	cmp	r1, r2
 c00d60e:	f47f ae91 	bne.w	c00d334 <HAL_RCC_OscConfig+0x39c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 c00d612:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 c00d614:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 c00d618:	3901      	subs	r1, #1
        if ((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 c00d61a:	ebb2 1f01 	cmp.w	r2, r1, lsl #4
 c00d61e:	f47f ae89 	bne.w	c00d334 <HAL_RCC_OscConfig+0x39c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 c00d622:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 c00d624:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 c00d628:	ebb2 2f01 	cmp.w	r2, r1, lsl #8
 c00d62c:	f47f ae82 	bne.w	c00d334 <HAL_RCC_OscConfig+0x39c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFGR_PLLPDIV_Pos)) ||
 c00d630:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 c00d632:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 c00d636:	ebb2 6fc1 	cmp.w	r2, r1, lsl #27
 c00d63a:	f47f ae7b 	bne.w	c00d334 <HAL_RCC_OscConfig+0x39c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 c00d63e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 c00d640:	f403 01c0 	and.w	r1, r3, #6291456	@ 0x600000
 c00d644:	0852      	lsrs	r2, r2, #1
 c00d646:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFGR_PLLPDIV_Pos)) ||
 c00d648:	ebb1 5f42 	cmp.w	r1, r2, lsl #21
 c00d64c:	f47f ae72 	bne.w	c00d334 <HAL_RCC_OscConfig+0x39c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U) << RCC_PLLCFGR_PLLR_Pos)))
 c00d650:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 c00d652:	f003 63c0 	and.w	r3, r3, #100663296	@ 0x6000000
 c00d656:	0852      	lsrs	r2, r2, #1
 c00d658:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 c00d65a:	ebb3 6f42 	cmp.w	r3, r2, lsl #25
 c00d65e:	bf14      	ite	ne
 c00d660:	2001      	movne	r0, #1
 c00d662:	2000      	moveq	r0, #0
 c00d664:	e5f7      	b.n	c00d256 <HAL_RCC_OscConfig+0x2be>
            if (RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 c00d666:	f7ff fbfd 	bl	c00ce64 <RCC_SetFlashLatencyFromMSIRange>
 c00d66a:	2800      	cmp	r0, #0
 c00d66c:	f43f ae48 	beq.w	c00d300 <HAL_RCC_OscConfig+0x368>
 c00d670:	e660      	b.n	c00d334 <HAL_RCC_OscConfig+0x39c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 c00d672:	4b2a      	ldr	r3, [pc, #168]	@ (c00d71c <HAL_RCC_OscConfig+0x784>)
 c00d674:	681a      	ldr	r2, [r3, #0]
 c00d676:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 c00d67a:	601a      	str	r2, [r3, #0]
 c00d67c:	681a      	ldr	r2, [r3, #0]
 c00d67e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 c00d682:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 c00d684:	e6bf      	b.n	c00d406 <HAL_RCC_OscConfig+0x46e>
        tickstart = HAL_GetTick();
 c00d686:	f7ff f887 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 c00d68a:	682b      	ldr	r3, [r5, #0]
        tickstart = HAL_GetTick();
 c00d68c:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 c00d68e:	0199      	lsls	r1, r3, #6
 c00d690:	d50b      	bpl.n	c00d6aa <HAL_RCC_OscConfig+0x712>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 c00d692:	f7ff f881 	bl	c00c798 <HAL_GetTick>
 c00d696:	1b80      	subs	r0, r0, r6
 c00d698:	2802      	cmp	r0, #2
 c00d69a:	d903      	bls.n	c00d6a4 <HAL_RCC_OscConfig+0x70c>
            if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 c00d69c:	682b      	ldr	r3, [r5, #0]
 c00d69e:	019b      	lsls	r3, r3, #6
 c00d6a0:	f53f aea8 	bmi.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 c00d6a4:	682b      	ldr	r3, [r5, #0]
 c00d6a6:	019f      	lsls	r7, r3, #6
 c00d6a8:	d4f3      	bmi.n	c00d692 <HAL_RCC_OscConfig+0x6fa>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 c00d6aa:	4d1c      	ldr	r5, [pc, #112]	@ (c00d71c <HAL_RCC_OscConfig+0x784>)
 c00d6ac:	4b1c      	ldr	r3, [pc, #112]	@ (c00d720 <HAL_RCC_OscConfig+0x788>)
 c00d6ae:	68e9      	ldr	r1, [r5, #12]
 c00d6b0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 c00d6b2:	400b      	ands	r3, r1
 c00d6b4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 c00d6b6:	4313      	orrs	r3, r2
 c00d6b8:	e9d4 120e 	ldrd	r1, r2, [r4, #56]	@ 0x38
 c00d6bc:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 c00d6c0:	ea43 63c2 	orr.w	r3, r3, r2, lsl #27
 c00d6c4:	3801      	subs	r0, #1
 c00d6c6:	e9d4 1210 	ldrd	r1, r2, [r4, #64]	@ 0x40
 c00d6ca:	0849      	lsrs	r1, r1, #1
 c00d6cc:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
 c00d6d0:	3901      	subs	r1, #1
 c00d6d2:	0852      	lsrs	r2, r2, #1
 c00d6d4:	3a01      	subs	r2, #1
 c00d6d6:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
 c00d6da:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 c00d6de:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_ENABLE();
 c00d6e0:	682b      	ldr	r3, [r5, #0]
 c00d6e2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 c00d6e6:	602b      	str	r3, [r5, #0]
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 c00d6e8:	68eb      	ldr	r3, [r5, #12]
 c00d6ea:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 c00d6ee:	60eb      	str	r3, [r5, #12]
        tickstart = HAL_GetTick();
 c00d6f0:	f7ff f852 	bl	c00c798 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 c00d6f4:	682b      	ldr	r3, [r5, #0]
        tickstart = HAL_GetTick();
 c00d6f6:	4604      	mov	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 c00d6f8:	019a      	lsls	r2, r3, #6
 c00d6fa:	f53f adab 	bmi.w	c00d254 <HAL_RCC_OscConfig+0x2bc>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 c00d6fe:	f7ff f84b 	bl	c00c798 <HAL_GetTick>
 c00d702:	1b00      	subs	r0, r0, r4
 c00d704:	2802      	cmp	r0, #2
 c00d706:	d903      	bls.n	c00d710 <HAL_RCC_OscConfig+0x778>
            if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 c00d708:	682b      	ldr	r3, [r5, #0]
 c00d70a:	019e      	lsls	r6, r3, #6
 c00d70c:	f57f ae72 	bpl.w	c00d3f4 <HAL_RCC_OscConfig+0x45c>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 c00d710:	682b      	ldr	r3, [r5, #0]
 c00d712:	0198      	lsls	r0, r3, #6
 c00d714:	d5f3      	bpl.n	c00d6fe <HAL_RCC_OscConfig+0x766>
 c00d716:	e59d      	b.n	c00d254 <HAL_RCC_OscConfig+0x2bc>
    return HAL_ERROR;
 c00d718:	2001      	movs	r0, #1
}
 c00d71a:	4770      	bx	lr
 c00d71c:	50021000 	.word	0x50021000
 c00d720:	019f800c 	.word	0x019f800c

0c00d724 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
 c00d724:	2800      	cmp	r0, #0
 c00d726:	f000 80b9 	beq.w	c00d89c <HAL_RCC_ClockConfig+0x178>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 c00d72a:	4a8a      	ldr	r2, [pc, #552]	@ (c00d954 <HAL_RCC_ClockConfig+0x230>)
{
 c00d72c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 c00d730:	6813      	ldr	r3, [r2, #0]
 c00d732:	4681      	mov	r9, r0
 c00d734:	f003 030f 	and.w	r3, r3, #15
 c00d738:	428b      	cmp	r3, r1
 c00d73a:	460c      	mov	r4, r1
 c00d73c:	d20c      	bcs.n	c00d758 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
 c00d73e:	6813      	ldr	r3, [r2, #0]
 c00d740:	f023 030f 	bic.w	r3, r3, #15
 c00d744:	430b      	orrs	r3, r1
 c00d746:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 c00d748:	6813      	ldr	r3, [r2, #0]
 c00d74a:	f003 030f 	and.w	r3, r3, #15
 c00d74e:	428b      	cmp	r3, r1
 c00d750:	d002      	beq.n	c00d758 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
 c00d752:	2001      	movs	r0, #1
}
 c00d754:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 c00d758:	f8d9 3000 	ldr.w	r3, [r9]
 c00d75c:	07de      	lsls	r6, r3, #31
 c00d75e:	d54a      	bpl.n	c00d7f6 <HAL_RCC_ClockConfig+0xd2>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 c00d760:	f8d9 6004 	ldr.w	r6, [r9, #4]
 c00d764:	2e03      	cmp	r6, #3
 c00d766:	f000 809b 	beq.w	c00d8a0 <HAL_RCC_ClockConfig+0x17c>
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 c00d76a:	4b7b      	ldr	r3, [pc, #492]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
      if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 c00d76c:	2e02      	cmp	r6, #2
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 c00d76e:	681b      	ldr	r3, [r3, #0]
      if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 c00d770:	f000 8083 	beq.w	c00d87a <HAL_RCC_ClockConfig+0x156>
      else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 c00d774:	2e00      	cmp	r6, #0
 c00d776:	f040 80d0 	bne.w	c00d91a <HAL_RCC_ClockConfig+0x1f6>
        if (READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 c00d77a:	079d      	lsls	r5, r3, #30
 c00d77c:	d5e9      	bpl.n	c00d752 <HAL_RCC_ClockConfig+0x2e>
      pllfreq = HAL_RCC_GetSysClockFreq();
 c00d77e:	f7ff fbb3 	bl	c00cee8 <HAL_RCC_GetSysClockFreq>
      if (pllfreq > 80000000U)
 c00d782:	4b76      	ldr	r3, [pc, #472]	@ (c00d95c <HAL_RCC_ClockConfig+0x238>)
 c00d784:	4298      	cmp	r0, r3
 c00d786:	f240 80c5 	bls.w	c00d914 <HAL_RCC_ClockConfig+0x1f0>
        MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 c00d78a:	4a73      	ldr	r2, [pc, #460]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d78c:	6893      	ldr	r3, [r2, #8]
 c00d78e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 c00d792:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 c00d796:	6093      	str	r3, [r2, #8]
          hpre = RCC_SYSCLK_DIV2;
 c00d798:	f04f 0880 	mov.w	r8, #128	@ 0x80
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 c00d79c:	4d6e      	ldr	r5, [pc, #440]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d79e:	68ab      	ldr	r3, [r5, #8]
 c00d7a0:	f023 0303 	bic.w	r3, r3, #3
 c00d7a4:	4333      	orrs	r3, r6
 c00d7a6:	60ab      	str	r3, [r5, #8]
    tickstart = HAL_GetTick();
 c00d7a8:	f7fe fff6 	bl	c00c798 <HAL_GetTick>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 c00d7ac:	68ab      	ldr	r3, [r5, #8]
 c00d7ae:	f8d9 2004 	ldr.w	r2, [r9, #4]
 c00d7b2:	f003 030c 	and.w	r3, r3, #12
 c00d7b6:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
    tickstart = HAL_GetTick();
 c00d7ba:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 c00d7bc:	d061      	beq.n	c00d882 <HAL_RCC_ClockConfig+0x15e>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 c00d7be:	f241 3788 	movw	r7, #5000	@ 0x1388
 c00d7c2:	e007      	b.n	c00d7d4 <HAL_RCC_ClockConfig+0xb0>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 c00d7c4:	f8d9 2004 	ldr.w	r2, [r9, #4]
 c00d7c8:	0092      	lsls	r2, r2, #2
 c00d7ca:	68ab      	ldr	r3, [r5, #8]
 c00d7cc:	f003 030c 	and.w	r3, r3, #12
 c00d7d0:	4293      	cmp	r3, r2
 c00d7d2:	d056      	beq.n	c00d882 <HAL_RCC_ClockConfig+0x15e>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 c00d7d4:	f7fe ffe0 	bl	c00c798 <HAL_GetTick>
 c00d7d8:	1b83      	subs	r3, r0, r6
 c00d7da:	42bb      	cmp	r3, r7
 c00d7dc:	d9f2      	bls.n	c00d7c4 <HAL_RCC_ClockConfig+0xa0>
        if (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 c00d7de:	68ab      	ldr	r3, [r5, #8]
 c00d7e0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 c00d7e4:	f003 030c 	and.w	r3, r3, #12
 c00d7e8:	ebb3 0f81 	cmp.w	r3, r1, lsl #2
 c00d7ec:	ea4f 0281 	mov.w	r2, r1, lsl #2
 c00d7f0:	d0eb      	beq.n	c00d7ca <HAL_RCC_ClockConfig+0xa6>
          return HAL_TIMEOUT;
 c00d7f2:	2003      	movs	r0, #3
 c00d7f4:	e7ae      	b.n	c00d754 <HAL_RCC_ClockConfig+0x30>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 c00d7f6:	079d      	lsls	r5, r3, #30
 c00d7f8:	d436      	bmi.n	c00d868 <HAL_RCC_ClockConfig+0x144>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 c00d7fa:	4956      	ldr	r1, [pc, #344]	@ (c00d954 <HAL_RCC_ClockConfig+0x230>)
 c00d7fc:	680a      	ldr	r2, [r1, #0]
 c00d7fe:	f002 020f 	and.w	r2, r2, #15
 c00d802:	42a2      	cmp	r2, r4
 c00d804:	d909      	bls.n	c00d81a <HAL_RCC_ClockConfig+0xf6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 c00d806:	680a      	ldr	r2, [r1, #0]
 c00d808:	f022 020f 	bic.w	r2, r2, #15
 c00d80c:	4322      	orrs	r2, r4
 c00d80e:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 c00d810:	680a      	ldr	r2, [r1, #0]
 c00d812:	f002 020f 	and.w	r2, r2, #15
 c00d816:	42a2      	cmp	r2, r4
 c00d818:	d19b      	bne.n	c00d752 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 c00d81a:	075a      	lsls	r2, r3, #29
 c00d81c:	d507      	bpl.n	c00d82e <HAL_RCC_ClockConfig+0x10a>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 c00d81e:	494e      	ldr	r1, [pc, #312]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d820:	f8d9 000c 	ldr.w	r0, [r9, #12]
 c00d824:	688a      	ldr	r2, [r1, #8]
 c00d826:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 c00d82a:	4302      	orrs	r2, r0
 c00d82c:	608a      	str	r2, [r1, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 c00d82e:	071b      	lsls	r3, r3, #28
 c00d830:	d508      	bpl.n	c00d844 <HAL_RCC_ClockConfig+0x120>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 c00d832:	4a49      	ldr	r2, [pc, #292]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d834:	f8d9 1010 	ldr.w	r1, [r9, #16]
 c00d838:	6893      	ldr	r3, [r2, #8]
 c00d83a:	f423 5360 	bic.w	r3, r3, #14336	@ 0x3800
 c00d83e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 c00d842:	6093      	str	r3, [r2, #8]
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00d844:	f7ff fb50 	bl	c00cee8 <HAL_RCC_GetSysClockFreq>
 c00d848:	4603      	mov	r3, r0
 c00d84a:	4a43      	ldr	r2, [pc, #268]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d84c:	4944      	ldr	r1, [pc, #272]	@ (c00d960 <HAL_RCC_ClockConfig+0x23c>)
 c00d84e:	6892      	ldr	r2, [r2, #8]
  return HAL_InitTick(uwTickPrio);
 c00d850:	4844      	ldr	r0, [pc, #272]	@ (c00d964 <HAL_RCC_ClockConfig+0x240>)
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00d852:	f3c2 1203 	ubfx	r2, r2, #4, #4
 c00d856:	5c89      	ldrb	r1, [r1, r2]
  SystemCoreClock = HAL_RCC_GetHCLKFreq();
 c00d858:	4a43      	ldr	r2, [pc, #268]	@ (c00d968 <HAL_RCC_ClockConfig+0x244>)
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00d85a:	40cb      	lsrs	r3, r1
  SystemCoreClock = HAL_RCC_GetHCLKFreq();
 c00d85c:	6013      	str	r3, [r2, #0]
  return HAL_InitTick(uwTickPrio);
 c00d85e:	6800      	ldr	r0, [r0, #0]
}
 c00d860:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  return HAL_InitTick(uwTickPrio);
 c00d864:	f7fe bf54 	b.w	c00c710 <HAL_InitTick>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 c00d868:	493b      	ldr	r1, [pc, #236]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d86a:	f8d9 0008 	ldr.w	r0, [r9, #8]
 c00d86e:	688a      	ldr	r2, [r1, #8]
 c00d870:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 c00d874:	4302      	orrs	r2, r0
 c00d876:	608a      	str	r2, [r1, #8]
 c00d878:	e7bf      	b.n	c00d7fa <HAL_RCC_ClockConfig+0xd6>
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 c00d87a:	039f      	lsls	r7, r3, #14
 c00d87c:	f53f af7f 	bmi.w	c00d77e <HAL_RCC_ClockConfig+0x5a>
 c00d880:	e767      	b.n	c00d752 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 c00d882:	f8d9 3000 	ldr.w	r3, [r9]
 c00d886:	0799      	lsls	r1, r3, #30
 c00d888:	d4ee      	bmi.n	c00d868 <HAL_RCC_ClockConfig+0x144>
    if (hpre == RCC_SYSCLK_DIV2)
 c00d88a:	f1b8 0f00 	cmp.w	r8, #0
 c00d88e:	d0b4      	beq.n	c00d7fa <HAL_RCC_ClockConfig+0xd6>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
 c00d890:	4931      	ldr	r1, [pc, #196]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d892:	688a      	ldr	r2, [r1, #8]
 c00d894:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 c00d898:	608a      	str	r2, [r1, #8]
 c00d89a:	e7ae      	b.n	c00d7fa <HAL_RCC_ClockConfig+0xd6>
    return HAL_ERROR;
 c00d89c:	2001      	movs	r0, #1
}
 c00d89e:	4770      	bx	lr
      if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 c00d8a0:	4a2d      	ldr	r2, [pc, #180]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d8a2:	6811      	ldr	r1, [r2, #0]
 c00d8a4:	0188      	lsls	r0, r1, #6
 c00d8a6:	f57f af54 	bpl.w	c00d752 <HAL_RCC_ClockConfig+0x2e>
static uint32_t RCC_GetSysClockFreqFromPLLSource(void)
{
  uint32_t msirange = 0U;
  uint32_t pllvco, pllsource, pllr, pllm, sysclockfreq;    /* no init needed */

  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_MSI)
 c00d8aa:	68d1      	ldr	r1, [r2, #12]
 c00d8ac:	f001 0103 	and.w	r1, r1, #3
 c00d8b0:	2901      	cmp	r1, #1
 c00d8b2:	d036      	beq.n	c00d922 <HAL_RCC_ClockConfig+0x1fe>
  uint32_t msirange = 0U;
 c00d8b4:	2700      	movs	r7, #0
  }

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
     SYSCLK = PLL_VCO / PLLR
   */
  pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 c00d8b6:	4d28      	ldr	r5, [pc, #160]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
 c00d8b8:	68e8      	ldr	r0, [r5, #12]
  pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00d8ba:	68ea      	ldr	r2, [r5, #12]
  pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 c00d8bc:	f000 0003 	and.w	r0, r0, #3
  pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00d8c0:	f3c2 1203 	ubfx	r2, r2, #4, #4

  switch (pllsource)
 c00d8c4:	2802      	cmp	r0, #2
  pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00d8c6:	f102 0101 	add.w	r1, r2, #1
  switch (pllsource)
 c00d8ca:	d039      	beq.n	c00d940 <HAL_RCC_ClockConfig+0x21c>
 c00d8cc:	2803      	cmp	r0, #3
 c00d8ce:	d037      	beq.n	c00d940 <HAL_RCC_ClockConfig+0x21c>
      pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
      break;

    case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
    default:
      pllvco = (msirange / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 c00d8d0:	fbb7 f7f1 	udiv	r7, r7, r1
 c00d8d4:	68ea      	ldr	r2, [r5, #12]
 c00d8d6:	f3c2 2206 	ubfx	r2, r2, #8, #7
 c00d8da:	fb07 f102 	mul.w	r1, r7, r2
      break;
  }

  pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U) * 2U;
 c00d8de:	481e      	ldr	r0, [pc, #120]	@ (c00d958 <HAL_RCC_ClockConfig+0x234>)
      if (pllfreq > 80000000U)
 c00d8e0:	4d1e      	ldr	r5, [pc, #120]	@ (c00d95c <HAL_RCC_ClockConfig+0x238>)
  pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U) * 2U;
 c00d8e2:	68c2      	ldr	r2, [r0, #12]
 c00d8e4:	f3c2 6241 	ubfx	r2, r2, #25, #2
 c00d8e8:	3201      	adds	r2, #1
 c00d8ea:	0052      	lsls	r2, r2, #1
  sysclockfreq = pllvco / pllr;
 c00d8ec:	fbb1 f2f2 	udiv	r2, r1, r2
      if (pllfreq > 80000000U)
 c00d8f0:	42aa      	cmp	r2, r5
 c00d8f2:	d90f      	bls.n	c00d914 <HAL_RCC_ClockConfig+0x1f0>
        if (READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
 c00d8f4:	6882      	ldr	r2, [r0, #8]
 c00d8f6:	f012 0ff0 	tst.w	r2, #240	@ 0xf0
 c00d8fa:	d004      	beq.n	c00d906 <HAL_RCC_ClockConfig+0x1e2>
        else if ((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 c00d8fc:	079b      	lsls	r3, r3, #30
 c00d8fe:	d509      	bpl.n	c00d914 <HAL_RCC_ClockConfig+0x1f0>
 c00d900:	f8d9 3008 	ldr.w	r3, [r9, #8]
 c00d904:	b933      	cbnz	r3, c00d914 <HAL_RCC_ClockConfig+0x1f0>
          MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 c00d906:	6883      	ldr	r3, [r0, #8]
 c00d908:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 c00d90c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 c00d910:	6083      	str	r3, [r0, #8]
          hpre = RCC_SYSCLK_DIV2;
 c00d912:	e741      	b.n	c00d798 <HAL_RCC_ClockConfig+0x74>
  uint32_t hpre = RCC_SYSCLK_DIV1;
 c00d914:	f04f 0800 	mov.w	r8, #0
 c00d918:	e740      	b.n	c00d79c <HAL_RCC_ClockConfig+0x78>
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 c00d91a:	0558      	lsls	r0, r3, #21
 c00d91c:	f57f af19 	bpl.w	c00d752 <HAL_RCC_ClockConfig+0x2e>
 c00d920:	e72d      	b.n	c00d77e <HAL_RCC_ClockConfig+0x5a>
    if (READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 c00d922:	6811      	ldr	r1, [r2, #0]
 c00d924:	0709      	lsls	r1, r1, #28
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 c00d926:	bf54      	ite	pl
 c00d928:	f8d2 2094 	ldrpl.w	r2, [r2, #148]	@ 0x94
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 c00d92c:	6812      	ldrmi	r2, [r2, #0]
    msirange = MSIRangeTable[msirange];
 c00d92e:	490f      	ldr	r1, [pc, #60]	@ (c00d96c <HAL_RCC_ClockConfig+0x248>)
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 c00d930:	bf54      	ite	pl
 c00d932:	f3c2 2203 	ubfxpl	r2, r2, #8, #4
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 c00d936:	f3c2 1203 	ubfxmi	r2, r2, #4, #4
    msirange = MSIRangeTable[msirange];
 c00d93a:	f851 7022 	ldr.w	r7, [r1, r2, lsl #2]
 c00d93e:	e7ba      	b.n	c00d8b6 <HAL_RCC_ClockConfig+0x192>
      pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 c00d940:	480b      	ldr	r0, [pc, #44]	@ (c00d970 <HAL_RCC_ClockConfig+0x24c>)
 c00d942:	68ea      	ldr	r2, [r5, #12]
 c00d944:	fbb0 f1f1 	udiv	r1, r0, r1
 c00d948:	f3c2 2206 	ubfx	r2, r2, #8, #7
 c00d94c:	fb02 f101 	mul.w	r1, r2, r1
      break;
 c00d950:	e7c5      	b.n	c00d8de <HAL_RCC_ClockConfig+0x1ba>
 c00d952:	bf00      	nop
 c00d954:	50022000 	.word	0x50022000
 c00d958:	50021000 	.word	0x50021000
 c00d95c:	04c4b400 	.word	0x04c4b400
 c00d960:	0c011a80 	.word	0x0c011a80
 c00d964:	3000012c 	.word	0x3000012c
 c00d968:	30000000 	.word	0x30000000
 c00d96c:	0c011a38 	.word	0x0c011a38
 c00d970:	00f42400 	.word	0x00f42400

0c00d974 <HAL_RCC_GetPCLK1Freq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 c00d974:	4a30      	ldr	r2, [pc, #192]	@ (c00da38 <HAL_RCC_GetPCLK1Freq+0xc4>)
 c00d976:	6893      	ldr	r3, [r2, #8]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 c00d978:	68d1      	ldr	r1, [r2, #12]
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 c00d97a:	f013 020c 	ands.w	r2, r3, #12
 c00d97e:	d019      	beq.n	c00d9b4 <HAL_RCC_GetPCLK1Freq+0x40>
 c00d980:	2a0c      	cmp	r2, #12
 c00d982:	d048      	beq.n	c00da16 <HAL_RCC_GetPCLK1Freq+0xa2>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 c00d984:	f46f 7188 	mvn.w	r1, #272	@ 0x110
 c00d988:	fa41 f202 	asr.w	r2, r1, r2
    sysclockfreq = HSE_VALUE;
 c00d98c:	f012 0f01 	tst.w	r2, #1
 c00d990:	4b2a      	ldr	r3, [pc, #168]	@ (c00da3c <HAL_RCC_GetPCLK1Freq+0xc8>)
 c00d992:	bf18      	it	ne
 c00d994:	2300      	movne	r3, #0
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00d996:	4a28      	ldr	r2, [pc, #160]	@ (c00da38 <HAL_RCC_GetPCLK1Freq+0xc4>)
 c00d998:	4829      	ldr	r0, [pc, #164]	@ (c00da40 <HAL_RCC_GetPCLK1Freq+0xcc>)
 c00d99a:	6891      	ldr	r1, [r2, #8]
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 c00d99c:	6892      	ldr	r2, [r2, #8]
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00d99e:	f3c1 1103 	ubfx	r1, r1, #4, #4
 c00d9a2:	5c41      	ldrb	r1, [r0, r1]
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 c00d9a4:	4827      	ldr	r0, [pc, #156]	@ (c00da44 <HAL_RCC_GetPCLK1Freq+0xd0>)
 c00d9a6:	f3c2 2202 	ubfx	r2, r2, #8, #3
 c00d9aa:	5c80      	ldrb	r0, [r0, r2]
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00d9ac:	40cb      	lsrs	r3, r1
}
 c00d9ae:	fa23 f000 	lsr.w	r0, r3, r0
 c00d9b2:	4770      	bx	lr
    if (READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 c00d9b4:	4b20      	ldr	r3, [pc, #128]	@ (c00da38 <HAL_RCC_GetPCLK1Freq+0xc4>)
 c00d9b6:	6819      	ldr	r1, [r3, #0]
 c00d9b8:	0709      	lsls	r1, r1, #28
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 c00d9ba:	bf54      	ite	pl
 c00d9bc:	f8d3 3094 	ldrpl.w	r3, [r3, #148]	@ 0x94
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 c00d9c0:	681b      	ldrmi	r3, [r3, #0]
    msirange = MSIRangeTable[msirange];
 c00d9c2:	4921      	ldr	r1, [pc, #132]	@ (c00da48 <HAL_RCC_GetPCLK1Freq+0xd4>)
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 c00d9c4:	bf54      	ite	pl
 c00d9c6:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 c00d9ca:	f3c3 1303 	ubfxmi	r3, r3, #4, #4
    msirange = MSIRangeTable[msirange];
 c00d9ce:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 c00d9d2:	2a00      	cmp	r2, #0
 c00d9d4:	d0df      	beq.n	c00d996 <HAL_RCC_GetPCLK1Freq+0x22>
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 c00d9d6:	2a0c      	cmp	r2, #12
 c00d9d8:	d12b      	bne.n	c00da32 <HAL_RCC_GetPCLK1Freq+0xbe>
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c00d9da:	4817      	ldr	r0, [pc, #92]	@ (c00da38 <HAL_RCC_GetPCLK1Freq+0xc4>)
 c00d9dc:	68c1      	ldr	r1, [r0, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00d9de:	68c2      	ldr	r2, [r0, #12]
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c00d9e0:	f001 0103 	and.w	r1, r1, #3
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00d9e4:	f3c2 1203 	ubfx	r2, r2, #4, #4
    switch (pllsource)
 c00d9e8:	2902      	cmp	r1, #2
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00d9ea:	f102 0201 	add.w	r2, r2, #1
    switch (pllsource)
 c00d9ee:	d001      	beq.n	c00d9f4 <HAL_RCC_GetPCLK1Freq+0x80>
 c00d9f0:	2903      	cmp	r1, #3
 c00d9f2:	d116      	bne.n	c00da22 <HAL_RCC_GetPCLK1Freq+0xae>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 c00d9f4:	4911      	ldr	r1, [pc, #68]	@ (c00da3c <HAL_RCC_GetPCLK1Freq+0xc8>)
 c00d9f6:	68c3      	ldr	r3, [r0, #12]
 c00d9f8:	fbb1 f2f2 	udiv	r2, r1, r2
 c00d9fc:	f3c3 2306 	ubfx	r3, r3, #8, #7
 c00da00:	fb02 f303 	mul.w	r3, r2, r3
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U) * 2U;
 c00da04:	4a0c      	ldr	r2, [pc, #48]	@ (c00da38 <HAL_RCC_GetPCLK1Freq+0xc4>)
 c00da06:	68d2      	ldr	r2, [r2, #12]
 c00da08:	f3c2 6241 	ubfx	r2, r2, #25, #2
 c00da0c:	3201      	adds	r2, #1
 c00da0e:	0052      	lsls	r2, r2, #1
    sysclockfreq = pllvco / pllr;
 c00da10:	fbb3 f3f2 	udiv	r3, r3, r2
 c00da14:	e7bf      	b.n	c00d996 <HAL_RCC_GetPCLK1Freq+0x22>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 c00da16:	f001 0103 	and.w	r1, r1, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 c00da1a:	2901      	cmp	r1, #1
 c00da1c:	d0ca      	beq.n	c00d9b4 <HAL_RCC_GetPCLK1Freq+0x40>
  uint32_t msirange = 0U, sysclockfreq = 0U;
 c00da1e:	2300      	movs	r3, #0
 c00da20:	e7db      	b.n	c00d9da <HAL_RCC_GetPCLK1Freq+0x66>
        pllvco = (msirange / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 c00da22:	fbb3 f2f2 	udiv	r2, r3, r2
 c00da26:	68c3      	ldr	r3, [r0, #12]
 c00da28:	f3c3 2306 	ubfx	r3, r3, #8, #7
 c00da2c:	fb02 f303 	mul.w	r3, r2, r3
        break;
 c00da30:	e7e8      	b.n	c00da04 <HAL_RCC_GetPCLK1Freq+0x90>
  uint32_t msirange = 0U, sysclockfreq = 0U;
 c00da32:	2300      	movs	r3, #0
 c00da34:	e7af      	b.n	c00d996 <HAL_RCC_GetPCLK1Freq+0x22>
 c00da36:	bf00      	nop
 c00da38:	50021000 	.word	0x50021000
 c00da3c:	00f42400 	.word	0x00f42400
 c00da40:	0c011a80 	.word	0x0c011a80
 c00da44:	0c011a78 	.word	0x0c011a78
 c00da48:	0c011a38 	.word	0x0c011a38

0c00da4c <HAL_RCC_GetPCLK2Freq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 c00da4c:	4a30      	ldr	r2, [pc, #192]	@ (c00db10 <HAL_RCC_GetPCLK2Freq+0xc4>)
 c00da4e:	6893      	ldr	r3, [r2, #8]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 c00da50:	68d1      	ldr	r1, [r2, #12]
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 c00da52:	f013 020c 	ands.w	r2, r3, #12
 c00da56:	d019      	beq.n	c00da8c <HAL_RCC_GetPCLK2Freq+0x40>
 c00da58:	2a0c      	cmp	r2, #12
 c00da5a:	d048      	beq.n	c00daee <HAL_RCC_GetPCLK2Freq+0xa2>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 c00da5c:	f46f 7188 	mvn.w	r1, #272	@ 0x110
 c00da60:	fa41 f202 	asr.w	r2, r1, r2
    sysclockfreq = HSE_VALUE;
 c00da64:	f012 0f01 	tst.w	r2, #1
 c00da68:	4b2a      	ldr	r3, [pc, #168]	@ (c00db14 <HAL_RCC_GetPCLK2Freq+0xc8>)
 c00da6a:	bf18      	it	ne
 c00da6c:	2300      	movne	r3, #0
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00da6e:	4a28      	ldr	r2, [pc, #160]	@ (c00db10 <HAL_RCC_GetPCLK2Freq+0xc4>)
 c00da70:	4829      	ldr	r0, [pc, #164]	@ (c00db18 <HAL_RCC_GetPCLK2Freq+0xcc>)
 c00da72:	6891      	ldr	r1, [r2, #8]
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 c00da74:	6892      	ldr	r2, [r2, #8]
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00da76:	f3c1 1103 	ubfx	r1, r1, #4, #4
 c00da7a:	5c41      	ldrb	r1, [r0, r1]
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 c00da7c:	4827      	ldr	r0, [pc, #156]	@ (c00db1c <HAL_RCC_GetPCLK2Freq+0xd0>)
 c00da7e:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 c00da82:	5c80      	ldrb	r0, [r0, r2]
  return (HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]);
 c00da84:	40cb      	lsrs	r3, r1
}
 c00da86:	fa23 f000 	lsr.w	r0, r3, r0
 c00da8a:	4770      	bx	lr
    if (READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 c00da8c:	4b20      	ldr	r3, [pc, #128]	@ (c00db10 <HAL_RCC_GetPCLK2Freq+0xc4>)
 c00da8e:	6819      	ldr	r1, [r3, #0]
 c00da90:	0709      	lsls	r1, r1, #28
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 c00da92:	bf54      	ite	pl
 c00da94:	f8d3 3094 	ldrpl.w	r3, [r3, #148]	@ 0x94
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 c00da98:	681b      	ldrmi	r3, [r3, #0]
    msirange = MSIRangeTable[msirange];
 c00da9a:	4921      	ldr	r1, [pc, #132]	@ (c00db20 <HAL_RCC_GetPCLK2Freq+0xd4>)
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 c00da9c:	bf54      	ite	pl
 c00da9e:	f3c3 2303 	ubfxpl	r3, r3, #8, #4
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 c00daa2:	f3c3 1303 	ubfxmi	r3, r3, #4, #4
    msirange = MSIRangeTable[msirange];
 c00daa6:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 c00daaa:	2a00      	cmp	r2, #0
 c00daac:	d0df      	beq.n	c00da6e <HAL_RCC_GetPCLK2Freq+0x22>
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 c00daae:	2a0c      	cmp	r2, #12
 c00dab0:	d12b      	bne.n	c00db0a <HAL_RCC_GetPCLK2Freq+0xbe>
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c00dab2:	4817      	ldr	r0, [pc, #92]	@ (c00db10 <HAL_RCC_GetPCLK2Freq+0xc4>)
 c00dab4:	68c1      	ldr	r1, [r0, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00dab6:	68c2      	ldr	r2, [r0, #12]
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 c00dab8:	f001 0103 	and.w	r1, r1, #3
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00dabc:	f3c2 1203 	ubfx	r2, r2, #4, #4
    switch (pllsource)
 c00dac0:	2902      	cmp	r1, #2
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 c00dac2:	f102 0201 	add.w	r2, r2, #1
    switch (pllsource)
 c00dac6:	d001      	beq.n	c00dacc <HAL_RCC_GetPCLK2Freq+0x80>
 c00dac8:	2903      	cmp	r1, #3
 c00daca:	d116      	bne.n	c00dafa <HAL_RCC_GetPCLK2Freq+0xae>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 c00dacc:	4911      	ldr	r1, [pc, #68]	@ (c00db14 <HAL_RCC_GetPCLK2Freq+0xc8>)
 c00dace:	68c3      	ldr	r3, [r0, #12]
 c00dad0:	fbb1 f2f2 	udiv	r2, r1, r2
 c00dad4:	f3c3 2306 	ubfx	r3, r3, #8, #7
 c00dad8:	fb02 f303 	mul.w	r3, r2, r3
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U) * 2U;
 c00dadc:	4a0c      	ldr	r2, [pc, #48]	@ (c00db10 <HAL_RCC_GetPCLK2Freq+0xc4>)
 c00dade:	68d2      	ldr	r2, [r2, #12]
 c00dae0:	f3c2 6241 	ubfx	r2, r2, #25, #2
 c00dae4:	3201      	adds	r2, #1
 c00dae6:	0052      	lsls	r2, r2, #1
    sysclockfreq = pllvco / pllr;
 c00dae8:	fbb3 f3f2 	udiv	r3, r3, r2
 c00daec:	e7bf      	b.n	c00da6e <HAL_RCC_GetPCLK2Freq+0x22>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 c00daee:	f001 0103 	and.w	r1, r1, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 c00daf2:	2901      	cmp	r1, #1
 c00daf4:	d0ca      	beq.n	c00da8c <HAL_RCC_GetPCLK2Freq+0x40>
  uint32_t msirange = 0U, sysclockfreq = 0U;
 c00daf6:	2300      	movs	r3, #0
 c00daf8:	e7db      	b.n	c00dab2 <HAL_RCC_GetPCLK2Freq+0x66>
        pllvco = (msirange / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 c00dafa:	fbb3 f2f2 	udiv	r2, r3, r2
 c00dafe:	68c3      	ldr	r3, [r0, #12]
 c00db00:	f3c3 2306 	ubfx	r3, r3, #8, #7
 c00db04:	fb02 f303 	mul.w	r3, r2, r3
        break;
 c00db08:	e7e8      	b.n	c00dadc <HAL_RCC_GetPCLK2Freq+0x90>
  uint32_t msirange = 0U, sysclockfreq = 0U;
 c00db0a:	2300      	movs	r3, #0
 c00db0c:	e7af      	b.n	c00da6e <HAL_RCC_GetPCLK2Freq+0x22>
 c00db0e:	bf00      	nop
 c00db10:	50021000 	.word	0x50021000
 c00db14:	00f42400 	.word	0x00f42400
 c00db18:	0c011a80 	.word	0x0c011a80
 c00db1c:	0c011a78 	.word	0x0c011a78
 c00db20:	0c011a38 	.word	0x0c011a38

0c00db24 <RCCEx_PLLSAI1_Config>:
  * @note   PLLSAI1 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *pPllSai1, uint32_t Divider)
{
 c00db24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00db26:	4604      	mov	r4, r0
  assert_param(IS_RCC_PLLSAI1M_VALUE(pPllSai1->PLLSAI1M));
  assert_param(IS_RCC_PLLSAI1N_VALUE(pPllSai1->PLLSAI1N));
  assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(pPllSai1->PLLSAI1ClockOut));

  /* Check PLLSAI1 clock source availability */
  switch (pPllSai1->PLLSAI1Source)
 c00db28:	6800      	ldr	r0, [r0, #0]
{
 c00db2a:	460f      	mov	r7, r1
  switch (pPllSai1->PLLSAI1Source)
 c00db2c:	2802      	cmp	r0, #2
 c00db2e:	d005      	beq.n	c00db3c <RCCEx_PLLSAI1_Config+0x18>
 c00db30:	2803      	cmp	r0, #3
 c00db32:	d04c      	beq.n	c00dbce <RCCEx_PLLSAI1_Config+0xaa>
 c00db34:	2801      	cmp	r0, #1
 c00db36:	d045      	beq.n	c00dbc4 <RCCEx_PLLSAI1_Config+0xa0>
 c00db38:	2001      	movs	r0, #1
      }
    }
  }

  return status;
}
 c00db3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if (HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 c00db3c:	4b38      	ldr	r3, [pc, #224]	@ (c00dc20 <RCCEx_PLLSAI1_Config+0xfc>)
 c00db3e:	681b      	ldr	r3, [r3, #0]
 c00db40:	055d      	lsls	r5, r3, #21
 c00db42:	d5f9      	bpl.n	c00db38 <RCCEx_PLLSAI1_Config+0x14>
    __HAL_RCC_PLLSAI1_DISABLE();
 c00db44:	4d36      	ldr	r5, [pc, #216]	@ (c00dc20 <RCCEx_PLLSAI1_Config+0xfc>)
 c00db46:	682b      	ldr	r3, [r5, #0]
 c00db48:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 c00db4c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 c00db4e:	f7fe fe23 	bl	c00c798 <HAL_GetTick>
 c00db52:	4606      	mov	r6, r0
    while (READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 c00db54:	e004      	b.n	c00db60 <RCCEx_PLLSAI1_Config+0x3c>
      if ((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 c00db56:	f7fe fe1f 	bl	c00c798 <HAL_GetTick>
 c00db5a:	1b83      	subs	r3, r0, r6
 c00db5c:	2b02      	cmp	r3, #2
 c00db5e:	d848      	bhi.n	c00dbf2 <RCCEx_PLLSAI1_Config+0xce>
    while (READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 c00db60:	682b      	ldr	r3, [r5, #0]
 c00db62:	0119      	lsls	r1, r3, #4
 c00db64:	d4f7      	bmi.n	c00db56 <RCCEx_PLLSAI1_Config+0x32>
        MODIFY_REG(RCC->PLLSAI1CFGR,
 c00db66:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 c00db6a:	3b01      	subs	r3, #1
 c00db6c:	0210      	lsls	r0, r2, #8
 c00db6e:	6821      	ldr	r1, [r4, #0]
 c00db70:	011a      	lsls	r2, r3, #4
      if (Divider == DIVIDER_P_UPDATE)
 c00db72:	2f00      	cmp	r7, #0
 c00db74:	d031      	beq.n	c00dbda <RCCEx_PLLSAI1_Config+0xb6>
      else if (Divider == DIVIDER_Q_UPDATE)
 c00db76:	2f01      	cmp	r7, #1
        MODIFY_REG(RCC->PLLSAI1CFGR,
 c00db78:	4d29      	ldr	r5, [pc, #164]	@ (c00dc20 <RCCEx_PLLSAI1_Config+0xfc>)
      else if (Divider == DIVIDER_Q_UPDATE)
 c00db7a:	d043      	beq.n	c00dc04 <RCCEx_PLLSAI1_Config+0xe0>
        MODIFY_REG(RCC->PLLSAI1CFGR,
 c00db7c:	692e      	ldr	r6, [r5, #16]
 c00db7e:	4b29      	ldr	r3, [pc, #164]	@ (c00dc24 <RCCEx_PLLSAI1_Config+0x100>)
 c00db80:	4033      	ands	r3, r6
 c00db82:	430b      	orrs	r3, r1
 c00db84:	4303      	orrs	r3, r0
 c00db86:	4313      	orrs	r3, r2
 c00db88:	6962      	ldr	r2, [r4, #20]
 c00db8a:	0852      	lsrs	r2, r2, #1
 c00db8c:	3a01      	subs	r2, #1
 c00db8e:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 c00db92:	612b      	str	r3, [r5, #16]
      __HAL_RCC_PLLSAI1_ENABLE();
 c00db94:	4d22      	ldr	r5, [pc, #136]	@ (c00dc20 <RCCEx_PLLSAI1_Config+0xfc>)
 c00db96:	682b      	ldr	r3, [r5, #0]
 c00db98:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 c00db9c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 c00db9e:	f7fe fdfb 	bl	c00c798 <HAL_GetTick>
 c00dba2:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 c00dba4:	e004      	b.n	c00dbb0 <RCCEx_PLLSAI1_Config+0x8c>
        if ((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 c00dba6:	f7fe fdf7 	bl	c00c798 <HAL_GetTick>
 c00dbaa:	1b83      	subs	r3, r0, r6
 c00dbac:	2b02      	cmp	r3, #2
 c00dbae:	d825      	bhi.n	c00dbfc <RCCEx_PLLSAI1_Config+0xd8>
      while (READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 c00dbb0:	682b      	ldr	r3, [r5, #0]
 c00dbb2:	011b      	lsls	r3, r3, #4
 c00dbb4:	d5f7      	bpl.n	c00dba6 <RCCEx_PLLSAI1_Config+0x82>
        __HAL_RCC_PLLSAI1CLKOUT_ENABLE(pPllSai1->PLLSAI1ClockOut);
 c00dbb6:	4a1a      	ldr	r2, [pc, #104]	@ (c00dc20 <RCCEx_PLLSAI1_Config+0xfc>)
 c00dbb8:	69a1      	ldr	r1, [r4, #24]
 c00dbba:	6913      	ldr	r3, [r2, #16]
 c00dbbc:	2000      	movs	r0, #0
 c00dbbe:	430b      	orrs	r3, r1
 c00dbc0:	6113      	str	r3, [r2, #16]
}
 c00dbc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if (HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 c00dbc4:	4a16      	ldr	r2, [pc, #88]	@ (c00dc20 <RCCEx_PLLSAI1_Config+0xfc>)
 c00dbc6:	6812      	ldr	r2, [r2, #0]
 c00dbc8:	0796      	lsls	r6, r2, #30
 c00dbca:	d4bb      	bmi.n	c00db44 <RCCEx_PLLSAI1_Config+0x20>
}
 c00dbcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if (HAL_IS_BIT_CLR(RCC->CR, (RCC_CR_HSERDY | RCC_CR_HSEBYP)))
 c00dbce:	4b14      	ldr	r3, [pc, #80]	@ (c00dc20 <RCCEx_PLLSAI1_Config+0xfc>)
 c00dbd0:	681b      	ldr	r3, [r3, #0]
 c00dbd2:	f413 2fc0 	tst.w	r3, #393216	@ 0x60000
 c00dbd6:	d0af      	beq.n	c00db38 <RCCEx_PLLSAI1_Config+0x14>
 c00dbd8:	e7b4      	b.n	c00db44 <RCCEx_PLLSAI1_Config+0x20>
        MODIFY_REG(RCC->PLLSAI1CFGR,
 c00dbda:	4d11      	ldr	r5, [pc, #68]	@ (c00dc20 <RCCEx_PLLSAI1_Config+0xfc>)
 c00dbdc:	4b12      	ldr	r3, [pc, #72]	@ (c00dc28 <RCCEx_PLLSAI1_Config+0x104>)
 c00dbde:	692e      	ldr	r6, [r5, #16]
 c00dbe0:	4033      	ands	r3, r6
 c00dbe2:	430b      	orrs	r3, r1
 c00dbe4:	68e1      	ldr	r1, [r4, #12]
 c00dbe6:	4303      	orrs	r3, r0
 c00dbe8:	ea43 63c1 	orr.w	r3, r3, r1, lsl #27
 c00dbec:	4313      	orrs	r3, r2
 c00dbee:	612b      	str	r3, [r5, #16]
 c00dbf0:	e7d0      	b.n	c00db94 <RCCEx_PLLSAI1_Config+0x70>
        if (READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 c00dbf2:	682b      	ldr	r3, [r5, #0]
 c00dbf4:	0118      	lsls	r0, r3, #4
 c00dbf6:	d5b6      	bpl.n	c00db66 <RCCEx_PLLSAI1_Config+0x42>
            status = HAL_TIMEOUT;
 c00dbf8:	2003      	movs	r0, #3
}
 c00dbfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          if (READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 c00dbfc:	682b      	ldr	r3, [r5, #0]
 c00dbfe:	011a      	lsls	r2, r3, #4
 c00dc00:	d5fa      	bpl.n	c00dbf8 <RCCEx_PLLSAI1_Config+0xd4>
 c00dc02:	e7d8      	b.n	c00dbb6 <RCCEx_PLLSAI1_Config+0x92>
        MODIFY_REG(RCC->PLLSAI1CFGR,
 c00dc04:	692e      	ldr	r6, [r5, #16]
 c00dc06:	4b09      	ldr	r3, [pc, #36]	@ (c00dc2c <RCCEx_PLLSAI1_Config+0x108>)
 c00dc08:	4033      	ands	r3, r6
 c00dc0a:	430b      	orrs	r3, r1
 c00dc0c:	6921      	ldr	r1, [r4, #16]
 c00dc0e:	4303      	orrs	r3, r0
 c00dc10:	4313      	orrs	r3, r2
 c00dc12:	084a      	lsrs	r2, r1, #1
 c00dc14:	3a01      	subs	r2, #1
 c00dc16:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
 c00dc1a:	612b      	str	r3, [r5, #16]
 c00dc1c:	e7ba      	b.n	c00db94 <RCCEx_PLLSAI1_Config+0x70>
 c00dc1e:	bf00      	nop
 c00dc20:	50021000 	.word	0x50021000
 c00dc24:	f9ff800c 	.word	0xf9ff800c
 c00dc28:	07ff800c 	.word	0x07ff800c
 c00dc2c:	ff9f800c 	.word	0xff9f800c

0c00dc30 <RCCEx_PLLSAI2_Config.constprop.0>:
  *
  * @note   PLLSAI2 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI2_Config(RCC_PLLSAI2InitTypeDef *pPllSai2, uint32_t Divider)
 c00dc30:	b570      	push	{r4, r5, r6, lr}
 c00dc32:	4604      	mov	r4, r0
  assert_param(IS_RCC_PLLSAI2M_VALUE(pPllSai2->PLLSAI2M));
  assert_param(IS_RCC_PLLSAI2N_VALUE(pPllSai2->PLLSAI2N));
  assert_param(IS_RCC_PLLSAI2CLOCKOUT_VALUE(pPllSai2->PLLSAI2ClockOut));

  /* Check PLLSAI2 clock source availability */
  switch (pPllSai2->PLLSAI2Source)
 c00dc34:	6800      	ldr	r0, [r0, #0]
 c00dc36:	2802      	cmp	r0, #2
 c00dc38:	d005      	beq.n	c00dc46 <RCCEx_PLLSAI2_Config.constprop.0+0x16>
 c00dc3a:	2803      	cmp	r0, #3
 c00dc3c:	d045      	beq.n	c00dcca <RCCEx_PLLSAI2_Config.constprop.0+0x9a>
 c00dc3e:	2801      	cmp	r0, #1
 c00dc40:	d03e      	beq.n	c00dcc0 <RCCEx_PLLSAI2_Config.constprop.0+0x90>
      }
      break;
    case RCC_PLLSOURCE_HSI:
      if (HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
      {
        status = HAL_ERROR;
 c00dc42:	2001      	movs	r0, #1
      }
    }
  }

  return status;
}
 c00dc44:	bd70      	pop	{r4, r5, r6, pc}
      if (HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 c00dc46:	4b28      	ldr	r3, [pc, #160]	@ (c00dce8 <RCCEx_PLLSAI2_Config.constprop.0+0xb8>)
 c00dc48:	681b      	ldr	r3, [r3, #0]
 c00dc4a:	055d      	lsls	r5, r3, #21
 c00dc4c:	d5f9      	bpl.n	c00dc42 <RCCEx_PLLSAI2_Config.constprop.0+0x12>
    __HAL_RCC_PLLSAI2_DISABLE();
 c00dc4e:	4d26      	ldr	r5, [pc, #152]	@ (c00dce8 <RCCEx_PLLSAI2_Config.constprop.0+0xb8>)
 c00dc50:	682b      	ldr	r3, [r5, #0]
 c00dc52:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 c00dc56:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 c00dc58:	f7fe fd9e 	bl	c00c798 <HAL_GetTick>
 c00dc5c:	4606      	mov	r6, r0
    while (READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 c00dc5e:	e004      	b.n	c00dc6a <RCCEx_PLLSAI2_Config.constprop.0+0x3a>
      if ((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 c00dc60:	f7fe fd9a 	bl	c00c798 <HAL_GetTick>
 c00dc64:	1b83      	subs	r3, r0, r6
 c00dc66:	2b02      	cmp	r3, #2
 c00dc68:	d835      	bhi.n	c00dcd6 <RCCEx_PLLSAI2_Config.constprop.0+0xa6>
    while (READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 c00dc6a:	682b      	ldr	r3, [r5, #0]
 c00dc6c:	0099      	lsls	r1, r3, #2
 c00dc6e:	d4f7      	bmi.n	c00dc60 <RCCEx_PLLSAI2_Config.constprop.0+0x30>
        MODIFY_REG(RCC->PLLSAI2CFGR,
 c00dc70:	4d1d      	ldr	r5, [pc, #116]	@ (c00dce8 <RCCEx_PLLSAI2_Config.constprop.0+0xb8>)
 c00dc72:	4b1e      	ldr	r3, [pc, #120]	@ (c00dcec <RCCEx_PLLSAI2_Config.constprop.0+0xbc>)
 c00dc74:	6969      	ldr	r1, [r5, #20]
 c00dc76:	6822      	ldr	r2, [r4, #0]
 c00dc78:	400b      	ands	r3, r1
 c00dc7a:	4313      	orrs	r3, r2
 c00dc7c:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 c00dc80:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 c00dc84:	ea43 63c2 	orr.w	r3, r3, r2, lsl #27
 c00dc88:	6862      	ldr	r2, [r4, #4]
 c00dc8a:	3a01      	subs	r2, #1
 c00dc8c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 c00dc90:	616b      	str	r3, [r5, #20]
      __HAL_RCC_PLLSAI2_ENABLE();
 c00dc92:	682b      	ldr	r3, [r5, #0]
 c00dc94:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 c00dc98:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 c00dc9a:	f7fe fd7d 	bl	c00c798 <HAL_GetTick>
 c00dc9e:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 c00dca0:	e004      	b.n	c00dcac <RCCEx_PLLSAI2_Config.constprop.0+0x7c>
        if ((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 c00dca2:	f7fe fd79 	bl	c00c798 <HAL_GetTick>
 c00dca6:	1b83      	subs	r3, r0, r6
 c00dca8:	2b02      	cmp	r3, #2
 c00dcaa:	d819      	bhi.n	c00dce0 <RCCEx_PLLSAI2_Config.constprop.0+0xb0>
      while (READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 c00dcac:	682b      	ldr	r3, [r5, #0]
 c00dcae:	009b      	lsls	r3, r3, #2
 c00dcb0:	d5f7      	bpl.n	c00dca2 <RCCEx_PLLSAI2_Config.constprop.0+0x72>
        __HAL_RCC_PLLSAI2CLKOUT_ENABLE(pPllSai2->PLLSAI2ClockOut);
 c00dcb2:	4a0d      	ldr	r2, [pc, #52]	@ (c00dce8 <RCCEx_PLLSAI2_Config.constprop.0+0xb8>)
 c00dcb4:	6921      	ldr	r1, [r4, #16]
 c00dcb6:	6953      	ldr	r3, [r2, #20]
 c00dcb8:	2000      	movs	r0, #0
 c00dcba:	430b      	orrs	r3, r1
 c00dcbc:	6153      	str	r3, [r2, #20]
}
 c00dcbe:	bd70      	pop	{r4, r5, r6, pc}
      if (HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 c00dcc0:	4a09      	ldr	r2, [pc, #36]	@ (c00dce8 <RCCEx_PLLSAI2_Config.constprop.0+0xb8>)
 c00dcc2:	6812      	ldr	r2, [r2, #0]
 c00dcc4:	0796      	lsls	r6, r2, #30
 c00dcc6:	d4c2      	bmi.n	c00dc4e <RCCEx_PLLSAI2_Config.constprop.0+0x1e>
}
 c00dcc8:	bd70      	pop	{r4, r5, r6, pc}
      if (HAL_IS_BIT_CLR(RCC->CR, (RCC_CR_HSERDY | RCC_CR_HSEBYP)))
 c00dcca:	4b07      	ldr	r3, [pc, #28]	@ (c00dce8 <RCCEx_PLLSAI2_Config.constprop.0+0xb8>)
 c00dccc:	681b      	ldr	r3, [r3, #0]
 c00dcce:	f413 2fc0 	tst.w	r3, #393216	@ 0x60000
 c00dcd2:	d0b6      	beq.n	c00dc42 <RCCEx_PLLSAI2_Config.constprop.0+0x12>
 c00dcd4:	e7bb      	b.n	c00dc4e <RCCEx_PLLSAI2_Config.constprop.0+0x1e>
        if (READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 c00dcd6:	682b      	ldr	r3, [r5, #0]
 c00dcd8:	0098      	lsls	r0, r3, #2
 c00dcda:	d5c9      	bpl.n	c00dc70 <RCCEx_PLLSAI2_Config.constprop.0+0x40>
            status = HAL_TIMEOUT;
 c00dcdc:	2003      	movs	r0, #3
}
 c00dcde:	bd70      	pop	{r4, r5, r6, pc}
          if (READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 c00dce0:	682b      	ldr	r3, [r5, #0]
 c00dce2:	009a      	lsls	r2, r3, #2
 c00dce4:	d5fa      	bpl.n	c00dcdc <RCCEx_PLLSAI2_Config.constprop.0+0xac>
 c00dce6:	e7e4      	b.n	c00dcb2 <RCCEx_PLLSAI2_Config.constprop.0+0x82>
 c00dce8:	50021000 	.word	0x50021000
 c00dcec:	07ff800c 	.word	0x07ff800c

0c00dcf0 <HAL_RCCEx_PeriphCLKConfig>:
{
 c00dcf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 c00dcf4:	6803      	ldr	r3, [r0, #0]
{
 c00dcf6:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 c00dcf8:	f413 6600 	ands.w	r6, r3, #2048	@ 0x800
{
 c00dcfc:	b082      	sub	sp, #8
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 c00dcfe:	d013      	beq.n	c00dd28 <HAL_RCCEx_PeriphCLKConfig+0x38>
    switch (PeriphClkInit->Sai1ClockSelection)
 c00dd00:	6ec1      	ldr	r1, [r0, #108]	@ 0x6c
 c00dd02:	2940      	cmp	r1, #64	@ 0x40
 c00dd04:	f000 8246 	beq.w	c00e194 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 c00dd08:	f200 8157 	bhi.w	c00dfba <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 c00dd0c:	2900      	cmp	r1, #0
 c00dd0e:	f000 81f4 	beq.w	c00e0fa <HAL_RCCEx_PeriphCLKConfig+0x40a>
 c00dd12:	2920      	cmp	r1, #32
 c00dd14:	f040 826f 	bne.w	c00e1f6 <HAL_RCCEx_PeriphCLKConfig+0x506>
        ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 c00dd18:	3020      	adds	r0, #32
 c00dd1a:	f7ff ff89 	bl	c00dc30 <RCCEx_PLLSAI2_Config.constprop.0>
 c00dd1e:	4606      	mov	r6, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 c00dd20:	6823      	ldr	r3, [r4, #0]
    if (ret == HAL_OK)
 c00dd22:	2e00      	cmp	r6, #0
 c00dd24:	f000 8234 	beq.w	c00e190 <HAL_RCCEx_PeriphCLKConfig+0x4a0>
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 c00dd28:	04df      	lsls	r7, r3, #19
 c00dd2a:	f140 8159 	bpl.w	c00dfe0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
    switch (PeriphClkInit->Sai2ClockSelection)
 c00dd2e:	6f21      	ldr	r1, [r4, #112]	@ 0x70
 c00dd30:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 c00dd34:	f000 8234 	beq.w	c00e1a0 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 c00dd38:	f200 81af 	bhi.w	c00e09a <HAL_RCCEx_PeriphCLKConfig+0x3aa>
 c00dd3c:	2900      	cmp	r1, #0
 c00dd3e:	f000 81e5 	beq.w	c00e10c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 c00dd42:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
 c00dd46:	f040 8254 	bne.w	c00e1f2 <HAL_RCCEx_PeriphCLKConfig+0x502>
        ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 c00dd4a:	f104 0020 	add.w	r0, r4, #32
 c00dd4e:	f7ff ff6f 	bl	c00dc30 <RCCEx_PLLSAI2_Config.constprop.0>
 c00dd52:	4607      	mov	r7, r0
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 c00dd54:	6823      	ldr	r3, [r4, #0]
    if (ret == HAL_OK)
 c00dd56:	2f00      	cmp	r7, #0
 c00dd58:	f040 81aa 	bne.w	c00e0b0 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
      __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 c00dd5c:	49aa      	ldr	r1, [pc, #680]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00dd5e:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 c00dd60:	f8d1 209c 	ldr.w	r2, [r1, #156]	@ 0x9c
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 c00dd64:	039d      	lsls	r5, r3, #14
      __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 c00dd66:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 c00dd6a:	ea42 0200 	orr.w	r2, r2, r0
 c00dd6e:	f8c1 209c 	str.w	r2, [r1, #156]	@ 0x9c
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 c00dd72:	f100 8139 	bmi.w	c00dfe8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 c00dd76:	07d9      	lsls	r1, r3, #31
 c00dd78:	d508      	bpl.n	c00dd8c <HAL_RCCEx_PeriphCLKConfig+0x9c>
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 c00dd7a:	49a3      	ldr	r1, [pc, #652]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00dd7c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 c00dd7e:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00dd82:	f022 0203 	bic.w	r2, r2, #3
 c00dd86:	4302      	orrs	r2, r0
 c00dd88:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 c00dd8c:	079a      	lsls	r2, r3, #30
 c00dd8e:	d508      	bpl.n	c00dda2 <HAL_RCCEx_PeriphCLKConfig+0xb2>
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 c00dd90:	499d      	ldr	r1, [pc, #628]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00dd92:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 c00dd94:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00dd98:	f022 020c 	bic.w	r2, r2, #12
 c00dd9c:	4302      	orrs	r2, r0
 c00dd9e:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 c00dda2:	075d      	lsls	r5, r3, #29
 c00dda4:	d508      	bpl.n	c00ddb8 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 c00dda6:	4998      	ldr	r1, [pc, #608]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00dda8:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 c00ddaa:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00ddae:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 c00ddb2:	4302      	orrs	r2, r0
 c00ddb4:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 c00ddb8:	0718      	lsls	r0, r3, #28
 c00ddba:	d508      	bpl.n	c00ddce <HAL_RCCEx_PeriphCLKConfig+0xde>
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 c00ddbc:	4992      	ldr	r1, [pc, #584]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00ddbe:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 c00ddc0:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00ddc4:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 c00ddc8:	4302      	orrs	r2, r0
 c00ddca:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 c00ddce:	06d9      	lsls	r1, r3, #27
 c00ddd0:	d508      	bpl.n	c00dde4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 c00ddd2:	498d      	ldr	r1, [pc, #564]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00ddd4:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 c00ddd6:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00ddda:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 c00ddde:	4302      	orrs	r2, r0
 c00dde0:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 c00dde4:	069a      	lsls	r2, r3, #26
 c00dde6:	d508      	bpl.n	c00ddfa <HAL_RCCEx_PeriphCLKConfig+0x10a>
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 c00dde8:	4987      	ldr	r1, [pc, #540]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00ddea:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 c00ddec:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00ddf0:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 c00ddf4:	4302      	orrs	r2, r0
 c00ddf6:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 c00ddfa:	059d      	lsls	r5, r3, #22
 c00ddfc:	d508      	bpl.n	c00de10 <HAL_RCCEx_PeriphCLKConfig+0x120>
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 c00ddfe:	4982      	ldr	r1, [pc, #520]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00de00:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 c00de02:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00de06:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 c00de0a:	4302      	orrs	r2, r0
 c00de0c:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 c00de10:	0558      	lsls	r0, r3, #21
 c00de12:	d508      	bpl.n	c00de26 <HAL_RCCEx_PeriphCLKConfig+0x136>
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 c00de14:	497c      	ldr	r1, [pc, #496]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00de16:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 c00de18:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00de1c:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 c00de20:	4302      	orrs	r2, r0
 c00de22:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM3) == (RCC_PERIPHCLK_LPTIM3))
 c00de26:	0259      	lsls	r1, r3, #9
 c00de28:	d508      	bpl.n	c00de3c <HAL_RCCEx_PeriphCLKConfig+0x14c>
    __HAL_RCC_LPTIM3_CONFIG(PeriphClkInit->Lptim3ClockSelection);
 c00de2a:	4977      	ldr	r1, [pc, #476]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00de2c:	6e60      	ldr	r0, [r4, #100]	@ 0x64
 c00de2e:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00de32:	f422 0240 	bic.w	r2, r2, #12582912	@ 0xc00000
 c00de36:	4302      	orrs	r2, r0
 c00de38:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == (RCC_PERIPHCLK_FDCAN))
 c00de3c:	019a      	lsls	r2, r3, #6
 c00de3e:	d50c      	bpl.n	c00de5a <HAL_RCCEx_PeriphCLKConfig+0x16a>
    switch (PeriphClkInit->FdcanClockSelection)
 c00de40:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
 c00de42:	f1b2 7f80 	cmp.w	r2, #16777216	@ 0x1000000
 c00de46:	f000 8193 	beq.w	c00e170 <HAL_RCCEx_PeriphCLKConfig+0x480>
 c00de4a:	f1b2 7f00 	cmp.w	r2, #33554432	@ 0x2000000
 c00de4e:	f000 813d 	beq.w	c00e0cc <HAL_RCCEx_PeriphCLKConfig+0x3dc>
 c00de52:	2a00      	cmp	r2, #0
 c00de54:	f000 8140 	beq.w	c00e0d8 <HAL_RCCEx_PeriphCLKConfig+0x3e8>
 c00de58:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 c00de5a:	065f      	lsls	r7, r3, #25
 c00de5c:	d508      	bpl.n	c00de70 <HAL_RCCEx_PeriphCLKConfig+0x180>
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 c00de5e:	496a      	ldr	r1, [pc, #424]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00de60:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 c00de62:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00de66:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 c00de6a:	4302      	orrs	r2, r0
 c00de6c:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 c00de70:	061d      	lsls	r5, r3, #24
 c00de72:	d508      	bpl.n	c00de86 <HAL_RCCEx_PeriphCLKConfig+0x196>
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 c00de74:	4964      	ldr	r1, [pc, #400]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00de76:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 c00de78:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00de7c:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 c00de80:	4302      	orrs	r2, r0
 c00de82:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 c00de86:	05d8      	lsls	r0, r3, #23
 c00de88:	d508      	bpl.n	c00de9c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 c00de8a:	495f      	ldr	r1, [pc, #380]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00de8c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 c00de8e:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00de92:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 c00de96:	4302      	orrs	r2, r0
 c00de98:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 c00de9c:	02d9      	lsls	r1, r3, #11
 c00de9e:	d508      	bpl.n	c00deb2 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 c00dea0:	4959      	ldr	r1, [pc, #356]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00dea2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 c00dea4:	f8d1 209c 	ldr.w	r2, [r1, #156]	@ 0x9c
 c00dea8:	f022 0203 	bic.w	r2, r2, #3
 c00deac:	4302      	orrs	r2, r0
 c00deae:	f8c1 209c 	str.w	r2, [r1, #156]	@ 0x9c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 c00deb2:	049a      	lsls	r2, r3, #18
 c00deb4:	d511      	bpl.n	c00deda <HAL_RCCEx_PeriphCLKConfig+0x1ea>
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 c00deb6:	4954      	ldr	r1, [pc, #336]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00deb8:	6f60      	ldr	r0, [r4, #116]	@ 0x74
 c00deba:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
    if (PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 c00debe:	f1b0 6f00 	cmp.w	r0, #134217728	@ 0x8000000
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 c00dec2:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 c00dec6:	ea42 0200 	orr.w	r2, r2, r0
 c00deca:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
    if (PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 c00dece:	f000 8131 	beq.w	c00e134 <HAL_RCCEx_PeriphCLKConfig+0x444>
      if (PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLLSAI1)
 c00ded2:	f1b0 6f80 	cmp.w	r0, #67108864	@ 0x4000000
 c00ded6:	f000 8177 	beq.w	c00e1c8 <HAL_RCCEx_PeriphCLKConfig+0x4d8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == (RCC_PERIPHCLK_SDMMC1))
 c00deda:	031f      	lsls	r7, r3, #12
 c00dedc:	d51b      	bpl.n	c00df16 <HAL_RCCEx_PeriphCLKConfig+0x226>
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 c00dede:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
 c00dee0:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
 c00dee4:	f000 812b 	beq.w	c00e13e <HAL_RCCEx_PeriphCLKConfig+0x44e>
 c00dee8:	4847      	ldr	r0, [pc, #284]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
    if (PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLSAI1)
 c00deea:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 c00deee:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
 c00def2:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 c00def6:	ea42 0201 	orr.w	r2, r2, r1
 c00defa:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 c00defe:	f8d0 209c 	ldr.w	r2, [r0, #156]	@ 0x9c
 c00df02:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 c00df06:	f8c0 209c 	str.w	r2, [r0, #156]	@ 0x9c
    if (PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLSAI1)
 c00df0a:	f000 8165 	beq.w	c00e1d8 <HAL_RCCEx_PeriphCLKConfig+0x4e8>
    else if (PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLL)
 c00df0e:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
 c00df12:	f000 814c 	beq.w	c00e1ae <HAL_RCCEx_PeriphCLKConfig+0x4be>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 c00df16:	035d      	lsls	r5, r3, #13
 c00df18:	d511      	bpl.n	c00df3e <HAL_RCCEx_PeriphCLKConfig+0x24e>
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 c00df1a:	493b      	ldr	r1, [pc, #236]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00df1c:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 c00df1e:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
    if (PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 c00df22:	f1b0 6f00 	cmp.w	r0, #134217728	@ 0x8000000
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 c00df26:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 c00df2a:	ea42 0200 	orr.w	r2, r2, r0
 c00df2e:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
    if (PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 c00df32:	f000 8110 	beq.w	c00e156 <HAL_RCCEx_PeriphCLKConfig+0x466>
    else if (PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLLSAI1)
 c00df36:	f1b0 6f80 	cmp.w	r0, #67108864	@ 0x4000000
 c00df3a:	f000 813d 	beq.w	c00e1b8 <HAL_RCCEx_PeriphCLKConfig+0x4c8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 c00df3e:	0458      	lsls	r0, r3, #17
 c00df40:	d50e      	bpl.n	c00df60 <HAL_RCCEx_PeriphCLKConfig+0x270>
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 c00df42:	4831      	ldr	r0, [pc, #196]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00df44:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
 c00df48:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
    if (PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 c00df4c:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 c00df50:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 c00df54:	ea42 0201 	orr.w	r2, r2, r1
 c00df58:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    if (PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 c00df5c:	f000 8110 	beq.w	c00e180 <HAL_RCCEx_PeriphCLKConfig+0x490>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 c00df60:	03d9      	lsls	r1, r3, #15
 c00df62:	d509      	bpl.n	c00df78 <HAL_RCCEx_PeriphCLKConfig+0x288>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 c00df64:	4928      	ldr	r1, [pc, #160]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00df66:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
 c00df6a:	f8d1 209c 	ldr.w	r2, [r1, #156]	@ 0x9c
 c00df6e:	f022 0204 	bic.w	r2, r2, #4
 c00df72:	4302      	orrs	r2, r0
 c00df74:	f8c1 209c 	str.w	r2, [r1, #156]	@ 0x9c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1AUDIO) == RCC_PERIPHCLK_DFSDM1AUDIO)
 c00df78:	029a      	lsls	r2, r3, #10
 c00df7a:	d509      	bpl.n	c00df90 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
 c00df7c:	4922      	ldr	r1, [pc, #136]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00df7e:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 c00df82:	f8d1 209c 	ldr.w	r2, [r1, #156]	@ 0x9c
 c00df86:	f022 0218 	bic.w	r2, r2, #24
 c00df8a:	4302      	orrs	r2, r0
 c00df8c:	f8c1 209c 	str.w	r2, [r1, #156]	@ 0x9c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 c00df90:	01db      	lsls	r3, r3, #7
 c00df92:	d50e      	bpl.n	c00dfb2 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
    __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 c00df94:	4a1c      	ldr	r2, [pc, #112]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00df96:	f8d4 108c 	ldr.w	r1, [r4, #140]	@ 0x8c
 c00df9a:	f8d2 309c 	ldr.w	r3, [r2, #156]	@ 0x9c
    if (PeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL)
 c00df9e:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
    __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 c00dfa2:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 c00dfa6:	ea43 0301 	orr.w	r3, r3, r1
 c00dfaa:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    if (PeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL)
 c00dfae:	f000 80d7 	beq.w	c00e160 <HAL_RCCEx_PeriphCLKConfig+0x470>
}
 c00dfb2:	4630      	mov	r0, r6
 c00dfb4:	b002      	add	sp, #8
 c00dfb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    switch (PeriphClkInit->Sai1ClockSelection)
 c00dfba:	2960      	cmp	r1, #96	@ 0x60
 c00dfbc:	d002      	beq.n	c00dfc4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
 c00dfbe:	2980      	cmp	r1, #128	@ 0x80
 c00dfc0:	f040 8119 	bne.w	c00e1f6 <HAL_RCCEx_PeriphCLKConfig+0x506>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 c00dfc4:	4810      	ldr	r0, [pc, #64]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 c00dfc6:	04df      	lsls	r7, r3, #19
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 c00dfc8:	f8d0 209c 	ldr.w	r2, [r0, #156]	@ 0x9c
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 c00dfcc:	f04f 0600 	mov.w	r6, #0
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 c00dfd0:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 c00dfd4:	ea42 0201 	orr.w	r2, r2, r1
 c00dfd8:	f8c0 209c 	str.w	r2, [r0, #156]	@ 0x9c
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 c00dfdc:	f53f aea7 	bmi.w	c00dd2e <HAL_RCCEx_PeriphCLKConfig+0x3e>
    switch (PeriphClkInit->Sai2ClockSelection)
 c00dfe0:	4637      	mov	r7, r6
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 c00dfe2:	039d      	lsls	r5, r3, #14
 c00dfe4:	f57f aec7 	bpl.w	c00dd76 <HAL_RCCEx_PeriphCLKConfig+0x86>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 c00dfe8:	4b07      	ldr	r3, [pc, #28]	@ (c00e008 <HAL_RCCEx_PeriphCLKConfig+0x318>)
 c00dfea:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 c00dfec:	00d0      	lsls	r0, r2, #3
 c00dfee:	d561      	bpl.n	c00e0b4 <HAL_RCCEx_PeriphCLKConfig+0x3c4>
    FlagStatus       pwrclkchanged = RESET;
 c00dff0:	f04f 0800 	mov.w	r8, #0
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 c00dff4:	4d05      	ldr	r5, [pc, #20]	@ (c00e00c <HAL_RCCEx_PeriphCLKConfig+0x31c>)
 c00dff6:	682b      	ldr	r3, [r5, #0]
 c00dff8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 c00dffc:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 c00dffe:	f7fe fbcb 	bl	c00c798 <HAL_GetTick>
 c00e002:	4681      	mov	r9, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 c00e004:	e00a      	b.n	c00e01c <HAL_RCCEx_PeriphCLKConfig+0x32c>
 c00e006:	bf00      	nop
 c00e008:	50021000 	.word	0x50021000
 c00e00c:	50007000 	.word	0x50007000
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 c00e010:	f7fe fbc2 	bl	c00c798 <HAL_GetTick>
 c00e014:	eba0 0009 	sub.w	r0, r0, r9
 c00e018:	2802      	cmp	r0, #2
 c00e01a:	d868      	bhi.n	c00e0ee <HAL_RCCEx_PeriphCLKConfig+0x3fe>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 c00e01c:	682b      	ldr	r3, [r5, #0]
 c00e01e:	05da      	lsls	r2, r3, #23
 c00e020:	d5f6      	bpl.n	c00e010 <HAL_RCCEx_PeriphCLKConfig+0x320>
    if (ret == HAL_OK)
 c00e022:	2f00      	cmp	r7, #0
 c00e024:	d178      	bne.n	c00e118 <HAL_RCCEx_PeriphCLKConfig+0x428>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 c00e026:	f8df a1d4 	ldr.w	sl, [pc, #468]	@ c00e1fc <HAL_RCCEx_PeriphCLKConfig+0x50c>
      if ((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 c00e02a:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 c00e02e:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
      if ((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 c00e032:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 c00e036:	d027      	beq.n	c00e088 <HAL_RCCEx_PeriphCLKConfig+0x398>
 c00e038:	428b      	cmp	r3, r1
 c00e03a:	d025      	beq.n	c00e088 <HAL_RCCEx_PeriphCLKConfig+0x398>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 c00e03c:	f8da 2090 	ldr.w	r2, [sl, #144]	@ 0x90
        __HAL_RCC_BACKUPRESET_FORCE();
 c00e040:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 c00e044:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 c00e048:	f8ca 3090 	str.w	r3, [sl, #144]	@ 0x90
        __HAL_RCC_BACKUPRESET_RELEASE();
 c00e04c:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 c00e050:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 c00e054:	f8ca 3090 	str.w	r3, [sl, #144]	@ 0x90
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 c00e058:	f422 7340 	bic.w	r3, r2, #768	@ 0x300
        RCC->BDCR = tmpregister;
 c00e05c:	f8ca 3090 	str.w	r3, [sl, #144]	@ 0x90
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 c00e060:	07d3      	lsls	r3, r2, #31
 c00e062:	d511      	bpl.n	c00e088 <HAL_RCCEx_PeriphCLKConfig+0x398>
        tickstart = HAL_GetTick();
 c00e064:	f7fe fb98 	bl	c00c798 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 c00e068:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 c00e06c:	4605      	mov	r5, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 c00e06e:	e005      	b.n	c00e07c <HAL_RCCEx_PeriphCLKConfig+0x38c>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 c00e070:	f7fe fb92 	bl	c00c798 <HAL_GetTick>
 c00e074:	1b40      	subs	r0, r0, r5
 c00e076:	4548      	cmp	r0, r9
 c00e078:	f200 80b6 	bhi.w	c00e1e8 <HAL_RCCEx_PeriphCLKConfig+0x4f8>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 c00e07c:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 c00e080:	0798      	lsls	r0, r3, #30
 c00e082:	d5f5      	bpl.n	c00e070 <HAL_RCCEx_PeriphCLKConfig+0x380>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 c00e084:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
 c00e088:	4a5c      	ldr	r2, [pc, #368]	@ (c00e1fc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 c00e08a:	f8d2 3090 	ldr.w	r3, [r2, #144]	@ 0x90
 c00e08e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 c00e092:	430b      	orrs	r3, r1
 c00e094:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 c00e098:	e03f      	b.n	c00e11a <HAL_RCCEx_PeriphCLKConfig+0x42a>
    switch (PeriphClkInit->Sai2ClockSelection)
 c00e09a:	f5b1 7f40 	cmp.w	r1, #768	@ 0x300
 c00e09e:	d003      	beq.n	c00e0a8 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 c00e0a0:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 c00e0a4:	f040 80a5 	bne.w	c00e1f2 <HAL_RCCEx_PeriphCLKConfig+0x502>
    switch (PeriphClkInit->Sai1ClockSelection)
 c00e0a8:	4637      	mov	r7, r6
    if (ret == HAL_OK)
 c00e0aa:	2f00      	cmp	r7, #0
 c00e0ac:	f43f ae56 	beq.w	c00dd5c <HAL_RCCEx_PeriphCLKConfig+0x6c>
 c00e0b0:	463e      	mov	r6, r7
 c00e0b2:	e796      	b.n	c00dfe2 <HAL_RCCEx_PeriphCLKConfig+0x2f2>
      __HAL_RCC_PWR_CLK_ENABLE();
 c00e0b4:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
      pwrclkchanged = SET;
 c00e0b6:	f04f 0801 	mov.w	r8, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 c00e0ba:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 c00e0be:	659a      	str	r2, [r3, #88]	@ 0x58
 c00e0c0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 c00e0c2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 c00e0c6:	9301      	str	r3, [sp, #4]
 c00e0c8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 c00e0ca:	e793      	b.n	c00dff4 <HAL_RCCEx_PeriphCLKConfig+0x304>
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 c00e0cc:	2100      	movs	r1, #0
 c00e0ce:	1d20      	adds	r0, r4, #4
 c00e0d0:	f7ff fd28 	bl	c00db24 <RCCEx_PLLSAI1_Config>
 c00e0d4:	4607      	mov	r7, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 c00e0d6:	6823      	ldr	r3, [r4, #0]
    if (ret == HAL_OK)
 c00e0d8:	bb57      	cbnz	r7, c00e130 <HAL_RCCEx_PeriphCLKConfig+0x440>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 c00e0da:	4948      	ldr	r1, [pc, #288]	@ (c00e1fc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 c00e0dc:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 c00e0de:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 c00e0e2:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 c00e0e6:	4302      	orrs	r2, r0
 c00e0e8:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 c00e0ec:	e6b5      	b.n	c00de5a <HAL_RCCEx_PeriphCLKConfig+0x16a>
        if ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 c00e0ee:	682b      	ldr	r3, [r5, #0]
 c00e0f0:	05d9      	lsls	r1, r3, #23
 c00e0f2:	d496      	bmi.n	c00e022 <HAL_RCCEx_PeriphCLKConfig+0x332>
          ret = HAL_TIMEOUT;
 c00e0f4:	2603      	movs	r6, #3
 c00e0f6:	4637      	mov	r7, r6
 c00e0f8:	e00f      	b.n	c00e11a <HAL_RCCEx_PeriphCLKConfig+0x42a>
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 c00e0fa:	3004      	adds	r0, #4
 c00e0fc:	f7ff fd12 	bl	c00db24 <RCCEx_PLLSAI1_Config>
 c00e100:	4606      	mov	r6, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 c00e102:	6823      	ldr	r3, [r4, #0]
    if (ret == HAL_OK)
 c00e104:	2e00      	cmp	r6, #0
 c00e106:	f47f ae0f 	bne.w	c00dd28 <HAL_RCCEx_PeriphCLKConfig+0x38>
 c00e10a:	e041      	b.n	c00e190 <HAL_RCCEx_PeriphCLKConfig+0x4a0>
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 c00e10c:	1d20      	adds	r0, r4, #4
 c00e10e:	f7ff fd09 	bl	c00db24 <RCCEx_PLLSAI1_Config>
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 c00e112:	6823      	ldr	r3, [r4, #0]
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 c00e114:	4607      	mov	r7, r0
        break;
 c00e116:	e61e      	b.n	c00dd56 <HAL_RCCEx_PeriphCLKConfig+0x66>
 c00e118:	463e      	mov	r6, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 c00e11a:	6823      	ldr	r3, [r4, #0]
    if (pwrclkchanged == SET)
 c00e11c:	f1b8 0f00 	cmp.w	r8, #0
 c00e120:	f43f ae29 	beq.w	c00dd76 <HAL_RCCEx_PeriphCLKConfig+0x86>
      __HAL_RCC_PWR_CLK_DISABLE();
 c00e124:	4935      	ldr	r1, [pc, #212]	@ (c00e1fc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 c00e126:	6d8a      	ldr	r2, [r1, #88]	@ 0x58
 c00e128:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
 c00e12c:	658a      	str	r2, [r1, #88]	@ 0x58
 c00e12e:	e622      	b.n	c00dd76 <HAL_RCCEx_PeriphCLKConfig+0x86>
 c00e130:	463e      	mov	r6, r7
 c00e132:	e692      	b.n	c00de5a <HAL_RCCEx_PeriphCLKConfig+0x16a>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 c00e134:	68ca      	ldr	r2, [r1, #12]
 c00e136:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 c00e13a:	60ca      	str	r2, [r1, #12]
 c00e13c:	e6cd      	b.n	c00deda <HAL_RCCEx_PeriphCLKConfig+0x1ea>
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 c00e13e:	4a2f      	ldr	r2, [pc, #188]	@ (c00e1fc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 c00e140:	f8d2 109c 	ldr.w	r1, [r2, #156]	@ 0x9c
 c00e144:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 c00e148:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 c00e14c:	68d1      	ldr	r1, [r2, #12]
 c00e14e:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
 c00e152:	60d1      	str	r1, [r2, #12]
 c00e154:	e6df      	b.n	c00df16 <HAL_RCCEx_PeriphCLKConfig+0x226>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 c00e156:	68ca      	ldr	r2, [r1, #12]
 c00e158:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 c00e15c:	60ca      	str	r2, [r1, #12]
 c00e15e:	e6ee      	b.n	c00df3e <HAL_RCCEx_PeriphCLKConfig+0x24e>
}
 c00e160:	4630      	mov	r0, r6
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 c00e162:	68d3      	ldr	r3, [r2, #12]
 c00e164:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 c00e168:	60d3      	str	r3, [r2, #12]
}
 c00e16a:	b002      	add	sp, #8
 c00e16c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 c00e170:	4922      	ldr	r1, [pc, #136]	@ (c00e1fc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 c00e172:	68ca      	ldr	r2, [r1, #12]
 c00e174:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 c00e178:	60ca      	str	r2, [r1, #12]
    if (ret == HAL_OK)
 c00e17a:	2f00      	cmp	r7, #0
 c00e17c:	d1d8      	bne.n	c00e130 <HAL_RCCEx_PeriphCLKConfig+0x440>
 c00e17e:	e7ac      	b.n	c00e0da <HAL_RCCEx_PeriphCLKConfig+0x3ea>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_R_UPDATE);
 c00e180:	2102      	movs	r1, #2
 c00e182:	1d20      	adds	r0, r4, #4
 c00e184:	f7ff fcce 	bl	c00db24 <RCCEx_PLLSAI1_Config>
      if (ret != HAL_OK)
 c00e188:	b100      	cbz	r0, c00e18c <HAL_RCCEx_PeriphCLKConfig+0x49c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 c00e18a:	4606      	mov	r6, r0
 c00e18c:	6823      	ldr	r3, [r4, #0]
 c00e18e:	e6e7      	b.n	c00df60 <HAL_RCCEx_PeriphCLKConfig+0x270>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 c00e190:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 c00e192:	e717      	b.n	c00dfc4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 c00e194:	4819      	ldr	r0, [pc, #100]	@ (c00e1fc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 c00e196:	68c2      	ldr	r2, [r0, #12]
 c00e198:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 c00e19c:	60c2      	str	r2, [r0, #12]
    if (ret == HAL_OK)
 c00e19e:	e711      	b.n	c00dfc4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 c00e1a0:	4916      	ldr	r1, [pc, #88]	@ (c00e1fc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
    switch (PeriphClkInit->Sai1ClockSelection)
 c00e1a2:	4637      	mov	r7, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 c00e1a4:	68ca      	ldr	r2, [r1, #12]
 c00e1a6:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 c00e1aa:	60ca      	str	r2, [r1, #12]
        break;
 c00e1ac:	e77d      	b.n	c00e0aa <HAL_RCCEx_PeriphCLKConfig+0x3ba>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 c00e1ae:	68c2      	ldr	r2, [r0, #12]
 c00e1b0:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 c00e1b4:	60c2      	str	r2, [r0, #12]
 c00e1b6:	e6ae      	b.n	c00df16 <HAL_RCCEx_PeriphCLKConfig+0x226>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 c00e1b8:	2101      	movs	r1, #1
 c00e1ba:	1d20      	adds	r0, r4, #4
 c00e1bc:	f7ff fcb2 	bl	c00db24 <RCCEx_PLLSAI1_Config>
      if (ret != HAL_OK)
 c00e1c0:	b100      	cbz	r0, c00e1c4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 c00e1c2:	4606      	mov	r6, r0
 c00e1c4:	6823      	ldr	r3, [r4, #0]
 c00e1c6:	e6ba      	b.n	c00df3e <HAL_RCCEx_PeriphCLKConfig+0x24e>
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 c00e1c8:	2101      	movs	r1, #1
 c00e1ca:	1d20      	adds	r0, r4, #4
 c00e1cc:	f7ff fcaa 	bl	c00db24 <RCCEx_PLLSAI1_Config>
        if (ret != HAL_OK)
 c00e1d0:	b100      	cbz	r0, c00e1d4 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == (RCC_PERIPHCLK_SDMMC1))
 c00e1d2:	4606      	mov	r6, r0
 c00e1d4:	6823      	ldr	r3, [r4, #0]
 c00e1d6:	e680      	b.n	c00deda <HAL_RCCEx_PeriphCLKConfig+0x1ea>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 c00e1d8:	2101      	movs	r1, #1
 c00e1da:	1d20      	adds	r0, r4, #4
 c00e1dc:	f7ff fca2 	bl	c00db24 <RCCEx_PLLSAI1_Config>
      if (ret != HAL_OK)
 c00e1e0:	b100      	cbz	r0, c00e1e4 <HAL_RCCEx_PeriphCLKConfig+0x4f4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 c00e1e2:	4606      	mov	r6, r0
 c00e1e4:	6823      	ldr	r3, [r4, #0]
 c00e1e6:	e696      	b.n	c00df16 <HAL_RCCEx_PeriphCLKConfig+0x226>
            if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 c00e1e8:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 c00e1ec:	079d      	lsls	r5, r3, #30
 c00e1ee:	d581      	bpl.n	c00e0f4 <HAL_RCCEx_PeriphCLKConfig+0x404>
 c00e1f0:	e748      	b.n	c00e084 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Sai2ClockSelection)
 c00e1f2:	2601      	movs	r6, #1
 c00e1f4:	e6f4      	b.n	c00dfe0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
    switch (PeriphClkInit->Sai1ClockSelection)
 c00e1f6:	2601      	movs	r6, #1
 c00e1f8:	e596      	b.n	c00dd28 <HAL_RCCEx_PeriphCLKConfig+0x38>
 c00e1fa:	bf00      	nop
 c00e1fc:	50021000 	.word	0x50021000

0c00e200 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 c00e200:	2800      	cmp	r0, #0
 c00e202:	f000 8084 	beq.w	c00e30e <HAL_TIM_Base_Init+0x10e>
{
 c00e206:	b538      	push	{r3, r4, r5, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 c00e208:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 c00e20c:	4604      	mov	r4, r0
 c00e20e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 c00e212:	2b00      	cmp	r3, #0
 c00e214:	d070      	beq.n	c00e2f8 <HAL_TIM_Base_Init+0xf8>
    HAL_TIM_Base_MspInit(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 c00e216:	2302      	movs	r3, #2

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 c00e218:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 c00e21a:	493e      	ldr	r1, [pc, #248]	@ (c00e314 <HAL_TIM_Base_Init+0x114>)
  htim->State = HAL_TIM_STATE_BUSY;
 c00e21c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 c00e220:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 c00e222:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 c00e224:	d054      	beq.n	c00e2d0 <HAL_TIM_Base_Init+0xd0>
 c00e226:	f1b2 4fa0 	cmp.w	r2, #1342177280	@ 0x50000000
 c00e22a:	d024      	beq.n	c00e276 <HAL_TIM_Base_Init+0x76>
 c00e22c:	f5a1 3194 	sub.w	r1, r1, #75776	@ 0x12800
 c00e230:	428a      	cmp	r2, r1
 c00e232:	d020      	beq.n	c00e276 <HAL_TIM_Base_Init+0x76>
 c00e234:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 c00e238:	428a      	cmp	r2, r1
 c00e23a:	d01c      	beq.n	c00e276 <HAL_TIM_Base_Init+0x76>
 c00e23c:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 c00e240:	428a      	cmp	r2, r1
 c00e242:	d018      	beq.n	c00e276 <HAL_TIM_Base_Init+0x76>
 c00e244:	f501 3194 	add.w	r1, r1, #75776	@ 0x12800
 c00e248:	428a      	cmp	r2, r1
 c00e24a:	d041      	beq.n	c00e2d0 <HAL_TIM_Base_Init+0xd0>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 c00e24c:	f501 6140 	add.w	r1, r1, #3072	@ 0xc00
 c00e250:	428a      	cmp	r2, r1
 c00e252:	d056      	beq.n	c00e302 <HAL_TIM_Base_Init+0x102>
 c00e254:	4930      	ldr	r1, [pc, #192]	@ (c00e318 <HAL_TIM_Base_Init+0x118>)
 c00e256:	428a      	cmp	r2, r1
 c00e258:	d053      	beq.n	c00e302 <HAL_TIM_Base_Init+0x102>
 c00e25a:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 c00e25e:	428a      	cmp	r2, r1
 c00e260:	d04f      	beq.n	c00e302 <HAL_TIM_Base_Init+0x102>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 c00e262:	69a5      	ldr	r5, [r4, #24]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 c00e264:	6861      	ldr	r1, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 c00e266:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 c00e268:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 c00e26c:	432b      	orrs	r3, r5
  TIMx->CR1 = tmpcr1;
 c00e26e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 c00e270:	62d0      	str	r0, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
 c00e272:	6291      	str	r1, [r2, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 c00e274:	e010      	b.n	c00e298 <HAL_TIM_Base_Init+0x98>
    tmpcr1 |= Structure->CounterMode;
 c00e276:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 c00e278:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 c00e27c:	6920      	ldr	r0, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
 c00e27e:	430b      	orrs	r3, r1
    tmpcr1 &= ~TIM_CR1_CKD;
 c00e280:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 c00e284:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 c00e286:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 c00e288:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 c00e28c:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 c00e28e:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 c00e290:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 c00e292:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 c00e294:	62d0      	str	r0, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
 c00e296:	6291      	str	r1, [r2, #40]	@ 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 c00e298:	2301      	movs	r3, #1
 c00e29a:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 c00e29c:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 c00e2a0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 c00e2a4:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 c00e2a8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 c00e2ac:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 c00e2b0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 c00e2b4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 c00e2b8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 c00e2bc:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 c00e2c0:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 c00e2c4:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 c00e2c8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  return HAL_OK;
 c00e2cc:	2000      	movs	r0, #0
}
 c00e2ce:	bd38      	pop	{r3, r4, r5, pc}
    tmpcr1 |= Structure->CounterMode;
 c00e2d0:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 c00e2d2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 c00e2d6:	6921      	ldr	r1, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
 c00e2d8:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 c00e2da:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 c00e2de:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 c00e2e0:	69a1      	ldr	r1, [r4, #24]
 c00e2e2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 c00e2e6:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 c00e2e8:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 c00e2ea:	68e3      	ldr	r3, [r4, #12]
 c00e2ec:	62d3      	str	r3, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
 c00e2ee:	6863      	ldr	r3, [r4, #4]
 c00e2f0:	6293      	str	r3, [r2, #40]	@ 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 c00e2f2:	6963      	ldr	r3, [r4, #20]
 c00e2f4:	6313      	str	r3, [r2, #48]	@ 0x30
 c00e2f6:	e7cf      	b.n	c00e298 <HAL_TIM_Base_Init+0x98>
    htim->Lock = HAL_UNLOCKED;
 c00e2f8:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 c00e2fc:	f7f4 f8c6 	bl	c00248c <HAL_TIM_Base_MspInit>
 c00e300:	e789      	b.n	c00e216 <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 c00e302:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
 c00e304:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 c00e308:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 c00e30a:	4303      	orrs	r3, r0
 c00e30c:	e7e9      	b.n	c00e2e2 <HAL_TIM_Base_Init+0xe2>
    return HAL_ERROR;
 c00e30e:	2001      	movs	r0, #1
}
 c00e310:	4770      	bx	lr
 c00e312:	bf00      	nop
 c00e314:	50012c00 	.word	0x50012c00
 c00e318:	50014400 	.word	0x50014400

0c00e31c <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 c00e31c:	f890 203c 	ldrb.w	r2, [r0, #60]	@ 0x3c
 c00e320:	2a01      	cmp	r2, #1
 c00e322:	d07a      	beq.n	c00e41a <HAL_TIM_ConfigClockSource+0xfe>
 c00e324:	4603      	mov	r3, r0
  htim->State = HAL_TIM_STATE_BUSY;
 c00e326:	2202      	movs	r2, #2
  __HAL_LOCK(htim);
 c00e328:	f04f 0c01 	mov.w	ip, #1
  tmpsmcr = htim->Instance->SMCR;
 c00e32c:	6800      	ldr	r0, [r0, #0]
{
 c00e32e:	b430      	push	{r4, r5}
  __HAL_LOCK(htim);
 c00e330:	f883 c03c 	strb.w	ip, [r3, #60]	@ 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 c00e334:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  tmpsmcr = htim->Instance->SMCR;
 c00e338:	6882      	ldr	r2, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 c00e33a:	4c4e      	ldr	r4, [pc, #312]	@ (c00e474 <HAL_TIM_ConfigClockSource+0x158>)
 c00e33c:	4014      	ands	r4, r2
  switch (sClockSourceConfig->ClockSource)
 c00e33e:	680a      	ldr	r2, [r1, #0]
  htim->Instance->SMCR = tmpsmcr;
 c00e340:	6084      	str	r4, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 c00e342:	2a60      	cmp	r2, #96	@ 0x60
 c00e344:	d06b      	beq.n	c00e41e <HAL_TIM_ConfigClockSource+0x102>
 c00e346:	d835      	bhi.n	c00e3b4 <HAL_TIM_ConfigClockSource+0x98>
 c00e348:	2a40      	cmp	r2, #64	@ 0x40
 c00e34a:	d04c      	beq.n	c00e3e6 <HAL_TIM_ConfigClockSource+0xca>
 c00e34c:	d923      	bls.n	c00e396 <HAL_TIM_ConfigClockSource+0x7a>
 c00e34e:	2a50      	cmp	r2, #80	@ 0x50
 c00e350:	d118      	bne.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 c00e352:	684a      	ldr	r2, [r1, #4]
 c00e354:	68cc      	ldr	r4, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 c00e356:	6a01      	ldr	r1, [r0, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 c00e358:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 c00e35c:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 c00e35e:	6a02      	ldr	r2, [r0, #32]
 c00e360:	f022 0201 	bic.w	r2, r2, #1
 c00e364:	6202      	str	r2, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 c00e366:	6982      	ldr	r2, [r0, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 c00e368:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 c00e36c:	ea42 1204 	orr.w	r2, r2, r4, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 c00e370:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 c00e372:	6201      	str	r1, [r0, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 c00e374:	6882      	ldr	r2, [r0, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 c00e376:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 c00e37a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 c00e37e:	f042 0257 	orr.w	r2, r2, #87	@ 0x57
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 c00e382:	6082      	str	r2, [r0, #8]
  __HAL_UNLOCK(htim);
 c00e384:	2200      	movs	r2, #0
  htim->State = HAL_TIM_STATE_READY;
 c00e386:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 c00e388:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  htim->State = HAL_TIM_STATE_READY;
 c00e38c:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
  return HAL_OK;
 c00e390:	4610      	mov	r0, r2
}
 c00e392:	bc30      	pop	{r4, r5}
 c00e394:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 c00e396:	2a20      	cmp	r2, #32
 c00e398:	d002      	beq.n	c00e3a0 <HAL_TIM_ConfigClockSource+0x84>
 c00e39a:	d920      	bls.n	c00e3de <HAL_TIM_ConfigClockSource+0xc2>
 c00e39c:	2a30      	cmp	r2, #48	@ 0x30
 c00e39e:	d1f1      	bne.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 c00e3a0:	6881      	ldr	r1, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 c00e3a2:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 c00e3a6:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 c00e3aa:	4311      	orrs	r1, r2
 c00e3ac:	f041 0107 	orr.w	r1, r1, #7
  TIMx->SMCR = tmpsmcr;
 c00e3b0:	6081      	str	r1, [r0, #8]
}
 c00e3b2:	e7e7      	b.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 c00e3b4:	2a70      	cmp	r2, #112	@ 0x70
 c00e3b6:	d04d      	beq.n	c00e454 <HAL_TIM_ConfigClockSource+0x138>
 c00e3b8:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 c00e3bc:	d1e2      	bne.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 c00e3be:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 c00e3c2:	6884      	ldr	r4, [r0, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 c00e3c4:	432a      	orrs	r2, r5
 c00e3c6:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 c00e3c8:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 c00e3cc:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 c00e3d0:	430a      	orrs	r2, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 c00e3d2:	6082      	str	r2, [r0, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 c00e3d4:	6882      	ldr	r2, [r0, #8]
 c00e3d6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 c00e3da:	6082      	str	r2, [r0, #8]
      break;
 c00e3dc:	e7d2      	b.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 c00e3de:	f032 0110 	bics.w	r1, r2, #16
 c00e3e2:	d1cf      	bne.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>
 c00e3e4:	e7dc      	b.n	c00e3a0 <HAL_TIM_ConfigClockSource+0x84>
      TIM_TI1_ConfigInputStage(htim->Instance,
 c00e3e6:	684a      	ldr	r2, [r1, #4]
 c00e3e8:	68cc      	ldr	r4, [r1, #12]
  tmpccer = TIMx->CCER;
 c00e3ea:	6a01      	ldr	r1, [r0, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 c00e3ec:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 c00e3f0:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 c00e3f2:	6a02      	ldr	r2, [r0, #32]
 c00e3f4:	f022 0201 	bic.w	r2, r2, #1
 c00e3f8:	6202      	str	r2, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 c00e3fa:	6982      	ldr	r2, [r0, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 c00e3fc:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 c00e400:	ea42 1204 	orr.w	r2, r2, r4, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 c00e404:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 c00e406:	6201      	str	r1, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 c00e408:	6882      	ldr	r2, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 c00e40a:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 c00e40e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 c00e412:	f042 0247 	orr.w	r2, r2, #71	@ 0x47
  TIMx->SMCR = tmpsmcr;
 c00e416:	6082      	str	r2, [r0, #8]
}
 c00e418:	e7b4      	b.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 c00e41a:	2002      	movs	r0, #2
}
 c00e41c:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 c00e41e:	6a02      	ldr	r2, [r0, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 c00e420:	684c      	ldr	r4, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 c00e422:	f022 0210 	bic.w	r2, r2, #16
      TIM_TI2_ConfigInputStage(htim->Instance,
 c00e426:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 c00e428:	6202      	str	r2, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 c00e42a:	6981      	ldr	r1, [r0, #24]
  tmpccer = TIMx->CCER;
 c00e42c:	6a02      	ldr	r2, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 c00e42e:	f421 4170 	bic.w	r1, r1, #61440	@ 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 c00e432:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 c00e436:	ea42 1204 	orr.w	r2, r2, r4, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 c00e43a:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 c00e43e:	6181      	str	r1, [r0, #24]
  TIMx->CCER = tmpccer;
 c00e440:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 c00e442:	6882      	ldr	r2, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 c00e444:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 c00e448:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 c00e44c:	f042 0267 	orr.w	r2, r2, #103	@ 0x67
  TIMx->SMCR = tmpsmcr;
 c00e450:	6082      	str	r2, [r0, #8]
}
 c00e452:	e797      	b.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 c00e454:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 c00e458:	6884      	ldr	r4, [r0, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 c00e45a:	432a      	orrs	r2, r5
 c00e45c:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 c00e45e:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 c00e462:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 c00e466:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 c00e468:	6082      	str	r2, [r0, #8]
      tmpsmcr = htim->Instance->SMCR;
 c00e46a:	6882      	ldr	r2, [r0, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 c00e46c:	f042 0277 	orr.w	r2, r2, #119	@ 0x77
      htim->Instance->SMCR = tmpsmcr;
 c00e470:	6082      	str	r2, [r0, #8]
      break;
 c00e472:	e787      	b.n	c00e384 <HAL_TIM_ConfigClockSource+0x68>
 c00e474:	ffce0088 	.word	0xffce0088

0c00e478 <HAL_TIM_PeriodElapsedCallback>:
__weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 c00e478:	4770      	bx	lr
 c00e47a:	bf00      	nop

0c00e47c <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 c00e47c:	4770      	bx	lr
 c00e47e:	bf00      	nop

0c00e480 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 c00e480:	4770      	bx	lr
 c00e482:	bf00      	nop

0c00e484 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 c00e484:	4770      	bx	lr
 c00e486:	bf00      	nop

0c00e488 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 c00e488:	4770      	bx	lr
 c00e48a:	bf00      	nop

0c00e48c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 c00e48c:	6803      	ldr	r3, [r0, #0]
{
 c00e48e:	b510      	push	{r4, lr}
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 c00e490:	691a      	ldr	r2, [r3, #16]
{
 c00e492:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 c00e494:	0791      	lsls	r1, r2, #30
 c00e496:	d502      	bpl.n	c00e49e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 c00e498:	68da      	ldr	r2, [r3, #12]
 c00e49a:	0792      	lsls	r2, r2, #30
 c00e49c:	d468      	bmi.n	c00e570 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 c00e49e:	691a      	ldr	r2, [r3, #16]
 c00e4a0:	0752      	lsls	r2, r2, #29
 c00e4a2:	d502      	bpl.n	c00e4aa <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 c00e4a4:	68da      	ldr	r2, [r3, #12]
 c00e4a6:	0750      	lsls	r0, r2, #29
 c00e4a8:	d44f      	bmi.n	c00e54a <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 c00e4aa:	691a      	ldr	r2, [r3, #16]
 c00e4ac:	0711      	lsls	r1, r2, #28
 c00e4ae:	d502      	bpl.n	c00e4b6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 c00e4b0:	68da      	ldr	r2, [r3, #12]
 c00e4b2:	0712      	lsls	r2, r2, #28
 c00e4b4:	d437      	bmi.n	c00e526 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 c00e4b6:	691a      	ldr	r2, [r3, #16]
 c00e4b8:	06d0      	lsls	r0, r2, #27
 c00e4ba:	d502      	bpl.n	c00e4c2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 c00e4bc:	68da      	ldr	r2, [r3, #12]
 c00e4be:	06d1      	lsls	r1, r2, #27
 c00e4c0:	d41e      	bmi.n	c00e500 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 c00e4c2:	691a      	ldr	r2, [r3, #16]
 c00e4c4:	07d2      	lsls	r2, r2, #31
 c00e4c6:	d502      	bpl.n	c00e4ce <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 c00e4c8:	68da      	ldr	r2, [r3, #12]
 c00e4ca:	07d0      	lsls	r0, r2, #31
 c00e4cc:	d469      	bmi.n	c00e5a2 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 c00e4ce:	691a      	ldr	r2, [r3, #16]
 c00e4d0:	0611      	lsls	r1, r2, #24
 c00e4d2:	d502      	bpl.n	c00e4da <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 c00e4d4:	68da      	ldr	r2, [r3, #12]
 c00e4d6:	0612      	lsls	r2, r2, #24
 c00e4d8:	d46b      	bmi.n	c00e5b2 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 c00e4da:	691a      	ldr	r2, [r3, #16]
 c00e4dc:	05d0      	lsls	r0, r2, #23
 c00e4de:	d502      	bpl.n	c00e4e6 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 c00e4e0:	68da      	ldr	r2, [r3, #12]
 c00e4e2:	0611      	lsls	r1, r2, #24
 c00e4e4:	d46d      	bmi.n	c00e5c2 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 c00e4e6:	691a      	ldr	r2, [r3, #16]
 c00e4e8:	0652      	lsls	r2, r2, #25
 c00e4ea:	d502      	bpl.n	c00e4f2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 c00e4ec:	68da      	ldr	r2, [r3, #12]
 c00e4ee:	0650      	lsls	r0, r2, #25
 c00e4f0:	d46f      	bmi.n	c00e5d2 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 c00e4f2:	691a      	ldr	r2, [r3, #16]
 c00e4f4:	0691      	lsls	r1, r2, #26
 c00e4f6:	d502      	bpl.n	c00e4fe <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 c00e4f8:	68da      	ldr	r2, [r3, #12]
 c00e4fa:	0692      	lsls	r2, r2, #26
 c00e4fc:	d449      	bmi.n	c00e592 <HAL_TIM_IRQHandler+0x106>
}
 c00e4fe:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 c00e500:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 c00e504:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 c00e506:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 c00e508:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 c00e50a:	69db      	ldr	r3, [r3, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 c00e50c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 c00e50e:	f413 7f40 	tst.w	r3, #768	@ 0x300
 c00e512:	d16f      	bne.n	c00e5f4 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 c00e514:	f7ff ffb2 	bl	c00e47c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 c00e518:	4620      	mov	r0, r4
 c00e51a:	f7ff ffb3 	bl	c00e484 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 c00e51e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 c00e520:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 c00e522:	7722      	strb	r2, [r4, #28]
 c00e524:	e7cd      	b.n	c00e4c2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 c00e526:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 c00e52a:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 c00e52c:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 c00e52e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 c00e530:	69db      	ldr	r3, [r3, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 c00e532:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 c00e534:	079b      	lsls	r3, r3, #30
 c00e536:	d15a      	bne.n	c00e5ee <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 c00e538:	f7ff ffa0 	bl	c00e47c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 c00e53c:	4620      	mov	r0, r4
 c00e53e:	f7ff ffa1 	bl	c00e484 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 c00e542:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 c00e544:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 c00e546:	7722      	strb	r2, [r4, #28]
 c00e548:	e7b5      	b.n	c00e4b6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 c00e54a:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 c00e54e:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 c00e550:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 c00e552:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 c00e554:	699b      	ldr	r3, [r3, #24]
        HAL_TIM_IC_CaptureCallback(htim);
 c00e556:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 c00e558:	f413 7f40 	tst.w	r3, #768	@ 0x300
 c00e55c:	d144      	bne.n	c00e5e8 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 c00e55e:	f7ff ff8d 	bl	c00e47c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 c00e562:	4620      	mov	r0, r4
 c00e564:	f7ff ff8e 	bl	c00e484 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 c00e568:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 c00e56a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 c00e56c:	7722      	strb	r2, [r4, #28]
 c00e56e:	e79c      	b.n	c00e4aa <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 c00e570:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 c00e574:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 c00e576:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 c00e578:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 c00e57a:	699b      	ldr	r3, [r3, #24]
 c00e57c:	0799      	lsls	r1, r3, #30
 c00e57e:	d130      	bne.n	c00e5e2 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 c00e580:	f7ff ff7c 	bl	c00e47c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 c00e584:	4620      	mov	r0, r4
 c00e586:	f7ff ff7d 	bl	c00e484 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 c00e58a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 c00e58c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 c00e58e:	7722      	strb	r2, [r4, #28]
 c00e590:	e785      	b.n	c00e49e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 c00e592:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 c00e596:	4620      	mov	r0, r4
}
 c00e598:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 c00e59c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 c00e59e:	f000 b87d 	b.w	c00e69c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 c00e5a2:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
 c00e5a6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 c00e5a8:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 c00e5aa:	f7ff ff65 	bl	c00e478 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 c00e5ae:	6823      	ldr	r3, [r4, #0]
 c00e5b0:	e78d      	b.n	c00e4ce <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 c00e5b2:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
 c00e5b6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 c00e5b8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 c00e5ba:	f000 f871 	bl	c00e6a0 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 c00e5be:	6823      	ldr	r3, [r4, #0]
 c00e5c0:	e78b      	b.n	c00e4da <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 c00e5c2:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
 c00e5c6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 c00e5c8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 c00e5ca:	f000 f86b 	bl	c00e6a4 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 c00e5ce:	6823      	ldr	r3, [r4, #0]
 c00e5d0:	e789      	b.n	c00e4e6 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 c00e5d2:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
 c00e5d6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 c00e5d8:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 c00e5da:	f7ff ff55 	bl	c00e488 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 c00e5de:	6823      	ldr	r3, [r4, #0]
 c00e5e0:	e787      	b.n	c00e4f2 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
 c00e5e2:	f7ff ff4d 	bl	c00e480 <HAL_TIM_IC_CaptureCallback>
 c00e5e6:	e7d0      	b.n	c00e58a <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
 c00e5e8:	f7ff ff4a 	bl	c00e480 <HAL_TIM_IC_CaptureCallback>
 c00e5ec:	e7bc      	b.n	c00e568 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
 c00e5ee:	f7ff ff47 	bl	c00e480 <HAL_TIM_IC_CaptureCallback>
 c00e5f2:	e7a6      	b.n	c00e542 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
 c00e5f4:	f7ff ff44 	bl	c00e480 <HAL_TIM_IC_CaptureCallback>
 c00e5f8:	e791      	b.n	c00e51e <HAL_TIM_IRQHandler+0x92>
 c00e5fa:	bf00      	nop

0c00e5fc <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 c00e5fc:	f890 203c 	ldrb.w	r2, [r0, #60]	@ 0x3c
 c00e600:	2a01      	cmp	r2, #1
 c00e602:	d045      	beq.n	c00e690 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 c00e604:	4603      	mov	r3, r0

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 c00e606:	2002      	movs	r0, #2
{
 c00e608:	b470      	push	{r4, r5, r6}

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 c00e60a:	681a      	ldr	r2, [r3, #0]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 c00e60c:	4e21      	ldr	r6, [pc, #132]	@ (c00e694 <HAL_TIMEx_MasterConfigSynchronization+0x98>)
  htim->State = HAL_TIM_STATE_BUSY;
 c00e60e:	f883 003d 	strb.w	r0, [r3, #61]	@ 0x3d
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 c00e612:	42b2      	cmp	r2, r6
  tmpcr2 = htim->Instance->CR2;
 c00e614:	6850      	ldr	r0, [r2, #4]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 c00e616:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 c00e618:	6894      	ldr	r4, [r2, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 c00e61a:	d027      	beq.n	c00e66c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 c00e61c:	f506 6600 	add.w	r6, r6, #2048	@ 0x800
 c00e620:	42b2      	cmp	r2, r6
 c00e622:	d02c      	beq.n	c00e67e <HAL_TIMEx_MasterConfigSynchronization+0x82>
  tmpcr2 &= ~TIM_CR2_MMS;
 c00e624:	f020 0070 	bic.w	r0, r0, #112	@ 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 c00e628:	4328      	orrs	r0, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 c00e62a:	f1b2 4fa0 	cmp.w	r2, #1342177280	@ 0x50000000
  htim->Instance->CR2 = tmpcr2;
 c00e62e:	6050      	str	r0, [r2, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 c00e630:	d00e      	beq.n	c00e650 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 c00e632:	4819      	ldr	r0, [pc, #100]	@ (c00e698 <HAL_TIMEx_MasterConfigSynchronization+0x9c>)
 c00e634:	4282      	cmp	r2, r0
 c00e636:	d00b      	beq.n	c00e650 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 c00e638:	f500 6080 	add.w	r0, r0, #1024	@ 0x400
 c00e63c:	4282      	cmp	r2, r0
 c00e63e:	d007      	beq.n	c00e650 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 c00e640:	f500 6080 	add.w	r0, r0, #1024	@ 0x400
 c00e644:	4282      	cmp	r2, r0
 c00e646:	d003      	beq.n	c00e650 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 c00e648:	f500 309a 	add.w	r0, r0, #78848	@ 0x13400
 c00e64c:	4282      	cmp	r2, r0
 c00e64e:	d104      	bne.n	c00e65a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 c00e650:	6889      	ldr	r1, [r1, #8]
    tmpsmcr &= ~TIM_SMCR_MSM;
 c00e652:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 c00e656:	430c      	orrs	r4, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 c00e658:	6094      	str	r4, [r2, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 c00e65a:	2200      	movs	r2, #0
  htim->State = HAL_TIM_STATE_READY;
 c00e65c:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 c00e65e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  htim->State = HAL_TIM_STATE_READY;
 c00e662:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d

  return HAL_OK;
 c00e666:	4610      	mov	r0, r2
}
 c00e668:	bc70      	pop	{r4, r5, r6}
 c00e66a:	4770      	bx	lr
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 c00e66c:	684e      	ldr	r6, [r1, #4]
    tmpcr2 &= ~TIM_CR2_MMS2;
 c00e66e:	f420 0070 	bic.w	r0, r0, #15728640	@ 0xf00000
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 c00e672:	4330      	orrs	r0, r6
  tmpcr2 &= ~TIM_CR2_MMS;
 c00e674:	f020 0070 	bic.w	r0, r0, #112	@ 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 c00e678:	4328      	orrs	r0, r5
  htim->Instance->CR2 = tmpcr2;
 c00e67a:	6050      	str	r0, [r2, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 c00e67c:	e7e8      	b.n	c00e650 <HAL_TIMEx_MasterConfigSynchronization+0x54>
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 c00e67e:	684e      	ldr	r6, [r1, #4]
    tmpcr2 &= ~TIM_CR2_MMS2;
 c00e680:	f420 0070 	bic.w	r0, r0, #15728640	@ 0xf00000
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 c00e684:	4330      	orrs	r0, r6
  tmpcr2 &= ~TIM_CR2_MMS;
 c00e686:	f020 0070 	bic.w	r0, r0, #112	@ 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 c00e68a:	4305      	orrs	r5, r0
  htim->Instance->CR2 = tmpcr2;
 c00e68c:	6055      	str	r5, [r2, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 c00e68e:	e7df      	b.n	c00e650 <HAL_TIMEx_MasterConfigSynchronization+0x54>
  __HAL_LOCK(htim);
 c00e690:	2002      	movs	r0, #2
}
 c00e692:	4770      	bx	lr
 c00e694:	50012c00 	.word	0x50012c00
 c00e698:	50000400 	.word	0x50000400

0c00e69c <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 c00e69c:	4770      	bx	lr
 c00e69e:	bf00      	nop

0c00e6a0 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 c00e6a0:	4770      	bx	lr
 c00e6a2:	bf00      	nop

0c00e6a4 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 c00e6a4:	4770      	bx	lr
 c00e6a6:	bf00      	nop

0c00e6a8 <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 c00e6a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c00e6ac:	461d      	mov	r5, r3
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 c00e6ae:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 c00e6b2:	2b20      	cmp	r3, #32
 c00e6b4:	d153      	bne.n	c00e75e <HAL_UART_Receive+0xb6>
  {
    if ((pData == NULL) || (Size == 0U))
 c00e6b6:	4689      	mov	r9, r1
 c00e6b8:	2900      	cmp	r1, #0
 c00e6ba:	d04d      	beq.n	c00e758 <HAL_UART_Receive+0xb0>
 c00e6bc:	4616      	mov	r6, r2
 c00e6be:	2a00      	cmp	r2, #0
 c00e6c0:	d04a      	beq.n	c00e758 <HAL_UART_Receive+0xb0>
    {
      return  HAL_ERROR;
    }

    __HAL_LOCK(huart);
 c00e6c2:	f890 3080 	ldrb.w	r3, [r0, #128]	@ 0x80
 c00e6c6:	4604      	mov	r4, r0
 c00e6c8:	2b01      	cmp	r3, #1
 c00e6ca:	d048      	beq.n	c00e75e <HAL_UART_Receive+0xb6>

    huart->ErrorCode = HAL_UART_ERROR_NONE;
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 c00e6cc:	2322      	movs	r3, #34	@ 0x22
    __HAL_LOCK(huart);
 c00e6ce:	2201      	movs	r2, #1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 c00e6d0:	f04f 0800 	mov.w	r8, #0
    __HAL_LOCK(huart);
 c00e6d4:	f880 2080 	strb.w	r2, [r0, #128]	@ 0x80
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 c00e6d8:	f8c0 808c 	str.w	r8, [r0, #140]	@ 0x8c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 c00e6dc:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 c00e6e0:	f8c0 806c 	str.w	r8, [r0, #108]	@ 0x6c

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 c00e6e4:	f7fe f858 	bl	c00c798 <HAL_GetTick>

    huart->RxXferSize  = Size;
    huart->RxXferCount = Size;

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 c00e6e8:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 c00e6ea:	4607      	mov	r7, r0
    UART_MASK_COMPUTATION(huart);
 c00e6ec:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->RxXferSize  = Size;
 c00e6f0:	f8a4 605c 	strh.w	r6, [r4, #92]	@ 0x5c
    huart->RxXferCount = Size;
 c00e6f4:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
    UART_MASK_COMPUTATION(huart);
 c00e6f8:	d057      	beq.n	c00e7aa <HAL_UART_Receive+0x102>
 c00e6fa:	2b00      	cmp	r3, #0
 c00e6fc:	d17e      	bne.n	c00e7fc <HAL_UART_Receive+0x154>
    uhMask = huart->Mask;
 c00e6fe:	4698      	mov	r8, r3
    UART_MASK_COMPUTATION(huart);
 c00e700:	6923      	ldr	r3, [r4, #16]
    uhMask = huart->Mask;
 c00e702:	2b00      	cmp	r3, #0
 c00e704:	bf0c      	ite	eq
 c00e706:	26ff      	moveq	r6, #255	@ 0xff
 c00e708:	267f      	movne	r6, #127	@ 0x7f
    {
      pdata8bits  = pData;
      pdata16bits = NULL;
    }

    __HAL_UNLOCK(huart);
 c00e70a:	2300      	movs	r3, #0
 c00e70c:	f884 3080 	strb.w	r3, [r4, #128]	@ 0x80

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 c00e710:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
    UART_MASK_COMPUTATION(huart);
 c00e714:	f8a4 6060 	strh.w	r6, [r4, #96]	@ 0x60
    while (huart->RxXferCount > 0U)
 c00e718:	b29b      	uxth	r3, r3
 c00e71a:	b1bb      	cbz	r3, c00e74c <HAL_UART_Receive+0xa4>
 c00e71c:	6823      	ldr	r3, [r4, #0]
 c00e71e:	1c6a      	adds	r2, r5, #1
 c00e720:	d120      	bne.n	c00e764 <HAL_UART_Receive+0xbc>
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 c00e722:	69da      	ldr	r2, [r3, #28]
 c00e724:	0690      	lsls	r0, r2, #26
 c00e726:	d5fc      	bpl.n	c00e722 <HAL_UART_Receive+0x7a>
      if (pdata8bits == NULL)
 c00e728:	f1b9 0f00 	cmp.w	r9, #0
 c00e72c:	d044      	beq.n	c00e7b8 <HAL_UART_Receive+0x110>
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 c00e72e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 c00e730:	4033      	ands	r3, r6
 c00e732:	f809 3b01 	strb.w	r3, [r9], #1
      huart->RxXferCount--;
 c00e736:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
 c00e73a:	3b01      	subs	r3, #1
 c00e73c:	b29b      	uxth	r3, r3
 c00e73e:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
    while (huart->RxXferCount > 0U)
 c00e742:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
 c00e746:	b29b      	uxth	r3, r3
 c00e748:	2b00      	cmp	r3, #0
 c00e74a:	d1e7      	bne.n	c00e71c <HAL_UART_Receive+0x74>
    huart->RxState = HAL_UART_STATE_READY;
 c00e74c:	2320      	movs	r3, #32
    return HAL_OK;
 c00e74e:	2000      	movs	r0, #0
    huart->RxState = HAL_UART_STATE_READY;
 c00e750:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
}
 c00e754:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return  HAL_ERROR;
 c00e758:	2001      	movs	r0, #1
}
 c00e75a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    __HAL_LOCK(huart);
 c00e75e:	2002      	movs	r0, #2
}
 c00e760:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 c00e764:	69da      	ldr	r2, [r3, #28]
 c00e766:	0691      	lsls	r1, r2, #26
 c00e768:	d4de      	bmi.n	c00e728 <HAL_UART_Receive+0x80>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 c00e76a:	f7fe f815 	bl	c00c798 <HAL_GetTick>
 c00e76e:	1bc0      	subs	r0, r0, r7
 c00e770:	4285      	cmp	r5, r0
 c00e772:	6823      	ldr	r3, [r4, #0]
 c00e774:	d330      	bcc.n	c00e7d8 <HAL_UART_Receive+0x130>
 c00e776:	b37d      	cbz	r5, c00e7d8 <HAL_UART_Receive+0x130>
        __HAL_UNLOCK(huart);

        return HAL_TIMEOUT;
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 c00e778:	681a      	ldr	r2, [r3, #0]
 c00e77a:	0751      	lsls	r1, r2, #29
 c00e77c:	d5f2      	bpl.n	c00e764 <HAL_UART_Receive+0xbc>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 c00e77e:	69da      	ldr	r2, [r3, #28]
 c00e780:	0512      	lsls	r2, r2, #20
 c00e782:	d5ef      	bpl.n	c00e764 <HAL_UART_Receive+0xbc>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 c00e784:	f44f 6100 	mov.w	r1, #2048	@ 0x800

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);

          huart->gState = HAL_UART_STATE_READY;
 c00e788:	2220      	movs	r2, #32
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 c00e78a:	6219      	str	r1, [r3, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 c00e78c:	6819      	ldr	r1, [r3, #0]
 c00e78e:	f421 71d0 	bic.w	r1, r1, #416	@ 0x1a0
 c00e792:	6019      	str	r1, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 c00e794:	6899      	ldr	r1, [r3, #8]
 c00e796:	f021 0101 	bic.w	r1, r1, #1
 c00e79a:	6099      	str	r1, [r3, #8]
          huart->gState = HAL_UART_STATE_READY;
 c00e79c:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
          huart->RxState = HAL_UART_STATE_READY;
 c00e7a0:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 c00e7a4:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c

          /* Process Unlocked */
          __HAL_UNLOCK(huart);

          return HAL_TIMEOUT;
 c00e7a8:	e023      	b.n	c00e7f2 <HAL_UART_Receive+0x14a>
    UART_MASK_COMPUTATION(huart);
 c00e7aa:	6923      	ldr	r3, [r4, #16]
 c00e7ac:	bb5b      	cbnz	r3, c00e806 <HAL_UART_Receive+0x15e>
 c00e7ae:	46c8      	mov	r8, r9
    uhMask = huart->Mask;
 c00e7b0:	f240 16ff 	movw	r6, #511	@ 0x1ff
      pdata8bits  = NULL;
 c00e7b4:	4699      	mov	r9, r3
 c00e7b6:	e7a8      	b.n	c00e70a <HAL_UART_Receive+0x62>
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 c00e7b8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 c00e7ba:	4032      	ands	r2, r6
 c00e7bc:	f828 2b02 	strh.w	r2, [r8], #2
      huart->RxXferCount--;
 c00e7c0:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
 c00e7c4:	3a01      	subs	r2, #1
 c00e7c6:	b292      	uxth	r2, r2
 c00e7c8:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
    while (huart->RxXferCount > 0U)
 c00e7cc:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
 c00e7d0:	b292      	uxth	r2, r2
 c00e7d2:	2a00      	cmp	r2, #0
 c00e7d4:	d1a3      	bne.n	c00e71e <HAL_UART_Receive+0x76>
 c00e7d6:	e7b9      	b.n	c00e74c <HAL_UART_Receive+0xa4>
        huart->gState = HAL_UART_STATE_READY;
 c00e7d8:	2120      	movs	r1, #32
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 c00e7da:	681a      	ldr	r2, [r3, #0]
 c00e7dc:	f422 72d0 	bic.w	r2, r2, #416	@ 0x1a0
 c00e7e0:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 c00e7e2:	689a      	ldr	r2, [r3, #8]
 c00e7e4:	f022 0201 	bic.w	r2, r2, #1
 c00e7e8:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 c00e7ea:	f8c4 1084 	str.w	r1, [r4, #132]	@ 0x84
        huart->RxState = HAL_UART_STATE_READY;
 c00e7ee:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
          __HAL_UNLOCK(huart);
 c00e7f2:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 c00e7f4:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 c00e7f6:	f884 3080 	strb.w	r3, [r4, #128]	@ 0x80
 c00e7fa:	e7ae      	b.n	c00e75a <HAL_UART_Receive+0xb2>
    UART_MASK_COMPUTATION(huart);
 c00e7fc:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 c00e800:	d003      	beq.n	c00e80a <HAL_UART_Receive+0x162>
    uhMask = huart->Mask;
 c00e802:	4646      	mov	r6, r8
 c00e804:	e781      	b.n	c00e70a <HAL_UART_Receive+0x62>
 c00e806:	26ff      	movs	r6, #255	@ 0xff
 c00e808:	e77f      	b.n	c00e70a <HAL_UART_Receive+0x62>
    UART_MASK_COMPUTATION(huart);
 c00e80a:	6923      	ldr	r3, [r4, #16]
    uhMask = huart->Mask;
 c00e80c:	2b00      	cmp	r3, #0
 c00e80e:	bf14      	ite	ne
 c00e810:	263f      	movne	r6, #63	@ 0x3f
 c00e812:	267f      	moveq	r6, #127	@ 0x7f
 c00e814:	e779      	b.n	c00e70a <HAL_UART_Receive+0x62>
 c00e816:	bf00      	nop

0c00e818 <UART_SetConfig>:
{
 c00e818:	b570      	push	{r4, r5, r6, lr}
 c00e81a:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 c00e81c:	6926      	ldr	r6, [r4, #16]
 c00e81e:	68a2      	ldr	r2, [r4, #8]
  if (UART_INSTANCE_LOWPOWER(huart))
 c00e820:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 c00e822:	4332      	orrs	r2, r6
 c00e824:	6966      	ldr	r6, [r4, #20]
 c00e826:	69c0      	ldr	r0, [r0, #28]
 c00e828:	4332      	orrs	r2, r6
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 c00e82a:	49a5      	ldr	r1, [pc, #660]	@ (c00eac0 <UART_SetConfig+0x2a8>)
 c00e82c:	681e      	ldr	r6, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 c00e82e:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 c00e830:	4031      	ands	r1, r6
 c00e832:	430a      	orrs	r2, r1
 c00e834:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 c00e836:	685a      	ldr	r2, [r3, #4]
 c00e838:	68e1      	ldr	r1, [r4, #12]
 c00e83a:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 c00e83e:	430a      	orrs	r2, r1
 c00e840:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 c00e842:	4da0      	ldr	r5, [pc, #640]	@ (c00eac4 <UART_SetConfig+0x2ac>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 c00e844:	6899      	ldr	r1, [r3, #8]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 c00e846:	42ab      	cmp	r3, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 c00e848:	f021 416e 	bic.w	r1, r1, #3992977408	@ 0xee000000
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 c00e84c:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 c00e84e:	6a66      	ldr	r6, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 c00e850:	f421 6130 	bic.w	r1, r1, #2816	@ 0xb00
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 c00e854:	f000 80d4 	beq.w	c00ea00 <UART_SetConfig+0x1e8>
    tmpreg |= huart->Init.OneBitSampling;
 c00e858:	6a25      	ldr	r5, [r4, #32]
 c00e85a:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 c00e85c:	430a      	orrs	r2, r1
 c00e85e:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 c00e860:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 c00e862:	f022 020f 	bic.w	r2, r2, #15
 c00e866:	4332      	orrs	r2, r6
 c00e868:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00e86a:	4a97      	ldr	r2, [pc, #604]	@ (c00eac8 <UART_SetConfig+0x2b0>)
 c00e86c:	4293      	cmp	r3, r2
 c00e86e:	d039      	beq.n	c00e8e4 <UART_SetConfig+0xcc>
 c00e870:	4a96      	ldr	r2, [pc, #600]	@ (c00eacc <UART_SetConfig+0x2b4>)
 c00e872:	4293      	cmp	r3, r2
 c00e874:	d012      	beq.n	c00e89c <UART_SetConfig+0x84>
 c00e876:	4a96      	ldr	r2, [pc, #600]	@ (c00ead0 <UART_SetConfig+0x2b8>)
 c00e878:	4293      	cmp	r3, r2
 c00e87a:	f000 80a9 	beq.w	c00e9d0 <UART_SetConfig+0x1b8>
 c00e87e:	4a95      	ldr	r2, [pc, #596]	@ (c00ead4 <UART_SetConfig+0x2bc>)
 c00e880:	4293      	cmp	r3, r2
 c00e882:	d043      	beq.n	c00e90c <UART_SetConfig+0xf4>
 c00e884:	f1b3 2f50 	cmp.w	r3, #1342197760	@ 0x50005000
 c00e888:	f000 8091 	beq.w	c00e9ae <UART_SetConfig+0x196>
        ret = HAL_ERROR;
 c00e88c:	2001      	movs	r0, #1
  huart->RxISR = NULL;
 c00e88e:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
 c00e890:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
 c00e894:	6723      	str	r3, [r4, #112]	@ 0x70
  huart->NbRxDataToProcess = 1;
 c00e896:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
 c00e898:	6763      	str	r3, [r4, #116]	@ 0x74
}
 c00e89a:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00e89c:	4b8e      	ldr	r3, [pc, #568]	@ (c00ead8 <UART_SetConfig+0x2c0>)
 c00e89e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 c00e8a2:	f003 030c 	and.w	r3, r3, #12
 c00e8a6:	2b0c      	cmp	r3, #12
 c00e8a8:	d8f0      	bhi.n	c00e88c <UART_SetConfig+0x74>
 c00e8aa:	a201      	add	r2, pc, #4	@ (adr r2, c00e8b0 <UART_SetConfig+0x98>)
 c00e8ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 c00e8b0:	0c00e9c5 	.word	0x0c00e9c5
 c00e8b4:	0c00e88d 	.word	0x0c00e88d
 c00e8b8:	0c00e88d 	.word	0x0c00e88d
 c00e8bc:	0c00e88d 	.word	0x0c00e88d
 c00e8c0:	0c00e925 	.word	0x0c00e925
 c00e8c4:	0c00e88d 	.word	0x0c00e88d
 c00e8c8:	0c00e88d 	.word	0x0c00e88d
 c00e8cc:	0c00e88d 	.word	0x0c00e88d
 c00e8d0:	0c00e96f 	.word	0x0c00e96f
 c00e8d4:	0c00e88d 	.word	0x0c00e88d
 c00e8d8:	0c00e88d 	.word	0x0c00e88d
 c00e8dc:	0c00e88d 	.word	0x0c00e88d
 c00e8e0:	0c00e93d 	.word	0x0c00e93d
 c00e8e4:	4b7c      	ldr	r3, [pc, #496]	@ (c00ead8 <UART_SetConfig+0x2c0>)
 c00e8e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 c00e8ea:	f003 0303 	and.w	r3, r3, #3
 c00e8ee:	2b02      	cmp	r3, #2
 c00e8f0:	d03d      	beq.n	c00e96e <UART_SetConfig+0x156>
 c00e8f2:	2b03      	cmp	r3, #3
 c00e8f4:	d022      	beq.n	c00e93c <UART_SetConfig+0x124>
 c00e8f6:	2b01      	cmp	r3, #1
 c00e8f8:	d014      	beq.n	c00e924 <UART_SetConfig+0x10c>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 c00e8fa:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 c00e8fe:	f000 80d6 	beq.w	c00eaae <UART_SetConfig+0x296>
        pclk = HAL_RCC_GetPCLK2Freq();
 c00e902:	f7ff f8a3 	bl	c00da4c <HAL_RCC_GetPCLK2Freq>
    if (pclk != 0U)
 c00e906:	b9a8      	cbnz	r0, c00e934 <UART_SetConfig+0x11c>
        ret = HAL_ERROR;
 c00e908:	2000      	movs	r0, #0
 c00e90a:	e7c0      	b.n	c00e88e <UART_SetConfig+0x76>
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00e90c:	4b72      	ldr	r3, [pc, #456]	@ (c00ead8 <UART_SetConfig+0x2c0>)
 c00e90e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 c00e912:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 c00e916:	2b80      	cmp	r3, #128	@ 0x80
 c00e918:	d029      	beq.n	c00e96e <UART_SetConfig+0x156>
 c00e91a:	d866      	bhi.n	c00e9ea <UART_SetConfig+0x1d2>
 c00e91c:	2b00      	cmp	r3, #0
 c00e91e:	d051      	beq.n	c00e9c4 <UART_SetConfig+0x1ac>
 c00e920:	2b40      	cmp	r3, #64	@ 0x40
 c00e922:	d1b3      	bne.n	c00e88c <UART_SetConfig+0x74>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 c00e924:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 c00e928:	f000 80c6 	beq.w	c00eab8 <UART_SetConfig+0x2a0>
        pclk = HAL_RCC_GetSysClockFreq();
 c00e92c:	f7fe fadc 	bl	c00cee8 <HAL_RCC_GetSysClockFreq>
    if (pclk != 0U)
 c00e930:	2800      	cmp	r0, #0
 c00e932:	d0e9      	beq.n	c00e908 <UART_SetConfig+0xf0>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 c00e934:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 c00e936:	e006      	b.n	c00e946 <UART_SetConfig+0x12e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00e938:	2b30      	cmp	r3, #48	@ 0x30
 c00e93a:	d1a7      	bne.n	c00e88c <UART_SetConfig+0x74>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 c00e93c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 c00e940:	d019      	beq.n	c00e976 <UART_SetConfig+0x15e>
        pclk = (uint32_t) LSE_VALUE;
 c00e942:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 c00e946:	4a65      	ldr	r2, [pc, #404]	@ (c00eadc <UART_SetConfig+0x2c4>)
 c00e948:	6863      	ldr	r3, [r4, #4]
 c00e94a:	f832 1016 	ldrh.w	r1, [r2, r6, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 c00e94e:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 c00e952:	fbb0 f0f1 	udiv	r0, r0, r1
 c00e956:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 c00e95a:	fbb0 f0f3 	udiv	r0, r0, r3
 c00e95e:	b280      	uxth	r0, r0
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 c00e960:	f1a0 0310 	sub.w	r3, r0, #16
 c00e964:	4293      	cmp	r3, r2
 c00e966:	d891      	bhi.n	c00e88c <UART_SetConfig+0x74>
          huart->Instance->BRR = usartdiv;
 c00e968:	6823      	ldr	r3, [r4, #0]
 c00e96a:	60d8      	str	r0, [r3, #12]
 c00e96c:	e7cc      	b.n	c00e908 <UART_SetConfig+0xf0>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 c00e96e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) HSI_VALUE;
 c00e972:	485b      	ldr	r0, [pc, #364]	@ (c00eae0 <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 c00e974:	d1e7      	bne.n	c00e946 <UART_SetConfig+0x12e>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 c00e976:	4b59      	ldr	r3, [pc, #356]	@ (c00eadc <UART_SetConfig+0x2c4>)
 c00e978:	6862      	ldr	r2, [r4, #4]
 c00e97a:	f833 1016 	ldrh.w	r1, [r3, r6, lsl #1]
 c00e97e:	0853      	lsrs	r3, r2, #1
 c00e980:	fbb0 f0f1 	udiv	r0, r0, r1
 c00e984:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 c00e988:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 c00e98c:	f64f 71ef 	movw	r1, #65519	@ 0xffef
 c00e990:	b29a      	uxth	r2, r3
 c00e992:	f1a2 0010 	sub.w	r0, r2, #16
 c00e996:	4288      	cmp	r0, r1
 c00e998:	f63f af78 	bhi.w	c00e88c <UART_SetConfig+0x74>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 c00e99c:	f023 030f 	bic.w	r3, r3, #15
        huart->Instance->BRR = brrtemp;
 c00e9a0:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 c00e9a2:	b29b      	uxth	r3, r3
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 c00e9a4:	f3c2 0242 	ubfx	r2, r2, #1, #3
        huart->Instance->BRR = brrtemp;
 c00e9a8:	4313      	orrs	r3, r2
 c00e9aa:	60cb      	str	r3, [r1, #12]
 c00e9ac:	e7ac      	b.n	c00e908 <UART_SetConfig+0xf0>
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00e9ae:	f503 33e0 	add.w	r3, r3, #114688	@ 0x1c000
 c00e9b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 c00e9b6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 c00e9ba:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 c00e9be:	d0d6      	beq.n	c00e96e <UART_SetConfig+0x156>
 c00e9c0:	d81a      	bhi.n	c00e9f8 <UART_SetConfig+0x1e0>
 c00e9c2:	b9ab      	cbnz	r3, c00e9f0 <UART_SetConfig+0x1d8>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 c00e9c4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 c00e9c8:	d067      	beq.n	c00ea9a <UART_SetConfig+0x282>
        pclk = HAL_RCC_GetPCLK1Freq();
 c00e9ca:	f7fe ffd3 	bl	c00d974 <HAL_RCC_GetPCLK1Freq>
        break;
 c00e9ce:	e79a      	b.n	c00e906 <UART_SetConfig+0xee>
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00e9d0:	4b41      	ldr	r3, [pc, #260]	@ (c00ead8 <UART_SetConfig+0x2c0>)
 c00e9d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 c00e9d6:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 c00e9da:	2b20      	cmp	r3, #32
 c00e9dc:	d0c7      	beq.n	c00e96e <UART_SetConfig+0x156>
 c00e9de:	d8ab      	bhi.n	c00e938 <UART_SetConfig+0x120>
 c00e9e0:	2b00      	cmp	r3, #0
 c00e9e2:	d0ef      	beq.n	c00e9c4 <UART_SetConfig+0x1ac>
 c00e9e4:	2b10      	cmp	r3, #16
 c00e9e6:	d09d      	beq.n	c00e924 <UART_SetConfig+0x10c>
 c00e9e8:	e750      	b.n	c00e88c <UART_SetConfig+0x74>
 c00e9ea:	2bc0      	cmp	r3, #192	@ 0xc0
 c00e9ec:	d0a6      	beq.n	c00e93c <UART_SetConfig+0x124>
 c00e9ee:	e74d      	b.n	c00e88c <UART_SetConfig+0x74>
 c00e9f0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 c00e9f4:	d096      	beq.n	c00e924 <UART_SetConfig+0x10c>
 c00e9f6:	e749      	b.n	c00e88c <UART_SetConfig+0x74>
 c00e9f8:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 c00e9fc:	d09e      	beq.n	c00e93c <UART_SetConfig+0x124>
 c00e9fe:	e745      	b.n	c00e88c <UART_SetConfig+0x74>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 c00ea00:	4311      	orrs	r1, r2
 c00ea02:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 c00ea04:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00ea06:	4934      	ldr	r1, [pc, #208]	@ (c00ead8 <UART_SetConfig+0x2c0>)
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 c00ea08:	f022 020f 	bic.w	r2, r2, #15
 c00ea0c:	4332      	orrs	r2, r6
 c00ea0e:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00ea10:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 c00ea14:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 c00ea18:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 c00ea1c:	d04a      	beq.n	c00eab4 <UART_SetConfig+0x29c>
 c00ea1e:	d835      	bhi.n	c00ea8c <UART_SetConfig+0x274>
 c00ea20:	2b00      	cmp	r3, #0
 c00ea22:	d041      	beq.n	c00eaa8 <UART_SetConfig+0x290>
 c00ea24:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 c00ea28:	f47f af30 	bne.w	c00e88c <UART_SetConfig+0x74>
        pclk = HAL_RCC_GetSysClockFreq();
 c00ea2c:	f7fe fa5c 	bl	c00cee8 <HAL_RCC_GetSysClockFreq>
    if (pclk != 0U)
 c00ea30:	2800      	cmp	r0, #0
 c00ea32:	f43f af69 	beq.w	c00e908 <UART_SetConfig+0xf0>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 c00ea36:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 c00ea38:	4b28      	ldr	r3, [pc, #160]	@ (c00eadc <UART_SetConfig+0x2c4>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 c00ea3a:	6865      	ldr	r5, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 c00ea3c:	f833 2016 	ldrh.w	r2, [r3, r6, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 c00ea40:	eb05 0145 	add.w	r1, r5, r5, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 c00ea44:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 c00ea48:	4299      	cmp	r1, r3
 c00ea4a:	f63f af1f 	bhi.w	c00e88c <UART_SetConfig+0x74>
 c00ea4e:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
 c00ea52:	f63f af1b 	bhi.w	c00e88c <UART_SetConfig+0x74>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, (uint64_t)huart->Init.BaudRate, huart->Init.ClockPrescaler));
 c00ea56:	2300      	movs	r3, #0
 c00ea58:	4619      	mov	r1, r3
 c00ea5a:	f7f2 f8ff 	bl	c000c5c <__aeabi_uldivmod>
 c00ea5e:	4606      	mov	r6, r0
 c00ea60:	462a      	mov	r2, r5
 c00ea62:	ea4f 0c55 	mov.w	ip, r5, lsr #1
 c00ea66:	0209      	lsls	r1, r1, #8
 c00ea68:	0235      	lsls	r5, r6, #8
 c00ea6a:	eb15 000c 	adds.w	r0, r5, ip
 c00ea6e:	ea41 6116 	orr.w	r1, r1, r6, lsr #24
 c00ea72:	f04f 0300 	mov.w	r3, #0
 c00ea76:	f141 0100 	adc.w	r1, r1, #0
 c00ea7a:	f7f2 f8ef 	bl	c000c5c <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 c00ea7e:	4b19      	ldr	r3, [pc, #100]	@ (c00eae4 <UART_SetConfig+0x2cc>)
 c00ea80:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
 c00ea84:	429a      	cmp	r2, r3
 c00ea86:	f63f af01 	bhi.w	c00e88c <UART_SetConfig+0x74>
 c00ea8a:	e76d      	b.n	c00e968 <UART_SetConfig+0x150>
  UART_GETCLOCKSOURCE(huart, clocksource);
 c00ea8c:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 c00ea90:	f47f aefc 	bne.w	c00e88c <UART_SetConfig+0x74>
        pclk = (uint32_t) LSE_VALUE;
 c00ea94:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 c00ea98:	e7ce      	b.n	c00ea38 <UART_SetConfig+0x220>
        pclk = HAL_RCC_GetPCLK1Freq();
 c00ea9a:	f7fe ff6b 	bl	c00d974 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 c00ea9e:	2800      	cmp	r0, #0
 c00eaa0:	f43f af32 	beq.w	c00e908 <UART_SetConfig+0xf0>
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 c00eaa4:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 c00eaa6:	e766      	b.n	c00e976 <UART_SetConfig+0x15e>
        pclk = HAL_RCC_GetPCLK1Freq();
 c00eaa8:	f7fe ff64 	bl	c00d974 <HAL_RCC_GetPCLK1Freq>
        break;
 c00eaac:	e7c0      	b.n	c00ea30 <UART_SetConfig+0x218>
        pclk = HAL_RCC_GetPCLK2Freq();
 c00eaae:	f7fe ffcd 	bl	c00da4c <HAL_RCC_GetPCLK2Freq>
        break;
 c00eab2:	e7f4      	b.n	c00ea9e <UART_SetConfig+0x286>
        pclk = (uint32_t) HSI_VALUE;
 c00eab4:	480a      	ldr	r0, [pc, #40]	@ (c00eae0 <UART_SetConfig+0x2c8>)
 c00eab6:	e7bf      	b.n	c00ea38 <UART_SetConfig+0x220>
        pclk = HAL_RCC_GetSysClockFreq();
 c00eab8:	f7fe fa16 	bl	c00cee8 <HAL_RCC_GetSysClockFreq>
        break;
 c00eabc:	e7ef      	b.n	c00ea9e <UART_SetConfig+0x286>
 c00eabe:	bf00      	nop
 c00eac0:	cfff69f3 	.word	0xcfff69f3
 c00eac4:	50008000 	.word	0x50008000
 c00eac8:	50013800 	.word	0x50013800
 c00eacc:	50004400 	.word	0x50004400
 c00ead0:	50004800 	.word	0x50004800
 c00ead4:	50004c00 	.word	0x50004c00
 c00ead8:	50021000 	.word	0x50021000
 c00eadc:	0c011d24 	.word	0x0c011d24
 c00eae0:	00f42400 	.word	0x00f42400
 c00eae4:	000ffcff 	.word	0x000ffcff

0c00eae8 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 c00eae8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
{
 c00eaea:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 c00eaec:	07da      	lsls	r2, r3, #31
 c00eaee:	d506      	bpl.n	c00eafe <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 c00eaf0:	6801      	ldr	r1, [r0, #0]
 c00eaf2:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 c00eaf4:	684a      	ldr	r2, [r1, #4]
 c00eaf6:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 c00eafa:	4322      	orrs	r2, r4
 c00eafc:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 c00eafe:	079c      	lsls	r4, r3, #30
 c00eb00:	d506      	bpl.n	c00eb10 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 c00eb02:	6801      	ldr	r1, [r0, #0]
 c00eb04:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 c00eb06:	684a      	ldr	r2, [r1, #4]
 c00eb08:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 c00eb0c:	4322      	orrs	r2, r4
 c00eb0e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 c00eb10:	0759      	lsls	r1, r3, #29
 c00eb12:	d506      	bpl.n	c00eb22 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 c00eb14:	6801      	ldr	r1, [r0, #0]
 c00eb16:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 c00eb18:	684a      	ldr	r2, [r1, #4]
 c00eb1a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 c00eb1e:	4322      	orrs	r2, r4
 c00eb20:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 c00eb22:	071a      	lsls	r2, r3, #28
 c00eb24:	d506      	bpl.n	c00eb34 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 c00eb26:	6801      	ldr	r1, [r0, #0]
 c00eb28:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 c00eb2a:	684a      	ldr	r2, [r1, #4]
 c00eb2c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 c00eb30:	4322      	orrs	r2, r4
 c00eb32:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 c00eb34:	06dc      	lsls	r4, r3, #27
 c00eb36:	d506      	bpl.n	c00eb46 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 c00eb38:	6801      	ldr	r1, [r0, #0]
 c00eb3a:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 c00eb3c:	688a      	ldr	r2, [r1, #8]
 c00eb3e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 c00eb42:	4322      	orrs	r2, r4
 c00eb44:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 c00eb46:	0699      	lsls	r1, r3, #26
 c00eb48:	d506      	bpl.n	c00eb58 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 c00eb4a:	6801      	ldr	r1, [r0, #0]
 c00eb4c:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 c00eb4e:	688a      	ldr	r2, [r1, #8]
 c00eb50:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 c00eb54:	4322      	orrs	r2, r4
 c00eb56:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 c00eb58:	065a      	lsls	r2, r3, #25
 c00eb5a:	d50a      	bpl.n	c00eb72 <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 c00eb5c:	6801      	ldr	r1, [r0, #0]
 c00eb5e:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 c00eb60:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 c00eb62:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 c00eb66:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 c00eb6a:	ea42 0204 	orr.w	r2, r2, r4
 c00eb6e:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 c00eb70:	d00b      	beq.n	c00eb8a <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 c00eb72:	061b      	lsls	r3, r3, #24
 c00eb74:	d506      	bpl.n	c00eb84 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 c00eb76:	6802      	ldr	r2, [r0, #0]
 c00eb78:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
 c00eb7a:	6853      	ldr	r3, [r2, #4]
 c00eb7c:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 c00eb80:	430b      	orrs	r3, r1
 c00eb82:	6053      	str	r3, [r2, #4]
}
 c00eb84:	f85d 4b04 	ldr.w	r4, [sp], #4
 c00eb88:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 c00eb8a:	684a      	ldr	r2, [r1, #4]
 c00eb8c:	6c84      	ldr	r4, [r0, #72]	@ 0x48
 c00eb8e:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 c00eb92:	4322      	orrs	r2, r4
 c00eb94:	604a      	str	r2, [r1, #4]
 c00eb96:	e7ec      	b.n	c00eb72 <UART_AdvFeatureConfig+0x8a>

0c00eb98 <UART_CheckIdleState>:
{
 c00eb98:	b538      	push	{r3, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 c00eb9a:	2300      	movs	r3, #0
{
 c00eb9c:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 c00eb9e:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
  tickstart = HAL_GetTick();
 c00eba2:	f7fd fdf9 	bl	c00c798 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 c00eba6:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 c00eba8:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 c00ebaa:	681a      	ldr	r2, [r3, #0]
 c00ebac:	0711      	lsls	r1, r2, #28
 c00ebae:	d40e      	bmi.n	c00ebce <UART_CheckIdleState+0x36>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 c00ebb0:	681a      	ldr	r2, [r3, #0]
 c00ebb2:	0752      	lsls	r2, r2, #29
 c00ebb4:	d42f      	bmi.n	c00ec16 <UART_CheckIdleState+0x7e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 c00ebb6:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
 c00ebb8:	2220      	movs	r2, #32
  return HAL_OK;
 c00ebba:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
 c00ebbc:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
  huart->RxState = HAL_UART_STATE_READY;
 c00ebc0:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 c00ebc4:	66e3      	str	r3, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
 c00ebc6:	2300      	movs	r3, #0
 c00ebc8:	f884 3080 	strb.w	r3, [r4, #128]	@ 0x80
}
 c00ebcc:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 c00ebce:	69da      	ldr	r2, [r3, #28]
 c00ebd0:	0292      	lsls	r2, r2, #10
 c00ebd2:	d4ed      	bmi.n	c00ebb0 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 c00ebd4:	f7fd fde0 	bl	c00c798 <HAL_GetTick>
 c00ebd8:	1b43      	subs	r3, r0, r5
 c00ebda:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 c00ebde:	d22b      	bcs.n	c00ec38 <UART_CheckIdleState+0xa0>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 c00ebe0:	6823      	ldr	r3, [r4, #0]
 c00ebe2:	681a      	ldr	r2, [r3, #0]
 c00ebe4:	0750      	lsls	r0, r2, #29
 c00ebe6:	d5f2      	bpl.n	c00ebce <UART_CheckIdleState+0x36>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 c00ebe8:	69da      	ldr	r2, [r3, #28]
 c00ebea:	0511      	lsls	r1, r2, #20
 c00ebec:	d5ef      	bpl.n	c00ebce <UART_CheckIdleState+0x36>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 c00ebee:	f44f 6100 	mov.w	r1, #2048	@ 0x800
          huart->gState = HAL_UART_STATE_READY;
 c00ebf2:	2220      	movs	r2, #32
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 c00ebf4:	6219      	str	r1, [r3, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 c00ebf6:	6819      	ldr	r1, [r3, #0]
 c00ebf8:	f421 71d0 	bic.w	r1, r1, #416	@ 0x1a0
 c00ebfc:	6019      	str	r1, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 c00ebfe:	6899      	ldr	r1, [r3, #8]
 c00ec00:	f021 0101 	bic.w	r1, r1, #1
 c00ec04:	6099      	str	r1, [r3, #8]
          huart->gState = HAL_UART_STATE_READY;
 c00ec06:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
          huart->RxState = HAL_UART_STATE_READY;
 c00ec0a:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 c00ec0e:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
 c00ec12:	2003      	movs	r0, #3
 c00ec14:	e7d7      	b.n	c00ebc6 <UART_CheckIdleState+0x2e>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 c00ec16:	69db      	ldr	r3, [r3, #28]
 c00ec18:	0258      	lsls	r0, r3, #9
 c00ec1a:	d4cc      	bmi.n	c00ebb6 <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 c00ec1c:	f7fd fdbc 	bl	c00c798 <HAL_GetTick>
 c00ec20:	1b43      	subs	r3, r0, r5
 c00ec22:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 c00ec26:	d207      	bcs.n	c00ec38 <UART_CheckIdleState+0xa0>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 c00ec28:	6823      	ldr	r3, [r4, #0]
 c00ec2a:	681a      	ldr	r2, [r3, #0]
 c00ec2c:	0751      	lsls	r1, r2, #29
 c00ec2e:	d5f2      	bpl.n	c00ec16 <UART_CheckIdleState+0x7e>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 c00ec30:	69da      	ldr	r2, [r3, #28]
 c00ec32:	0512      	lsls	r2, r2, #20
 c00ec34:	d5ef      	bpl.n	c00ec16 <UART_CheckIdleState+0x7e>
 c00ec36:	e7da      	b.n	c00ebee <UART_CheckIdleState+0x56>
        huart->gState = HAL_UART_STATE_READY;
 c00ec38:	2120      	movs	r1, #32
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 c00ec3a:	6823      	ldr	r3, [r4, #0]
 c00ec3c:	681a      	ldr	r2, [r3, #0]
 c00ec3e:	f422 72d0 	bic.w	r2, r2, #416	@ 0x1a0
 c00ec42:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 c00ec44:	689a      	ldr	r2, [r3, #8]
 c00ec46:	f022 0201 	bic.w	r2, r2, #1
 c00ec4a:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 c00ec4c:	f8c4 1084 	str.w	r1, [r4, #132]	@ 0x84
        huart->RxState = HAL_UART_STATE_READY;
 c00ec50:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
        return HAL_TIMEOUT;
 c00ec54:	e7dd      	b.n	c00ec12 <UART_CheckIdleState+0x7a>
 c00ec56:	bf00      	nop

0c00ec58 <HAL_UART_Init>:
  if (huart == NULL)
 c00ec58:	b380      	cbz	r0, c00ecbc <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
 c00ec5a:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
{
 c00ec5e:	b510      	push	{r4, lr}
 c00ec60:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
 c00ec62:	b333      	cbz	r3, c00ecb2 <HAL_UART_Init+0x5a>
  huart->gState = HAL_UART_STATE_BUSY;
 c00ec64:	2324      	movs	r3, #36	@ 0x24
  __HAL_UART_DISABLE(huart);
 c00ec66:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 c00ec68:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
  __HAL_UART_DISABLE(huart);
 c00ec6c:	6813      	ldr	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 c00ec6e:	4620      	mov	r0, r4
  __HAL_UART_DISABLE(huart);
 c00ec70:	f023 0301 	bic.w	r3, r3, #1
 c00ec74:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 c00ec76:	f7ff fdcf 	bl	c00e818 <UART_SetConfig>
 c00ec7a:	2801      	cmp	r0, #1
 c00ec7c:	d017      	beq.n	c00ecae <HAL_UART_Init+0x56>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 c00ec7e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 c00ec80:	b98b      	cbnz	r3, c00eca6 <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 c00ec82:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 c00ec84:	4620      	mov	r0, r4
}
 c00ec86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 c00ec8a:	685a      	ldr	r2, [r3, #4]
 c00ec8c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 c00ec90:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 c00ec92:	689a      	ldr	r2, [r3, #8]
 c00ec94:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 c00ec98:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 c00ec9a:	681a      	ldr	r2, [r3, #0]
 c00ec9c:	f042 0201 	orr.w	r2, r2, #1
 c00eca0:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 c00eca2:	f7ff bf79 	b.w	c00eb98 <UART_CheckIdleState>
    UART_AdvFeatureConfig(huart);
 c00eca6:	4620      	mov	r0, r4
 c00eca8:	f7ff ff1e 	bl	c00eae8 <UART_AdvFeatureConfig>
 c00ecac:	e7e9      	b.n	c00ec82 <HAL_UART_Init+0x2a>
}
 c00ecae:	2001      	movs	r0, #1
 c00ecb0:	bd10      	pop	{r4, pc}
    huart->Lock = HAL_UNLOCKED;
 c00ecb2:	f880 3080 	strb.w	r3, [r0, #128]	@ 0x80
    HAL_UART_MspInit(huart);
 c00ecb6:	f7f3 fc73 	bl	c0025a0 <HAL_UART_MspInit>
 c00ecba:	e7d3      	b.n	c00ec64 <HAL_UART_Init+0xc>
}
 c00ecbc:	2001      	movs	r0, #1
 c00ecbe:	4770      	bx	lr

0c00ecc0 <UART_WaitOnFlagUntilTimeout>:
{
 c00ecc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c00ecc4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 c00ecc8:	460d      	mov	r5, r1
 c00ecca:	f1b8 3fff 	cmp.w	r8, #4294967295
 c00ecce:	4616      	mov	r6, r2
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 c00ecd0:	6804      	ldr	r4, [r0, #0]
 c00ecd2:	d10a      	bne.n	c00ecea <UART_WaitOnFlagUntilTimeout+0x2a>
 c00ecd4:	69e3      	ldr	r3, [r4, #28]
 c00ecd6:	ea35 0303 	bics.w	r3, r5, r3
 c00ecda:	bf0c      	ite	eq
 c00ecdc:	2301      	moveq	r3, #1
 c00ecde:	2300      	movne	r3, #0
 c00ece0:	42b3      	cmp	r3, r6
 c00ece2:	d0f7      	beq.n	c00ecd4 <UART_WaitOnFlagUntilTimeout+0x14>
        }
      }
    }
  }
  return HAL_OK;
 c00ece4:	2000      	movs	r0, #0
}
 c00ece6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 c00ecea:	4607      	mov	r7, r0
 c00ecec:	4699      	mov	r9, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 c00ecee:	69e2      	ldr	r2, [r4, #28]
 c00ecf0:	ea35 0202 	bics.w	r2, r5, r2
 c00ecf4:	bf0c      	ite	eq
 c00ecf6:	2301      	moveq	r3, #1
 c00ecf8:	2300      	movne	r3, #0
 c00ecfa:	42b3      	cmp	r3, r6
 c00ecfc:	d1f2      	bne.n	c00ece4 <UART_WaitOnFlagUntilTimeout+0x24>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 c00ecfe:	f7fd fd4b 	bl	c00c798 <HAL_GetTick>
 c00ed02:	eba0 0009 	sub.w	r0, r0, r9
 c00ed06:	4540      	cmp	r0, r8
 c00ed08:	d821      	bhi.n	c00ed4e <UART_WaitOnFlagUntilTimeout+0x8e>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 c00ed0a:	683c      	ldr	r4, [r7, #0]
 c00ed0c:	4623      	mov	r3, r4
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 c00ed0e:	f1b8 0f00 	cmp.w	r8, #0
 c00ed12:	d01d      	beq.n	c00ed50 <UART_WaitOnFlagUntilTimeout+0x90>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 c00ed14:	6823      	ldr	r3, [r4, #0]
 c00ed16:	0759      	lsls	r1, r3, #29
 c00ed18:	d5e9      	bpl.n	c00ecee <UART_WaitOnFlagUntilTimeout+0x2e>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 c00ed1a:	69e3      	ldr	r3, [r4, #28]
 c00ed1c:	051a      	lsls	r2, r3, #20
 c00ed1e:	d5e6      	bpl.n	c00ecee <UART_WaitOnFlagUntilTimeout+0x2e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 c00ed20:	f44f 6200 	mov.w	r2, #2048	@ 0x800
          huart->gState = HAL_UART_STATE_READY;
 c00ed24:	2320      	movs	r3, #32
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 c00ed26:	6222      	str	r2, [r4, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 c00ed28:	6822      	ldr	r2, [r4, #0]
 c00ed2a:	f422 72d0 	bic.w	r2, r2, #416	@ 0x1a0
 c00ed2e:	6022      	str	r2, [r4, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 c00ed30:	68a2      	ldr	r2, [r4, #8]
 c00ed32:	f022 0201 	bic.w	r2, r2, #1
 c00ed36:	60a2      	str	r2, [r4, #8]
          huart->gState = HAL_UART_STATE_READY;
 c00ed38:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
          huart->RxState = HAL_UART_STATE_READY;
 c00ed3c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 c00ed40:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
 c00ed44:	2300      	movs	r3, #0
        return HAL_TIMEOUT;
 c00ed46:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 c00ed48:	f887 3080 	strb.w	r3, [r7, #128]	@ 0x80
 c00ed4c:	e7cb      	b.n	c00ece6 <UART_WaitOnFlagUntilTimeout+0x26>
 c00ed4e:	683b      	ldr	r3, [r7, #0]
        huart->gState = HAL_UART_STATE_READY;
 c00ed50:	2120      	movs	r1, #32
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 c00ed52:	681a      	ldr	r2, [r3, #0]
 c00ed54:	f422 72d0 	bic.w	r2, r2, #416	@ 0x1a0
 c00ed58:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 c00ed5a:	689a      	ldr	r2, [r3, #8]
 c00ed5c:	f022 0201 	bic.w	r2, r2, #1
 c00ed60:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 c00ed62:	f8c7 1084 	str.w	r1, [r7, #132]	@ 0x84
        huart->RxState = HAL_UART_STATE_READY;
 c00ed66:	f8c7 1088 	str.w	r1, [r7, #136]	@ 0x88
        return HAL_TIMEOUT;
 c00ed6a:	e7eb      	b.n	c00ed44 <UART_WaitOnFlagUntilTimeout+0x84>

0c00ed6c <HAL_UART_Transmit>:
{
 c00ed6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 c00ed70:	461d      	mov	r5, r3
  if (huart->gState == HAL_UART_STATE_READY)
 c00ed72:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
{
 c00ed76:	b083      	sub	sp, #12
  if (huart->gState == HAL_UART_STATE_READY)
 c00ed78:	2b20      	cmp	r3, #32
 c00ed7a:	d17d      	bne.n	c00ee78 <HAL_UART_Transmit+0x10c>
    if ((pData == NULL) || (Size == 0U))
 c00ed7c:	4689      	mov	r9, r1
 c00ed7e:	2900      	cmp	r1, #0
 c00ed80:	d047      	beq.n	c00ee12 <HAL_UART_Transmit+0xa6>
 c00ed82:	4617      	mov	r7, r2
 c00ed84:	2a00      	cmp	r2, #0
 c00ed86:	d044      	beq.n	c00ee12 <HAL_UART_Transmit+0xa6>
    __HAL_LOCK(huart);
 c00ed88:	f890 3080 	ldrb.w	r3, [r0, #128]	@ 0x80
 c00ed8c:	4604      	mov	r4, r0
 c00ed8e:	2b01      	cmp	r3, #1
 c00ed90:	d072      	beq.n	c00ee78 <HAL_UART_Transmit+0x10c>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 c00ed92:	2321      	movs	r3, #33	@ 0x21
    __HAL_LOCK(huart);
 c00ed94:	2201      	movs	r2, #1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 c00ed96:	f04f 0800 	mov.w	r8, #0
    __HAL_LOCK(huart);
 c00ed9a:	f880 2080 	strb.w	r2, [r0, #128]	@ 0x80
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 c00ed9e:	f8c0 808c 	str.w	r8, [r0, #140]	@ 0x8c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 c00eda2:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
    tickstart = HAL_GetTick();
 c00eda6:	f7fd fcf7 	bl	c00c798 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 c00edaa:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 c00edac:	4606      	mov	r6, r0
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 c00edae:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    huart->TxXferSize  = Size;
 c00edb2:	f8a4 7054 	strh.w	r7, [r4, #84]	@ 0x54
    huart->TxXferCount = Size;
 c00edb6:	f8a4 7056 	strh.w	r7, [r4, #86]	@ 0x56
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 c00edba:	d061      	beq.n	c00ee80 <HAL_UART_Transmit+0x114>
      pdata16bits = NULL;
 c00edbc:	4647      	mov	r7, r8
    __HAL_UNLOCK(huart);
 c00edbe:	2300      	movs	r3, #0
 c00edc0:	f884 3080 	strb.w	r3, [r4, #128]	@ 0x80
    while (huart->TxXferCount > 0U)
 c00edc4:	f8b4 3056 	ldrh.w	r3, [r4, #86]	@ 0x56
 c00edc8:	b29b      	uxth	r3, r3
 c00edca:	b1b3      	cbz	r3, c00edfa <HAL_UART_Transmit+0x8e>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 c00edcc:	6823      	ldr	r3, [r4, #0]
 c00edce:	1c6a      	adds	r2, r5, #1
 c00edd0:	d123      	bne.n	c00ee1a <HAL_UART_Transmit+0xae>
 c00edd2:	69da      	ldr	r2, [r3, #28]
 c00edd4:	0611      	lsls	r1, r2, #24
 c00edd6:	d5fc      	bpl.n	c00edd2 <HAL_UART_Transmit+0x66>
      if (pdata8bits == NULL)
 c00edd8:	f1b9 0f00 	cmp.w	r9, #0
 c00eddc:	d047      	beq.n	c00ee6e <HAL_UART_Transmit+0x102>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 c00edde:	f819 2b01 	ldrb.w	r2, [r9], #1
 c00ede2:	629a      	str	r2, [r3, #40]	@ 0x28
      huart->TxXferCount--;
 c00ede4:	f8b4 2056 	ldrh.w	r2, [r4, #86]	@ 0x56
 c00ede8:	3a01      	subs	r2, #1
 c00edea:	b292      	uxth	r2, r2
 c00edec:	f8a4 2056 	strh.w	r2, [r4, #86]	@ 0x56
    while (huart->TxXferCount > 0U)
 c00edf0:	f8b4 2056 	ldrh.w	r2, [r4, #86]	@ 0x56
 c00edf4:	b292      	uxth	r2, r2
 c00edf6:	2a00      	cmp	r2, #0
 c00edf8:	d1e9      	bne.n	c00edce <HAL_UART_Transmit+0x62>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 c00edfa:	4633      	mov	r3, r6
 c00edfc:	2200      	movs	r2, #0
 c00edfe:	2140      	movs	r1, #64	@ 0x40
 c00ee00:	4620      	mov	r0, r4
 c00ee02:	9500      	str	r5, [sp, #0]
 c00ee04:	f7ff ff5c 	bl	c00ecc0 <UART_WaitOnFlagUntilTimeout>
 c00ee08:	bb68      	cbnz	r0, c00ee66 <HAL_UART_Transmit+0xfa>
    huart->gState = HAL_UART_STATE_READY;
 c00ee0a:	2320      	movs	r3, #32
 c00ee0c:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
    return HAL_OK;
 c00ee10:	e000      	b.n	c00ee14 <HAL_UART_Transmit+0xa8>
      return  HAL_ERROR;
 c00ee12:	2001      	movs	r0, #1
}
 c00ee14:	b003      	add	sp, #12
 c00ee16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 c00ee1a:	69da      	ldr	r2, [r3, #28]
 c00ee1c:	f012 0880 	ands.w	r8, r2, #128	@ 0x80
 c00ee20:	d1da      	bne.n	c00edd8 <HAL_UART_Transmit+0x6c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 c00ee22:	f7fd fcb9 	bl	c00c798 <HAL_GetTick>
 c00ee26:	1b80      	subs	r0, r0, r6
 c00ee28:	4285      	cmp	r5, r0
 c00ee2a:	d32f      	bcc.n	c00ee8c <HAL_UART_Transmit+0x120>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 c00ee2c:	6823      	ldr	r3, [r4, #0]
 c00ee2e:	461a      	mov	r2, r3
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 c00ee30:	b36d      	cbz	r5, c00ee8e <HAL_UART_Transmit+0x122>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 c00ee32:	681a      	ldr	r2, [r3, #0]
 c00ee34:	0752      	lsls	r2, r2, #29
 c00ee36:	d5f0      	bpl.n	c00ee1a <HAL_UART_Transmit+0xae>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 c00ee38:	69da      	ldr	r2, [r3, #28]
 c00ee3a:	0510      	lsls	r0, r2, #20
 c00ee3c:	d5ed      	bpl.n	c00ee1a <HAL_UART_Transmit+0xae>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 c00ee3e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
          huart->gState = HAL_UART_STATE_READY;
 c00ee42:	2220      	movs	r2, #32
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 c00ee44:	6219      	str	r1, [r3, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 c00ee46:	6819      	ldr	r1, [r3, #0]
 c00ee48:	f421 71d0 	bic.w	r1, r1, #416	@ 0x1a0
 c00ee4c:	6019      	str	r1, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 c00ee4e:	6899      	ldr	r1, [r3, #8]
 c00ee50:	f021 0101 	bic.w	r1, r1, #1
 c00ee54:	6099      	str	r1, [r3, #8]
          huart->gState = HAL_UART_STATE_READY;
 c00ee56:	f8c4 2084 	str.w	r2, [r4, #132]	@ 0x84
          __HAL_UNLOCK(huart);
 c00ee5a:	f884 8080 	strb.w	r8, [r4, #128]	@ 0x80
          huart->RxState = HAL_UART_STATE_READY;
 c00ee5e:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 c00ee62:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
        return HAL_TIMEOUT;
 c00ee66:	2003      	movs	r0, #3
}
 c00ee68:	b003      	add	sp, #12
 c00ee6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 c00ee6e:	f837 2b02 	ldrh.w	r2, [r7], #2
 c00ee72:	f3c2 0208 	ubfx	r2, r2, #0, #9
 c00ee76:	e7b4      	b.n	c00ede2 <HAL_UART_Transmit+0x76>
    __HAL_LOCK(huart);
 c00ee78:	2002      	movs	r0, #2
}
 c00ee7a:	b003      	add	sp, #12
 c00ee7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 c00ee80:	6923      	ldr	r3, [r4, #16]
 c00ee82:	2b00      	cmp	r3, #0
 c00ee84:	d19a      	bne.n	c00edbc <HAL_UART_Transmit+0x50>
 c00ee86:	464f      	mov	r7, r9
      pdata8bits  = NULL;
 c00ee88:	4699      	mov	r9, r3
 c00ee8a:	e798      	b.n	c00edbe <HAL_UART_Transmit+0x52>
 c00ee8c:	6822      	ldr	r2, [r4, #0]
        huart->gState = HAL_UART_STATE_READY;
 c00ee8e:	2120      	movs	r1, #32
        __HAL_UNLOCK(huart);
 c00ee90:	2000      	movs	r0, #0
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 c00ee92:	6813      	ldr	r3, [r2, #0]
 c00ee94:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 c00ee98:	6013      	str	r3, [r2, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 c00ee9a:	6893      	ldr	r3, [r2, #8]
 c00ee9c:	f023 0301 	bic.w	r3, r3, #1
 c00eea0:	6093      	str	r3, [r2, #8]
        huart->gState = HAL_UART_STATE_READY;
 c00eea2:	f8c4 1084 	str.w	r1, [r4, #132]	@ 0x84
        __HAL_UNLOCK(huart);
 c00eea6:	f884 0080 	strb.w	r0, [r4, #128]	@ 0x80
        huart->RxState = HAL_UART_STATE_READY;
 c00eeaa:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
        return HAL_TIMEOUT;
 c00eeae:	2003      	movs	r0, #3
 c00eeb0:	e7da      	b.n	c00ee68 <HAL_UART_Transmit+0xfc>
 c00eeb2:	bf00      	nop

0c00eeb4 <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
 c00eeb4:	f890 2080 	ldrb.w	r2, [r0, #128]	@ 0x80
 c00eeb8:	2a01      	cmp	r2, #1
 c00eeba:	d017      	beq.n	c00eeec <HAL_UARTEx_DisableFifoMode+0x38>
 c00eebc:	4603      	mov	r3, r0

  huart->gState = HAL_UART_STATE_BUSY;
 c00eebe:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 c00eec0:	2100      	movs	r1, #0
{
 c00eec2:	b430      	push	{r4, r5}

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
 c00eec4:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
 c00eec6:	681a      	ldr	r2, [r3, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 c00eec8:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
  tmpcr1 = READ_REG(huart->Instance->CR1);
 c00eecc:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
 c00eece:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 c00eed0:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
 c00eed4:	f024 0401 	bic.w	r4, r4, #1
 c00eed8:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 c00eeda:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 c00eedc:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 c00eede:	f883 1080 	strb.w	r1, [r3, #128]	@ 0x80

  return HAL_OK;
 c00eee2:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
 c00eee4:	f8c3 5084 	str.w	r5, [r3, #132]	@ 0x84
}
 c00eee8:	bc30      	pop	{r4, r5}
 c00eeea:	4770      	bx	lr
  __HAL_LOCK(huart);
 c00eeec:	2002      	movs	r0, #2
}
 c00eeee:	4770      	bx	lr

0c00eef0 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 c00eef0:	f890 2080 	ldrb.w	r2, [r0, #128]	@ 0x80
 c00eef4:	2a01      	cmp	r2, #1
 c00eef6:	d037      	beq.n	c00ef68 <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;
 c00eef8:	4603      	mov	r3, r0
 c00eefa:	2024      	movs	r0, #36	@ 0x24

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 c00eefc:	681a      	ldr	r2, [r3, #0]
{
 c00eefe:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
 c00ef00:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
  tmpcr1 = READ_REG(huart->Instance->CR1);
 c00ef04:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 c00ef06:	6810      	ldr	r0, [r2, #0]
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 c00ef08:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
  __HAL_UART_DISABLE(huart);
 c00ef0a:	f020 0001 	bic.w	r0, r0, #1
 c00ef0e:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 c00ef10:	6890      	ldr	r0, [r2, #8]
 c00ef12:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
 c00ef16:	4301      	orrs	r1, r0
 c00ef18:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 c00ef1a:	b315      	cbz	r5, c00ef62 <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 c00ef1c:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 c00ef1e:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00ef20:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00ef24:	4911      	ldr	r1, [pc, #68]	@ (c00ef6c <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
 c00ef26:	4d12      	ldr	r5, [pc, #72]	@ (c00ef70 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 c00ef28:	ea4f 7e50 	mov.w	lr, r0, lsr #29
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00ef2c:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00ef30:	f811 100c 	ldrb.w	r1, [r1, ip]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00ef34:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00ef38:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00ef3c:	00c0      	lsls	r0, r0, #3
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00ef3e:	00c9      	lsls	r1, r1, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00ef40:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00ef44:	fbb1 f1f5 	udiv	r1, r1, r5
 c00ef48:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  __HAL_UNLOCK(huart);
 c00ef4c:	2100      	movs	r1, #0
  huart->gState = HAL_UART_STATE_READY;
 c00ef4e:	2520      	movs	r5, #32
 c00ef50:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 c00ef54:	6014      	str	r4, [r2, #0]
  __HAL_UNLOCK(huart);
 c00ef56:	f883 1080 	strb.w	r1, [r3, #128]	@ 0x80
  return HAL_OK;
 c00ef5a:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
 c00ef5c:	f8c3 5084 	str.w	r5, [r3, #132]	@ 0x84
}
 c00ef60:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
 c00ef62:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
 c00ef64:	4608      	mov	r0, r1
 c00ef66:	e7ef      	b.n	c00ef48 <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
 c00ef68:	2002      	movs	r0, #2
}
 c00ef6a:	4770      	bx	lr
 c00ef6c:	0c011d44 	.word	0x0c011d44
 c00ef70:	0c011d3c 	.word	0x0c011d3c

0c00ef74 <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
 c00ef74:	f890 2080 	ldrb.w	r2, [r0, #128]	@ 0x80
 c00ef78:	2a01      	cmp	r2, #1
 c00ef7a:	d037      	beq.n	c00efec <HAL_UARTEx_SetRxFifoThreshold+0x78>
  huart->gState = HAL_UART_STATE_BUSY;
 c00ef7c:	4603      	mov	r3, r0
 c00ef7e:	2024      	movs	r0, #36	@ 0x24
  tmpcr1 = READ_REG(huart->Instance->CR1);
 c00ef80:	681a      	ldr	r2, [r3, #0]
{
 c00ef82:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
 c00ef84:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
  tmpcr1 = READ_REG(huart->Instance->CR1);
 c00ef88:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
 c00ef8a:	6810      	ldr	r0, [r2, #0]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 c00ef8c:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
  __HAL_UART_DISABLE(huart);
 c00ef8e:	f020 0001 	bic.w	r0, r0, #1
 c00ef92:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 c00ef94:	6890      	ldr	r0, [r2, #8]
 c00ef96:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
 c00ef9a:	4301      	orrs	r1, r0
 c00ef9c:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 c00ef9e:	b315      	cbz	r5, c00efe6 <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 c00efa0:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 c00efa2:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00efa4:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00efa8:	4911      	ldr	r1, [pc, #68]	@ (c00eff0 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
 c00efaa:	4d12      	ldr	r5, [pc, #72]	@ (c00eff4 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 c00efac:	ea4f 7e50 	mov.w	lr, r0, lsr #29
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00efb0:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00efb4:	f811 100c 	ldrb.w	r1, [r1, ip]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00efb8:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00efbc:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00efc0:	00c0      	lsls	r0, r0, #3
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00efc2:	00c9      	lsls	r1, r1, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 c00efc4:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 c00efc8:	fbb1 f1f5 	udiv	r1, r1, r5
 c00efcc:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  __HAL_UNLOCK(huart);
 c00efd0:	2100      	movs	r1, #0
  huart->gState = HAL_UART_STATE_READY;
 c00efd2:	2520      	movs	r5, #32
 c00efd4:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 c00efd8:	6014      	str	r4, [r2, #0]
  __HAL_UNLOCK(huart);
 c00efda:	f883 1080 	strb.w	r1, [r3, #128]	@ 0x80
  return HAL_OK;
 c00efde:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
 c00efe0:	f8c3 5084 	str.w	r5, [r3, #132]	@ 0x84
}
 c00efe4:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
 c00efe6:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
 c00efe8:	4608      	mov	r0, r1
 c00efea:	e7ef      	b.n	c00efcc <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
 c00efec:	2002      	movs	r0, #2
}
 c00efee:	4770      	bx	lr
 c00eff0:	0c011d44 	.word	0x0c011d44
 c00eff4:	0c011d3c 	.word	0x0c011d3c

0c00eff8 <abort>:
 c00eff8:	2006      	movs	r0, #6
 c00effa:	b508      	push	{r3, lr}
 c00effc:	f000 fb48 	bl	c00f690 <raise>
 c00f000:	2001      	movs	r0, #1
 c00f002:	f7f3 f81f 	bl	c002044 <_exit>
	...

0c00f008 <__assert_func>:
 c00f008:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 c00f00a:	4614      	mov	r4, r2
 c00f00c:	461a      	mov	r2, r3
 c00f00e:	4b09      	ldr	r3, [pc, #36]	@ (c00f034 <__assert_func+0x2c>)
 c00f010:	4605      	mov	r5, r0
 c00f012:	681b      	ldr	r3, [r3, #0]
 c00f014:	68d8      	ldr	r0, [r3, #12]
 c00f016:	b954      	cbnz	r4, c00f02e <__assert_func+0x26>
 c00f018:	4b07      	ldr	r3, [pc, #28]	@ (c00f038 <__assert_func+0x30>)
 c00f01a:	461c      	mov	r4, r3
 c00f01c:	9100      	str	r1, [sp, #0]
 c00f01e:	4907      	ldr	r1, [pc, #28]	@ (c00f03c <__assert_func+0x34>)
 c00f020:	e9cd 3401 	strd	r3, r4, [sp, #4]
 c00f024:	462b      	mov	r3, r5
 c00f026:	f000 f9c1 	bl	c00f3ac <fiprintf>
 c00f02a:	f7ff ffe5 	bl	c00eff8 <abort>
 c00f02e:	4b04      	ldr	r3, [pc, #16]	@ (c00f040 <__assert_func+0x38>)
 c00f030:	e7f4      	b.n	c00f01c <__assert_func+0x14>
 c00f032:	bf00      	nop
 c00f034:	3000013c 	.word	0x3000013c
 c00f038:	0c011d87 	.word	0x0c011d87
 c00f03c:	0c011d59 	.word	0x0c011d59
 c00f040:	0c011d4c 	.word	0x0c011d4c

0c00f044 <calloc>:
 c00f044:	4b02      	ldr	r3, [pc, #8]	@ (c00f050 <calloc+0xc>)
 c00f046:	460a      	mov	r2, r1
 c00f048:	4601      	mov	r1, r0
 c00f04a:	6818      	ldr	r0, [r3, #0]
 c00f04c:	f000 b802 	b.w	c00f054 <_calloc_r>
 c00f050:	3000013c 	.word	0x3000013c

0c00f054 <_calloc_r>:
 c00f054:	b570      	push	{r4, r5, r6, lr}
 c00f056:	fba1 5402 	umull	r5, r4, r1, r2
 c00f05a:	b93c      	cbnz	r4, c00f06c <_calloc_r+0x18>
 c00f05c:	4629      	mov	r1, r5
 c00f05e:	f000 f83f 	bl	c00f0e0 <_malloc_r>
 c00f062:	4606      	mov	r6, r0
 c00f064:	b928      	cbnz	r0, c00f072 <_calloc_r+0x1e>
 c00f066:	2600      	movs	r6, #0
 c00f068:	4630      	mov	r0, r6
 c00f06a:	bd70      	pop	{r4, r5, r6, pc}
 c00f06c:	220c      	movs	r2, #12
 c00f06e:	6002      	str	r2, [r0, #0]
 c00f070:	e7f9      	b.n	c00f066 <_calloc_r+0x12>
 c00f072:	462a      	mov	r2, r5
 c00f074:	4621      	mov	r1, r4
 c00f076:	f000 fadb 	bl	c00f630 <memset>
 c00f07a:	e7f5      	b.n	c00f068 <_calloc_r+0x14>

0c00f07c <malloc>:
 c00f07c:	4b02      	ldr	r3, [pc, #8]	@ (c00f088 <malloc+0xc>)
 c00f07e:	4601      	mov	r1, r0
 c00f080:	6818      	ldr	r0, [r3, #0]
 c00f082:	f000 b82d 	b.w	c00f0e0 <_malloc_r>
 c00f086:	bf00      	nop
 c00f088:	3000013c 	.word	0x3000013c

0c00f08c <free>:
 c00f08c:	4b02      	ldr	r3, [pc, #8]	@ (c00f098 <free+0xc>)
 c00f08e:	4601      	mov	r1, r0
 c00f090:	6818      	ldr	r0, [r3, #0]
 c00f092:	f000 bbb7 	b.w	c00f804 <_free_r>
 c00f096:	bf00      	nop
 c00f098:	3000013c 	.word	0x3000013c

0c00f09c <sbrk_aligned>:
 c00f09c:	b570      	push	{r4, r5, r6, lr}
 c00f09e:	4e0f      	ldr	r6, [pc, #60]	@ (c00f0dc <sbrk_aligned+0x40>)
 c00f0a0:	460c      	mov	r4, r1
 c00f0a2:	4605      	mov	r5, r0
 c00f0a4:	6831      	ldr	r1, [r6, #0]
 c00f0a6:	b911      	cbnz	r1, c00f0ae <sbrk_aligned+0x12>
 c00f0a8:	f000 fb42 	bl	c00f730 <_sbrk_r>
 c00f0ac:	6030      	str	r0, [r6, #0]
 c00f0ae:	4621      	mov	r1, r4
 c00f0b0:	4628      	mov	r0, r5
 c00f0b2:	f000 fb3d 	bl	c00f730 <_sbrk_r>
 c00f0b6:	1c43      	adds	r3, r0, #1
 c00f0b8:	d103      	bne.n	c00f0c2 <sbrk_aligned+0x26>
 c00f0ba:	f04f 34ff 	mov.w	r4, #4294967295
 c00f0be:	4620      	mov	r0, r4
 c00f0c0:	bd70      	pop	{r4, r5, r6, pc}
 c00f0c2:	1cc4      	adds	r4, r0, #3
 c00f0c4:	f024 0403 	bic.w	r4, r4, #3
 c00f0c8:	42a0      	cmp	r0, r4
 c00f0ca:	d0f8      	beq.n	c00f0be <sbrk_aligned+0x22>
 c00f0cc:	1a21      	subs	r1, r4, r0
 c00f0ce:	4628      	mov	r0, r5
 c00f0d0:	f000 fb2e 	bl	c00f730 <_sbrk_r>
 c00f0d4:	3001      	adds	r0, #1
 c00f0d6:	d1f2      	bne.n	c00f0be <sbrk_aligned+0x22>
 c00f0d8:	e7ef      	b.n	c00f0ba <sbrk_aligned+0x1e>
 c00f0da:	bf00      	nop
 c00f0dc:	30000394 	.word	0x30000394

0c00f0e0 <_malloc_r>:
 c00f0e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c00f0e4:	1ccd      	adds	r5, r1, #3
 c00f0e6:	4606      	mov	r6, r0
 c00f0e8:	f025 0503 	bic.w	r5, r5, #3
 c00f0ec:	3508      	adds	r5, #8
 c00f0ee:	2d0c      	cmp	r5, #12
 c00f0f0:	bf38      	it	cc
 c00f0f2:	250c      	movcc	r5, #12
 c00f0f4:	2d00      	cmp	r5, #0
 c00f0f6:	db01      	blt.n	c00f0fc <_malloc_r+0x1c>
 c00f0f8:	42a9      	cmp	r1, r5
 c00f0fa:	d904      	bls.n	c00f106 <_malloc_r+0x26>
 c00f0fc:	230c      	movs	r3, #12
 c00f0fe:	6033      	str	r3, [r6, #0]
 c00f100:	2000      	movs	r0, #0
 c00f102:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 c00f106:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ c00f1dc <_malloc_r+0xfc>
 c00f10a:	f000 f869 	bl	c00f1e0 <__malloc_lock>
 c00f10e:	f8d8 3000 	ldr.w	r3, [r8]
 c00f112:	461c      	mov	r4, r3
 c00f114:	bb44      	cbnz	r4, c00f168 <_malloc_r+0x88>
 c00f116:	4629      	mov	r1, r5
 c00f118:	4630      	mov	r0, r6
 c00f11a:	f7ff ffbf 	bl	c00f09c <sbrk_aligned>
 c00f11e:	1c43      	adds	r3, r0, #1
 c00f120:	4604      	mov	r4, r0
 c00f122:	d158      	bne.n	c00f1d6 <_malloc_r+0xf6>
 c00f124:	f8d8 4000 	ldr.w	r4, [r8]
 c00f128:	4627      	mov	r7, r4
 c00f12a:	2f00      	cmp	r7, #0
 c00f12c:	d143      	bne.n	c00f1b6 <_malloc_r+0xd6>
 c00f12e:	2c00      	cmp	r4, #0
 c00f130:	d04b      	beq.n	c00f1ca <_malloc_r+0xea>
 c00f132:	6823      	ldr	r3, [r4, #0]
 c00f134:	4639      	mov	r1, r7
 c00f136:	4630      	mov	r0, r6
 c00f138:	eb04 0903 	add.w	r9, r4, r3
 c00f13c:	f000 faf8 	bl	c00f730 <_sbrk_r>
 c00f140:	4581      	cmp	r9, r0
 c00f142:	d142      	bne.n	c00f1ca <_malloc_r+0xea>
 c00f144:	6821      	ldr	r1, [r4, #0]
 c00f146:	4630      	mov	r0, r6
 c00f148:	1a6d      	subs	r5, r5, r1
 c00f14a:	4629      	mov	r1, r5
 c00f14c:	f7ff ffa6 	bl	c00f09c <sbrk_aligned>
 c00f150:	3001      	adds	r0, #1
 c00f152:	d03a      	beq.n	c00f1ca <_malloc_r+0xea>
 c00f154:	6823      	ldr	r3, [r4, #0]
 c00f156:	442b      	add	r3, r5
 c00f158:	6023      	str	r3, [r4, #0]
 c00f15a:	f8d8 3000 	ldr.w	r3, [r8]
 c00f15e:	685a      	ldr	r2, [r3, #4]
 c00f160:	bb62      	cbnz	r2, c00f1bc <_malloc_r+0xdc>
 c00f162:	f8c8 7000 	str.w	r7, [r8]
 c00f166:	e00f      	b.n	c00f188 <_malloc_r+0xa8>
 c00f168:	6822      	ldr	r2, [r4, #0]
 c00f16a:	1b52      	subs	r2, r2, r5
 c00f16c:	d420      	bmi.n	c00f1b0 <_malloc_r+0xd0>
 c00f16e:	2a0b      	cmp	r2, #11
 c00f170:	d917      	bls.n	c00f1a2 <_malloc_r+0xc2>
 c00f172:	1961      	adds	r1, r4, r5
 c00f174:	42a3      	cmp	r3, r4
 c00f176:	6025      	str	r5, [r4, #0]
 c00f178:	bf18      	it	ne
 c00f17a:	6059      	strne	r1, [r3, #4]
 c00f17c:	6863      	ldr	r3, [r4, #4]
 c00f17e:	bf08      	it	eq
 c00f180:	f8c8 1000 	streq.w	r1, [r8]
 c00f184:	5162      	str	r2, [r4, r5]
 c00f186:	604b      	str	r3, [r1, #4]
 c00f188:	4630      	mov	r0, r6
 c00f18a:	f000 f82f 	bl	c00f1ec <__malloc_unlock>
 c00f18e:	f104 000b 	add.w	r0, r4, #11
 c00f192:	1d23      	adds	r3, r4, #4
 c00f194:	f020 0007 	bic.w	r0, r0, #7
 c00f198:	1ac2      	subs	r2, r0, r3
 c00f19a:	bf1c      	itt	ne
 c00f19c:	1a1b      	subne	r3, r3, r0
 c00f19e:	50a3      	strne	r3, [r4, r2]
 c00f1a0:	e7af      	b.n	c00f102 <_malloc_r+0x22>
 c00f1a2:	6862      	ldr	r2, [r4, #4]
 c00f1a4:	42a3      	cmp	r3, r4
 c00f1a6:	bf0c      	ite	eq
 c00f1a8:	f8c8 2000 	streq.w	r2, [r8]
 c00f1ac:	605a      	strne	r2, [r3, #4]
 c00f1ae:	e7eb      	b.n	c00f188 <_malloc_r+0xa8>
 c00f1b0:	4623      	mov	r3, r4
 c00f1b2:	6864      	ldr	r4, [r4, #4]
 c00f1b4:	e7ae      	b.n	c00f114 <_malloc_r+0x34>
 c00f1b6:	463c      	mov	r4, r7
 c00f1b8:	687f      	ldr	r7, [r7, #4]
 c00f1ba:	e7b6      	b.n	c00f12a <_malloc_r+0x4a>
 c00f1bc:	461a      	mov	r2, r3
 c00f1be:	685b      	ldr	r3, [r3, #4]
 c00f1c0:	42a3      	cmp	r3, r4
 c00f1c2:	d1fb      	bne.n	c00f1bc <_malloc_r+0xdc>
 c00f1c4:	2300      	movs	r3, #0
 c00f1c6:	6053      	str	r3, [r2, #4]
 c00f1c8:	e7de      	b.n	c00f188 <_malloc_r+0xa8>
 c00f1ca:	230c      	movs	r3, #12
 c00f1cc:	4630      	mov	r0, r6
 c00f1ce:	6033      	str	r3, [r6, #0]
 c00f1d0:	f000 f80c 	bl	c00f1ec <__malloc_unlock>
 c00f1d4:	e794      	b.n	c00f100 <_malloc_r+0x20>
 c00f1d6:	6005      	str	r5, [r0, #0]
 c00f1d8:	e7d6      	b.n	c00f188 <_malloc_r+0xa8>
 c00f1da:	bf00      	nop
 c00f1dc:	30000398 	.word	0x30000398

0c00f1e0 <__malloc_lock>:
 c00f1e0:	4801      	ldr	r0, [pc, #4]	@ (c00f1e8 <__malloc_lock+0x8>)
 c00f1e2:	f000 baf2 	b.w	c00f7ca <__retarget_lock_acquire_recursive>
 c00f1e6:	bf00      	nop
 c00f1e8:	300004dc 	.word	0x300004dc

0c00f1ec <__malloc_unlock>:
 c00f1ec:	4801      	ldr	r0, [pc, #4]	@ (c00f1f4 <__malloc_unlock+0x8>)
 c00f1ee:	f000 baed 	b.w	c00f7cc <__retarget_lock_release_recursive>
 c00f1f2:	bf00      	nop
 c00f1f4:	300004dc 	.word	0x300004dc

0c00f1f8 <realloc>:
 c00f1f8:	4b02      	ldr	r3, [pc, #8]	@ (c00f204 <realloc+0xc>)
 c00f1fa:	460a      	mov	r2, r1
 c00f1fc:	4601      	mov	r1, r0
 c00f1fe:	6818      	ldr	r0, [r3, #0]
 c00f200:	f000 b802 	b.w	c00f208 <_realloc_r>
 c00f204:	3000013c 	.word	0x3000013c

0c00f208 <_realloc_r>:
 c00f208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00f20c:	4680      	mov	r8, r0
 c00f20e:	4615      	mov	r5, r2
 c00f210:	460c      	mov	r4, r1
 c00f212:	b921      	cbnz	r1, c00f21e <_realloc_r+0x16>
 c00f214:	4611      	mov	r1, r2
 c00f216:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 c00f21a:	f7ff bf61 	b.w	c00f0e0 <_malloc_r>
 c00f21e:	b92a      	cbnz	r2, c00f22c <_realloc_r+0x24>
 c00f220:	f000 faf0 	bl	c00f804 <_free_r>
 c00f224:	2400      	movs	r4, #0
 c00f226:	4620      	mov	r0, r4
 c00f228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c00f22c:	f000 fb34 	bl	c00f898 <_malloc_usable_size_r>
 c00f230:	4285      	cmp	r5, r0
 c00f232:	4606      	mov	r6, r0
 c00f234:	d802      	bhi.n	c00f23c <_realloc_r+0x34>
 c00f236:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 c00f23a:	d8f4      	bhi.n	c00f226 <_realloc_r+0x1e>
 c00f23c:	4629      	mov	r1, r5
 c00f23e:	4640      	mov	r0, r8
 c00f240:	f7ff ff4e 	bl	c00f0e0 <_malloc_r>
 c00f244:	4607      	mov	r7, r0
 c00f246:	2800      	cmp	r0, #0
 c00f248:	d0ec      	beq.n	c00f224 <_realloc_r+0x1c>
 c00f24a:	42b5      	cmp	r5, r6
 c00f24c:	462a      	mov	r2, r5
 c00f24e:	4621      	mov	r1, r4
 c00f250:	bf28      	it	cs
 c00f252:	4632      	movcs	r2, r6
 c00f254:	f000 fabb 	bl	c00f7ce <memcpy>
 c00f258:	4621      	mov	r1, r4
 c00f25a:	4640      	mov	r0, r8
 c00f25c:	463c      	mov	r4, r7
 c00f25e:	f000 fad1 	bl	c00f804 <_free_r>
 c00f262:	e7e0      	b.n	c00f226 <_realloc_r+0x1e>

0c00f264 <std>:
 c00f264:	2300      	movs	r3, #0
 c00f266:	b510      	push	{r4, lr}
 c00f268:	4604      	mov	r4, r0
 c00f26a:	6083      	str	r3, [r0, #8]
 c00f26c:	8181      	strh	r1, [r0, #12]
 c00f26e:	4619      	mov	r1, r3
 c00f270:	6643      	str	r3, [r0, #100]	@ 0x64
 c00f272:	81c2      	strh	r2, [r0, #14]
 c00f274:	2208      	movs	r2, #8
 c00f276:	6183      	str	r3, [r0, #24]
 c00f278:	e9c0 3300 	strd	r3, r3, [r0]
 c00f27c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 c00f280:	305c      	adds	r0, #92	@ 0x5c
 c00f282:	f000 f9d5 	bl	c00f630 <memset>
 c00f286:	4b0d      	ldr	r3, [pc, #52]	@ (c00f2bc <std+0x58>)
 c00f288:	6224      	str	r4, [r4, #32]
 c00f28a:	6263      	str	r3, [r4, #36]	@ 0x24
 c00f28c:	4b0c      	ldr	r3, [pc, #48]	@ (c00f2c0 <std+0x5c>)
 c00f28e:	62a3      	str	r3, [r4, #40]	@ 0x28
 c00f290:	4b0c      	ldr	r3, [pc, #48]	@ (c00f2c4 <std+0x60>)
 c00f292:	62e3      	str	r3, [r4, #44]	@ 0x2c
 c00f294:	4b0c      	ldr	r3, [pc, #48]	@ (c00f2c8 <std+0x64>)
 c00f296:	6323      	str	r3, [r4, #48]	@ 0x30
 c00f298:	4b0c      	ldr	r3, [pc, #48]	@ (c00f2cc <std+0x68>)
 c00f29a:	429c      	cmp	r4, r3
 c00f29c:	d006      	beq.n	c00f2ac <std+0x48>
 c00f29e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 c00f2a2:	4294      	cmp	r4, r2
 c00f2a4:	d002      	beq.n	c00f2ac <std+0x48>
 c00f2a6:	33d0      	adds	r3, #208	@ 0xd0
 c00f2a8:	429c      	cmp	r4, r3
 c00f2aa:	d105      	bne.n	c00f2b8 <std+0x54>
 c00f2ac:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 c00f2b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 c00f2b4:	f000 ba88 	b.w	c00f7c8 <__retarget_lock_init_recursive>
 c00f2b8:	bd10      	pop	{r4, pc}
 c00f2ba:	bf00      	nop
 c00f2bc:	0c00f44d 	.word	0x0c00f44d
 c00f2c0:	0c00f46f 	.word	0x0c00f46f
 c00f2c4:	0c00f4a7 	.word	0x0c00f4a7
 c00f2c8:	0c00f4cb 	.word	0x0c00f4cb
 c00f2cc:	3000039c 	.word	0x3000039c

0c00f2d0 <stdio_exit_handler>:
 c00f2d0:	4a02      	ldr	r2, [pc, #8]	@ (c00f2dc <stdio_exit_handler+0xc>)
 c00f2d2:	4903      	ldr	r1, [pc, #12]	@ (c00f2e0 <stdio_exit_handler+0x10>)
 c00f2d4:	4803      	ldr	r0, [pc, #12]	@ (c00f2e4 <stdio_exit_handler+0x14>)
 c00f2d6:	f000 b87b 	b.w	c00f3d0 <_fwalk_sglue>
 c00f2da:	bf00      	nop
 c00f2dc:	30000130 	.word	0x30000130
 c00f2e0:	0c010209 	.word	0x0c010209
 c00f2e4:	30000140 	.word	0x30000140

0c00f2e8 <cleanup_stdio>:
 c00f2e8:	6841      	ldr	r1, [r0, #4]
 c00f2ea:	4b0c      	ldr	r3, [pc, #48]	@ (c00f31c <cleanup_stdio+0x34>)
 c00f2ec:	4299      	cmp	r1, r3
 c00f2ee:	b510      	push	{r4, lr}
 c00f2f0:	4604      	mov	r4, r0
 c00f2f2:	d001      	beq.n	c00f2f8 <cleanup_stdio+0x10>
 c00f2f4:	f000 ff88 	bl	c010208 <_fflush_r>
 c00f2f8:	68a1      	ldr	r1, [r4, #8]
 c00f2fa:	4b09      	ldr	r3, [pc, #36]	@ (c00f320 <cleanup_stdio+0x38>)
 c00f2fc:	4299      	cmp	r1, r3
 c00f2fe:	d002      	beq.n	c00f306 <cleanup_stdio+0x1e>
 c00f300:	4620      	mov	r0, r4
 c00f302:	f000 ff81 	bl	c010208 <_fflush_r>
 c00f306:	68e1      	ldr	r1, [r4, #12]
 c00f308:	4b06      	ldr	r3, [pc, #24]	@ (c00f324 <cleanup_stdio+0x3c>)
 c00f30a:	4299      	cmp	r1, r3
 c00f30c:	d004      	beq.n	c00f318 <cleanup_stdio+0x30>
 c00f30e:	4620      	mov	r0, r4
 c00f310:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 c00f314:	f000 bf78 	b.w	c010208 <_fflush_r>
 c00f318:	bd10      	pop	{r4, pc}
 c00f31a:	bf00      	nop
 c00f31c:	3000039c 	.word	0x3000039c
 c00f320:	30000404 	.word	0x30000404
 c00f324:	3000046c 	.word	0x3000046c

0c00f328 <global_stdio_init.part.0>:
 c00f328:	b510      	push	{r4, lr}
 c00f32a:	4b0b      	ldr	r3, [pc, #44]	@ (c00f358 <global_stdio_init.part.0+0x30>)
 c00f32c:	2104      	movs	r1, #4
 c00f32e:	4c0b      	ldr	r4, [pc, #44]	@ (c00f35c <global_stdio_init.part.0+0x34>)
 c00f330:	4a0b      	ldr	r2, [pc, #44]	@ (c00f360 <global_stdio_init.part.0+0x38>)
 c00f332:	4620      	mov	r0, r4
 c00f334:	601a      	str	r2, [r3, #0]
 c00f336:	2200      	movs	r2, #0
 c00f338:	f7ff ff94 	bl	c00f264 <std>
 c00f33c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 c00f340:	2201      	movs	r2, #1
 c00f342:	2109      	movs	r1, #9
 c00f344:	f7ff ff8e 	bl	c00f264 <std>
 c00f348:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 c00f34c:	2202      	movs	r2, #2
 c00f34e:	2112      	movs	r1, #18
 c00f350:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 c00f354:	f7ff bf86 	b.w	c00f264 <std>
 c00f358:	300004d4 	.word	0x300004d4
 c00f35c:	3000039c 	.word	0x3000039c
 c00f360:	0c00f2d1 	.word	0x0c00f2d1

0c00f364 <__sfp_lock_acquire>:
 c00f364:	4801      	ldr	r0, [pc, #4]	@ (c00f36c <__sfp_lock_acquire+0x8>)
 c00f366:	f000 ba30 	b.w	c00f7ca <__retarget_lock_acquire_recursive>
 c00f36a:	bf00      	nop
 c00f36c:	300004dd 	.word	0x300004dd

0c00f370 <__sfp_lock_release>:
 c00f370:	4801      	ldr	r0, [pc, #4]	@ (c00f378 <__sfp_lock_release+0x8>)
 c00f372:	f000 ba2b 	b.w	c00f7cc <__retarget_lock_release_recursive>
 c00f376:	bf00      	nop
 c00f378:	300004dd 	.word	0x300004dd

0c00f37c <__sinit>:
 c00f37c:	b510      	push	{r4, lr}
 c00f37e:	4604      	mov	r4, r0
 c00f380:	f7ff fff0 	bl	c00f364 <__sfp_lock_acquire>
 c00f384:	6a23      	ldr	r3, [r4, #32]
 c00f386:	b11b      	cbz	r3, c00f390 <__sinit+0x14>
 c00f388:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 c00f38c:	f7ff bff0 	b.w	c00f370 <__sfp_lock_release>
 c00f390:	4b04      	ldr	r3, [pc, #16]	@ (c00f3a4 <__sinit+0x28>)
 c00f392:	6223      	str	r3, [r4, #32]
 c00f394:	4b04      	ldr	r3, [pc, #16]	@ (c00f3a8 <__sinit+0x2c>)
 c00f396:	681b      	ldr	r3, [r3, #0]
 c00f398:	2b00      	cmp	r3, #0
 c00f39a:	d1f5      	bne.n	c00f388 <__sinit+0xc>
 c00f39c:	f7ff ffc4 	bl	c00f328 <global_stdio_init.part.0>
 c00f3a0:	e7f2      	b.n	c00f388 <__sinit+0xc>
 c00f3a2:	bf00      	nop
 c00f3a4:	0c00f2e9 	.word	0x0c00f2e9
 c00f3a8:	300004d4 	.word	0x300004d4

0c00f3ac <fiprintf>:
 c00f3ac:	b40e      	push	{r1, r2, r3}
 c00f3ae:	b503      	push	{r0, r1, lr}
 c00f3b0:	ab03      	add	r3, sp, #12
 c00f3b2:	4601      	mov	r1, r0
 c00f3b4:	4805      	ldr	r0, [pc, #20]	@ (c00f3cc <fiprintf+0x20>)
 c00f3b6:	f853 2b04 	ldr.w	r2, [r3], #4
 c00f3ba:	6800      	ldr	r0, [r0, #0]
 c00f3bc:	9301      	str	r3, [sp, #4]
 c00f3be:	f000 fbf5 	bl	c00fbac <_vfiprintf_r>
 c00f3c2:	b002      	add	sp, #8
 c00f3c4:	f85d eb04 	ldr.w	lr, [sp], #4
 c00f3c8:	b003      	add	sp, #12
 c00f3ca:	4770      	bx	lr
 c00f3cc:	3000013c 	.word	0x3000013c

0c00f3d0 <_fwalk_sglue>:
 c00f3d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c00f3d4:	4607      	mov	r7, r0
 c00f3d6:	4688      	mov	r8, r1
 c00f3d8:	4614      	mov	r4, r2
 c00f3da:	2600      	movs	r6, #0
 c00f3dc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 c00f3e0:	f1b9 0901 	subs.w	r9, r9, #1
 c00f3e4:	d505      	bpl.n	c00f3f2 <_fwalk_sglue+0x22>
 c00f3e6:	6824      	ldr	r4, [r4, #0]
 c00f3e8:	2c00      	cmp	r4, #0
 c00f3ea:	d1f7      	bne.n	c00f3dc <_fwalk_sglue+0xc>
 c00f3ec:	4630      	mov	r0, r6
 c00f3ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 c00f3f2:	89ab      	ldrh	r3, [r5, #12]
 c00f3f4:	2b01      	cmp	r3, #1
 c00f3f6:	d907      	bls.n	c00f408 <_fwalk_sglue+0x38>
 c00f3f8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 c00f3fc:	3301      	adds	r3, #1
 c00f3fe:	d003      	beq.n	c00f408 <_fwalk_sglue+0x38>
 c00f400:	4629      	mov	r1, r5
 c00f402:	4638      	mov	r0, r7
 c00f404:	47c0      	blx	r8
 c00f406:	4306      	orrs	r6, r0
 c00f408:	3568      	adds	r5, #104	@ 0x68
 c00f40a:	e7e9      	b.n	c00f3e0 <_fwalk_sglue+0x10>

0c00f40c <siprintf>:
 c00f40c:	b40e      	push	{r1, r2, r3}
 c00f40e:	b500      	push	{lr}
 c00f410:	b09c      	sub	sp, #112	@ 0x70
 c00f412:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 c00f416:	ab1d      	add	r3, sp, #116	@ 0x74
 c00f418:	9002      	str	r0, [sp, #8]
 c00f41a:	9006      	str	r0, [sp, #24]
 c00f41c:	9107      	str	r1, [sp, #28]
 c00f41e:	9104      	str	r1, [sp, #16]
 c00f420:	4808      	ldr	r0, [pc, #32]	@ (c00f444 <siprintf+0x38>)
 c00f422:	4909      	ldr	r1, [pc, #36]	@ (c00f448 <siprintf+0x3c>)
 c00f424:	f853 2b04 	ldr.w	r2, [r3], #4
 c00f428:	9105      	str	r1, [sp, #20]
 c00f42a:	a902      	add	r1, sp, #8
 c00f42c:	6800      	ldr	r0, [r0, #0]
 c00f42e:	9301      	str	r3, [sp, #4]
 c00f430:	f000 fa96 	bl	c00f960 <_svfiprintf_r>
 c00f434:	9b02      	ldr	r3, [sp, #8]
 c00f436:	2200      	movs	r2, #0
 c00f438:	701a      	strb	r2, [r3, #0]
 c00f43a:	b01c      	add	sp, #112	@ 0x70
 c00f43c:	f85d eb04 	ldr.w	lr, [sp], #4
 c00f440:	b003      	add	sp, #12
 c00f442:	4770      	bx	lr
 c00f444:	3000013c 	.word	0x3000013c
 c00f448:	ffff0208 	.word	0xffff0208

0c00f44c <__sread>:
 c00f44c:	b510      	push	{r4, lr}
 c00f44e:	460c      	mov	r4, r1
 c00f450:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 c00f454:	f000 f946 	bl	c00f6e4 <_read_r>
 c00f458:	2800      	cmp	r0, #0
 c00f45a:	bfab      	itete	ge
 c00f45c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 c00f45e:	89a3      	ldrhlt	r3, [r4, #12]
 c00f460:	181b      	addge	r3, r3, r0
 c00f462:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 c00f466:	bfac      	ite	ge
 c00f468:	6563      	strge	r3, [r4, #84]	@ 0x54
 c00f46a:	81a3      	strhlt	r3, [r4, #12]
 c00f46c:	bd10      	pop	{r4, pc}

0c00f46e <__swrite>:
 c00f46e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c00f472:	461f      	mov	r7, r3
 c00f474:	898b      	ldrh	r3, [r1, #12]
 c00f476:	4605      	mov	r5, r0
 c00f478:	460c      	mov	r4, r1
 c00f47a:	05db      	lsls	r3, r3, #23
 c00f47c:	4616      	mov	r6, r2
 c00f47e:	d505      	bpl.n	c00f48c <__swrite+0x1e>
 c00f480:	2302      	movs	r3, #2
 c00f482:	2200      	movs	r2, #0
 c00f484:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 c00f488:	f000 f91a 	bl	c00f6c0 <_lseek_r>
 c00f48c:	89a3      	ldrh	r3, [r4, #12]
 c00f48e:	4632      	mov	r2, r6
 c00f490:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 c00f494:	4628      	mov	r0, r5
 c00f496:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 c00f49a:	81a3      	strh	r3, [r4, #12]
 c00f49c:	463b      	mov	r3, r7
 c00f49e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 c00f4a2:	f000 b955 	b.w	c00f750 <_write_r>

0c00f4a6 <__sseek>:
 c00f4a6:	b510      	push	{r4, lr}
 c00f4a8:	460c      	mov	r4, r1
 c00f4aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 c00f4ae:	f000 f907 	bl	c00f6c0 <_lseek_r>
 c00f4b2:	1c43      	adds	r3, r0, #1
 c00f4b4:	89a3      	ldrh	r3, [r4, #12]
 c00f4b6:	bf15      	itete	ne
 c00f4b8:	6560      	strne	r0, [r4, #84]	@ 0x54
 c00f4ba:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 c00f4be:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 c00f4c2:	81a3      	strheq	r3, [r4, #12]
 c00f4c4:	bf18      	it	ne
 c00f4c6:	81a3      	strhne	r3, [r4, #12]
 c00f4c8:	bd10      	pop	{r4, pc}

0c00f4ca <__sclose>:
 c00f4ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 c00f4ce:	f000 b8e7 	b.w	c00f6a0 <_close_r>

0c00f4d2 <__swbuf_r>:
 c00f4d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00f4d4:	460e      	mov	r6, r1
 c00f4d6:	4614      	mov	r4, r2
 c00f4d8:	4605      	mov	r5, r0
 c00f4da:	b118      	cbz	r0, c00f4e4 <__swbuf_r+0x12>
 c00f4dc:	6a03      	ldr	r3, [r0, #32]
 c00f4de:	b90b      	cbnz	r3, c00f4e4 <__swbuf_r+0x12>
 c00f4e0:	f7ff ff4c 	bl	c00f37c <__sinit>
 c00f4e4:	69a3      	ldr	r3, [r4, #24]
 c00f4e6:	60a3      	str	r3, [r4, #8]
 c00f4e8:	89a3      	ldrh	r3, [r4, #12]
 c00f4ea:	071a      	lsls	r2, r3, #28
 c00f4ec:	d501      	bpl.n	c00f4f2 <__swbuf_r+0x20>
 c00f4ee:	6923      	ldr	r3, [r4, #16]
 c00f4f0:	b943      	cbnz	r3, c00f504 <__swbuf_r+0x32>
 c00f4f2:	4621      	mov	r1, r4
 c00f4f4:	4628      	mov	r0, r5
 c00f4f6:	f000 f82b 	bl	c00f550 <__swsetup_r>
 c00f4fa:	b118      	cbz	r0, c00f504 <__swbuf_r+0x32>
 c00f4fc:	f04f 37ff 	mov.w	r7, #4294967295
 c00f500:	4638      	mov	r0, r7
 c00f502:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 c00f504:	6823      	ldr	r3, [r4, #0]
 c00f506:	b2f6      	uxtb	r6, r6
 c00f508:	6922      	ldr	r2, [r4, #16]
 c00f50a:	4637      	mov	r7, r6
 c00f50c:	1a98      	subs	r0, r3, r2
 c00f50e:	6963      	ldr	r3, [r4, #20]
 c00f510:	4283      	cmp	r3, r0
 c00f512:	dc05      	bgt.n	c00f520 <__swbuf_r+0x4e>
 c00f514:	4621      	mov	r1, r4
 c00f516:	4628      	mov	r0, r5
 c00f518:	f000 fe76 	bl	c010208 <_fflush_r>
 c00f51c:	2800      	cmp	r0, #0
 c00f51e:	d1ed      	bne.n	c00f4fc <__swbuf_r+0x2a>
 c00f520:	68a3      	ldr	r3, [r4, #8]
 c00f522:	3b01      	subs	r3, #1
 c00f524:	60a3      	str	r3, [r4, #8]
 c00f526:	6823      	ldr	r3, [r4, #0]
 c00f528:	1c5a      	adds	r2, r3, #1
 c00f52a:	6022      	str	r2, [r4, #0]
 c00f52c:	701e      	strb	r6, [r3, #0]
 c00f52e:	1c43      	adds	r3, r0, #1
 c00f530:	6962      	ldr	r2, [r4, #20]
 c00f532:	429a      	cmp	r2, r3
 c00f534:	d004      	beq.n	c00f540 <__swbuf_r+0x6e>
 c00f536:	89a3      	ldrh	r3, [r4, #12]
 c00f538:	07db      	lsls	r3, r3, #31
 c00f53a:	d5e1      	bpl.n	c00f500 <__swbuf_r+0x2e>
 c00f53c:	2e0a      	cmp	r6, #10
 c00f53e:	d1df      	bne.n	c00f500 <__swbuf_r+0x2e>
 c00f540:	4621      	mov	r1, r4
 c00f542:	4628      	mov	r0, r5
 c00f544:	f000 fe60 	bl	c010208 <_fflush_r>
 c00f548:	2800      	cmp	r0, #0
 c00f54a:	d0d9      	beq.n	c00f500 <__swbuf_r+0x2e>
 c00f54c:	e7d6      	b.n	c00f4fc <__swbuf_r+0x2a>
	...

0c00f550 <__swsetup_r>:
 c00f550:	b538      	push	{r3, r4, r5, lr}
 c00f552:	4b29      	ldr	r3, [pc, #164]	@ (c00f5f8 <__swsetup_r+0xa8>)
 c00f554:	4605      	mov	r5, r0
 c00f556:	460c      	mov	r4, r1
 c00f558:	6818      	ldr	r0, [r3, #0]
 c00f55a:	b118      	cbz	r0, c00f564 <__swsetup_r+0x14>
 c00f55c:	6a03      	ldr	r3, [r0, #32]
 c00f55e:	b90b      	cbnz	r3, c00f564 <__swsetup_r+0x14>
 c00f560:	f7ff ff0c 	bl	c00f37c <__sinit>
 c00f564:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 c00f568:	0719      	lsls	r1, r3, #28
 c00f56a:	d422      	bmi.n	c00f5b2 <__swsetup_r+0x62>
 c00f56c:	06da      	lsls	r2, r3, #27
 c00f56e:	d407      	bmi.n	c00f580 <__swsetup_r+0x30>
 c00f570:	2209      	movs	r2, #9
 c00f572:	602a      	str	r2, [r5, #0]
 c00f574:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 c00f578:	f04f 30ff 	mov.w	r0, #4294967295
 c00f57c:	81a3      	strh	r3, [r4, #12]
 c00f57e:	e033      	b.n	c00f5e8 <__swsetup_r+0x98>
 c00f580:	0758      	lsls	r0, r3, #29
 c00f582:	d512      	bpl.n	c00f5aa <__swsetup_r+0x5a>
 c00f584:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 c00f586:	b141      	cbz	r1, c00f59a <__swsetup_r+0x4a>
 c00f588:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 c00f58c:	4299      	cmp	r1, r3
 c00f58e:	d002      	beq.n	c00f596 <__swsetup_r+0x46>
 c00f590:	4628      	mov	r0, r5
 c00f592:	f000 f937 	bl	c00f804 <_free_r>
 c00f596:	2300      	movs	r3, #0
 c00f598:	6363      	str	r3, [r4, #52]	@ 0x34
 c00f59a:	89a3      	ldrh	r3, [r4, #12]
 c00f59c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 c00f5a0:	81a3      	strh	r3, [r4, #12]
 c00f5a2:	2300      	movs	r3, #0
 c00f5a4:	6063      	str	r3, [r4, #4]
 c00f5a6:	6923      	ldr	r3, [r4, #16]
 c00f5a8:	6023      	str	r3, [r4, #0]
 c00f5aa:	89a3      	ldrh	r3, [r4, #12]
 c00f5ac:	f043 0308 	orr.w	r3, r3, #8
 c00f5b0:	81a3      	strh	r3, [r4, #12]
 c00f5b2:	6923      	ldr	r3, [r4, #16]
 c00f5b4:	b94b      	cbnz	r3, c00f5ca <__swsetup_r+0x7a>
 c00f5b6:	89a3      	ldrh	r3, [r4, #12]
 c00f5b8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 c00f5bc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 c00f5c0:	d003      	beq.n	c00f5ca <__swsetup_r+0x7a>
 c00f5c2:	4621      	mov	r1, r4
 c00f5c4:	4628      	mov	r0, r5
 c00f5c6:	f000 fe6c 	bl	c0102a2 <__smakebuf_r>
 c00f5ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 c00f5ce:	f013 0201 	ands.w	r2, r3, #1
 c00f5d2:	d00a      	beq.n	c00f5ea <__swsetup_r+0x9a>
 c00f5d4:	2200      	movs	r2, #0
 c00f5d6:	60a2      	str	r2, [r4, #8]
 c00f5d8:	6962      	ldr	r2, [r4, #20]
 c00f5da:	4252      	negs	r2, r2
 c00f5dc:	61a2      	str	r2, [r4, #24]
 c00f5de:	6922      	ldr	r2, [r4, #16]
 c00f5e0:	b942      	cbnz	r2, c00f5f4 <__swsetup_r+0xa4>
 c00f5e2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 c00f5e6:	d1c5      	bne.n	c00f574 <__swsetup_r+0x24>
 c00f5e8:	bd38      	pop	{r3, r4, r5, pc}
 c00f5ea:	0799      	lsls	r1, r3, #30
 c00f5ec:	bf58      	it	pl
 c00f5ee:	6962      	ldrpl	r2, [r4, #20]
 c00f5f0:	60a2      	str	r2, [r4, #8]
 c00f5f2:	e7f4      	b.n	c00f5de <__swsetup_r+0x8e>
 c00f5f4:	2000      	movs	r0, #0
 c00f5f6:	e7f7      	b.n	c00f5e8 <__swsetup_r+0x98>
 c00f5f8:	3000013c 	.word	0x3000013c

0c00f5fc <memmove>:
 c00f5fc:	4288      	cmp	r0, r1
 c00f5fe:	b510      	push	{r4, lr}
 c00f600:	eb01 0402 	add.w	r4, r1, r2
 c00f604:	d902      	bls.n	c00f60c <memmove+0x10>
 c00f606:	4284      	cmp	r4, r0
 c00f608:	4623      	mov	r3, r4
 c00f60a:	d807      	bhi.n	c00f61c <memmove+0x20>
 c00f60c:	1e43      	subs	r3, r0, #1
 c00f60e:	42a1      	cmp	r1, r4
 c00f610:	d008      	beq.n	c00f624 <memmove+0x28>
 c00f612:	f811 2b01 	ldrb.w	r2, [r1], #1
 c00f616:	f803 2f01 	strb.w	r2, [r3, #1]!
 c00f61a:	e7f8      	b.n	c00f60e <memmove+0x12>
 c00f61c:	4402      	add	r2, r0
 c00f61e:	4601      	mov	r1, r0
 c00f620:	428a      	cmp	r2, r1
 c00f622:	d100      	bne.n	c00f626 <memmove+0x2a>
 c00f624:	bd10      	pop	{r4, pc}
 c00f626:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 c00f62a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 c00f62e:	e7f7      	b.n	c00f620 <memmove+0x24>

0c00f630 <memset>:
 c00f630:	4402      	add	r2, r0
 c00f632:	4603      	mov	r3, r0
 c00f634:	4293      	cmp	r3, r2
 c00f636:	d100      	bne.n	c00f63a <memset+0xa>
 c00f638:	4770      	bx	lr
 c00f63a:	f803 1b01 	strb.w	r1, [r3], #1
 c00f63e:	e7f9      	b.n	c00f634 <memset+0x4>

0c00f640 <_raise_r>:
 c00f640:	291f      	cmp	r1, #31
 c00f642:	b538      	push	{r3, r4, r5, lr}
 c00f644:	4605      	mov	r5, r0
 c00f646:	460c      	mov	r4, r1
 c00f648:	d904      	bls.n	c00f654 <_raise_r+0x14>
 c00f64a:	2316      	movs	r3, #22
 c00f64c:	6003      	str	r3, [r0, #0]
 c00f64e:	f04f 30ff 	mov.w	r0, #4294967295
 c00f652:	bd38      	pop	{r3, r4, r5, pc}
 c00f654:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 c00f656:	b112      	cbz	r2, c00f65e <_raise_r+0x1e>
 c00f658:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 c00f65c:	b94b      	cbnz	r3, c00f672 <_raise_r+0x32>
 c00f65e:	4628      	mov	r0, r5
 c00f660:	f000 f864 	bl	c00f72c <_getpid_r>
 c00f664:	4622      	mov	r2, r4
 c00f666:	4601      	mov	r1, r0
 c00f668:	4628      	mov	r0, r5
 c00f66a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 c00f66e:	f000 b84b 	b.w	c00f708 <_kill_r>
 c00f672:	2b01      	cmp	r3, #1
 c00f674:	d00a      	beq.n	c00f68c <_raise_r+0x4c>
 c00f676:	1c59      	adds	r1, r3, #1
 c00f678:	d103      	bne.n	c00f682 <_raise_r+0x42>
 c00f67a:	2316      	movs	r3, #22
 c00f67c:	6003      	str	r3, [r0, #0]
 c00f67e:	2001      	movs	r0, #1
 c00f680:	e7e7      	b.n	c00f652 <_raise_r+0x12>
 c00f682:	2100      	movs	r1, #0
 c00f684:	4620      	mov	r0, r4
 c00f686:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 c00f68a:	4798      	blx	r3
 c00f68c:	2000      	movs	r0, #0
 c00f68e:	e7e0      	b.n	c00f652 <_raise_r+0x12>

0c00f690 <raise>:
 c00f690:	4b02      	ldr	r3, [pc, #8]	@ (c00f69c <raise+0xc>)
 c00f692:	4601      	mov	r1, r0
 c00f694:	6818      	ldr	r0, [r3, #0]
 c00f696:	f7ff bfd3 	b.w	c00f640 <_raise_r>
 c00f69a:	bf00      	nop
 c00f69c:	3000013c 	.word	0x3000013c

0c00f6a0 <_close_r>:
 c00f6a0:	b538      	push	{r3, r4, r5, lr}
 c00f6a2:	2300      	movs	r3, #0
 c00f6a4:	4d05      	ldr	r5, [pc, #20]	@ (c00f6bc <_close_r+0x1c>)
 c00f6a6:	4604      	mov	r4, r0
 c00f6a8:	4608      	mov	r0, r1
 c00f6aa:	602b      	str	r3, [r5, #0]
 c00f6ac:	f7f2 fcec 	bl	c002088 <_close>
 c00f6b0:	1c43      	adds	r3, r0, #1
 c00f6b2:	d102      	bne.n	c00f6ba <_close_r+0x1a>
 c00f6b4:	682b      	ldr	r3, [r5, #0]
 c00f6b6:	b103      	cbz	r3, c00f6ba <_close_r+0x1a>
 c00f6b8:	6023      	str	r3, [r4, #0]
 c00f6ba:	bd38      	pop	{r3, r4, r5, pc}
 c00f6bc:	300004d8 	.word	0x300004d8

0c00f6c0 <_lseek_r>:
 c00f6c0:	b538      	push	{r3, r4, r5, lr}
 c00f6c2:	4604      	mov	r4, r0
 c00f6c4:	4d06      	ldr	r5, [pc, #24]	@ (c00f6e0 <_lseek_r+0x20>)
 c00f6c6:	4608      	mov	r0, r1
 c00f6c8:	4611      	mov	r1, r2
 c00f6ca:	2200      	movs	r2, #0
 c00f6cc:	602a      	str	r2, [r5, #0]
 c00f6ce:	461a      	mov	r2, r3
 c00f6d0:	f7f2 fce6 	bl	c0020a0 <_lseek>
 c00f6d4:	1c43      	adds	r3, r0, #1
 c00f6d6:	d102      	bne.n	c00f6de <_lseek_r+0x1e>
 c00f6d8:	682b      	ldr	r3, [r5, #0]
 c00f6da:	b103      	cbz	r3, c00f6de <_lseek_r+0x1e>
 c00f6dc:	6023      	str	r3, [r4, #0]
 c00f6de:	bd38      	pop	{r3, r4, r5, pc}
 c00f6e0:	300004d8 	.word	0x300004d8

0c00f6e4 <_read_r>:
 c00f6e4:	b538      	push	{r3, r4, r5, lr}
 c00f6e6:	4604      	mov	r4, r0
 c00f6e8:	4d06      	ldr	r5, [pc, #24]	@ (c00f704 <_read_r+0x20>)
 c00f6ea:	4608      	mov	r0, r1
 c00f6ec:	4611      	mov	r1, r2
 c00f6ee:	2200      	movs	r2, #0
 c00f6f0:	602a      	str	r2, [r5, #0]
 c00f6f2:	461a      	mov	r2, r3
 c00f6f4:	f7f2 fcac 	bl	c002050 <_read>
 c00f6f8:	1c43      	adds	r3, r0, #1
 c00f6fa:	d102      	bne.n	c00f702 <_read_r+0x1e>
 c00f6fc:	682b      	ldr	r3, [r5, #0]
 c00f6fe:	b103      	cbz	r3, c00f702 <_read_r+0x1e>
 c00f700:	6023      	str	r3, [r4, #0]
 c00f702:	bd38      	pop	{r3, r4, r5, pc}
 c00f704:	300004d8 	.word	0x300004d8

0c00f708 <_kill_r>:
 c00f708:	b538      	push	{r3, r4, r5, lr}
 c00f70a:	2300      	movs	r3, #0
 c00f70c:	4d06      	ldr	r5, [pc, #24]	@ (c00f728 <_kill_r+0x20>)
 c00f70e:	4604      	mov	r4, r0
 c00f710:	4608      	mov	r0, r1
 c00f712:	4611      	mov	r1, r2
 c00f714:	602b      	str	r3, [r5, #0]
 c00f716:	f7f2 fc8b 	bl	c002030 <_kill>
 c00f71a:	1c43      	adds	r3, r0, #1
 c00f71c:	d102      	bne.n	c00f724 <_kill_r+0x1c>
 c00f71e:	682b      	ldr	r3, [r5, #0]
 c00f720:	b103      	cbz	r3, c00f724 <_kill_r+0x1c>
 c00f722:	6023      	str	r3, [r4, #0]
 c00f724:	bd38      	pop	{r3, r4, r5, pc}
 c00f726:	bf00      	nop
 c00f728:	300004d8 	.word	0x300004d8

0c00f72c <_getpid_r>:
 c00f72c:	f7f2 bc7e 	b.w	c00202c <_getpid>

0c00f730 <_sbrk_r>:
 c00f730:	b538      	push	{r3, r4, r5, lr}
 c00f732:	2300      	movs	r3, #0
 c00f734:	4d05      	ldr	r5, [pc, #20]	@ (c00f74c <_sbrk_r+0x1c>)
 c00f736:	4604      	mov	r4, r0
 c00f738:	4608      	mov	r0, r1
 c00f73a:	602b      	str	r3, [r5, #0]
 c00f73c:	f7f2 fcb2 	bl	c0020a4 <_sbrk>
 c00f740:	1c43      	adds	r3, r0, #1
 c00f742:	d102      	bne.n	c00f74a <_sbrk_r+0x1a>
 c00f744:	682b      	ldr	r3, [r5, #0]
 c00f746:	b103      	cbz	r3, c00f74a <_sbrk_r+0x1a>
 c00f748:	6023      	str	r3, [r4, #0]
 c00f74a:	bd38      	pop	{r3, r4, r5, pc}
 c00f74c:	300004d8 	.word	0x300004d8

0c00f750 <_write_r>:
 c00f750:	b538      	push	{r3, r4, r5, lr}
 c00f752:	4604      	mov	r4, r0
 c00f754:	4d06      	ldr	r5, [pc, #24]	@ (c00f770 <_write_r+0x20>)
 c00f756:	4608      	mov	r0, r1
 c00f758:	4611      	mov	r1, r2
 c00f75a:	2200      	movs	r2, #0
 c00f75c:	602a      	str	r2, [r5, #0]
 c00f75e:	461a      	mov	r2, r3
 c00f760:	f7f2 fc84 	bl	c00206c <_write>
 c00f764:	1c43      	adds	r3, r0, #1
 c00f766:	d102      	bne.n	c00f76e <_write_r+0x1e>
 c00f768:	682b      	ldr	r3, [r5, #0]
 c00f76a:	b103      	cbz	r3, c00f76e <_write_r+0x1e>
 c00f76c:	6023      	str	r3, [r4, #0]
 c00f76e:	bd38      	pop	{r3, r4, r5, pc}
 c00f770:	300004d8 	.word	0x300004d8

0c00f774 <__errno>:
 c00f774:	4b01      	ldr	r3, [pc, #4]	@ (c00f77c <__errno+0x8>)
 c00f776:	6818      	ldr	r0, [r3, #0]
 c00f778:	4770      	bx	lr
 c00f77a:	bf00      	nop
 c00f77c:	3000013c 	.word	0x3000013c

0c00f780 <__libc_init_array>:
 c00f780:	b570      	push	{r4, r5, r6, lr}
 c00f782:	4d0d      	ldr	r5, [pc, #52]	@ (c00f7b8 <__libc_init_array+0x38>)
 c00f784:	2600      	movs	r6, #0
 c00f786:	4c0d      	ldr	r4, [pc, #52]	@ (c00f7bc <__libc_init_array+0x3c>)
 c00f788:	1b64      	subs	r4, r4, r5
 c00f78a:	10a4      	asrs	r4, r4, #2
 c00f78c:	42a6      	cmp	r6, r4
 c00f78e:	d109      	bne.n	c00f7a4 <__libc_init_array+0x24>
 c00f790:	4d0b      	ldr	r5, [pc, #44]	@ (c00f7c0 <__libc_init_array+0x40>)
 c00f792:	2600      	movs	r6, #0
 c00f794:	4c0b      	ldr	r4, [pc, #44]	@ (c00f7c4 <__libc_init_array+0x44>)
 c00f796:	f002 f89d 	bl	c0118d4 <_init>
 c00f79a:	1b64      	subs	r4, r4, r5
 c00f79c:	10a4      	asrs	r4, r4, #2
 c00f79e:	42a6      	cmp	r6, r4
 c00f7a0:	d105      	bne.n	c00f7ae <__libc_init_array+0x2e>
 c00f7a2:	bd70      	pop	{r4, r5, r6, pc}
 c00f7a4:	f855 3b04 	ldr.w	r3, [r5], #4
 c00f7a8:	3601      	adds	r6, #1
 c00f7aa:	4798      	blx	r3
 c00f7ac:	e7ee      	b.n	c00f78c <__libc_init_array+0xc>
 c00f7ae:	f855 3b04 	ldr.w	r3, [r5], #4
 c00f7b2:	3601      	adds	r6, #1
 c00f7b4:	4798      	blx	r3
 c00f7b6:	e7f2      	b.n	c00f79e <__libc_init_array+0x1e>
 c00f7b8:	0c0121ac 	.word	0x0c0121ac
 c00f7bc:	0c0121ac 	.word	0x0c0121ac
 c00f7c0:	0c0121ac 	.word	0x0c0121ac
 c00f7c4:	0c0121b0 	.word	0x0c0121b0

0c00f7c8 <__retarget_lock_init_recursive>:
 c00f7c8:	4770      	bx	lr

0c00f7ca <__retarget_lock_acquire_recursive>:
 c00f7ca:	4770      	bx	lr

0c00f7cc <__retarget_lock_release_recursive>:
 c00f7cc:	4770      	bx	lr

0c00f7ce <memcpy>:
 c00f7ce:	440a      	add	r2, r1
 c00f7d0:	1e43      	subs	r3, r0, #1
 c00f7d2:	4291      	cmp	r1, r2
 c00f7d4:	d100      	bne.n	c00f7d8 <memcpy+0xa>
 c00f7d6:	4770      	bx	lr
 c00f7d8:	b510      	push	{r4, lr}
 c00f7da:	f811 4b01 	ldrb.w	r4, [r1], #1
 c00f7de:	4291      	cmp	r1, r2
 c00f7e0:	f803 4f01 	strb.w	r4, [r3, #1]!
 c00f7e4:	d1f9      	bne.n	c00f7da <memcpy+0xc>
 c00f7e6:	bd10      	pop	{r4, pc}

0c00f7e8 <nan>:
 c00f7e8:	ed9f 0b01 	vldr	d0, [pc, #4]	@ c00f7f0 <nan+0x8>
 c00f7ec:	4770      	bx	lr
 c00f7ee:	bf00      	nop
 c00f7f0:	00000000 	.word	0x00000000
 c00f7f4:	7ff80000 	.word	0x7ff80000

0c00f7f8 <nanf>:
 c00f7f8:	ed9f 0a01 	vldr	s0, [pc, #4]	@ c00f800 <nanf+0x8>
 c00f7fc:	4770      	bx	lr
 c00f7fe:	bf00      	nop
 c00f800:	7fc00000 	.word	0x7fc00000

0c00f804 <_free_r>:
 c00f804:	b538      	push	{r3, r4, r5, lr}
 c00f806:	4605      	mov	r5, r0
 c00f808:	2900      	cmp	r1, #0
 c00f80a:	d041      	beq.n	c00f890 <_free_r+0x8c>
 c00f80c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 c00f810:	1f0c      	subs	r4, r1, #4
 c00f812:	2b00      	cmp	r3, #0
 c00f814:	bfb8      	it	lt
 c00f816:	18e4      	addlt	r4, r4, r3
 c00f818:	f7ff fce2 	bl	c00f1e0 <__malloc_lock>
 c00f81c:	4a1d      	ldr	r2, [pc, #116]	@ (c00f894 <_free_r+0x90>)
 c00f81e:	6813      	ldr	r3, [r2, #0]
 c00f820:	b933      	cbnz	r3, c00f830 <_free_r+0x2c>
 c00f822:	6063      	str	r3, [r4, #4]
 c00f824:	6014      	str	r4, [r2, #0]
 c00f826:	4628      	mov	r0, r5
 c00f828:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 c00f82c:	f7ff bcde 	b.w	c00f1ec <__malloc_unlock>
 c00f830:	42a3      	cmp	r3, r4
 c00f832:	d908      	bls.n	c00f846 <_free_r+0x42>
 c00f834:	6820      	ldr	r0, [r4, #0]
 c00f836:	1821      	adds	r1, r4, r0
 c00f838:	428b      	cmp	r3, r1
 c00f83a:	bf01      	itttt	eq
 c00f83c:	6819      	ldreq	r1, [r3, #0]
 c00f83e:	685b      	ldreq	r3, [r3, #4]
 c00f840:	1809      	addeq	r1, r1, r0
 c00f842:	6021      	streq	r1, [r4, #0]
 c00f844:	e7ed      	b.n	c00f822 <_free_r+0x1e>
 c00f846:	461a      	mov	r2, r3
 c00f848:	685b      	ldr	r3, [r3, #4]
 c00f84a:	b10b      	cbz	r3, c00f850 <_free_r+0x4c>
 c00f84c:	42a3      	cmp	r3, r4
 c00f84e:	d9fa      	bls.n	c00f846 <_free_r+0x42>
 c00f850:	6811      	ldr	r1, [r2, #0]
 c00f852:	1850      	adds	r0, r2, r1
 c00f854:	42a0      	cmp	r0, r4
 c00f856:	d10b      	bne.n	c00f870 <_free_r+0x6c>
 c00f858:	6820      	ldr	r0, [r4, #0]
 c00f85a:	4401      	add	r1, r0
 c00f85c:	1850      	adds	r0, r2, r1
 c00f85e:	6011      	str	r1, [r2, #0]
 c00f860:	4283      	cmp	r3, r0
 c00f862:	d1e0      	bne.n	c00f826 <_free_r+0x22>
 c00f864:	6818      	ldr	r0, [r3, #0]
 c00f866:	685b      	ldr	r3, [r3, #4]
 c00f868:	4408      	add	r0, r1
 c00f86a:	6053      	str	r3, [r2, #4]
 c00f86c:	6010      	str	r0, [r2, #0]
 c00f86e:	e7da      	b.n	c00f826 <_free_r+0x22>
 c00f870:	d902      	bls.n	c00f878 <_free_r+0x74>
 c00f872:	230c      	movs	r3, #12
 c00f874:	602b      	str	r3, [r5, #0]
 c00f876:	e7d6      	b.n	c00f826 <_free_r+0x22>
 c00f878:	6820      	ldr	r0, [r4, #0]
 c00f87a:	1821      	adds	r1, r4, r0
 c00f87c:	428b      	cmp	r3, r1
 c00f87e:	bf02      	ittt	eq
 c00f880:	6819      	ldreq	r1, [r3, #0]
 c00f882:	685b      	ldreq	r3, [r3, #4]
 c00f884:	1809      	addeq	r1, r1, r0
 c00f886:	6063      	str	r3, [r4, #4]
 c00f888:	bf08      	it	eq
 c00f88a:	6021      	streq	r1, [r4, #0]
 c00f88c:	6054      	str	r4, [r2, #4]
 c00f88e:	e7ca      	b.n	c00f826 <_free_r+0x22>
 c00f890:	bd38      	pop	{r3, r4, r5, pc}
 c00f892:	bf00      	nop
 c00f894:	30000398 	.word	0x30000398

0c00f898 <_malloc_usable_size_r>:
 c00f898:	f851 3c04 	ldr.w	r3, [r1, #-4]
 c00f89c:	1f18      	subs	r0, r3, #4
 c00f89e:	2b00      	cmp	r3, #0
 c00f8a0:	bfbc      	itt	lt
 c00f8a2:	580b      	ldrlt	r3, [r1, r0]
 c00f8a4:	18c0      	addlt	r0, r0, r3
 c00f8a6:	4770      	bx	lr

0c00f8a8 <__ssputs_r>:
 c00f8a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 c00f8ac:	461f      	mov	r7, r3
 c00f8ae:	688e      	ldr	r6, [r1, #8]
 c00f8b0:	4682      	mov	sl, r0
 c00f8b2:	460c      	mov	r4, r1
 c00f8b4:	42be      	cmp	r6, r7
 c00f8b6:	4690      	mov	r8, r2
 c00f8b8:	680b      	ldr	r3, [r1, #0]
 c00f8ba:	d82d      	bhi.n	c00f918 <__ssputs_r+0x70>
 c00f8bc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 c00f8c0:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 c00f8c4:	d026      	beq.n	c00f914 <__ssputs_r+0x6c>
 c00f8c6:	6965      	ldr	r5, [r4, #20]
 c00f8c8:	6909      	ldr	r1, [r1, #16]
 c00f8ca:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 c00f8ce:	eba3 0901 	sub.w	r9, r3, r1
 c00f8d2:	1c7b      	adds	r3, r7, #1
 c00f8d4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 c00f8d8:	444b      	add	r3, r9
 c00f8da:	106d      	asrs	r5, r5, #1
 c00f8dc:	429d      	cmp	r5, r3
 c00f8de:	bf38      	it	cc
 c00f8e0:	461d      	movcc	r5, r3
 c00f8e2:	0553      	lsls	r3, r2, #21
 c00f8e4:	d527      	bpl.n	c00f936 <__ssputs_r+0x8e>
 c00f8e6:	4629      	mov	r1, r5
 c00f8e8:	f7ff fbfa 	bl	c00f0e0 <_malloc_r>
 c00f8ec:	4606      	mov	r6, r0
 c00f8ee:	b360      	cbz	r0, c00f94a <__ssputs_r+0xa2>
 c00f8f0:	464a      	mov	r2, r9
 c00f8f2:	6921      	ldr	r1, [r4, #16]
 c00f8f4:	f7ff ff6b 	bl	c00f7ce <memcpy>
 c00f8f8:	89a3      	ldrh	r3, [r4, #12]
 c00f8fa:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 c00f8fe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 c00f902:	81a3      	strh	r3, [r4, #12]
 c00f904:	6126      	str	r6, [r4, #16]
 c00f906:	444e      	add	r6, r9
 c00f908:	6165      	str	r5, [r4, #20]
 c00f90a:	eba5 0509 	sub.w	r5, r5, r9
 c00f90e:	6026      	str	r6, [r4, #0]
 c00f910:	463e      	mov	r6, r7
 c00f912:	60a5      	str	r5, [r4, #8]
 c00f914:	42be      	cmp	r6, r7
 c00f916:	d900      	bls.n	c00f91a <__ssputs_r+0x72>
 c00f918:	463e      	mov	r6, r7
 c00f91a:	4632      	mov	r2, r6
 c00f91c:	4641      	mov	r1, r8
 c00f91e:	6820      	ldr	r0, [r4, #0]
 c00f920:	f7ff fe6c 	bl	c00f5fc <memmove>
 c00f924:	68a3      	ldr	r3, [r4, #8]
 c00f926:	2000      	movs	r0, #0
 c00f928:	1b9b      	subs	r3, r3, r6
 c00f92a:	60a3      	str	r3, [r4, #8]
 c00f92c:	6823      	ldr	r3, [r4, #0]
 c00f92e:	4433      	add	r3, r6
 c00f930:	6023      	str	r3, [r4, #0]
 c00f932:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c00f936:	462a      	mov	r2, r5
 c00f938:	f7ff fc66 	bl	c00f208 <_realloc_r>
 c00f93c:	4606      	mov	r6, r0
 c00f93e:	2800      	cmp	r0, #0
 c00f940:	d1e0      	bne.n	c00f904 <__ssputs_r+0x5c>
 c00f942:	6921      	ldr	r1, [r4, #16]
 c00f944:	4650      	mov	r0, sl
 c00f946:	f7ff ff5d 	bl	c00f804 <_free_r>
 c00f94a:	230c      	movs	r3, #12
 c00f94c:	f04f 30ff 	mov.w	r0, #4294967295
 c00f950:	f8ca 3000 	str.w	r3, [sl]
 c00f954:	89a3      	ldrh	r3, [r4, #12]
 c00f956:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 c00f95a:	81a3      	strh	r3, [r4, #12]
 c00f95c:	e7e9      	b.n	c00f932 <__ssputs_r+0x8a>
	...

0c00f960 <_svfiprintf_r>:
 c00f960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00f964:	4698      	mov	r8, r3
 c00f966:	898b      	ldrh	r3, [r1, #12]
 c00f968:	b09d      	sub	sp, #116	@ 0x74
 c00f96a:	4607      	mov	r7, r0
 c00f96c:	061b      	lsls	r3, r3, #24
 c00f96e:	460d      	mov	r5, r1
 c00f970:	4614      	mov	r4, r2
 c00f972:	d510      	bpl.n	c00f996 <_svfiprintf_r+0x36>
 c00f974:	690b      	ldr	r3, [r1, #16]
 c00f976:	b973      	cbnz	r3, c00f996 <_svfiprintf_r+0x36>
 c00f978:	2140      	movs	r1, #64	@ 0x40
 c00f97a:	f7ff fbb1 	bl	c00f0e0 <_malloc_r>
 c00f97e:	6028      	str	r0, [r5, #0]
 c00f980:	6128      	str	r0, [r5, #16]
 c00f982:	b930      	cbnz	r0, c00f992 <_svfiprintf_r+0x32>
 c00f984:	230c      	movs	r3, #12
 c00f986:	603b      	str	r3, [r7, #0]
 c00f988:	f04f 30ff 	mov.w	r0, #4294967295
 c00f98c:	b01d      	add	sp, #116	@ 0x74
 c00f98e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00f992:	2340      	movs	r3, #64	@ 0x40
 c00f994:	616b      	str	r3, [r5, #20]
 c00f996:	2300      	movs	r3, #0
 c00f998:	f8cd 800c 	str.w	r8, [sp, #12]
 c00f99c:	f04f 0901 	mov.w	r9, #1
 c00f9a0:	f8df 81a0 	ldr.w	r8, [pc, #416]	@ c00fb44 <_svfiprintf_r+0x1e4>
 c00f9a4:	9309      	str	r3, [sp, #36]	@ 0x24
 c00f9a6:	2320      	movs	r3, #32
 c00f9a8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 c00f9ac:	2330      	movs	r3, #48	@ 0x30
 c00f9ae:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 c00f9b2:	4623      	mov	r3, r4
 c00f9b4:	469a      	mov	sl, r3
 c00f9b6:	f813 2b01 	ldrb.w	r2, [r3], #1
 c00f9ba:	b10a      	cbz	r2, c00f9c0 <_svfiprintf_r+0x60>
 c00f9bc:	2a25      	cmp	r2, #37	@ 0x25
 c00f9be:	d1f9      	bne.n	c00f9b4 <_svfiprintf_r+0x54>
 c00f9c0:	ebba 0b04 	subs.w	fp, sl, r4
 c00f9c4:	d00b      	beq.n	c00f9de <_svfiprintf_r+0x7e>
 c00f9c6:	465b      	mov	r3, fp
 c00f9c8:	4622      	mov	r2, r4
 c00f9ca:	4629      	mov	r1, r5
 c00f9cc:	4638      	mov	r0, r7
 c00f9ce:	f7ff ff6b 	bl	c00f8a8 <__ssputs_r>
 c00f9d2:	3001      	adds	r0, #1
 c00f9d4:	f000 80a7 	beq.w	c00fb26 <_svfiprintf_r+0x1c6>
 c00f9d8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c00f9da:	445a      	add	r2, fp
 c00f9dc:	9209      	str	r2, [sp, #36]	@ 0x24
 c00f9de:	f89a 3000 	ldrb.w	r3, [sl]
 c00f9e2:	2b00      	cmp	r3, #0
 c00f9e4:	f000 809f 	beq.w	c00fb26 <_svfiprintf_r+0x1c6>
 c00f9e8:	2300      	movs	r3, #0
 c00f9ea:	f04f 32ff 	mov.w	r2, #4294967295
 c00f9ee:	f10a 0a01 	add.w	sl, sl, #1
 c00f9f2:	9304      	str	r3, [sp, #16]
 c00f9f4:	9307      	str	r3, [sp, #28]
 c00f9f6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 c00f9fa:	931a      	str	r3, [sp, #104]	@ 0x68
 c00f9fc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 c00fa00:	4654      	mov	r4, sl
 c00fa02:	2205      	movs	r2, #5
 c00fa04:	484f      	ldr	r0, [pc, #316]	@ (c00fb44 <_svfiprintf_r+0x1e4>)
 c00fa06:	f814 1b01 	ldrb.w	r1, [r4], #1
 c00fa0a:	f000 fca9 	bl	c010360 <memchr>
 c00fa0e:	9a04      	ldr	r2, [sp, #16]
 c00fa10:	b9d8      	cbnz	r0, c00fa4a <_svfiprintf_r+0xea>
 c00fa12:	06d0      	lsls	r0, r2, #27
 c00fa14:	bf44      	itt	mi
 c00fa16:	2320      	movmi	r3, #32
 c00fa18:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 c00fa1c:	0711      	lsls	r1, r2, #28
 c00fa1e:	bf44      	itt	mi
 c00fa20:	232b      	movmi	r3, #43	@ 0x2b
 c00fa22:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 c00fa26:	f89a 3000 	ldrb.w	r3, [sl]
 c00fa2a:	2b2a      	cmp	r3, #42	@ 0x2a
 c00fa2c:	d015      	beq.n	c00fa5a <_svfiprintf_r+0xfa>
 c00fa2e:	9a07      	ldr	r2, [sp, #28]
 c00fa30:	4654      	mov	r4, sl
 c00fa32:	2000      	movs	r0, #0
 c00fa34:	f04f 0c0a 	mov.w	ip, #10
 c00fa38:	4621      	mov	r1, r4
 c00fa3a:	f811 3b01 	ldrb.w	r3, [r1], #1
 c00fa3e:	3b30      	subs	r3, #48	@ 0x30
 c00fa40:	2b09      	cmp	r3, #9
 c00fa42:	d94b      	bls.n	c00fadc <_svfiprintf_r+0x17c>
 c00fa44:	b1b0      	cbz	r0, c00fa74 <_svfiprintf_r+0x114>
 c00fa46:	9207      	str	r2, [sp, #28]
 c00fa48:	e014      	b.n	c00fa74 <_svfiprintf_r+0x114>
 c00fa4a:	eba0 0308 	sub.w	r3, r0, r8
 c00fa4e:	46a2      	mov	sl, r4
 c00fa50:	fa09 f303 	lsl.w	r3, r9, r3
 c00fa54:	4313      	orrs	r3, r2
 c00fa56:	9304      	str	r3, [sp, #16]
 c00fa58:	e7d2      	b.n	c00fa00 <_svfiprintf_r+0xa0>
 c00fa5a:	9b03      	ldr	r3, [sp, #12]
 c00fa5c:	1d19      	adds	r1, r3, #4
 c00fa5e:	681b      	ldr	r3, [r3, #0]
 c00fa60:	2b00      	cmp	r3, #0
 c00fa62:	9103      	str	r1, [sp, #12]
 c00fa64:	bfbb      	ittet	lt
 c00fa66:	425b      	neglt	r3, r3
 c00fa68:	f042 0202 	orrlt.w	r2, r2, #2
 c00fa6c:	9307      	strge	r3, [sp, #28]
 c00fa6e:	9307      	strlt	r3, [sp, #28]
 c00fa70:	bfb8      	it	lt
 c00fa72:	9204      	strlt	r2, [sp, #16]
 c00fa74:	7823      	ldrb	r3, [r4, #0]
 c00fa76:	2b2e      	cmp	r3, #46	@ 0x2e
 c00fa78:	d10a      	bne.n	c00fa90 <_svfiprintf_r+0x130>
 c00fa7a:	7863      	ldrb	r3, [r4, #1]
 c00fa7c:	2b2a      	cmp	r3, #42	@ 0x2a
 c00fa7e:	d132      	bne.n	c00fae6 <_svfiprintf_r+0x186>
 c00fa80:	9b03      	ldr	r3, [sp, #12]
 c00fa82:	3402      	adds	r4, #2
 c00fa84:	1d1a      	adds	r2, r3, #4
 c00fa86:	681b      	ldr	r3, [r3, #0]
 c00fa88:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 c00fa8c:	9203      	str	r2, [sp, #12]
 c00fa8e:	9305      	str	r3, [sp, #20]
 c00fa90:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ c00fb54 <_svfiprintf_r+0x1f4>
 c00fa94:	2203      	movs	r2, #3
 c00fa96:	7821      	ldrb	r1, [r4, #0]
 c00fa98:	4650      	mov	r0, sl
 c00fa9a:	f000 fc61 	bl	c010360 <memchr>
 c00fa9e:	b138      	cbz	r0, c00fab0 <_svfiprintf_r+0x150>
 c00faa0:	eba0 000a 	sub.w	r0, r0, sl
 c00faa4:	2240      	movs	r2, #64	@ 0x40
 c00faa6:	9b04      	ldr	r3, [sp, #16]
 c00faa8:	3401      	adds	r4, #1
 c00faaa:	4082      	lsls	r2, r0
 c00faac:	4313      	orrs	r3, r2
 c00faae:	9304      	str	r3, [sp, #16]
 c00fab0:	f814 1b01 	ldrb.w	r1, [r4], #1
 c00fab4:	2206      	movs	r2, #6
 c00fab6:	4824      	ldr	r0, [pc, #144]	@ (c00fb48 <_svfiprintf_r+0x1e8>)
 c00fab8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 c00fabc:	f000 fc50 	bl	c010360 <memchr>
 c00fac0:	2800      	cmp	r0, #0
 c00fac2:	d036      	beq.n	c00fb32 <_svfiprintf_r+0x1d2>
 c00fac4:	4b21      	ldr	r3, [pc, #132]	@ (c00fb4c <_svfiprintf_r+0x1ec>)
 c00fac6:	bb1b      	cbnz	r3, c00fb10 <_svfiprintf_r+0x1b0>
 c00fac8:	9b03      	ldr	r3, [sp, #12]
 c00faca:	3307      	adds	r3, #7
 c00facc:	f023 0307 	bic.w	r3, r3, #7
 c00fad0:	3308      	adds	r3, #8
 c00fad2:	9303      	str	r3, [sp, #12]
 c00fad4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c00fad6:	4433      	add	r3, r6
 c00fad8:	9309      	str	r3, [sp, #36]	@ 0x24
 c00fada:	e76a      	b.n	c00f9b2 <_svfiprintf_r+0x52>
 c00fadc:	fb0c 3202 	mla	r2, ip, r2, r3
 c00fae0:	460c      	mov	r4, r1
 c00fae2:	2001      	movs	r0, #1
 c00fae4:	e7a8      	b.n	c00fa38 <_svfiprintf_r+0xd8>
 c00fae6:	2300      	movs	r3, #0
 c00fae8:	3401      	adds	r4, #1
 c00faea:	f04f 0c0a 	mov.w	ip, #10
 c00faee:	4619      	mov	r1, r3
 c00faf0:	9305      	str	r3, [sp, #20]
 c00faf2:	4620      	mov	r0, r4
 c00faf4:	f810 2b01 	ldrb.w	r2, [r0], #1
 c00faf8:	3a30      	subs	r2, #48	@ 0x30
 c00fafa:	2a09      	cmp	r2, #9
 c00fafc:	d903      	bls.n	c00fb06 <_svfiprintf_r+0x1a6>
 c00fafe:	2b00      	cmp	r3, #0
 c00fb00:	d0c6      	beq.n	c00fa90 <_svfiprintf_r+0x130>
 c00fb02:	9105      	str	r1, [sp, #20]
 c00fb04:	e7c4      	b.n	c00fa90 <_svfiprintf_r+0x130>
 c00fb06:	fb0c 2101 	mla	r1, ip, r1, r2
 c00fb0a:	4604      	mov	r4, r0
 c00fb0c:	2301      	movs	r3, #1
 c00fb0e:	e7f0      	b.n	c00faf2 <_svfiprintf_r+0x192>
 c00fb10:	ab03      	add	r3, sp, #12
 c00fb12:	462a      	mov	r2, r5
 c00fb14:	a904      	add	r1, sp, #16
 c00fb16:	4638      	mov	r0, r7
 c00fb18:	9300      	str	r3, [sp, #0]
 c00fb1a:	4b0d      	ldr	r3, [pc, #52]	@ (c00fb50 <_svfiprintf_r+0x1f0>)
 c00fb1c:	f3af 8000 	nop.w
 c00fb20:	1c42      	adds	r2, r0, #1
 c00fb22:	4606      	mov	r6, r0
 c00fb24:	d1d6      	bne.n	c00fad4 <_svfiprintf_r+0x174>
 c00fb26:	89ab      	ldrh	r3, [r5, #12]
 c00fb28:	065b      	lsls	r3, r3, #25
 c00fb2a:	f53f af2d 	bmi.w	c00f988 <_svfiprintf_r+0x28>
 c00fb2e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 c00fb30:	e72c      	b.n	c00f98c <_svfiprintf_r+0x2c>
 c00fb32:	ab03      	add	r3, sp, #12
 c00fb34:	462a      	mov	r2, r5
 c00fb36:	a904      	add	r1, sp, #16
 c00fb38:	4638      	mov	r0, r7
 c00fb3a:	9300      	str	r3, [sp, #0]
 c00fb3c:	4b04      	ldr	r3, [pc, #16]	@ (c00fb50 <_svfiprintf_r+0x1f0>)
 c00fb3e:	f000 f9bf 	bl	c00fec0 <_printf_i>
 c00fb42:	e7ed      	b.n	c00fb20 <_svfiprintf_r+0x1c0>
 c00fb44:	0c011d88 	.word	0x0c011d88
 c00fb48:	0c011d92 	.word	0x0c011d92
 c00fb4c:	00000000 	.word	0x00000000
 c00fb50:	0c00f8a9 	.word	0x0c00f8a9
 c00fb54:	0c011d8e 	.word	0x0c011d8e

0c00fb58 <__sfputc_r>:
 c00fb58:	6893      	ldr	r3, [r2, #8]
 c00fb5a:	3b01      	subs	r3, #1
 c00fb5c:	2b00      	cmp	r3, #0
 c00fb5e:	6093      	str	r3, [r2, #8]
 c00fb60:	b410      	push	{r4}
 c00fb62:	da08      	bge.n	c00fb76 <__sfputc_r+0x1e>
 c00fb64:	6994      	ldr	r4, [r2, #24]
 c00fb66:	42a3      	cmp	r3, r4
 c00fb68:	db01      	blt.n	c00fb6e <__sfputc_r+0x16>
 c00fb6a:	290a      	cmp	r1, #10
 c00fb6c:	d103      	bne.n	c00fb76 <__sfputc_r+0x1e>
 c00fb6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 c00fb72:	f7ff bcae 	b.w	c00f4d2 <__swbuf_r>
 c00fb76:	6813      	ldr	r3, [r2, #0]
 c00fb78:	1c58      	adds	r0, r3, #1
 c00fb7a:	6010      	str	r0, [r2, #0]
 c00fb7c:	4608      	mov	r0, r1
 c00fb7e:	7019      	strb	r1, [r3, #0]
 c00fb80:	f85d 4b04 	ldr.w	r4, [sp], #4
 c00fb84:	4770      	bx	lr

0c00fb86 <__sfputs_r>:
 c00fb86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c00fb88:	4606      	mov	r6, r0
 c00fb8a:	460f      	mov	r7, r1
 c00fb8c:	4614      	mov	r4, r2
 c00fb8e:	18d5      	adds	r5, r2, r3
 c00fb90:	42ac      	cmp	r4, r5
 c00fb92:	d101      	bne.n	c00fb98 <__sfputs_r+0x12>
 c00fb94:	2000      	movs	r0, #0
 c00fb96:	e007      	b.n	c00fba8 <__sfputs_r+0x22>
 c00fb98:	463a      	mov	r2, r7
 c00fb9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 c00fb9e:	4630      	mov	r0, r6
 c00fba0:	f7ff ffda 	bl	c00fb58 <__sfputc_r>
 c00fba4:	1c43      	adds	r3, r0, #1
 c00fba6:	d1f3      	bne.n	c00fb90 <__sfputs_r+0xa>
 c00fba8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0c00fbac <_vfiprintf_r>:
 c00fbac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c00fbb0:	460d      	mov	r5, r1
 c00fbb2:	b09d      	sub	sp, #116	@ 0x74
 c00fbb4:	4614      	mov	r4, r2
 c00fbb6:	4698      	mov	r8, r3
 c00fbb8:	4606      	mov	r6, r0
 c00fbba:	b118      	cbz	r0, c00fbc4 <_vfiprintf_r+0x18>
 c00fbbc:	6a03      	ldr	r3, [r0, #32]
 c00fbbe:	b90b      	cbnz	r3, c00fbc4 <_vfiprintf_r+0x18>
 c00fbc0:	f7ff fbdc 	bl	c00f37c <__sinit>
 c00fbc4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 c00fbc6:	07d9      	lsls	r1, r3, #31
 c00fbc8:	d405      	bmi.n	c00fbd6 <_vfiprintf_r+0x2a>
 c00fbca:	89ab      	ldrh	r3, [r5, #12]
 c00fbcc:	059a      	lsls	r2, r3, #22
 c00fbce:	d402      	bmi.n	c00fbd6 <_vfiprintf_r+0x2a>
 c00fbd0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 c00fbd2:	f7ff fdfa 	bl	c00f7ca <__retarget_lock_acquire_recursive>
 c00fbd6:	89ab      	ldrh	r3, [r5, #12]
 c00fbd8:	071b      	lsls	r3, r3, #28
 c00fbda:	d501      	bpl.n	c00fbe0 <_vfiprintf_r+0x34>
 c00fbdc:	692b      	ldr	r3, [r5, #16]
 c00fbde:	b99b      	cbnz	r3, c00fc08 <_vfiprintf_r+0x5c>
 c00fbe0:	4629      	mov	r1, r5
 c00fbe2:	4630      	mov	r0, r6
 c00fbe4:	f7ff fcb4 	bl	c00f550 <__swsetup_r>
 c00fbe8:	b170      	cbz	r0, c00fc08 <_vfiprintf_r+0x5c>
 c00fbea:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 c00fbec:	07dc      	lsls	r4, r3, #31
 c00fbee:	d504      	bpl.n	c00fbfa <_vfiprintf_r+0x4e>
 c00fbf0:	f04f 30ff 	mov.w	r0, #4294967295
 c00fbf4:	b01d      	add	sp, #116	@ 0x74
 c00fbf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c00fbfa:	89ab      	ldrh	r3, [r5, #12]
 c00fbfc:	0598      	lsls	r0, r3, #22
 c00fbfe:	d4f7      	bmi.n	c00fbf0 <_vfiprintf_r+0x44>
 c00fc00:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 c00fc02:	f7ff fde3 	bl	c00f7cc <__retarget_lock_release_recursive>
 c00fc06:	e7f3      	b.n	c00fbf0 <_vfiprintf_r+0x44>
 c00fc08:	2300      	movs	r3, #0
 c00fc0a:	f8cd 800c 	str.w	r8, [sp, #12]
 c00fc0e:	f04f 0901 	mov.w	r9, #1
 c00fc12:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ c00fdc8 <_vfiprintf_r+0x21c>
 c00fc16:	9309      	str	r3, [sp, #36]	@ 0x24
 c00fc18:	2320      	movs	r3, #32
 c00fc1a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 c00fc1e:	2330      	movs	r3, #48	@ 0x30
 c00fc20:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 c00fc24:	4623      	mov	r3, r4
 c00fc26:	469a      	mov	sl, r3
 c00fc28:	f813 2b01 	ldrb.w	r2, [r3], #1
 c00fc2c:	b10a      	cbz	r2, c00fc32 <_vfiprintf_r+0x86>
 c00fc2e:	2a25      	cmp	r2, #37	@ 0x25
 c00fc30:	d1f9      	bne.n	c00fc26 <_vfiprintf_r+0x7a>
 c00fc32:	ebba 0b04 	subs.w	fp, sl, r4
 c00fc36:	d00b      	beq.n	c00fc50 <_vfiprintf_r+0xa4>
 c00fc38:	465b      	mov	r3, fp
 c00fc3a:	4622      	mov	r2, r4
 c00fc3c:	4629      	mov	r1, r5
 c00fc3e:	4630      	mov	r0, r6
 c00fc40:	f7ff ffa1 	bl	c00fb86 <__sfputs_r>
 c00fc44:	3001      	adds	r0, #1
 c00fc46:	f000 80a7 	beq.w	c00fd98 <_vfiprintf_r+0x1ec>
 c00fc4a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 c00fc4c:	445a      	add	r2, fp
 c00fc4e:	9209      	str	r2, [sp, #36]	@ 0x24
 c00fc50:	f89a 3000 	ldrb.w	r3, [sl]
 c00fc54:	2b00      	cmp	r3, #0
 c00fc56:	f000 809f 	beq.w	c00fd98 <_vfiprintf_r+0x1ec>
 c00fc5a:	2300      	movs	r3, #0
 c00fc5c:	f04f 32ff 	mov.w	r2, #4294967295
 c00fc60:	f10a 0a01 	add.w	sl, sl, #1
 c00fc64:	9304      	str	r3, [sp, #16]
 c00fc66:	9307      	str	r3, [sp, #28]
 c00fc68:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 c00fc6c:	931a      	str	r3, [sp, #104]	@ 0x68
 c00fc6e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 c00fc72:	4654      	mov	r4, sl
 c00fc74:	2205      	movs	r2, #5
 c00fc76:	4854      	ldr	r0, [pc, #336]	@ (c00fdc8 <_vfiprintf_r+0x21c>)
 c00fc78:	f814 1b01 	ldrb.w	r1, [r4], #1
 c00fc7c:	f000 fb70 	bl	c010360 <memchr>
 c00fc80:	9a04      	ldr	r2, [sp, #16]
 c00fc82:	b9d8      	cbnz	r0, c00fcbc <_vfiprintf_r+0x110>
 c00fc84:	06d1      	lsls	r1, r2, #27
 c00fc86:	bf44      	itt	mi
 c00fc88:	2320      	movmi	r3, #32
 c00fc8a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 c00fc8e:	0713      	lsls	r3, r2, #28
 c00fc90:	bf44      	itt	mi
 c00fc92:	232b      	movmi	r3, #43	@ 0x2b
 c00fc94:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 c00fc98:	f89a 3000 	ldrb.w	r3, [sl]
 c00fc9c:	2b2a      	cmp	r3, #42	@ 0x2a
 c00fc9e:	d015      	beq.n	c00fccc <_vfiprintf_r+0x120>
 c00fca0:	9a07      	ldr	r2, [sp, #28]
 c00fca2:	4654      	mov	r4, sl
 c00fca4:	2000      	movs	r0, #0
 c00fca6:	f04f 0c0a 	mov.w	ip, #10
 c00fcaa:	4621      	mov	r1, r4
 c00fcac:	f811 3b01 	ldrb.w	r3, [r1], #1
 c00fcb0:	3b30      	subs	r3, #48	@ 0x30
 c00fcb2:	2b09      	cmp	r3, #9
 c00fcb4:	d94b      	bls.n	c00fd4e <_vfiprintf_r+0x1a2>
 c00fcb6:	b1b0      	cbz	r0, c00fce6 <_vfiprintf_r+0x13a>
 c00fcb8:	9207      	str	r2, [sp, #28]
 c00fcba:	e014      	b.n	c00fce6 <_vfiprintf_r+0x13a>
 c00fcbc:	eba0 0308 	sub.w	r3, r0, r8
 c00fcc0:	46a2      	mov	sl, r4
 c00fcc2:	fa09 f303 	lsl.w	r3, r9, r3
 c00fcc6:	4313      	orrs	r3, r2
 c00fcc8:	9304      	str	r3, [sp, #16]
 c00fcca:	e7d2      	b.n	c00fc72 <_vfiprintf_r+0xc6>
 c00fccc:	9b03      	ldr	r3, [sp, #12]
 c00fcce:	1d19      	adds	r1, r3, #4
 c00fcd0:	681b      	ldr	r3, [r3, #0]
 c00fcd2:	2b00      	cmp	r3, #0
 c00fcd4:	9103      	str	r1, [sp, #12]
 c00fcd6:	bfbb      	ittet	lt
 c00fcd8:	425b      	neglt	r3, r3
 c00fcda:	f042 0202 	orrlt.w	r2, r2, #2
 c00fcde:	9307      	strge	r3, [sp, #28]
 c00fce0:	9307      	strlt	r3, [sp, #28]
 c00fce2:	bfb8      	it	lt
 c00fce4:	9204      	strlt	r2, [sp, #16]
 c00fce6:	7823      	ldrb	r3, [r4, #0]
 c00fce8:	2b2e      	cmp	r3, #46	@ 0x2e
 c00fcea:	d10a      	bne.n	c00fd02 <_vfiprintf_r+0x156>
 c00fcec:	7863      	ldrb	r3, [r4, #1]
 c00fcee:	2b2a      	cmp	r3, #42	@ 0x2a
 c00fcf0:	d132      	bne.n	c00fd58 <_vfiprintf_r+0x1ac>
 c00fcf2:	9b03      	ldr	r3, [sp, #12]
 c00fcf4:	3402      	adds	r4, #2
 c00fcf6:	1d1a      	adds	r2, r3, #4
 c00fcf8:	681b      	ldr	r3, [r3, #0]
 c00fcfa:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 c00fcfe:	9203      	str	r2, [sp, #12]
 c00fd00:	9305      	str	r3, [sp, #20]
 c00fd02:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ c00fdd8 <_vfiprintf_r+0x22c>
 c00fd06:	2203      	movs	r2, #3
 c00fd08:	7821      	ldrb	r1, [r4, #0]
 c00fd0a:	4650      	mov	r0, sl
 c00fd0c:	f000 fb28 	bl	c010360 <memchr>
 c00fd10:	b138      	cbz	r0, c00fd22 <_vfiprintf_r+0x176>
 c00fd12:	eba0 000a 	sub.w	r0, r0, sl
 c00fd16:	2240      	movs	r2, #64	@ 0x40
 c00fd18:	9b04      	ldr	r3, [sp, #16]
 c00fd1a:	3401      	adds	r4, #1
 c00fd1c:	4082      	lsls	r2, r0
 c00fd1e:	4313      	orrs	r3, r2
 c00fd20:	9304      	str	r3, [sp, #16]
 c00fd22:	f814 1b01 	ldrb.w	r1, [r4], #1
 c00fd26:	2206      	movs	r2, #6
 c00fd28:	4828      	ldr	r0, [pc, #160]	@ (c00fdcc <_vfiprintf_r+0x220>)
 c00fd2a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 c00fd2e:	f000 fb17 	bl	c010360 <memchr>
 c00fd32:	2800      	cmp	r0, #0
 c00fd34:	d03f      	beq.n	c00fdb6 <_vfiprintf_r+0x20a>
 c00fd36:	4b26      	ldr	r3, [pc, #152]	@ (c00fdd0 <_vfiprintf_r+0x224>)
 c00fd38:	bb1b      	cbnz	r3, c00fd82 <_vfiprintf_r+0x1d6>
 c00fd3a:	9b03      	ldr	r3, [sp, #12]
 c00fd3c:	3307      	adds	r3, #7
 c00fd3e:	f023 0307 	bic.w	r3, r3, #7
 c00fd42:	3308      	adds	r3, #8
 c00fd44:	9303      	str	r3, [sp, #12]
 c00fd46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 c00fd48:	443b      	add	r3, r7
 c00fd4a:	9309      	str	r3, [sp, #36]	@ 0x24
 c00fd4c:	e76a      	b.n	c00fc24 <_vfiprintf_r+0x78>
 c00fd4e:	fb0c 3202 	mla	r2, ip, r2, r3
 c00fd52:	460c      	mov	r4, r1
 c00fd54:	2001      	movs	r0, #1
 c00fd56:	e7a8      	b.n	c00fcaa <_vfiprintf_r+0xfe>
 c00fd58:	2300      	movs	r3, #0
 c00fd5a:	3401      	adds	r4, #1
 c00fd5c:	f04f 0c0a 	mov.w	ip, #10
 c00fd60:	4619      	mov	r1, r3
 c00fd62:	9305      	str	r3, [sp, #20]
 c00fd64:	4620      	mov	r0, r4
 c00fd66:	f810 2b01 	ldrb.w	r2, [r0], #1
 c00fd6a:	3a30      	subs	r2, #48	@ 0x30
 c00fd6c:	2a09      	cmp	r2, #9
 c00fd6e:	d903      	bls.n	c00fd78 <_vfiprintf_r+0x1cc>
 c00fd70:	2b00      	cmp	r3, #0
 c00fd72:	d0c6      	beq.n	c00fd02 <_vfiprintf_r+0x156>
 c00fd74:	9105      	str	r1, [sp, #20]
 c00fd76:	e7c4      	b.n	c00fd02 <_vfiprintf_r+0x156>
 c00fd78:	fb0c 2101 	mla	r1, ip, r1, r2
 c00fd7c:	4604      	mov	r4, r0
 c00fd7e:	2301      	movs	r3, #1
 c00fd80:	e7f0      	b.n	c00fd64 <_vfiprintf_r+0x1b8>
 c00fd82:	ab03      	add	r3, sp, #12
 c00fd84:	462a      	mov	r2, r5
 c00fd86:	a904      	add	r1, sp, #16
 c00fd88:	4630      	mov	r0, r6
 c00fd8a:	9300      	str	r3, [sp, #0]
 c00fd8c:	4b11      	ldr	r3, [pc, #68]	@ (c00fdd4 <_vfiprintf_r+0x228>)
 c00fd8e:	f3af 8000 	nop.w
 c00fd92:	4607      	mov	r7, r0
 c00fd94:	1c78      	adds	r0, r7, #1
 c00fd96:	d1d6      	bne.n	c00fd46 <_vfiprintf_r+0x19a>
 c00fd98:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 c00fd9a:	07d9      	lsls	r1, r3, #31
 c00fd9c:	d405      	bmi.n	c00fdaa <_vfiprintf_r+0x1fe>
 c00fd9e:	89ab      	ldrh	r3, [r5, #12]
 c00fda0:	059a      	lsls	r2, r3, #22
 c00fda2:	d402      	bmi.n	c00fdaa <_vfiprintf_r+0x1fe>
 c00fda4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 c00fda6:	f7ff fd11 	bl	c00f7cc <__retarget_lock_release_recursive>
 c00fdaa:	89ab      	ldrh	r3, [r5, #12]
 c00fdac:	065b      	lsls	r3, r3, #25
 c00fdae:	f53f af1f 	bmi.w	c00fbf0 <_vfiprintf_r+0x44>
 c00fdb2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 c00fdb4:	e71e      	b.n	c00fbf4 <_vfiprintf_r+0x48>
 c00fdb6:	ab03      	add	r3, sp, #12
 c00fdb8:	462a      	mov	r2, r5
 c00fdba:	a904      	add	r1, sp, #16
 c00fdbc:	4630      	mov	r0, r6
 c00fdbe:	9300      	str	r3, [sp, #0]
 c00fdc0:	4b04      	ldr	r3, [pc, #16]	@ (c00fdd4 <_vfiprintf_r+0x228>)
 c00fdc2:	f000 f87d 	bl	c00fec0 <_printf_i>
 c00fdc6:	e7e4      	b.n	c00fd92 <_vfiprintf_r+0x1e6>
 c00fdc8:	0c011d88 	.word	0x0c011d88
 c00fdcc:	0c011d92 	.word	0x0c011d92
 c00fdd0:	00000000 	.word	0x00000000
 c00fdd4:	0c00fb87 	.word	0x0c00fb87
 c00fdd8:	0c011d8e 	.word	0x0c011d8e

0c00fddc <_printf_common>:
 c00fddc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 c00fde0:	4616      	mov	r6, r2
 c00fde2:	4698      	mov	r8, r3
 c00fde4:	688a      	ldr	r2, [r1, #8]
 c00fde6:	4607      	mov	r7, r0
 c00fde8:	690b      	ldr	r3, [r1, #16]
 c00fdea:	460c      	mov	r4, r1
 c00fdec:	f8dd 9020 	ldr.w	r9, [sp, #32]
 c00fdf0:	4293      	cmp	r3, r2
 c00fdf2:	bfb8      	it	lt
 c00fdf4:	4613      	movlt	r3, r2
 c00fdf6:	6033      	str	r3, [r6, #0]
 c00fdf8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 c00fdfc:	b10a      	cbz	r2, c00fe02 <_printf_common+0x26>
 c00fdfe:	3301      	adds	r3, #1
 c00fe00:	6033      	str	r3, [r6, #0]
 c00fe02:	6823      	ldr	r3, [r4, #0]
 c00fe04:	0699      	lsls	r1, r3, #26
 c00fe06:	bf42      	ittt	mi
 c00fe08:	6833      	ldrmi	r3, [r6, #0]
 c00fe0a:	3302      	addmi	r3, #2
 c00fe0c:	6033      	strmi	r3, [r6, #0]
 c00fe0e:	6825      	ldr	r5, [r4, #0]
 c00fe10:	f015 0506 	ands.w	r5, r5, #6
 c00fe14:	d106      	bne.n	c00fe24 <_printf_common+0x48>
 c00fe16:	f104 0a19 	add.w	sl, r4, #25
 c00fe1a:	68e3      	ldr	r3, [r4, #12]
 c00fe1c:	6832      	ldr	r2, [r6, #0]
 c00fe1e:	1a9b      	subs	r3, r3, r2
 c00fe20:	42ab      	cmp	r3, r5
 c00fe22:	dc2b      	bgt.n	c00fe7c <_printf_common+0xa0>
 c00fe24:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 c00fe28:	6822      	ldr	r2, [r4, #0]
 c00fe2a:	3b00      	subs	r3, #0
 c00fe2c:	bf18      	it	ne
 c00fe2e:	2301      	movne	r3, #1
 c00fe30:	0692      	lsls	r2, r2, #26
 c00fe32:	d430      	bmi.n	c00fe96 <_printf_common+0xba>
 c00fe34:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 c00fe38:	4641      	mov	r1, r8
 c00fe3a:	4638      	mov	r0, r7
 c00fe3c:	47c8      	blx	r9
 c00fe3e:	3001      	adds	r0, #1
 c00fe40:	d023      	beq.n	c00fe8a <_printf_common+0xae>
 c00fe42:	6823      	ldr	r3, [r4, #0]
 c00fe44:	341a      	adds	r4, #26
 c00fe46:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 c00fe4a:	f003 0306 	and.w	r3, r3, #6
 c00fe4e:	2b04      	cmp	r3, #4
 c00fe50:	bf0a      	itet	eq
 c00fe52:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 c00fe56:	2500      	movne	r5, #0
 c00fe58:	6833      	ldreq	r3, [r6, #0]
 c00fe5a:	f04f 0600 	mov.w	r6, #0
 c00fe5e:	bf08      	it	eq
 c00fe60:	1aed      	subeq	r5, r5, r3
 c00fe62:	f854 3c12 	ldr.w	r3, [r4, #-18]
 c00fe66:	bf08      	it	eq
 c00fe68:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 c00fe6c:	4293      	cmp	r3, r2
 c00fe6e:	bfc4      	itt	gt
 c00fe70:	1a9b      	subgt	r3, r3, r2
 c00fe72:	18ed      	addgt	r5, r5, r3
 c00fe74:	42b5      	cmp	r5, r6
 c00fe76:	d11a      	bne.n	c00feae <_printf_common+0xd2>
 c00fe78:	2000      	movs	r0, #0
 c00fe7a:	e008      	b.n	c00fe8e <_printf_common+0xb2>
 c00fe7c:	2301      	movs	r3, #1
 c00fe7e:	4652      	mov	r2, sl
 c00fe80:	4641      	mov	r1, r8
 c00fe82:	4638      	mov	r0, r7
 c00fe84:	47c8      	blx	r9
 c00fe86:	3001      	adds	r0, #1
 c00fe88:	d103      	bne.n	c00fe92 <_printf_common+0xb6>
 c00fe8a:	f04f 30ff 	mov.w	r0, #4294967295
 c00fe8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c00fe92:	3501      	adds	r5, #1
 c00fe94:	e7c1      	b.n	c00fe1a <_printf_common+0x3e>
 c00fe96:	18e1      	adds	r1, r4, r3
 c00fe98:	1c5a      	adds	r2, r3, #1
 c00fe9a:	2030      	movs	r0, #48	@ 0x30
 c00fe9c:	3302      	adds	r3, #2
 c00fe9e:	4422      	add	r2, r4
 c00fea0:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 c00fea4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 c00fea8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 c00feac:	e7c2      	b.n	c00fe34 <_printf_common+0x58>
 c00feae:	2301      	movs	r3, #1
 c00feb0:	4622      	mov	r2, r4
 c00feb2:	4641      	mov	r1, r8
 c00feb4:	4638      	mov	r0, r7
 c00feb6:	47c8      	blx	r9
 c00feb8:	3001      	adds	r0, #1
 c00feba:	d0e6      	beq.n	c00fe8a <_printf_common+0xae>
 c00febc:	3601      	adds	r6, #1
 c00febe:	e7d9      	b.n	c00fe74 <_printf_common+0x98>

0c00fec0 <_printf_i>:
 c00fec0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 c00fec4:	7e0f      	ldrb	r7, [r1, #24]
 c00fec6:	4691      	mov	r9, r2
 c00fec8:	4680      	mov	r8, r0
 c00feca:	460c      	mov	r4, r1
 c00fecc:	2f78      	cmp	r7, #120	@ 0x78
 c00fece:	469a      	mov	sl, r3
 c00fed0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 c00fed2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 c00fed6:	d807      	bhi.n	c00fee8 <_printf_i+0x28>
 c00fed8:	2f62      	cmp	r7, #98	@ 0x62
 c00feda:	d80a      	bhi.n	c00fef2 <_printf_i+0x32>
 c00fedc:	2f00      	cmp	r7, #0
 c00fede:	f000 80d2 	beq.w	c010086 <_printf_i+0x1c6>
 c00fee2:	2f58      	cmp	r7, #88	@ 0x58
 c00fee4:	f000 80b9 	beq.w	c01005a <_printf_i+0x19a>
 c00fee8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 c00feec:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 c00fef0:	e03a      	b.n	c00ff68 <_printf_i+0xa8>
 c00fef2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 c00fef6:	2b15      	cmp	r3, #21
 c00fef8:	d8f6      	bhi.n	c00fee8 <_printf_i+0x28>
 c00fefa:	a101      	add	r1, pc, #4	@ (adr r1, c00ff00 <_printf_i+0x40>)
 c00fefc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 c00ff00:	0c00ff59 	.word	0x0c00ff59
 c00ff04:	0c00ff6d 	.word	0x0c00ff6d
 c00ff08:	0c00fee9 	.word	0x0c00fee9
 c00ff0c:	0c00fee9 	.word	0x0c00fee9
 c00ff10:	0c00fee9 	.word	0x0c00fee9
 c00ff14:	0c00fee9 	.word	0x0c00fee9
 c00ff18:	0c00ff6d 	.word	0x0c00ff6d
 c00ff1c:	0c00fee9 	.word	0x0c00fee9
 c00ff20:	0c00fee9 	.word	0x0c00fee9
 c00ff24:	0c00fee9 	.word	0x0c00fee9
 c00ff28:	0c00fee9 	.word	0x0c00fee9
 c00ff2c:	0c01006d 	.word	0x0c01006d
 c00ff30:	0c00ff97 	.word	0x0c00ff97
 c00ff34:	0c010027 	.word	0x0c010027
 c00ff38:	0c00fee9 	.word	0x0c00fee9
 c00ff3c:	0c00fee9 	.word	0x0c00fee9
 c00ff40:	0c01008f 	.word	0x0c01008f
 c00ff44:	0c00fee9 	.word	0x0c00fee9
 c00ff48:	0c00ff97 	.word	0x0c00ff97
 c00ff4c:	0c00fee9 	.word	0x0c00fee9
 c00ff50:	0c00fee9 	.word	0x0c00fee9
 c00ff54:	0c01002f 	.word	0x0c01002f
 c00ff58:	6833      	ldr	r3, [r6, #0]
 c00ff5a:	1d1a      	adds	r2, r3, #4
 c00ff5c:	681b      	ldr	r3, [r3, #0]
 c00ff5e:	6032      	str	r2, [r6, #0]
 c00ff60:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 c00ff64:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 c00ff68:	2301      	movs	r3, #1
 c00ff6a:	e09d      	b.n	c0100a8 <_printf_i+0x1e8>
 c00ff6c:	6833      	ldr	r3, [r6, #0]
 c00ff6e:	6820      	ldr	r0, [r4, #0]
 c00ff70:	1d19      	adds	r1, r3, #4
 c00ff72:	6031      	str	r1, [r6, #0]
 c00ff74:	0606      	lsls	r6, r0, #24
 c00ff76:	d501      	bpl.n	c00ff7c <_printf_i+0xbc>
 c00ff78:	681d      	ldr	r5, [r3, #0]
 c00ff7a:	e003      	b.n	c00ff84 <_printf_i+0xc4>
 c00ff7c:	0645      	lsls	r5, r0, #25
 c00ff7e:	d5fb      	bpl.n	c00ff78 <_printf_i+0xb8>
 c00ff80:	f9b3 5000 	ldrsh.w	r5, [r3]
 c00ff84:	2d00      	cmp	r5, #0
 c00ff86:	da03      	bge.n	c00ff90 <_printf_i+0xd0>
 c00ff88:	232d      	movs	r3, #45	@ 0x2d
 c00ff8a:	426d      	negs	r5, r5
 c00ff8c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 c00ff90:	4859      	ldr	r0, [pc, #356]	@ (c0100f8 <_printf_i+0x238>)
 c00ff92:	230a      	movs	r3, #10
 c00ff94:	e011      	b.n	c00ffba <_printf_i+0xfa>
 c00ff96:	6821      	ldr	r1, [r4, #0]
 c00ff98:	6833      	ldr	r3, [r6, #0]
 c00ff9a:	0608      	lsls	r0, r1, #24
 c00ff9c:	f853 5b04 	ldr.w	r5, [r3], #4
 c00ffa0:	d402      	bmi.n	c00ffa8 <_printf_i+0xe8>
 c00ffa2:	0649      	lsls	r1, r1, #25
 c00ffa4:	bf48      	it	mi
 c00ffa6:	b2ad      	uxthmi	r5, r5
 c00ffa8:	2f6f      	cmp	r7, #111	@ 0x6f
 c00ffaa:	6033      	str	r3, [r6, #0]
 c00ffac:	4852      	ldr	r0, [pc, #328]	@ (c0100f8 <_printf_i+0x238>)
 c00ffae:	bf14      	ite	ne
 c00ffb0:	230a      	movne	r3, #10
 c00ffb2:	2308      	moveq	r3, #8
 c00ffb4:	2100      	movs	r1, #0
 c00ffb6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 c00ffba:	6866      	ldr	r6, [r4, #4]
 c00ffbc:	2e00      	cmp	r6, #0
 c00ffbe:	60a6      	str	r6, [r4, #8]
 c00ffc0:	bfa2      	ittt	ge
 c00ffc2:	6821      	ldrge	r1, [r4, #0]
 c00ffc4:	f021 0104 	bicge.w	r1, r1, #4
 c00ffc8:	6021      	strge	r1, [r4, #0]
 c00ffca:	b90d      	cbnz	r5, c00ffd0 <_printf_i+0x110>
 c00ffcc:	2e00      	cmp	r6, #0
 c00ffce:	d04b      	beq.n	c010068 <_printf_i+0x1a8>
 c00ffd0:	4616      	mov	r6, r2
 c00ffd2:	fbb5 f1f3 	udiv	r1, r5, r3
 c00ffd6:	fb03 5711 	mls	r7, r3, r1, r5
 c00ffda:	5dc7      	ldrb	r7, [r0, r7]
 c00ffdc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 c00ffe0:	462f      	mov	r7, r5
 c00ffe2:	460d      	mov	r5, r1
 c00ffe4:	42bb      	cmp	r3, r7
 c00ffe6:	d9f4      	bls.n	c00ffd2 <_printf_i+0x112>
 c00ffe8:	2b08      	cmp	r3, #8
 c00ffea:	d10b      	bne.n	c010004 <_printf_i+0x144>
 c00ffec:	6823      	ldr	r3, [r4, #0]
 c00ffee:	07df      	lsls	r7, r3, #31
 c00fff0:	d508      	bpl.n	c010004 <_printf_i+0x144>
 c00fff2:	6923      	ldr	r3, [r4, #16]
 c00fff4:	6861      	ldr	r1, [r4, #4]
 c00fff6:	4299      	cmp	r1, r3
 c00fff8:	bfde      	ittt	le
 c00fffa:	2330      	movle	r3, #48	@ 0x30
 c00fffc:	f806 3c01 	strble.w	r3, [r6, #-1]
 c010000:	f106 36ff 	addle.w	r6, r6, #4294967295
 c010004:	1b92      	subs	r2, r2, r6
 c010006:	6122      	str	r2, [r4, #16]
 c010008:	464b      	mov	r3, r9
 c01000a:	aa03      	add	r2, sp, #12
 c01000c:	4621      	mov	r1, r4
 c01000e:	4640      	mov	r0, r8
 c010010:	f8cd a000 	str.w	sl, [sp]
 c010014:	f7ff fee2 	bl	c00fddc <_printf_common>
 c010018:	3001      	adds	r0, #1
 c01001a:	d14a      	bne.n	c0100b2 <_printf_i+0x1f2>
 c01001c:	f04f 30ff 	mov.w	r0, #4294967295
 c010020:	b004      	add	sp, #16
 c010022:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 c010026:	6823      	ldr	r3, [r4, #0]
 c010028:	f043 0320 	orr.w	r3, r3, #32
 c01002c:	6023      	str	r3, [r4, #0]
 c01002e:	2778      	movs	r7, #120	@ 0x78
 c010030:	4832      	ldr	r0, [pc, #200]	@ (c0100fc <_printf_i+0x23c>)
 c010032:	6823      	ldr	r3, [r4, #0]
 c010034:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 c010038:	061f      	lsls	r7, r3, #24
 c01003a:	6831      	ldr	r1, [r6, #0]
 c01003c:	f851 5b04 	ldr.w	r5, [r1], #4
 c010040:	d402      	bmi.n	c010048 <_printf_i+0x188>
 c010042:	065f      	lsls	r7, r3, #25
 c010044:	bf48      	it	mi
 c010046:	b2ad      	uxthmi	r5, r5
 c010048:	6031      	str	r1, [r6, #0]
 c01004a:	07d9      	lsls	r1, r3, #31
 c01004c:	bf44      	itt	mi
 c01004e:	f043 0320 	orrmi.w	r3, r3, #32
 c010052:	6023      	strmi	r3, [r4, #0]
 c010054:	b11d      	cbz	r5, c01005e <_printf_i+0x19e>
 c010056:	2310      	movs	r3, #16
 c010058:	e7ac      	b.n	c00ffb4 <_printf_i+0xf4>
 c01005a:	4827      	ldr	r0, [pc, #156]	@ (c0100f8 <_printf_i+0x238>)
 c01005c:	e7e9      	b.n	c010032 <_printf_i+0x172>
 c01005e:	6823      	ldr	r3, [r4, #0]
 c010060:	f023 0320 	bic.w	r3, r3, #32
 c010064:	6023      	str	r3, [r4, #0]
 c010066:	e7f6      	b.n	c010056 <_printf_i+0x196>
 c010068:	4616      	mov	r6, r2
 c01006a:	e7bd      	b.n	c00ffe8 <_printf_i+0x128>
 c01006c:	6833      	ldr	r3, [r6, #0]
 c01006e:	6825      	ldr	r5, [r4, #0]
 c010070:	1d18      	adds	r0, r3, #4
 c010072:	6961      	ldr	r1, [r4, #20]
 c010074:	6030      	str	r0, [r6, #0]
 c010076:	062e      	lsls	r6, r5, #24
 c010078:	681b      	ldr	r3, [r3, #0]
 c01007a:	d501      	bpl.n	c010080 <_printf_i+0x1c0>
 c01007c:	6019      	str	r1, [r3, #0]
 c01007e:	e002      	b.n	c010086 <_printf_i+0x1c6>
 c010080:	0668      	lsls	r0, r5, #25
 c010082:	d5fb      	bpl.n	c01007c <_printf_i+0x1bc>
 c010084:	8019      	strh	r1, [r3, #0]
 c010086:	2300      	movs	r3, #0
 c010088:	4616      	mov	r6, r2
 c01008a:	6123      	str	r3, [r4, #16]
 c01008c:	e7bc      	b.n	c010008 <_printf_i+0x148>
 c01008e:	6833      	ldr	r3, [r6, #0]
 c010090:	2100      	movs	r1, #0
 c010092:	1d1a      	adds	r2, r3, #4
 c010094:	6032      	str	r2, [r6, #0]
 c010096:	681e      	ldr	r6, [r3, #0]
 c010098:	6862      	ldr	r2, [r4, #4]
 c01009a:	4630      	mov	r0, r6
 c01009c:	f000 f960 	bl	c010360 <memchr>
 c0100a0:	b108      	cbz	r0, c0100a6 <_printf_i+0x1e6>
 c0100a2:	1b80      	subs	r0, r0, r6
 c0100a4:	6060      	str	r0, [r4, #4]
 c0100a6:	6863      	ldr	r3, [r4, #4]
 c0100a8:	6123      	str	r3, [r4, #16]
 c0100aa:	2300      	movs	r3, #0
 c0100ac:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 c0100b0:	e7aa      	b.n	c010008 <_printf_i+0x148>
 c0100b2:	6923      	ldr	r3, [r4, #16]
 c0100b4:	4632      	mov	r2, r6
 c0100b6:	4649      	mov	r1, r9
 c0100b8:	4640      	mov	r0, r8
 c0100ba:	47d0      	blx	sl
 c0100bc:	3001      	adds	r0, #1
 c0100be:	d0ad      	beq.n	c01001c <_printf_i+0x15c>
 c0100c0:	6823      	ldr	r3, [r4, #0]
 c0100c2:	079b      	lsls	r3, r3, #30
 c0100c4:	d413      	bmi.n	c0100ee <_printf_i+0x22e>
 c0100c6:	68e0      	ldr	r0, [r4, #12]
 c0100c8:	9b03      	ldr	r3, [sp, #12]
 c0100ca:	4298      	cmp	r0, r3
 c0100cc:	bfb8      	it	lt
 c0100ce:	4618      	movlt	r0, r3
 c0100d0:	e7a6      	b.n	c010020 <_printf_i+0x160>
 c0100d2:	2301      	movs	r3, #1
 c0100d4:	4632      	mov	r2, r6
 c0100d6:	4649      	mov	r1, r9
 c0100d8:	4640      	mov	r0, r8
 c0100da:	47d0      	blx	sl
 c0100dc:	3001      	adds	r0, #1
 c0100de:	d09d      	beq.n	c01001c <_printf_i+0x15c>
 c0100e0:	3501      	adds	r5, #1
 c0100e2:	68e3      	ldr	r3, [r4, #12]
 c0100e4:	9903      	ldr	r1, [sp, #12]
 c0100e6:	1a5b      	subs	r3, r3, r1
 c0100e8:	42ab      	cmp	r3, r5
 c0100ea:	dcf2      	bgt.n	c0100d2 <_printf_i+0x212>
 c0100ec:	e7eb      	b.n	c0100c6 <_printf_i+0x206>
 c0100ee:	2500      	movs	r5, #0
 c0100f0:	f104 0619 	add.w	r6, r4, #25
 c0100f4:	e7f5      	b.n	c0100e2 <_printf_i+0x222>
 c0100f6:	bf00      	nop
 c0100f8:	0c011d99 	.word	0x0c011d99
 c0100fc:	0c011daa 	.word	0x0c011daa

0c010100 <__sflush_r>:
 c010100:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 c010104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 c010108:	0716      	lsls	r6, r2, #28
 c01010a:	4605      	mov	r5, r0
 c01010c:	460c      	mov	r4, r1
 c01010e:	d454      	bmi.n	c0101ba <__sflush_r+0xba>
 c010110:	684b      	ldr	r3, [r1, #4]
 c010112:	2b00      	cmp	r3, #0
 c010114:	dc02      	bgt.n	c01011c <__sflush_r+0x1c>
 c010116:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 c010118:	2b00      	cmp	r3, #0
 c01011a:	dd48      	ble.n	c0101ae <__sflush_r+0xae>
 c01011c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 c01011e:	2e00      	cmp	r6, #0
 c010120:	d045      	beq.n	c0101ae <__sflush_r+0xae>
 c010122:	2300      	movs	r3, #0
 c010124:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 c010128:	682f      	ldr	r7, [r5, #0]
 c01012a:	6a21      	ldr	r1, [r4, #32]
 c01012c:	602b      	str	r3, [r5, #0]
 c01012e:	d030      	beq.n	c010192 <__sflush_r+0x92>
 c010130:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 c010132:	89a3      	ldrh	r3, [r4, #12]
 c010134:	0759      	lsls	r1, r3, #29
 c010136:	d505      	bpl.n	c010144 <__sflush_r+0x44>
 c010138:	6863      	ldr	r3, [r4, #4]
 c01013a:	1ad2      	subs	r2, r2, r3
 c01013c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 c01013e:	b10b      	cbz	r3, c010144 <__sflush_r+0x44>
 c010140:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 c010142:	1ad2      	subs	r2, r2, r3
 c010144:	2300      	movs	r3, #0
 c010146:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 c010148:	6a21      	ldr	r1, [r4, #32]
 c01014a:	4628      	mov	r0, r5
 c01014c:	47b0      	blx	r6
 c01014e:	1c43      	adds	r3, r0, #1
 c010150:	89a3      	ldrh	r3, [r4, #12]
 c010152:	d106      	bne.n	c010162 <__sflush_r+0x62>
 c010154:	6829      	ldr	r1, [r5, #0]
 c010156:	291d      	cmp	r1, #29
 c010158:	d82b      	bhi.n	c0101b2 <__sflush_r+0xb2>
 c01015a:	4a2a      	ldr	r2, [pc, #168]	@ (c010204 <__sflush_r+0x104>)
 c01015c:	410a      	asrs	r2, r1
 c01015e:	07d6      	lsls	r6, r2, #31
 c010160:	d427      	bmi.n	c0101b2 <__sflush_r+0xb2>
 c010162:	2200      	movs	r2, #0
 c010164:	04d9      	lsls	r1, r3, #19
 c010166:	6062      	str	r2, [r4, #4]
 c010168:	6922      	ldr	r2, [r4, #16]
 c01016a:	6022      	str	r2, [r4, #0]
 c01016c:	d504      	bpl.n	c010178 <__sflush_r+0x78>
 c01016e:	1c42      	adds	r2, r0, #1
 c010170:	d101      	bne.n	c010176 <__sflush_r+0x76>
 c010172:	682b      	ldr	r3, [r5, #0]
 c010174:	b903      	cbnz	r3, c010178 <__sflush_r+0x78>
 c010176:	6560      	str	r0, [r4, #84]	@ 0x54
 c010178:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 c01017a:	602f      	str	r7, [r5, #0]
 c01017c:	b1b9      	cbz	r1, c0101ae <__sflush_r+0xae>
 c01017e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 c010182:	4299      	cmp	r1, r3
 c010184:	d002      	beq.n	c01018c <__sflush_r+0x8c>
 c010186:	4628      	mov	r0, r5
 c010188:	f7ff fb3c 	bl	c00f804 <_free_r>
 c01018c:	2300      	movs	r3, #0
 c01018e:	6363      	str	r3, [r4, #52]	@ 0x34
 c010190:	e00d      	b.n	c0101ae <__sflush_r+0xae>
 c010192:	2301      	movs	r3, #1
 c010194:	4628      	mov	r0, r5
 c010196:	47b0      	blx	r6
 c010198:	4602      	mov	r2, r0
 c01019a:	1c50      	adds	r0, r2, #1
 c01019c:	d1c9      	bne.n	c010132 <__sflush_r+0x32>
 c01019e:	682b      	ldr	r3, [r5, #0]
 c0101a0:	2b00      	cmp	r3, #0
 c0101a2:	d0c6      	beq.n	c010132 <__sflush_r+0x32>
 c0101a4:	2b1d      	cmp	r3, #29
 c0101a6:	d001      	beq.n	c0101ac <__sflush_r+0xac>
 c0101a8:	2b16      	cmp	r3, #22
 c0101aa:	d11d      	bne.n	c0101e8 <__sflush_r+0xe8>
 c0101ac:	602f      	str	r7, [r5, #0]
 c0101ae:	2000      	movs	r0, #0
 c0101b0:	e021      	b.n	c0101f6 <__sflush_r+0xf6>
 c0101b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 c0101b6:	b21b      	sxth	r3, r3
 c0101b8:	e01a      	b.n	c0101f0 <__sflush_r+0xf0>
 c0101ba:	690f      	ldr	r7, [r1, #16]
 c0101bc:	2f00      	cmp	r7, #0
 c0101be:	d0f6      	beq.n	c0101ae <__sflush_r+0xae>
 c0101c0:	0793      	lsls	r3, r2, #30
 c0101c2:	680e      	ldr	r6, [r1, #0]
 c0101c4:	600f      	str	r7, [r1, #0]
 c0101c6:	bf0c      	ite	eq
 c0101c8:	694b      	ldreq	r3, [r1, #20]
 c0101ca:	2300      	movne	r3, #0
 c0101cc:	eba6 0807 	sub.w	r8, r6, r7
 c0101d0:	608b      	str	r3, [r1, #8]
 c0101d2:	f1b8 0f00 	cmp.w	r8, #0
 c0101d6:	ddea      	ble.n	c0101ae <__sflush_r+0xae>
 c0101d8:	4643      	mov	r3, r8
 c0101da:	463a      	mov	r2, r7
 c0101dc:	6a21      	ldr	r1, [r4, #32]
 c0101de:	4628      	mov	r0, r5
 c0101e0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 c0101e2:	47b0      	blx	r6
 c0101e4:	2800      	cmp	r0, #0
 c0101e6:	dc08      	bgt.n	c0101fa <__sflush_r+0xfa>
 c0101e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 c0101ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 c0101f0:	f04f 30ff 	mov.w	r0, #4294967295
 c0101f4:	81a3      	strh	r3, [r4, #12]
 c0101f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 c0101fa:	4407      	add	r7, r0
 c0101fc:	eba8 0800 	sub.w	r8, r8, r0
 c010200:	e7e7      	b.n	c0101d2 <__sflush_r+0xd2>
 c010202:	bf00      	nop
 c010204:	dfbffffe 	.word	0xdfbffffe

0c010208 <_fflush_r>:
 c010208:	b538      	push	{r3, r4, r5, lr}
 c01020a:	690b      	ldr	r3, [r1, #16]
 c01020c:	4605      	mov	r5, r0
 c01020e:	460c      	mov	r4, r1
 c010210:	b913      	cbnz	r3, c010218 <_fflush_r+0x10>
 c010212:	2500      	movs	r5, #0
 c010214:	4628      	mov	r0, r5
 c010216:	bd38      	pop	{r3, r4, r5, pc}
 c010218:	b118      	cbz	r0, c010222 <_fflush_r+0x1a>
 c01021a:	6a03      	ldr	r3, [r0, #32]
 c01021c:	b90b      	cbnz	r3, c010222 <_fflush_r+0x1a>
 c01021e:	f7ff f8ad 	bl	c00f37c <__sinit>
 c010222:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 c010226:	2b00      	cmp	r3, #0
 c010228:	d0f3      	beq.n	c010212 <_fflush_r+0xa>
 c01022a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 c01022c:	07d0      	lsls	r0, r2, #31
 c01022e:	d404      	bmi.n	c01023a <_fflush_r+0x32>
 c010230:	0599      	lsls	r1, r3, #22
 c010232:	d402      	bmi.n	c01023a <_fflush_r+0x32>
 c010234:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 c010236:	f7ff fac8 	bl	c00f7ca <__retarget_lock_acquire_recursive>
 c01023a:	4628      	mov	r0, r5
 c01023c:	4621      	mov	r1, r4
 c01023e:	f7ff ff5f 	bl	c010100 <__sflush_r>
 c010242:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 c010244:	4605      	mov	r5, r0
 c010246:	07da      	lsls	r2, r3, #31
 c010248:	d4e4      	bmi.n	c010214 <_fflush_r+0xc>
 c01024a:	89a3      	ldrh	r3, [r4, #12]
 c01024c:	059b      	lsls	r3, r3, #22
 c01024e:	d4e1      	bmi.n	c010214 <_fflush_r+0xc>
 c010250:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 c010252:	f7ff fabb 	bl	c00f7cc <__retarget_lock_release_recursive>
 c010256:	e7dd      	b.n	c010214 <_fflush_r+0xc>

0c010258 <__swhatbuf_r>:
 c010258:	b570      	push	{r4, r5, r6, lr}
 c01025a:	460c      	mov	r4, r1
 c01025c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 c010260:	b096      	sub	sp, #88	@ 0x58
 c010262:	4615      	mov	r5, r2
 c010264:	2900      	cmp	r1, #0
 c010266:	461e      	mov	r6, r3
 c010268:	da0c      	bge.n	c010284 <__swhatbuf_r+0x2c>
 c01026a:	89a3      	ldrh	r3, [r4, #12]
 c01026c:	2100      	movs	r1, #0
 c01026e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 c010272:	bf14      	ite	ne
 c010274:	2340      	movne	r3, #64	@ 0x40
 c010276:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 c01027a:	2000      	movs	r0, #0
 c01027c:	6031      	str	r1, [r6, #0]
 c01027e:	602b      	str	r3, [r5, #0]
 c010280:	b016      	add	sp, #88	@ 0x58
 c010282:	bd70      	pop	{r4, r5, r6, pc}
 c010284:	466a      	mov	r2, sp
 c010286:	f000 f849 	bl	c01031c <_fstat_r>
 c01028a:	2800      	cmp	r0, #0
 c01028c:	dbed      	blt.n	c01026a <__swhatbuf_r+0x12>
 c01028e:	9901      	ldr	r1, [sp, #4]
 c010290:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 c010294:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 c010298:	4259      	negs	r1, r3
 c01029a:	4159      	adcs	r1, r3
 c01029c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 c0102a0:	e7eb      	b.n	c01027a <__swhatbuf_r+0x22>

0c0102a2 <__smakebuf_r>:
 c0102a2:	898b      	ldrh	r3, [r1, #12]
 c0102a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 c0102a6:	079d      	lsls	r5, r3, #30
 c0102a8:	4606      	mov	r6, r0
 c0102aa:	460c      	mov	r4, r1
 c0102ac:	d507      	bpl.n	c0102be <__smakebuf_r+0x1c>
 c0102ae:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 c0102b2:	6023      	str	r3, [r4, #0]
 c0102b4:	6123      	str	r3, [r4, #16]
 c0102b6:	2301      	movs	r3, #1
 c0102b8:	6163      	str	r3, [r4, #20]
 c0102ba:	b003      	add	sp, #12
 c0102bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c0102be:	ab01      	add	r3, sp, #4
 c0102c0:	466a      	mov	r2, sp
 c0102c2:	f7ff ffc9 	bl	c010258 <__swhatbuf_r>
 c0102c6:	9f00      	ldr	r7, [sp, #0]
 c0102c8:	4605      	mov	r5, r0
 c0102ca:	4630      	mov	r0, r6
 c0102cc:	4639      	mov	r1, r7
 c0102ce:	f7fe ff07 	bl	c00f0e0 <_malloc_r>
 c0102d2:	b948      	cbnz	r0, c0102e8 <__smakebuf_r+0x46>
 c0102d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 c0102d8:	059a      	lsls	r2, r3, #22
 c0102da:	d4ee      	bmi.n	c0102ba <__smakebuf_r+0x18>
 c0102dc:	f023 0303 	bic.w	r3, r3, #3
 c0102e0:	f043 0302 	orr.w	r3, r3, #2
 c0102e4:	81a3      	strh	r3, [r4, #12]
 c0102e6:	e7e2      	b.n	c0102ae <__smakebuf_r+0xc>
 c0102e8:	89a3      	ldrh	r3, [r4, #12]
 c0102ea:	6020      	str	r0, [r4, #0]
 c0102ec:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 c0102f0:	81a3      	strh	r3, [r4, #12]
 c0102f2:	9b01      	ldr	r3, [sp, #4]
 c0102f4:	e9c4 0704 	strd	r0, r7, [r4, #16]
 c0102f8:	b15b      	cbz	r3, c010312 <__smakebuf_r+0x70>
 c0102fa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 c0102fe:	4630      	mov	r0, r6
 c010300:	f000 f81e 	bl	c010340 <_isatty_r>
 c010304:	b128      	cbz	r0, c010312 <__smakebuf_r+0x70>
 c010306:	89a3      	ldrh	r3, [r4, #12]
 c010308:	f023 0303 	bic.w	r3, r3, #3
 c01030c:	f043 0301 	orr.w	r3, r3, #1
 c010310:	81a3      	strh	r3, [r4, #12]
 c010312:	89a3      	ldrh	r3, [r4, #12]
 c010314:	431d      	orrs	r5, r3
 c010316:	81a5      	strh	r5, [r4, #12]
 c010318:	e7cf      	b.n	c0102ba <__smakebuf_r+0x18>
	...

0c01031c <_fstat_r>:
 c01031c:	b538      	push	{r3, r4, r5, lr}
 c01031e:	2300      	movs	r3, #0
 c010320:	4d06      	ldr	r5, [pc, #24]	@ (c01033c <_fstat_r+0x20>)
 c010322:	4604      	mov	r4, r0
 c010324:	4608      	mov	r0, r1
 c010326:	4611      	mov	r1, r2
 c010328:	602b      	str	r3, [r5, #0]
 c01032a:	f7f1 feb1 	bl	c002090 <_fstat>
 c01032e:	1c43      	adds	r3, r0, #1
 c010330:	d102      	bne.n	c010338 <_fstat_r+0x1c>
 c010332:	682b      	ldr	r3, [r5, #0]
 c010334:	b103      	cbz	r3, c010338 <_fstat_r+0x1c>
 c010336:	6023      	str	r3, [r4, #0]
 c010338:	bd38      	pop	{r3, r4, r5, pc}
 c01033a:	bf00      	nop
 c01033c:	300004d8 	.word	0x300004d8

0c010340 <_isatty_r>:
 c010340:	b538      	push	{r3, r4, r5, lr}
 c010342:	2300      	movs	r3, #0
 c010344:	4d05      	ldr	r5, [pc, #20]	@ (c01035c <_isatty_r+0x1c>)
 c010346:	4604      	mov	r4, r0
 c010348:	4608      	mov	r0, r1
 c01034a:	602b      	str	r3, [r5, #0]
 c01034c:	f7f1 fea6 	bl	c00209c <_isatty>
 c010350:	1c43      	adds	r3, r0, #1
 c010352:	d102      	bne.n	c01035a <_isatty_r+0x1a>
 c010354:	682b      	ldr	r3, [r5, #0]
 c010356:	b103      	cbz	r3, c01035a <_isatty_r+0x1a>
 c010358:	6023      	str	r3, [r4, #0]
 c01035a:	bd38      	pop	{r3, r4, r5, pc}
 c01035c:	300004d8 	.word	0x300004d8

0c010360 <memchr>:
 c010360:	b2c9      	uxtb	r1, r1
 c010362:	4603      	mov	r3, r0
 c010364:	4402      	add	r2, r0
 c010366:	b510      	push	{r4, lr}
 c010368:	4293      	cmp	r3, r2
 c01036a:	4618      	mov	r0, r3
 c01036c:	d101      	bne.n	c010372 <memchr+0x12>
 c01036e:	2000      	movs	r0, #0
 c010370:	e003      	b.n	c01037a <memchr+0x1a>
 c010372:	7804      	ldrb	r4, [r0, #0]
 c010374:	3301      	adds	r3, #1
 c010376:	428c      	cmp	r4, r1
 c010378:	d1f6      	bne.n	c010368 <memchr+0x8>
 c01037a:	bd10      	pop	{r4, pc}
 c01037c:	0000      	movs	r0, r0
	...

0c010380 <log>:
 c010380:	b538      	push	{r3, r4, r5, lr}
 c010382:	ec55 4b10 	vmov	r4, r5, d0
 c010386:	ed2d 8b02 	vpush	{d8}
 c01038a:	f000 fa5d 	bl	c010848 <__ieee754_log>
 c01038e:	4622      	mov	r2, r4
 c010390:	462b      	mov	r3, r5
 c010392:	4620      	mov	r0, r4
 c010394:	4629      	mov	r1, r5
 c010396:	eeb0 8a40 	vmov.f32	s16, s0
 c01039a:	eef0 8a60 	vmov.f32	s17, s1
 c01039e:	f7f0 fbcf 	bl	c000b40 <__aeabi_dcmpun>
 c0103a2:	b998      	cbnz	r0, c0103cc <log+0x4c>
 c0103a4:	2200      	movs	r2, #0
 c0103a6:	2300      	movs	r3, #0
 c0103a8:	4620      	mov	r0, r4
 c0103aa:	4629      	mov	r1, r5
 c0103ac:	f7f0 fbbe 	bl	c000b2c <__aeabi_dcmpgt>
 c0103b0:	b960      	cbnz	r0, c0103cc <log+0x4c>
 c0103b2:	2200      	movs	r2, #0
 c0103b4:	2300      	movs	r3, #0
 c0103b6:	4620      	mov	r0, r4
 c0103b8:	4629      	mov	r1, r5
 c0103ba:	f7f0 fb8f 	bl	c000adc <__aeabi_dcmpeq>
 c0103be:	b160      	cbz	r0, c0103da <log+0x5a>
 c0103c0:	f7ff f9d8 	bl	c00f774 <__errno>
 c0103c4:	2322      	movs	r3, #34	@ 0x22
 c0103c6:	ed9f 8b0a 	vldr	d8, [pc, #40]	@ c0103f0 <log+0x70>
 c0103ca:	6003      	str	r3, [r0, #0]
 c0103cc:	eeb0 0a48 	vmov.f32	s0, s16
 c0103d0:	eef0 0a68 	vmov.f32	s1, s17
 c0103d4:	ecbd 8b02 	vpop	{d8}
 c0103d8:	bd38      	pop	{r3, r4, r5, pc}
 c0103da:	f7ff f9cb 	bl	c00f774 <__errno>
 c0103de:	2321      	movs	r3, #33	@ 0x21
 c0103e0:	ecbd 8b02 	vpop	{d8}
 c0103e4:	6003      	str	r3, [r0, #0]
 c0103e6:	4804      	ldr	r0, [pc, #16]	@ (c0103f8 <log+0x78>)
 c0103e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 c0103ec:	f7ff b9fc 	b.w	c00f7e8 <nan>
 c0103f0:	00000000 	.word	0x00000000
 c0103f4:	fff00000 	.word	0xfff00000
 c0103f8:	0c011d87 	.word	0x0c011d87

0c0103fc <sqrt>:
 c0103fc:	b538      	push	{r3, r4, r5, lr}
 c0103fe:	ec55 4b10 	vmov	r4, r5, d0
 c010402:	ed2d 8b02 	vpush	{d8}
 c010406:	f000 f93b 	bl	c010680 <__ieee754_sqrt>
 c01040a:	4622      	mov	r2, r4
 c01040c:	462b      	mov	r3, r5
 c01040e:	4620      	mov	r0, r4
 c010410:	4629      	mov	r1, r5
 c010412:	eeb0 8a40 	vmov.f32	s16, s0
 c010416:	eef0 8a60 	vmov.f32	s17, s1
 c01041a:	f7f0 fb91 	bl	c000b40 <__aeabi_dcmpun>
 c01041e:	b990      	cbnz	r0, c010446 <sqrt+0x4a>
 c010420:	2200      	movs	r2, #0
 c010422:	2300      	movs	r3, #0
 c010424:	4620      	mov	r0, r4
 c010426:	4629      	mov	r1, r5
 c010428:	f7f0 fb62 	bl	c000af0 <__aeabi_dcmplt>
 c01042c:	b158      	cbz	r0, c010446 <sqrt+0x4a>
 c01042e:	f7ff f9a1 	bl	c00f774 <__errno>
 c010432:	2321      	movs	r3, #33	@ 0x21
 c010434:	2200      	movs	r2, #0
 c010436:	6003      	str	r3, [r0, #0]
 c010438:	2300      	movs	r3, #0
 c01043a:	4610      	mov	r0, r2
 c01043c:	4619      	mov	r1, r3
 c01043e:	f7f0 fa0f 	bl	c000860 <__aeabi_ddiv>
 c010442:	ec41 0b18 	vmov	d8, r0, r1
 c010446:	eeb0 0a48 	vmov.f32	s0, s16
 c01044a:	eef0 0a68 	vmov.f32	s1, s17
 c01044e:	ecbd 8b02 	vpop	{d8}
 c010452:	bd38      	pop	{r3, r4, r5, pc}

0c010454 <expf>:
 c010454:	b508      	push	{r3, lr}
 c010456:	ed2d 8b02 	vpush	{d8}
 c01045a:	eef0 8a40 	vmov.f32	s17, s0
 c01045e:	f000 fc45 	bl	c010cec <__ieee754_expf>
 c010462:	eeb0 8a40 	vmov.f32	s16, s0
 c010466:	eeb0 0a68 	vmov.f32	s0, s17
 c01046a:	f000 f8ff 	bl	c01066c <finitef>
 c01046e:	b160      	cbz	r0, c01048a <expf+0x36>
 c010470:	eddf 7a0f 	vldr	s15, [pc, #60]	@ c0104b0 <expf+0x5c>
 c010474:	eef4 8ae7 	vcmpe.f32	s17, s15
 c010478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c01047c:	dd0a      	ble.n	c010494 <expf+0x40>
 c01047e:	f7ff f979 	bl	c00f774 <__errno>
 c010482:	ed9f 8a0c 	vldr	s16, [pc, #48]	@ c0104b4 <expf+0x60>
 c010486:	2322      	movs	r3, #34	@ 0x22
 c010488:	6003      	str	r3, [r0, #0]
 c01048a:	eeb0 0a48 	vmov.f32	s0, s16
 c01048e:	ecbd 8b02 	vpop	{d8}
 c010492:	bd08      	pop	{r3, pc}
 c010494:	eddf 7a08 	vldr	s15, [pc, #32]	@ c0104b8 <expf+0x64>
 c010498:	eef4 8ae7 	vcmpe.f32	s17, s15
 c01049c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0104a0:	d5f3      	bpl.n	c01048a <expf+0x36>
 c0104a2:	f7ff f967 	bl	c00f774 <__errno>
 c0104a6:	2322      	movs	r3, #34	@ 0x22
 c0104a8:	ed9f 8a04 	vldr	s16, [pc, #16]	@ c0104bc <expf+0x68>
 c0104ac:	6003      	str	r3, [r0, #0]
 c0104ae:	e7ec      	b.n	c01048a <expf+0x36>
 c0104b0:	42b17217 	.word	0x42b17217
 c0104b4:	7f800000 	.word	0x7f800000
 c0104b8:	c2cff1b5 	.word	0xc2cff1b5
 c0104bc:	00000000 	.word	0x00000000

0c0104c0 <logf>:
 c0104c0:	b508      	push	{r3, lr}
 c0104c2:	ed2d 8b02 	vpush	{d8}
 c0104c6:	eeb0 8a40 	vmov.f32	s16, s0
 c0104ca:	f000 fcdd 	bl	c010e88 <__ieee754_logf>
 c0104ce:	eeb4 8a48 	vcmp.f32	s16, s16
 c0104d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0104d6:	d60f      	bvs.n	c0104f8 <logf+0x38>
 c0104d8:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 c0104dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0104e0:	dc0a      	bgt.n	c0104f8 <logf+0x38>
 c0104e2:	eeb5 8a40 	vcmp.f32	s16, #0.0
 c0104e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0104ea:	d108      	bne.n	c0104fe <logf+0x3e>
 c0104ec:	f7ff f942 	bl	c00f774 <__errno>
 c0104f0:	2322      	movs	r3, #34	@ 0x22
 c0104f2:	ed9f 0a08 	vldr	s0, [pc, #32]	@ c010514 <logf+0x54>
 c0104f6:	6003      	str	r3, [r0, #0]
 c0104f8:	ecbd 8b02 	vpop	{d8}
 c0104fc:	bd08      	pop	{r3, pc}
 c0104fe:	f7ff f939 	bl	c00f774 <__errno>
 c010502:	2321      	movs	r3, #33	@ 0x21
 c010504:	ecbd 8b02 	vpop	{d8}
 c010508:	6003      	str	r3, [r0, #0]
 c01050a:	4803      	ldr	r0, [pc, #12]	@ (c010518 <logf+0x58>)
 c01050c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 c010510:	f7ff b972 	b.w	c00f7f8 <nanf>
 c010514:	ff800000 	.word	0xff800000
 c010518:	0c011d87 	.word	0x0c011d87

0c01051c <sqrtf>:
 c01051c:	b508      	push	{r3, lr}
 c01051e:	ed2d 8b02 	vpush	{d8}
 c010522:	eeb0 8a40 	vmov.f32	s16, s0
 c010526:	f000 f989 	bl	c01083c <__ieee754_sqrtf>
 c01052a:	eeb4 8a48 	vcmp.f32	s16, s16
 c01052e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c010532:	d60c      	bvs.n	c01054e <sqrtf+0x32>
 c010534:	eddf 8a07 	vldr	s17, [pc, #28]	@ c010554 <sqrtf+0x38>
 c010538:	eeb4 8ae8 	vcmpe.f32	s16, s17
 c01053c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c010540:	d505      	bpl.n	c01054e <sqrtf+0x32>
 c010542:	f7ff f917 	bl	c00f774 <__errno>
 c010546:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 c01054a:	2321      	movs	r3, #33	@ 0x21
 c01054c:	6003      	str	r3, [r0, #0]
 c01054e:	ecbd 8b02 	vpop	{d8}
 c010552:	bd08      	pop	{r3, pc}
 c010554:	00000000 	.word	0x00000000

0c010558 <cosf>:
 c010558:	ee10 3a10 	vmov	r3, s0
 c01055c:	b507      	push	{r0, r1, r2, lr}
 c01055e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 c010562:	4a1d      	ldr	r2, [pc, #116]	@ (c0105d8 <cosf+0x80>)
 c010564:	4293      	cmp	r3, r2
 c010566:	d806      	bhi.n	c010576 <cosf+0x1e>
 c010568:	eddf 0a1c 	vldr	s1, [pc, #112]	@ c0105dc <cosf+0x84>
 c01056c:	b003      	add	sp, #12
 c01056e:	f85d eb04 	ldr.w	lr, [sp], #4
 c010572:	f000 bb1b 	b.w	c010bac <__kernel_cosf>
 c010576:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 c01057a:	d304      	bcc.n	c010586 <cosf+0x2e>
 c01057c:	ee30 0a40 	vsub.f32	s0, s0, s0
 c010580:	b003      	add	sp, #12
 c010582:	f85d fb04 	ldr.w	pc, [sp], #4
 c010586:	4668      	mov	r0, sp
 c010588:	f000 fd6e 	bl	c011068 <__ieee754_rem_pio2f>
 c01058c:	f000 0003 	and.w	r0, r0, #3
 c010590:	2801      	cmp	r0, #1
 c010592:	d009      	beq.n	c0105a8 <cosf+0x50>
 c010594:	2802      	cmp	r0, #2
 c010596:	d010      	beq.n	c0105ba <cosf+0x62>
 c010598:	b9b0      	cbnz	r0, c0105c8 <cosf+0x70>
 c01059a:	eddd 0a01 	vldr	s1, [sp, #4]
 c01059e:	ed9d 0a00 	vldr	s0, [sp]
 c0105a2:	f000 fb03 	bl	c010bac <__kernel_cosf>
 c0105a6:	e7eb      	b.n	c010580 <cosf+0x28>
 c0105a8:	eddd 0a01 	vldr	s1, [sp, #4]
 c0105ac:	ed9d 0a00 	vldr	s0, [sp]
 c0105b0:	f000 fb54 	bl	c010c5c <__kernel_sinf>
 c0105b4:	eeb1 0a40 	vneg.f32	s0, s0
 c0105b8:	e7e2      	b.n	c010580 <cosf+0x28>
 c0105ba:	eddd 0a01 	vldr	s1, [sp, #4]
 c0105be:	ed9d 0a00 	vldr	s0, [sp]
 c0105c2:	f000 faf3 	bl	c010bac <__kernel_cosf>
 c0105c6:	e7f5      	b.n	c0105b4 <cosf+0x5c>
 c0105c8:	2001      	movs	r0, #1
 c0105ca:	eddd 0a01 	vldr	s1, [sp, #4]
 c0105ce:	ed9d 0a00 	vldr	s0, [sp]
 c0105d2:	f000 fb43 	bl	c010c5c <__kernel_sinf>
 c0105d6:	e7d3      	b.n	c010580 <cosf+0x28>
 c0105d8:	3f490fd8 	.word	0x3f490fd8
 c0105dc:	00000000 	.word	0x00000000

0c0105e0 <sinf>:
 c0105e0:	ee10 3a10 	vmov	r3, s0
 c0105e4:	b507      	push	{r0, r1, r2, lr}
 c0105e6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 c0105ea:	4a1e      	ldr	r2, [pc, #120]	@ (c010664 <sinf+0x84>)
 c0105ec:	4293      	cmp	r3, r2
 c0105ee:	d807      	bhi.n	c010600 <sinf+0x20>
 c0105f0:	2000      	movs	r0, #0
 c0105f2:	eddf 0a1d 	vldr	s1, [pc, #116]	@ c010668 <sinf+0x88>
 c0105f6:	b003      	add	sp, #12
 c0105f8:	f85d eb04 	ldr.w	lr, [sp], #4
 c0105fc:	f000 bb2e 	b.w	c010c5c <__kernel_sinf>
 c010600:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 c010604:	d304      	bcc.n	c010610 <sinf+0x30>
 c010606:	ee30 0a40 	vsub.f32	s0, s0, s0
 c01060a:	b003      	add	sp, #12
 c01060c:	f85d fb04 	ldr.w	pc, [sp], #4
 c010610:	4668      	mov	r0, sp
 c010612:	f000 fd29 	bl	c011068 <__ieee754_rem_pio2f>
 c010616:	f000 0003 	and.w	r0, r0, #3
 c01061a:	2801      	cmp	r0, #1
 c01061c:	d00a      	beq.n	c010634 <sinf+0x54>
 c01061e:	2802      	cmp	r0, #2
 c010620:	d00f      	beq.n	c010642 <sinf+0x62>
 c010622:	b9c0      	cbnz	r0, c010656 <sinf+0x76>
 c010624:	2001      	movs	r0, #1
 c010626:	eddd 0a01 	vldr	s1, [sp, #4]
 c01062a:	ed9d 0a00 	vldr	s0, [sp]
 c01062e:	f000 fb15 	bl	c010c5c <__kernel_sinf>
 c010632:	e7ea      	b.n	c01060a <sinf+0x2a>
 c010634:	eddd 0a01 	vldr	s1, [sp, #4]
 c010638:	ed9d 0a00 	vldr	s0, [sp]
 c01063c:	f000 fab6 	bl	c010bac <__kernel_cosf>
 c010640:	e7e3      	b.n	c01060a <sinf+0x2a>
 c010642:	2001      	movs	r0, #1
 c010644:	eddd 0a01 	vldr	s1, [sp, #4]
 c010648:	ed9d 0a00 	vldr	s0, [sp]
 c01064c:	f000 fb06 	bl	c010c5c <__kernel_sinf>
 c010650:	eeb1 0a40 	vneg.f32	s0, s0
 c010654:	e7d9      	b.n	c01060a <sinf+0x2a>
 c010656:	eddd 0a01 	vldr	s1, [sp, #4]
 c01065a:	ed9d 0a00 	vldr	s0, [sp]
 c01065e:	f000 faa5 	bl	c010bac <__kernel_cosf>
 c010662:	e7f5      	b.n	c010650 <sinf+0x70>
 c010664:	3f490fd8 	.word	0x3f490fd8
 c010668:	00000000 	.word	0x00000000

0c01066c <finitef>:
 c01066c:	ee10 3a10 	vmov	r3, s0
 c010670:	f023 4000 	bic.w	r0, r3, #2147483648	@ 0x80000000
 c010674:	f1b0 4fff 	cmp.w	r0, #2139095040	@ 0x7f800000
 c010678:	bfac      	ite	ge
 c01067a:	2000      	movge	r0, #0
 c01067c:	2001      	movlt	r0, #1
 c01067e:	4770      	bx	lr

0c010680 <__ieee754_sqrt>:
 c010680:	4a6b      	ldr	r2, [pc, #428]	@ (c010830 <__ieee754_sqrt+0x1b0>)
 c010682:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c010686:	ec55 4b10 	vmov	r4, r5, d0
 c01068a:	43aa      	bics	r2, r5
 c01068c:	462b      	mov	r3, r5
 c01068e:	4621      	mov	r1, r4
 c010690:	d110      	bne.n	c0106b4 <__ieee754_sqrt+0x34>
 c010692:	4622      	mov	r2, r4
 c010694:	4620      	mov	r0, r4
 c010696:	4629      	mov	r1, r5
 c010698:	f7ef ffb8 	bl	c00060c <__aeabi_dmul>
 c01069c:	4602      	mov	r2, r0
 c01069e:	460b      	mov	r3, r1
 c0106a0:	4620      	mov	r0, r4
 c0106a2:	4629      	mov	r1, r5
 c0106a4:	f7ef fdfc 	bl	c0002a0 <__adddf3>
 c0106a8:	4604      	mov	r4, r0
 c0106aa:	460d      	mov	r5, r1
 c0106ac:	ec45 4b10 	vmov	d0, r4, r5
 c0106b0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0106b4:	2d00      	cmp	r5, #0
 c0106b6:	dc0e      	bgt.n	c0106d6 <__ieee754_sqrt+0x56>
 c0106b8:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 c0106bc:	4322      	orrs	r2, r4
 c0106be:	d0f5      	beq.n	c0106ac <__ieee754_sqrt+0x2c>
 c0106c0:	b19d      	cbz	r5, c0106ea <__ieee754_sqrt+0x6a>
 c0106c2:	4622      	mov	r2, r4
 c0106c4:	4620      	mov	r0, r4
 c0106c6:	4629      	mov	r1, r5
 c0106c8:	f7ef fde8 	bl	c00029c <__aeabi_dsub>
 c0106cc:	4602      	mov	r2, r0
 c0106ce:	460b      	mov	r3, r1
 c0106d0:	f7f0 f8c6 	bl	c000860 <__aeabi_ddiv>
 c0106d4:	e7e8      	b.n	c0106a8 <__ieee754_sqrt+0x28>
 c0106d6:	152a      	asrs	r2, r5, #20
 c0106d8:	d115      	bne.n	c010706 <__ieee754_sqrt+0x86>
 c0106da:	2000      	movs	r0, #0
 c0106dc:	e009      	b.n	c0106f2 <__ieee754_sqrt+0x72>
 c0106de:	0acb      	lsrs	r3, r1, #11
 c0106e0:	3a15      	subs	r2, #21
 c0106e2:	0549      	lsls	r1, r1, #21
 c0106e4:	2b00      	cmp	r3, #0
 c0106e6:	d0fa      	beq.n	c0106de <__ieee754_sqrt+0x5e>
 c0106e8:	e7f7      	b.n	c0106da <__ieee754_sqrt+0x5a>
 c0106ea:	462a      	mov	r2, r5
 c0106ec:	e7fa      	b.n	c0106e4 <__ieee754_sqrt+0x64>
 c0106ee:	005b      	lsls	r3, r3, #1
 c0106f0:	3001      	adds	r0, #1
 c0106f2:	02dc      	lsls	r4, r3, #11
 c0106f4:	d5fb      	bpl.n	c0106ee <__ieee754_sqrt+0x6e>
 c0106f6:	1e44      	subs	r4, r0, #1
 c0106f8:	1b12      	subs	r2, r2, r4
 c0106fa:	f1c0 0420 	rsb	r4, r0, #32
 c0106fe:	fa21 f404 	lsr.w	r4, r1, r4
 c010702:	4081      	lsls	r1, r0
 c010704:	4323      	orrs	r3, r4
 c010706:	f3c3 0313 	ubfx	r3, r3, #0, #20
 c01070a:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 c01070e:	07d2      	lsls	r2, r2, #31
 c010710:	f04f 0600 	mov.w	r6, #0
 c010714:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 c010718:	ea4f 0565 	mov.w	r5, r5, asr #1
 c01071c:	f04f 0016 	mov.w	r0, #22
 c010720:	4632      	mov	r2, r6
 c010722:	bf58      	it	pl
 c010724:	005b      	lslpl	r3, r3, #1
 c010726:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 c01072a:	bf5c      	itt	pl
 c01072c:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 c010730:	0049      	lslpl	r1, r1, #1
 c010732:	005b      	lsls	r3, r3, #1
 c010734:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 c010738:	0049      	lsls	r1, r1, #1
 c01073a:	1917      	adds	r7, r2, r4
 c01073c:	429f      	cmp	r7, r3
 c01073e:	bfde      	ittt	le
 c010740:	193a      	addle	r2, r7, r4
 c010742:	1bdb      	suble	r3, r3, r7
 c010744:	1936      	addle	r6, r6, r4
 c010746:	0fcf      	lsrs	r7, r1, #31
 c010748:	3801      	subs	r0, #1
 c01074a:	ea4f 0141 	mov.w	r1, r1, lsl #1
 c01074e:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 c010752:	ea4f 0454 	mov.w	r4, r4, lsr #1
 c010756:	d1f0      	bne.n	c01073a <__ieee754_sqrt+0xba>
 c010758:	4604      	mov	r4, r0
 c01075a:	2720      	movs	r7, #32
 c01075c:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 c010760:	429a      	cmp	r2, r3
 c010762:	eb00 0e0c 	add.w	lr, r0, ip
 c010766:	db02      	blt.n	c01076e <__ieee754_sqrt+0xee>
 c010768:	d113      	bne.n	c010792 <__ieee754_sqrt+0x112>
 c01076a:	458e      	cmp	lr, r1
 c01076c:	d811      	bhi.n	c010792 <__ieee754_sqrt+0x112>
 c01076e:	f1be 0f00 	cmp.w	lr, #0
 c010772:	eb0e 000c 	add.w	r0, lr, ip
 c010776:	da43      	bge.n	c010800 <__ieee754_sqrt+0x180>
 c010778:	2800      	cmp	r0, #0
 c01077a:	db41      	blt.n	c010800 <__ieee754_sqrt+0x180>
 c01077c:	f102 0801 	add.w	r8, r2, #1
 c010780:	1a9b      	subs	r3, r3, r2
 c010782:	458e      	cmp	lr, r1
 c010784:	4464      	add	r4, ip
 c010786:	eba1 010e 	sub.w	r1, r1, lr
 c01078a:	bf88      	it	hi
 c01078c:	f103 33ff 	addhi.w	r3, r3, #4294967295
 c010790:	4642      	mov	r2, r8
 c010792:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 c010796:	3f01      	subs	r7, #1
 c010798:	ea4f 0141 	mov.w	r1, r1, lsl #1
 c01079c:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 c0107a0:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 c0107a4:	d1dc      	bne.n	c010760 <__ieee754_sqrt+0xe0>
 c0107a6:	4319      	orrs	r1, r3
 c0107a8:	d01b      	beq.n	c0107e2 <__ieee754_sqrt+0x162>
 c0107aa:	f8df a088 	ldr.w	sl, [pc, #136]	@ c010834 <__ieee754_sqrt+0x1b4>
 c0107ae:	f8df b088 	ldr.w	fp, [pc, #136]	@ c010838 <__ieee754_sqrt+0x1b8>
 c0107b2:	e9da 0100 	ldrd	r0, r1, [sl]
 c0107b6:	e9db 2300 	ldrd	r2, r3, [fp]
 c0107ba:	e9da 8900 	ldrd	r8, r9, [sl]
 c0107be:	f7ef fd6d 	bl	c00029c <__aeabi_dsub>
 c0107c2:	4602      	mov	r2, r0
 c0107c4:	460b      	mov	r3, r1
 c0107c6:	4640      	mov	r0, r8
 c0107c8:	4649      	mov	r1, r9
 c0107ca:	f7f0 f99b 	bl	c000b04 <__aeabi_dcmple>
 c0107ce:	b140      	cbz	r0, c0107e2 <__ieee754_sqrt+0x162>
 c0107d0:	f1b4 3fff 	cmp.w	r4, #4294967295
 c0107d4:	e9da 0100 	ldrd	r0, r1, [sl]
 c0107d8:	e9db 2300 	ldrd	r2, r3, [fp]
 c0107dc:	d112      	bne.n	c010804 <__ieee754_sqrt+0x184>
 c0107de:	3601      	adds	r6, #1
 c0107e0:	463c      	mov	r4, r7
 c0107e2:	1072      	asrs	r2, r6, #1
 c0107e4:	07f1      	lsls	r1, r6, #31
 c0107e6:	ea4f 0354 	mov.w	r3, r4, lsr #1
 c0107ea:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 c0107ee:	bf48      	it	mi
 c0107f0:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 c0107f4:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 c0107f8:	4618      	mov	r0, r3
 c0107fa:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 c0107fe:	e753      	b.n	c0106a8 <__ieee754_sqrt+0x28>
 c010800:	4690      	mov	r8, r2
 c010802:	e7bd      	b.n	c010780 <__ieee754_sqrt+0x100>
 c010804:	e9da 8900 	ldrd	r8, r9, [sl]
 c010808:	f7ef fd4a 	bl	c0002a0 <__adddf3>
 c01080c:	4602      	mov	r2, r0
 c01080e:	460b      	mov	r3, r1
 c010810:	4640      	mov	r0, r8
 c010812:	4649      	mov	r1, r9
 c010814:	f7f0 f96c 	bl	c000af0 <__aeabi_dcmplt>
 c010818:	b128      	cbz	r0, c010826 <__ieee754_sqrt+0x1a6>
 c01081a:	1ca0      	adds	r0, r4, #2
 c01081c:	f104 0402 	add.w	r4, r4, #2
 c010820:	bf08      	it	eq
 c010822:	3601      	addeq	r6, #1
 c010824:	e7dd      	b.n	c0107e2 <__ieee754_sqrt+0x162>
 c010826:	1c63      	adds	r3, r4, #1
 c010828:	f023 0401 	bic.w	r4, r3, #1
 c01082c:	e7d9      	b.n	c0107e2 <__ieee754_sqrt+0x162>
 c01082e:	bf00      	nop
 c010830:	7ff00000 	.word	0x7ff00000
 c010834:	30000198 	.word	0x30000198
 c010838:	30000190 	.word	0x30000190

0c01083c <__ieee754_sqrtf>:
 c01083c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 c010840:	4770      	bx	lr
 c010842:	0000      	movs	r0, r0
 c010844:	0000      	movs	r0, r0
	...

0c010848 <__ieee754_log>:
 c010848:	ec51 0b10 	vmov	r0, r1, d0
 c01084c:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 c010850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c010854:	460d      	mov	r5, r1
 c010856:	b087      	sub	sp, #28
 c010858:	da26      	bge.n	c0108a8 <__ieee754_log+0x60>
 c01085a:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 c01085e:	4602      	mov	r2, r0
 c010860:	4303      	orrs	r3, r0
 c010862:	d10a      	bne.n	c01087a <__ieee754_log+0x32>
 c010864:	2200      	movs	r2, #0
 c010866:	2300      	movs	r3, #0
 c010868:	2000      	movs	r0, #0
 c01086a:	49cb      	ldr	r1, [pc, #812]	@ (c010b98 <__ieee754_log+0x350>)
 c01086c:	f7ef fff8 	bl	c000860 <__aeabi_ddiv>
 c010870:	ec41 0b10 	vmov	d0, r0, r1
 c010874:	b007      	add	sp, #28
 c010876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c01087a:	2900      	cmp	r1, #0
 c01087c:	da05      	bge.n	c01088a <__ieee754_log+0x42>
 c01087e:	460b      	mov	r3, r1
 c010880:	f7ef fd0c 	bl	c00029c <__aeabi_dsub>
 c010884:	2200      	movs	r2, #0
 c010886:	2300      	movs	r3, #0
 c010888:	e7f0      	b.n	c01086c <__ieee754_log+0x24>
 c01088a:	4bc4      	ldr	r3, [pc, #784]	@ (c010b9c <__ieee754_log+0x354>)
 c01088c:	2200      	movs	r2, #0
 c01088e:	f7ef febd 	bl	c00060c <__aeabi_dmul>
 c010892:	f06f 0335 	mvn.w	r3, #53	@ 0x35
 c010896:	460d      	mov	r5, r1
 c010898:	4ac1      	ldr	r2, [pc, #772]	@ (c010ba0 <__ieee754_log+0x358>)
 c01089a:	4295      	cmp	r5, r2
 c01089c:	dd06      	ble.n	c0108ac <__ieee754_log+0x64>
 c01089e:	4602      	mov	r2, r0
 c0108a0:	460b      	mov	r3, r1
 c0108a2:	f7ef fcfd 	bl	c0002a0 <__adddf3>
 c0108a6:	e7e3      	b.n	c010870 <__ieee754_log+0x28>
 c0108a8:	2300      	movs	r3, #0
 c0108aa:	e7f5      	b.n	c010898 <__ieee754_log+0x50>
 c0108ac:	152c      	asrs	r4, r5, #20
 c0108ae:	f3c5 0513 	ubfx	r5, r5, #0, #20
 c0108b2:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 c0108b6:	441c      	add	r4, r3
 c0108b8:	f505 2315 	add.w	r3, r5, #610304	@ 0x95000
 c0108bc:	f603 7364 	addw	r3, r3, #3940	@ 0xf64
 c0108c0:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 c0108c4:	f083 527f 	eor.w	r2, r3, #1069547520	@ 0x3fc00000
 c0108c8:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 c0108cc:	4bb5      	ldr	r3, [pc, #724]	@ (c010ba4 <__ieee754_log+0x35c>)
 c0108ce:	f482 1240 	eor.w	r2, r2, #3145728	@ 0x300000
 c0108d2:	ea42 0105 	orr.w	r1, r2, r5
 c0108d6:	2200      	movs	r2, #0
 c0108d8:	f7ef fce0 	bl	c00029c <__aeabi_dsub>
 c0108dc:	1cab      	adds	r3, r5, #2
 c0108de:	4682      	mov	sl, r0
 c0108e0:	468b      	mov	fp, r1
 c0108e2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 c0108e6:	2200      	movs	r2, #0
 c0108e8:	2b02      	cmp	r3, #2
 c0108ea:	dc53      	bgt.n	c010994 <__ieee754_log+0x14c>
 c0108ec:	2300      	movs	r3, #0
 c0108ee:	f7f0 f8f5 	bl	c000adc <__aeabi_dcmpeq>
 c0108f2:	b1d0      	cbz	r0, c01092a <__ieee754_log+0xe2>
 c0108f4:	2c00      	cmp	r4, #0
 c0108f6:	f000 8120 	beq.w	c010b3a <__ieee754_log+0x2f2>
 c0108fa:	4620      	mov	r0, r4
 c0108fc:	f7ef fe1c 	bl	c000538 <__aeabi_i2d>
 c010900:	4606      	mov	r6, r0
 c010902:	460f      	mov	r7, r1
 c010904:	a38e      	add	r3, pc, #568	@ (adr r3, c010b40 <__ieee754_log+0x2f8>)
 c010906:	e9d3 2300 	ldrd	r2, r3, [r3]
 c01090a:	f7ef fe7f 	bl	c00060c <__aeabi_dmul>
 c01090e:	4604      	mov	r4, r0
 c010910:	460d      	mov	r5, r1
 c010912:	4630      	mov	r0, r6
 c010914:	4639      	mov	r1, r7
 c010916:	a38c      	add	r3, pc, #560	@ (adr r3, c010b48 <__ieee754_log+0x300>)
 c010918:	e9d3 2300 	ldrd	r2, r3, [r3]
 c01091c:	f7ef fe76 	bl	c00060c <__aeabi_dmul>
 c010920:	4602      	mov	r2, r0
 c010922:	460b      	mov	r3, r1
 c010924:	4620      	mov	r0, r4
 c010926:	4629      	mov	r1, r5
 c010928:	e7bb      	b.n	c0108a2 <__ieee754_log+0x5a>
 c01092a:	a389      	add	r3, pc, #548	@ (adr r3, c010b50 <__ieee754_log+0x308>)
 c01092c:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010930:	4650      	mov	r0, sl
 c010932:	4659      	mov	r1, fp
 c010934:	f7ef fe6a 	bl	c00060c <__aeabi_dmul>
 c010938:	4602      	mov	r2, r0
 c01093a:	460b      	mov	r3, r1
 c01093c:	2000      	movs	r0, #0
 c01093e:	499a      	ldr	r1, [pc, #616]	@ (c010ba8 <__ieee754_log+0x360>)
 c010940:	f7ef fcac 	bl	c00029c <__aeabi_dsub>
 c010944:	4606      	mov	r6, r0
 c010946:	460f      	mov	r7, r1
 c010948:	4652      	mov	r2, sl
 c01094a:	465b      	mov	r3, fp
 c01094c:	4650      	mov	r0, sl
 c01094e:	4659      	mov	r1, fp
 c010950:	f7ef fe5c 	bl	c00060c <__aeabi_dmul>
 c010954:	4602      	mov	r2, r0
 c010956:	460b      	mov	r3, r1
 c010958:	4630      	mov	r0, r6
 c01095a:	4639      	mov	r1, r7
 c01095c:	f7ef fe56 	bl	c00060c <__aeabi_dmul>
 c010960:	4606      	mov	r6, r0
 c010962:	460f      	mov	r7, r1
 c010964:	b914      	cbnz	r4, c01096c <__ieee754_log+0x124>
 c010966:	4632      	mov	r2, r6
 c010968:	463b      	mov	r3, r7
 c01096a:	e0a0      	b.n	c010aae <__ieee754_log+0x266>
 c01096c:	4620      	mov	r0, r4
 c01096e:	f7ef fde3 	bl	c000538 <__aeabi_i2d>
 c010972:	4680      	mov	r8, r0
 c010974:	4689      	mov	r9, r1
 c010976:	a372      	add	r3, pc, #456	@ (adr r3, c010b40 <__ieee754_log+0x2f8>)
 c010978:	e9d3 2300 	ldrd	r2, r3, [r3]
 c01097c:	f7ef fe46 	bl	c00060c <__aeabi_dmul>
 c010980:	4604      	mov	r4, r0
 c010982:	460d      	mov	r5, r1
 c010984:	4640      	mov	r0, r8
 c010986:	4649      	mov	r1, r9
 c010988:	a36f      	add	r3, pc, #444	@ (adr r3, c010b48 <__ieee754_log+0x300>)
 c01098a:	e9d3 2300 	ldrd	r2, r3, [r3]
 c01098e:	f7ef fe3d 	bl	c00060c <__aeabi_dmul>
 c010992:	e0a5      	b.n	c010ae0 <__ieee754_log+0x298>
 c010994:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 c010998:	f5a5 26c2 	sub.w	r6, r5, #397312	@ 0x61000
 c01099c:	f7ef fc80 	bl	c0002a0 <__adddf3>
 c0109a0:	4602      	mov	r2, r0
 c0109a2:	460b      	mov	r3, r1
 c0109a4:	4650      	mov	r0, sl
 c0109a6:	4659      	mov	r1, fp
 c0109a8:	f5c5 25d7 	rsb	r5, r5, #440320	@ 0x6b800
 c0109ac:	f7ef ff58 	bl	c000860 <__aeabi_ddiv>
 c0109b0:	f2a6 467a 	subw	r6, r6, #1146	@ 0x47a
 c0109b4:	3551      	adds	r5, #81	@ 0x51
 c0109b6:	e9cd 0100 	strd	r0, r1, [sp]
 c0109ba:	4620      	mov	r0, r4
 c0109bc:	4335      	orrs	r5, r6
 c0109be:	f7ef fdbb 	bl	c000538 <__aeabi_i2d>
 c0109c2:	e9dd 2300 	ldrd	r2, r3, [sp]
 c0109c6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 c0109ca:	4610      	mov	r0, r2
 c0109cc:	4619      	mov	r1, r3
 c0109ce:	f7ef fe1d 	bl	c00060c <__aeabi_dmul>
 c0109d2:	4602      	mov	r2, r0
 c0109d4:	460b      	mov	r3, r1
 c0109d6:	e9cd 2304 	strd	r2, r3, [sp, #16]
 c0109da:	f7ef fe17 	bl	c00060c <__aeabi_dmul>
 c0109de:	4680      	mov	r8, r0
 c0109e0:	4689      	mov	r9, r1
 c0109e2:	a35d      	add	r3, pc, #372	@ (adr r3, c010b58 <__ieee754_log+0x310>)
 c0109e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 c0109e8:	f7ef fe10 	bl	c00060c <__aeabi_dmul>
 c0109ec:	a35c      	add	r3, pc, #368	@ (adr r3, c010b60 <__ieee754_log+0x318>)
 c0109ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 c0109f2:	f7ef fc55 	bl	c0002a0 <__adddf3>
 c0109f6:	4642      	mov	r2, r8
 c0109f8:	464b      	mov	r3, r9
 c0109fa:	f7ef fe07 	bl	c00060c <__aeabi_dmul>
 c0109fe:	a35a      	add	r3, pc, #360	@ (adr r3, c010b68 <__ieee754_log+0x320>)
 c010a00:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010a04:	f7ef fc4c 	bl	c0002a0 <__adddf3>
 c010a08:	4642      	mov	r2, r8
 c010a0a:	464b      	mov	r3, r9
 c010a0c:	f7ef fdfe 	bl	c00060c <__aeabi_dmul>
 c010a10:	a357      	add	r3, pc, #348	@ (adr r3, c010b70 <__ieee754_log+0x328>)
 c010a12:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010a16:	f7ef fc43 	bl	c0002a0 <__adddf3>
 c010a1a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 c010a1e:	f7ef fdf5 	bl	c00060c <__aeabi_dmul>
 c010a22:	a355      	add	r3, pc, #340	@ (adr r3, c010b78 <__ieee754_log+0x330>)
 c010a24:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010a28:	e9cd 0104 	strd	r0, r1, [sp, #16]
 c010a2c:	4640      	mov	r0, r8
 c010a2e:	4649      	mov	r1, r9
 c010a30:	f7ef fdec 	bl	c00060c <__aeabi_dmul>
 c010a34:	a352      	add	r3, pc, #328	@ (adr r3, c010b80 <__ieee754_log+0x338>)
 c010a36:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010a3a:	f7ef fc31 	bl	c0002a0 <__adddf3>
 c010a3e:	4642      	mov	r2, r8
 c010a40:	464b      	mov	r3, r9
 c010a42:	f7ef fde3 	bl	c00060c <__aeabi_dmul>
 c010a46:	a350      	add	r3, pc, #320	@ (adr r3, c010b88 <__ieee754_log+0x340>)
 c010a48:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010a4c:	f7ef fc28 	bl	c0002a0 <__adddf3>
 c010a50:	4642      	mov	r2, r8
 c010a52:	464b      	mov	r3, r9
 c010a54:	f7ef fdda 	bl	c00060c <__aeabi_dmul>
 c010a58:	4602      	mov	r2, r0
 c010a5a:	460b      	mov	r3, r1
 c010a5c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 c010a60:	f7ef fc1e 	bl	c0002a0 <__adddf3>
 c010a64:	2d00      	cmp	r5, #0
 c010a66:	4680      	mov	r8, r0
 c010a68:	4689      	mov	r9, r1
 c010a6a:	dd48      	ble.n	c010afe <__ieee754_log+0x2b6>
 c010a6c:	2200      	movs	r2, #0
 c010a6e:	4b4e      	ldr	r3, [pc, #312]	@ (c010ba8 <__ieee754_log+0x360>)
 c010a70:	4650      	mov	r0, sl
 c010a72:	4659      	mov	r1, fp
 c010a74:	f7ef fdca 	bl	c00060c <__aeabi_dmul>
 c010a78:	4652      	mov	r2, sl
 c010a7a:	465b      	mov	r3, fp
 c010a7c:	f7ef fdc6 	bl	c00060c <__aeabi_dmul>
 c010a80:	4602      	mov	r2, r0
 c010a82:	460b      	mov	r3, r1
 c010a84:	4606      	mov	r6, r0
 c010a86:	460f      	mov	r7, r1
 c010a88:	4640      	mov	r0, r8
 c010a8a:	4649      	mov	r1, r9
 c010a8c:	f7ef fc08 	bl	c0002a0 <__adddf3>
 c010a90:	e9dd 2300 	ldrd	r2, r3, [sp]
 c010a94:	f7ef fdba 	bl	c00060c <__aeabi_dmul>
 c010a98:	4680      	mov	r8, r0
 c010a9a:	4689      	mov	r9, r1
 c010a9c:	b964      	cbnz	r4, c010ab8 <__ieee754_log+0x270>
 c010a9e:	4602      	mov	r2, r0
 c010aa0:	460b      	mov	r3, r1
 c010aa2:	4630      	mov	r0, r6
 c010aa4:	4639      	mov	r1, r7
 c010aa6:	f7ef fbf9 	bl	c00029c <__aeabi_dsub>
 c010aaa:	4602      	mov	r2, r0
 c010aac:	460b      	mov	r3, r1
 c010aae:	4650      	mov	r0, sl
 c010ab0:	4659      	mov	r1, fp
 c010ab2:	f7ef fbf3 	bl	c00029c <__aeabi_dsub>
 c010ab6:	e6db      	b.n	c010870 <__ieee754_log+0x28>
 c010ab8:	a321      	add	r3, pc, #132	@ (adr r3, c010b40 <__ieee754_log+0x2f8>)
 c010aba:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010abe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 c010ac2:	f7ef fda3 	bl	c00060c <__aeabi_dmul>
 c010ac6:	4604      	mov	r4, r0
 c010ac8:	460d      	mov	r5, r1
 c010aca:	a31f      	add	r3, pc, #124	@ (adr r3, c010b48 <__ieee754_log+0x300>)
 c010acc:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010ad0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 c010ad4:	f7ef fd9a 	bl	c00060c <__aeabi_dmul>
 c010ad8:	4642      	mov	r2, r8
 c010ada:	464b      	mov	r3, r9
 c010adc:	f7ef fbe0 	bl	c0002a0 <__adddf3>
 c010ae0:	4602      	mov	r2, r0
 c010ae2:	460b      	mov	r3, r1
 c010ae4:	4630      	mov	r0, r6
 c010ae6:	4639      	mov	r1, r7
 c010ae8:	f7ef fbd8 	bl	c00029c <__aeabi_dsub>
 c010aec:	4652      	mov	r2, sl
 c010aee:	465b      	mov	r3, fp
 c010af0:	f7ef fbd4 	bl	c00029c <__aeabi_dsub>
 c010af4:	4602      	mov	r2, r0
 c010af6:	460b      	mov	r3, r1
 c010af8:	4620      	mov	r0, r4
 c010afa:	4629      	mov	r1, r5
 c010afc:	e7d9      	b.n	c010ab2 <__ieee754_log+0x26a>
 c010afe:	4602      	mov	r2, r0
 c010b00:	460b      	mov	r3, r1
 c010b02:	4650      	mov	r0, sl
 c010b04:	4659      	mov	r1, fp
 c010b06:	f7ef fbc9 	bl	c00029c <__aeabi_dsub>
 c010b0a:	e9dd 2300 	ldrd	r2, r3, [sp]
 c010b0e:	f7ef fd7d 	bl	c00060c <__aeabi_dmul>
 c010b12:	4606      	mov	r6, r0
 c010b14:	460f      	mov	r7, r1
 c010b16:	2c00      	cmp	r4, #0
 c010b18:	f43f af25 	beq.w	c010966 <__ieee754_log+0x11e>
 c010b1c:	a308      	add	r3, pc, #32	@ (adr r3, c010b40 <__ieee754_log+0x2f8>)
 c010b1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010b22:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 c010b26:	f7ef fd71 	bl	c00060c <__aeabi_dmul>
 c010b2a:	4604      	mov	r4, r0
 c010b2c:	460d      	mov	r5, r1
 c010b2e:	a306      	add	r3, pc, #24	@ (adr r3, c010b48 <__ieee754_log+0x300>)
 c010b30:	e9d3 2300 	ldrd	r2, r3, [r3]
 c010b34:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 c010b38:	e729      	b.n	c01098e <__ieee754_log+0x146>
 c010b3a:	ed9f 0b15 	vldr	d0, [pc, #84]	@ c010b90 <__ieee754_log+0x348>
 c010b3e:	e699      	b.n	c010874 <__ieee754_log+0x2c>
 c010b40:	fee00000 	.word	0xfee00000
 c010b44:	3fe62e42 	.word	0x3fe62e42
 c010b48:	35793c76 	.word	0x35793c76
 c010b4c:	3dea39ef 	.word	0x3dea39ef
 c010b50:	55555555 	.word	0x55555555
 c010b54:	3fd55555 	.word	0x3fd55555
 c010b58:	df3e5244 	.word	0xdf3e5244
 c010b5c:	3fc2f112 	.word	0x3fc2f112
 c010b60:	96cb03de 	.word	0x96cb03de
 c010b64:	3fc74664 	.word	0x3fc74664
 c010b68:	94229359 	.word	0x94229359
 c010b6c:	3fd24924 	.word	0x3fd24924
 c010b70:	55555593 	.word	0x55555593
 c010b74:	3fe55555 	.word	0x3fe55555
 c010b78:	d078c69f 	.word	0xd078c69f
 c010b7c:	3fc39a09 	.word	0x3fc39a09
 c010b80:	1d8e78af 	.word	0x1d8e78af
 c010b84:	3fcc71c5 	.word	0x3fcc71c5
 c010b88:	9997fa04 	.word	0x9997fa04
 c010b8c:	3fd99999 	.word	0x3fd99999
	...
 c010b98:	c3500000 	.word	0xc3500000
 c010b9c:	43500000 	.word	0x43500000
 c010ba0:	7fefffff 	.word	0x7fefffff
 c010ba4:	3ff00000 	.word	0x3ff00000
 c010ba8:	3fe00000 	.word	0x3fe00000

0c010bac <__kernel_cosf>:
 c010bac:	ee10 3a10 	vmov	r3, s0
 c010bb0:	eef0 6a40 	vmov.f32	s13, s0
 c010bb4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c010bb8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 c010bbc:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 c010bc0:	d204      	bcs.n	c010bcc <__kernel_cosf+0x20>
 c010bc2:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 c010bc6:	ee17 2a90 	vmov	r2, s15
 c010bca:	b342      	cbz	r2, c010c1e <__kernel_cosf+0x72>
 c010bcc:	ee26 7aa6 	vmul.f32	s14, s13, s13
 c010bd0:	eddf 7a1a 	vldr	s15, [pc, #104]	@ c010c3c <__kernel_cosf+0x90>
 c010bd4:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ c010c40 <__kernel_cosf+0x94>
 c010bd8:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 c010bdc:	4a19      	ldr	r2, [pc, #100]	@ (c010c44 <__kernel_cosf+0x98>)
 c010bde:	eea7 6a27 	vfma.f32	s12, s14, s15
 c010be2:	eddf 7a19 	vldr	s15, [pc, #100]	@ c010c48 <__kernel_cosf+0x9c>
 c010be6:	4293      	cmp	r3, r2
 c010be8:	eee6 7a07 	vfma.f32	s15, s12, s14
 c010bec:	ed9f 6a17 	vldr	s12, [pc, #92]	@ c010c4c <__kernel_cosf+0xa0>
 c010bf0:	eea7 6a87 	vfma.f32	s12, s15, s14
 c010bf4:	eddf 7a16 	vldr	s15, [pc, #88]	@ c010c50 <__kernel_cosf+0xa4>
 c010bf8:	eee6 7a07 	vfma.f32	s15, s12, s14
 c010bfc:	ed9f 6a15 	vldr	s12, [pc, #84]	@ c010c54 <__kernel_cosf+0xa8>
 c010c00:	eea7 6a87 	vfma.f32	s12, s15, s14
 c010c04:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 c010c08:	ee67 7a27 	vmul.f32	s15, s14, s15
 c010c0c:	ee26 6a07 	vmul.f32	s12, s12, s14
 c010c10:	eee7 0a06 	vfma.f32	s1, s14, s12
 c010c14:	d804      	bhi.n	c010c20 <__kernel_cosf+0x74>
 c010c16:	ee77 7ae0 	vsub.f32	s15, s15, s1
 c010c1a:	ee30 0a67 	vsub.f32	s0, s0, s15
 c010c1e:	4770      	bx	lr
 c010c20:	4a0d      	ldr	r2, [pc, #52]	@ (c010c58 <__kernel_cosf+0xac>)
 c010c22:	4293      	cmp	r3, r2
 c010c24:	bf96      	itet	ls
 c010c26:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 c010c2a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 c010c2e:	ee07 3a10 	vmovls	s14, r3
 c010c32:	ee30 0a47 	vsub.f32	s0, s0, s14
 c010c36:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c010c3a:	e7ec      	b.n	c010c16 <__kernel_cosf+0x6a>
 c010c3c:	ad47d74e 	.word	0xad47d74e
 c010c40:	310f74f6 	.word	0x310f74f6
 c010c44:	3e999999 	.word	0x3e999999
 c010c48:	b493f27c 	.word	0xb493f27c
 c010c4c:	37d00d01 	.word	0x37d00d01
 c010c50:	bab60b61 	.word	0xbab60b61
 c010c54:	3d2aaaab 	.word	0x3d2aaaab
 c010c58:	3f480000 	.word	0x3f480000

0c010c5c <__kernel_sinf>:
 c010c5c:	ee10 3a10 	vmov	r3, s0
 c010c60:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 c010c64:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 c010c68:	d204      	bcs.n	c010c74 <__kernel_sinf+0x18>
 c010c6a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 c010c6e:	ee17 3a90 	vmov	r3, s15
 c010c72:	b35b      	cbz	r3, c010ccc <__kernel_sinf+0x70>
 c010c74:	ee20 7a00 	vmul.f32	s14, s0, s0
 c010c78:	eddf 7a15 	vldr	s15, [pc, #84]	@ c010cd0 <__kernel_sinf+0x74>
 c010c7c:	ed9f 6a15 	vldr	s12, [pc, #84]	@ c010cd4 <__kernel_sinf+0x78>
 c010c80:	eea7 6a27 	vfma.f32	s12, s14, s15
 c010c84:	eddf 7a14 	vldr	s15, [pc, #80]	@ c010cd8 <__kernel_sinf+0x7c>
 c010c88:	ee60 6a07 	vmul.f32	s13, s0, s14
 c010c8c:	eee6 7a07 	vfma.f32	s15, s12, s14
 c010c90:	ed9f 6a12 	vldr	s12, [pc, #72]	@ c010cdc <__kernel_sinf+0x80>
 c010c94:	eea7 6a87 	vfma.f32	s12, s15, s14
 c010c98:	eddf 7a11 	vldr	s15, [pc, #68]	@ c010ce0 <__kernel_sinf+0x84>
 c010c9c:	eee6 7a07 	vfma.f32	s15, s12, s14
 c010ca0:	b930      	cbnz	r0, c010cb0 <__kernel_sinf+0x54>
 c010ca2:	ed9f 6a10 	vldr	s12, [pc, #64]	@ c010ce4 <__kernel_sinf+0x88>
 c010ca6:	eea7 6a27 	vfma.f32	s12, s14, s15
 c010caa:	eea6 0a26 	vfma.f32	s0, s12, s13
 c010cae:	4770      	bx	lr
 c010cb0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 c010cb4:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 c010cb8:	eee0 7a86 	vfma.f32	s15, s1, s12
 c010cbc:	eed7 0a87 	vfnms.f32	s1, s15, s14
 c010cc0:	eddf 7a09 	vldr	s15, [pc, #36]	@ c010ce8 <__kernel_sinf+0x8c>
 c010cc4:	eee6 0aa7 	vfma.f32	s1, s13, s15
 c010cc8:	ee30 0a60 	vsub.f32	s0, s0, s1
 c010ccc:	4770      	bx	lr
 c010cce:	bf00      	nop
 c010cd0:	2f2ec9d3 	.word	0x2f2ec9d3
 c010cd4:	b2d72f34 	.word	0xb2d72f34
 c010cd8:	3638ef1b 	.word	0x3638ef1b
 c010cdc:	b9500d01 	.word	0xb9500d01
 c010ce0:	3c088889 	.word	0x3c088889
 c010ce4:	be2aaaab 	.word	0xbe2aaaab
 c010ce8:	3e2aaaab 	.word	0x3e2aaaab

0c010cec <__ieee754_expf>:
 c010cec:	ee10 2a10 	vmov	r2, s0
 c010cf0:	f022 4300 	bic.w	r3, r2, #2147483648	@ 0x80000000
 c010cf4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 c010cf8:	d902      	bls.n	c010d00 <__ieee754_expf+0x14>
 c010cfa:	ee30 0a00 	vadd.f32	s0, s0, s0
 c010cfe:	4770      	bx	lr
 c010d00:	ea4f 71d2 	mov.w	r1, r2, lsr #31
 c010d04:	d105      	bne.n	c010d12 <__ieee754_expf+0x26>
 c010d06:	2900      	cmp	r1, #0
 c010d08:	eddf 7a4d 	vldr	s15, [pc, #308]	@ c010e40 <__ieee754_expf+0x154>
 c010d0c:	fe00 0a27 	vseleq.f32	s0, s0, s15
 c010d10:	4770      	bx	lr
 c010d12:	484c      	ldr	r0, [pc, #304]	@ (c010e44 <__ieee754_expf+0x158>)
 c010d14:	4282      	cmp	r2, r0
 c010d16:	dd02      	ble.n	c010d1e <__ieee754_expf+0x32>
 c010d18:	2000      	movs	r0, #0
 c010d1a:	f000 baf9 	b.w	c011310 <__math_oflowf>
 c010d1e:	2a00      	cmp	r2, #0
 c010d20:	da05      	bge.n	c010d2e <__ieee754_expf+0x42>
 c010d22:	4a49      	ldr	r2, [pc, #292]	@ (c010e48 <__ieee754_expf+0x15c>)
 c010d24:	4293      	cmp	r3, r2
 c010d26:	d902      	bls.n	c010d2e <__ieee754_expf+0x42>
 c010d28:	2000      	movs	r0, #0
 c010d2a:	f000 baeb 	b.w	c011304 <__math_uflowf>
 c010d2e:	4a47      	ldr	r2, [pc, #284]	@ (c010e4c <__ieee754_expf+0x160>)
 c010d30:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 c010d34:	4293      	cmp	r3, r2
 c010d36:	d952      	bls.n	c010dde <__ieee754_expf+0xf2>
 c010d38:	4a45      	ldr	r2, [pc, #276]	@ (c010e50 <__ieee754_expf+0x164>)
 c010d3a:	4293      	cmp	r3, r2
 c010d3c:	ea4f 0281 	mov.w	r2, r1, lsl #2
 c010d40:	d834      	bhi.n	c010dac <__ieee754_expf+0xc0>
 c010d42:	4b44      	ldr	r3, [pc, #272]	@ (c010e54 <__ieee754_expf+0x168>)
 c010d44:	4413      	add	r3, r2
 c010d46:	ed93 7a00 	vldr	s14, [r3]
 c010d4a:	4b43      	ldr	r3, [pc, #268]	@ (c010e58 <__ieee754_expf+0x16c>)
 c010d4c:	ee30 7a47 	vsub.f32	s14, s0, s14
 c010d50:	4413      	add	r3, r2
 c010d52:	f1c1 0201 	rsb	r2, r1, #1
 c010d56:	edd3 7a00 	vldr	s15, [r3]
 c010d5a:	1a52      	subs	r2, r2, r1
 c010d5c:	ee37 0a67 	vsub.f32	s0, s14, s15
 c010d60:	ee20 6a00 	vmul.f32	s12, s0, s0
 c010d64:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ c010e5c <__ieee754_expf+0x170>
 c010d68:	eddf 6a3d 	vldr	s13, [pc, #244]	@ c010e60 <__ieee754_expf+0x174>
 c010d6c:	eee6 6a05 	vfma.f32	s13, s12, s10
 c010d70:	ed9f 5a3c 	vldr	s10, [pc, #240]	@ c010e64 <__ieee754_expf+0x178>
 c010d74:	eea6 5a86 	vfma.f32	s10, s13, s12
 c010d78:	eddf 6a3b 	vldr	s13, [pc, #236]	@ c010e68 <__ieee754_expf+0x17c>
 c010d7c:	eee5 6a06 	vfma.f32	s13, s10, s12
 c010d80:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ c010e6c <__ieee754_expf+0x180>
 c010d84:	eea6 5a86 	vfma.f32	s10, s13, s12
 c010d88:	eef0 6a40 	vmov.f32	s13, s0
 c010d8c:	eee5 6a46 	vfms.f32	s13, s10, s12
 c010d90:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 c010d94:	ee20 5a26 	vmul.f32	s10, s0, s13
 c010d98:	bb92      	cbnz	r2, c010e00 <__ieee754_expf+0x114>
 c010d9a:	ee76 6ac6 	vsub.f32	s13, s13, s12
 c010d9e:	eec5 7a26 	vdiv.f32	s15, s10, s13
 c010da2:	ee37 0ac0 	vsub.f32	s0, s15, s0
 c010da6:	ee35 0ac0 	vsub.f32	s0, s11, s0
 c010daa:	4770      	bx	lr
 c010dac:	4b30      	ldr	r3, [pc, #192]	@ (c010e70 <__ieee754_expf+0x184>)
 c010dae:	ed9f 7a31 	vldr	s14, [pc, #196]	@ c010e74 <__ieee754_expf+0x188>
 c010db2:	4413      	add	r3, r2
 c010db4:	eddf 6a30 	vldr	s13, [pc, #192]	@ c010e78 <__ieee754_expf+0x18c>
 c010db8:	edd3 7a00 	vldr	s15, [r3]
 c010dbc:	eee0 7a07 	vfma.f32	s15, s0, s14
 c010dc0:	eeb0 7a40 	vmov.f32	s14, s0
 c010dc4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 c010dc8:	ee17 2a90 	vmov	r2, s15
 c010dcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c010dd0:	eea7 7ae6 	vfms.f32	s14, s15, s13
 c010dd4:	eddf 6a29 	vldr	s13, [pc, #164]	@ c010e7c <__ieee754_expf+0x190>
 c010dd8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 c010ddc:	e7be      	b.n	c010d5c <__ieee754_expf+0x70>
 c010dde:	f1b3 5f50 	cmp.w	r3, #872415232	@ 0x34000000
 c010de2:	d20b      	bcs.n	c010dfc <__ieee754_expf+0x110>
 c010de4:	eddf 6a26 	vldr	s13, [pc, #152]	@ c010e80 <__ieee754_expf+0x194>
 c010de8:	ee70 6a26 	vadd.f32	s13, s0, s13
 c010dec:	eef4 6ae5 	vcmpe.f32	s13, s11
 c010df0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c010df4:	dd02      	ble.n	c010dfc <__ieee754_expf+0x110>
 c010df6:	ee30 0a25 	vadd.f32	s0, s0, s11
 c010dfa:	4770      	bx	lr
 c010dfc:	2200      	movs	r2, #0
 c010dfe:	e7af      	b.n	c010d60 <__ieee754_expf+0x74>
 c010e00:	ee36 6a66 	vsub.f32	s12, s12, s13
 c010e04:	f112 0f7d 	cmn.w	r2, #125	@ 0x7d
 c010e08:	bfb8      	it	lt
 c010e0a:	3264      	addlt	r2, #100	@ 0x64
 c010e0c:	eec5 6a06 	vdiv.f32	s13, s10, s12
 c010e10:	ee77 7ae6 	vsub.f32	s15, s15, s13
 c010e14:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c010e18:	ee75 7ae7 	vsub.f32	s15, s11, s15
 c010e1c:	ee17 3a90 	vmov	r3, s15
 c010e20:	bfb5      	itete	lt
 c010e22:	eddf 7a18 	vldrlt	s15, [pc, #96]	@ c010e84 <__ieee754_expf+0x198>
 c010e26:	eb03 53c2 	addge.w	r3, r3, r2, lsl #23
 c010e2a:	eb03 53c2 	addlt.w	r3, r3, r2, lsl #23
 c010e2e:	ee00 3a10 	vmovge	s0, r3
 c010e32:	bfbc      	itt	lt
 c010e34:	ee00 3a10 	vmovlt	s0, r3
 c010e38:	ee20 0a27 	vmullt.f32	s0, s0, s15
 c010e3c:	4770      	bx	lr
 c010e3e:	bf00      	nop
 c010e40:	00000000 	.word	0x00000000
 c010e44:	42b17217 	.word	0x42b17217
 c010e48:	42cff1b5 	.word	0x42cff1b5
 c010e4c:	3eb17218 	.word	0x3eb17218
 c010e50:	3f851591 	.word	0x3f851591
 c010e54:	0c011dc4 	.word	0x0c011dc4
 c010e58:	0c011dbc 	.word	0x0c011dbc
 c010e5c:	3331bb4c 	.word	0x3331bb4c
 c010e60:	b5ddea0e 	.word	0xb5ddea0e
 c010e64:	388ab355 	.word	0x388ab355
 c010e68:	bb360b61 	.word	0xbb360b61
 c010e6c:	3e2aaaab 	.word	0x3e2aaaab
 c010e70:	0c011dcc 	.word	0x0c011dcc
 c010e74:	3fb8aa3b 	.word	0x3fb8aa3b
 c010e78:	3f317180 	.word	0x3f317180
 c010e7c:	3717f7d1 	.word	0x3717f7d1
 c010e80:	7149f2ca 	.word	0x7149f2ca
 c010e84:	0d800000 	.word	0x0d800000

0c010e88 <__ieee754_logf>:
 c010e88:	ee10 3a10 	vmov	r3, s0
 c010e8c:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 c010e90:	d106      	bne.n	c010ea0 <__ieee754_logf+0x18>
 c010e92:	ed9f 7a65 	vldr	s14, [pc, #404]	@ c011028 <__ieee754_logf+0x1a0>
 c010e96:	eddf 7a65 	vldr	s15, [pc, #404]	@ c01102c <__ieee754_logf+0x1a4>
 c010e9a:	ee87 0a27 	vdiv.f32	s0, s14, s15
 c010e9e:	4770      	bx	lr
 c010ea0:	2b00      	cmp	r3, #0
 c010ea2:	461a      	mov	r2, r3
 c010ea4:	da02      	bge.n	c010eac <__ieee754_logf+0x24>
 c010ea6:	ee30 7a40 	vsub.f32	s14, s0, s0
 c010eaa:	e7f4      	b.n	c010e96 <__ieee754_logf+0xe>
 c010eac:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 c010eb0:	db02      	blt.n	c010eb8 <__ieee754_logf+0x30>
 c010eb2:	ee30 0a00 	vadd.f32	s0, s0, s0
 c010eb6:	4770      	bx	lr
 c010eb8:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 c010ebc:	485c      	ldr	r0, [pc, #368]	@ (c011030 <__ieee754_logf+0x1a8>)
 c010ebe:	bfbb      	ittet	lt
 c010ec0:	eddf 7a5c 	vldrlt	s15, [pc, #368]	@ c011034 <__ieee754_logf+0x1ac>
 c010ec4:	f06f 0118 	mvnlt.w	r1, #24
 c010ec8:	2100      	movge	r1, #0
 c010eca:	ee60 7a27 	vmullt.f32	s15, s0, s15
 c010ece:	bfb8      	it	lt
 c010ed0:	ee17 2a90 	vmovlt	r2, s15
 c010ed4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 c010ed8:	15d3      	asrs	r3, r2, #23
 c010eda:	f3c2 0216 	ubfx	r2, r2, #0, #23
 c010ede:	3b7f      	subs	r3, #127	@ 0x7f
 c010ee0:	4410      	add	r0, r2
 c010ee2:	440b      	add	r3, r1
 c010ee4:	f400 0100 	and.w	r1, r0, #8388608	@ 0x800000
 c010ee8:	f081 517e 	eor.w	r1, r1, #1065353216	@ 0x3f800000
 c010eec:	eb03 53d0 	add.w	r3, r3, r0, lsr #23
 c010ef0:	f102 000f 	add.w	r0, r2, #15
 c010ef4:	4311      	orrs	r1, r2
 c010ef6:	ee00 1a10 	vmov	s0, r1
 c010efa:	494f      	ldr	r1, [pc, #316]	@ (c011038 <__ieee754_logf+0x1b0>)
 c010efc:	4001      	ands	r1, r0
 c010efe:	ee30 0a67 	vsub.f32	s0, s0, s15
 c010f02:	bb89      	cbnz	r1, c010f68 <__ieee754_logf+0xe0>
 c010f04:	eeb5 0a40 	vcmp.f32	s0, #0.0
 c010f08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c010f0c:	d10f      	bne.n	c010f2e <__ieee754_logf+0xa6>
 c010f0e:	2b00      	cmp	r3, #0
 c010f10:	f000 8087 	beq.w	c011022 <__ieee754_logf+0x19a>
 c010f14:	ee07 3a90 	vmov	s15, r3
 c010f18:	ed9f 0a48 	vldr	s0, [pc, #288]	@ c01103c <__ieee754_logf+0x1b4>
 c010f1c:	ed9f 7a48 	vldr	s14, [pc, #288]	@ c011040 <__ieee754_logf+0x1b8>
 c010f20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c010f24:	ee27 0a80 	vmul.f32	s0, s15, s0
 c010f28:	eea7 0a87 	vfma.f32	s0, s15, s14
 c010f2c:	4770      	bx	lr
 c010f2e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 c010f32:	eddf 6a44 	vldr	s13, [pc, #272]	@ c011044 <__ieee754_logf+0x1bc>
 c010f36:	ee20 7a00 	vmul.f32	s14, s0, s0
 c010f3a:	eee0 7a66 	vfms.f32	s15, s0, s13
 c010f3e:	ee27 7a27 	vmul.f32	s14, s14, s15
 c010f42:	b913      	cbnz	r3, c010f4a <__ieee754_logf+0xc2>
 c010f44:	ee30 0a47 	vsub.f32	s0, s0, s14
 c010f48:	4770      	bx	lr
 c010f4a:	ee07 3a90 	vmov	s15, r3
 c010f4e:	eddf 6a3b 	vldr	s13, [pc, #236]	@ c01103c <__ieee754_logf+0x1b4>
 c010f52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c010f56:	eea7 7ae6 	vfms.f32	s14, s15, s13
 c010f5a:	ee37 0a40 	vsub.f32	s0, s14, s0
 c010f5e:	ed9f 7a38 	vldr	s14, [pc, #224]	@ c011040 <__ieee754_logf+0x1b8>
 c010f62:	ee97 0a87 	vfnms.f32	s0, s15, s14
 c010f66:	4770      	bx	lr
 c010f68:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 c010f6c:	eddf 5a36 	vldr	s11, [pc, #216]	@ c011048 <__ieee754_logf+0x1c0>
 c010f70:	eddf 4a36 	vldr	s9, [pc, #216]	@ c01104c <__ieee754_logf+0x1c4>
 c010f74:	4936      	ldr	r1, [pc, #216]	@ (c011050 <__ieee754_logf+0x1c8>)
 c010f76:	ee70 7a27 	vadd.f32	s15, s0, s15
 c010f7a:	4411      	add	r1, r2
 c010f7c:	f5c2 1257 	rsb	r2, r2, #3522560	@ 0x35c000
 c010f80:	ee80 6a27 	vdiv.f32	s12, s0, s15
 c010f84:	ee07 3a90 	vmov	s15, r3
 c010f88:	f502 7222 	add.w	r2, r2, #648	@ 0x288
 c010f8c:	430a      	orrs	r2, r1
 c010f8e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 c010f92:	eddf 7a30 	vldr	s15, [pc, #192]	@ c011054 <__ieee754_logf+0x1cc>
 c010f96:	2a00      	cmp	r2, #0
 c010f98:	ee26 5a06 	vmul.f32	s10, s12, s12
 c010f9c:	ee25 7a05 	vmul.f32	s14, s10, s10
 c010fa0:	eee7 7a25 	vfma.f32	s15, s14, s11
 c010fa4:	eddf 5a2c 	vldr	s11, [pc, #176]	@ c011058 <__ieee754_logf+0x1d0>
 c010fa8:	eee7 5a87 	vfma.f32	s11, s15, s14
 c010fac:	eddf 7a2b 	vldr	s15, [pc, #172]	@ c01105c <__ieee754_logf+0x1d4>
 c010fb0:	eee7 7a24 	vfma.f32	s15, s14, s9
 c010fb4:	eddf 4a2a 	vldr	s9, [pc, #168]	@ c011060 <__ieee754_logf+0x1d8>
 c010fb8:	eee7 4a87 	vfma.f32	s9, s15, s14
 c010fbc:	eddf 7a29 	vldr	s15, [pc, #164]	@ c011064 <__ieee754_logf+0x1dc>
 c010fc0:	eee4 7a87 	vfma.f32	s15, s9, s14
 c010fc4:	ee67 7a85 	vmul.f32	s15, s15, s10
 c010fc8:	eee5 7a87 	vfma.f32	s15, s11, s14
 c010fcc:	dd1a      	ble.n	c011004 <__ieee754_logf+0x17c>
 c010fce:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 c010fd2:	ee20 7a07 	vmul.f32	s14, s0, s14
 c010fd6:	ee27 7a00 	vmul.f32	s14, s14, s0
 c010fda:	ee77 7a87 	vadd.f32	s15, s15, s14
 c010fde:	ee67 7a86 	vmul.f32	s15, s15, s12
 c010fe2:	b913      	cbnz	r3, c010fea <__ieee754_logf+0x162>
 c010fe4:	ee37 7a67 	vsub.f32	s14, s14, s15
 c010fe8:	e7ac      	b.n	c010f44 <__ieee754_logf+0xbc>
 c010fea:	ed9f 6a14 	vldr	s12, [pc, #80]	@ c01103c <__ieee754_logf+0x1b4>
 c010fee:	eee6 7a86 	vfma.f32	s15, s13, s12
 c010ff2:	ee37 7a67 	vsub.f32	s14, s14, s15
 c010ff6:	ee37 0a40 	vsub.f32	s0, s14, s0
 c010ffa:	eddf 7a11 	vldr	s15, [pc, #68]	@ c011040 <__ieee754_logf+0x1b8>
 c010ffe:	ee96 0aa7 	vfnms.f32	s0, s13, s15
 c011002:	4770      	bx	lr
 c011004:	ee70 7a67 	vsub.f32	s15, s0, s15
 c011008:	ee67 7a86 	vmul.f32	s15, s15, s12
 c01100c:	b913      	cbnz	r3, c011014 <__ieee754_logf+0x18c>
 c01100e:	ee30 0a67 	vsub.f32	s0, s0, s15
 c011012:	4770      	bx	lr
 c011014:	ed9f 7a09 	vldr	s14, [pc, #36]	@ c01103c <__ieee754_logf+0x1b4>
 c011018:	eee6 7ac7 	vfms.f32	s15, s13, s14
 c01101c:	ee37 0ac0 	vsub.f32	s0, s15, s0
 c011020:	e7eb      	b.n	c010ffa <__ieee754_logf+0x172>
 c011022:	ed9f 0a02 	vldr	s0, [pc, #8]	@ c01102c <__ieee754_logf+0x1a4>
 c011026:	4770      	bx	lr
 c011028:	cc000000 	.word	0xcc000000
 c01102c:	00000000 	.word	0x00000000
 c011030:	004afb20 	.word	0x004afb20
 c011034:	4c000000 	.word	0x4c000000
 c011038:	007ffff0 	.word	0x007ffff0
 c01103c:	3717f7d1 	.word	0x3717f7d1
 c011040:	3f317180 	.word	0x3f317180
 c011044:	3eaaaaab 	.word	0x3eaaaaab
 c011048:	3e1cd04f 	.word	0x3e1cd04f
 c01104c:	3e178897 	.word	0x3e178897
 c011050:	ffcf5c30 	.word	0xffcf5c30
 c011054:	3e638e29 	.word	0x3e638e29
 c011058:	3ecccccd 	.word	0x3ecccccd
 c01105c:	3e3a3325 	.word	0x3e3a3325
 c011060:	3e924925 	.word	0x3e924925
 c011064:	3f2aaaab 	.word	0x3f2aaaab

0c011068 <__ieee754_rem_pio2f>:
 c011068:	b5f0      	push	{r4, r5, r6, r7, lr}
 c01106a:	ee10 6a10 	vmov	r6, s0
 c01106e:	4b87      	ldr	r3, [pc, #540]	@ (c01128c <__ieee754_rem_pio2f+0x224>)
 c011070:	b087      	sub	sp, #28
 c011072:	4604      	mov	r4, r0
 c011074:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 c011078:	429d      	cmp	r5, r3
 c01107a:	d805      	bhi.n	c011088 <__ieee754_rem_pio2f+0x20>
 c01107c:	2300      	movs	r3, #0
 c01107e:	ed80 0a00 	vstr	s0, [r0]
 c011082:	6043      	str	r3, [r0, #4]
 c011084:	2000      	movs	r0, #0
 c011086:	e022      	b.n	c0110ce <__ieee754_rem_pio2f+0x66>
 c011088:	4b81      	ldr	r3, [pc, #516]	@ (c011290 <__ieee754_rem_pio2f+0x228>)
 c01108a:	429d      	cmp	r5, r3
 c01108c:	d83a      	bhi.n	c011104 <__ieee754_rem_pio2f+0x9c>
 c01108e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 c011092:	2e00      	cmp	r6, #0
 c011094:	ed9f 7a7f 	vldr	s14, [pc, #508]	@ c011294 <__ieee754_rem_pio2f+0x22c>
 c011098:	f023 030f 	bic.w	r3, r3, #15
 c01109c:	4a7e      	ldr	r2, [pc, #504]	@ (c011298 <__ieee754_rem_pio2f+0x230>)
 c01109e:	dd18      	ble.n	c0110d2 <__ieee754_rem_pio2f+0x6a>
 c0110a0:	4293      	cmp	r3, r2
 c0110a2:	ee70 7a47 	vsub.f32	s15, s0, s14
 c0110a6:	bf09      	itett	eq
 c0110a8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	@ c01129c <__ieee754_rem_pio2f+0x234>
 c0110ac:	eddf 6a7c 	vldrne	s13, [pc, #496]	@ c0112a0 <__ieee754_rem_pio2f+0x238>
 c0110b0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 c0110b4:	eddf 6a7b 	vldreq	s13, [pc, #492]	@ c0112a4 <__ieee754_rem_pio2f+0x23c>
 c0110b8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 c0110bc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c0110c0:	ed80 7a00 	vstr	s14, [r0]
 c0110c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 c0110c8:	edc0 7a01 	vstr	s15, [r0, #4]
 c0110cc:	2001      	movs	r0, #1
 c0110ce:	b007      	add	sp, #28
 c0110d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 c0110d2:	4293      	cmp	r3, r2
 c0110d4:	ee70 7a07 	vadd.f32	s15, s0, s14
 c0110d8:	bf09      	itett	eq
 c0110da:	ed9f 7a70 	vldreq	s14, [pc, #448]	@ c01129c <__ieee754_rem_pio2f+0x234>
 c0110de:	eddf 6a70 	vldrne	s13, [pc, #448]	@ c0112a0 <__ieee754_rem_pio2f+0x238>
 c0110e2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 c0110e6:	eddf 6a6f 	vldreq	s13, [pc, #444]	@ c0112a4 <__ieee754_rem_pio2f+0x23c>
 c0110ea:	ee37 7aa6 	vadd.f32	s14, s15, s13
 c0110ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c0110f2:	ed80 7a00 	vstr	s14, [r0]
 c0110f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 c0110fa:	edc0 7a01 	vstr	s15, [r0, #4]
 c0110fe:	f04f 30ff 	mov.w	r0, #4294967295
 c011102:	e7e4      	b.n	c0110ce <__ieee754_rem_pio2f+0x66>
 c011104:	4b68      	ldr	r3, [pc, #416]	@ (c0112a8 <__ieee754_rem_pio2f+0x240>)
 c011106:	429d      	cmp	r5, r3
 c011108:	d872      	bhi.n	c0111f0 <__ieee754_rem_pio2f+0x188>
 c01110a:	f000 f8db 	bl	c0112c4 <fabsf>
 c01110e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 c011112:	ed9f 7a66 	vldr	s14, [pc, #408]	@ c0112ac <__ieee754_rem_pio2f+0x244>
 c011116:	eee0 7a07 	vfma.f32	s15, s0, s14
 c01111a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 c01111e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 c011122:	ee17 0a90 	vmov	r0, s15
 c011126:	eddf 7a5b 	vldr	s15, [pc, #364]	@ c011294 <__ieee754_rem_pio2f+0x22c>
 c01112a:	281f      	cmp	r0, #31
 c01112c:	eea7 0a67 	vfms.f32	s0, s14, s15
 c011130:	eddf 7a5b 	vldr	s15, [pc, #364]	@ c0112a0 <__ieee754_rem_pio2f+0x238>
 c011134:	eeb1 6a47 	vneg.f32	s12, s14
 c011138:	ee67 7a27 	vmul.f32	s15, s14, s15
 c01113c:	ee70 6a67 	vsub.f32	s13, s0, s15
 c011140:	ee16 1a90 	vmov	r1, s13
 c011144:	dc09      	bgt.n	c01115a <__ieee754_rem_pio2f+0xf2>
 c011146:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 c01114a:	1e47      	subs	r7, r0, #1
 c01114c:	4a58      	ldr	r2, [pc, #352]	@ (c0112b0 <__ieee754_rem_pio2f+0x248>)
 c01114e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 c011152:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 c011156:	4293      	cmp	r3, r2
 c011158:	d106      	bne.n	c011168 <__ieee754_rem_pio2f+0x100>
 c01115a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 c01115e:	15eb      	asrs	r3, r5, #23
 c011160:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 c011164:	2a08      	cmp	r2, #8
 c011166:	dc14      	bgt.n	c011192 <__ieee754_rem_pio2f+0x12a>
 c011168:	6021      	str	r1, [r4, #0]
 c01116a:	ed94 7a00 	vldr	s14, [r4]
 c01116e:	2e00      	cmp	r6, #0
 c011170:	ee30 0a47 	vsub.f32	s0, s0, s14
 c011174:	ee30 0a67 	vsub.f32	s0, s0, s15
 c011178:	ed84 0a01 	vstr	s0, [r4, #4]
 c01117c:	daa7      	bge.n	c0110ce <__ieee754_rem_pio2f+0x66>
 c01117e:	eeb1 7a47 	vneg.f32	s14, s14
 c011182:	eeb1 0a40 	vneg.f32	s0, s0
 c011186:	ed84 7a00 	vstr	s14, [r4]
 c01118a:	ed84 0a01 	vstr	s0, [r4, #4]
 c01118e:	4240      	negs	r0, r0
 c011190:	e79d      	b.n	c0110ce <__ieee754_rem_pio2f+0x66>
 c011192:	eef0 6a40 	vmov.f32	s13, s0
 c011196:	eddf 5a41 	vldr	s11, [pc, #260]	@ c01129c <__ieee754_rem_pio2f+0x234>
 c01119a:	eee6 6a25 	vfma.f32	s13, s12, s11
 c01119e:	ee70 7a66 	vsub.f32	s15, s0, s13
 c0111a2:	eee6 7a25 	vfma.f32	s15, s12, s11
 c0111a6:	eddf 5a3f 	vldr	s11, [pc, #252]	@ c0112a4 <__ieee754_rem_pio2f+0x23c>
 c0111aa:	eed7 7a25 	vfnms.f32	s15, s14, s11
 c0111ae:	ee76 5ae7 	vsub.f32	s11, s13, s15
 c0111b2:	ee15 2a90 	vmov	r2, s11
 c0111b6:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 c0111ba:	1a5b      	subs	r3, r3, r1
 c0111bc:	2b19      	cmp	r3, #25
 c0111be:	dc04      	bgt.n	c0111ca <__ieee754_rem_pio2f+0x162>
 c0111c0:	eeb0 0a66 	vmov.f32	s0, s13
 c0111c4:	edc4 5a00 	vstr	s11, [r4]
 c0111c8:	e7cf      	b.n	c01116a <__ieee754_rem_pio2f+0x102>
 c0111ca:	eeb0 0a66 	vmov.f32	s0, s13
 c0111ce:	eddf 5a39 	vldr	s11, [pc, #228]	@ c0112b4 <__ieee754_rem_pio2f+0x24c>
 c0111d2:	eea6 0a25 	vfma.f32	s0, s12, s11
 c0111d6:	ee76 7ac0 	vsub.f32	s15, s13, s0
 c0111da:	eddf 6a37 	vldr	s13, [pc, #220]	@ c0112b8 <__ieee754_rem_pio2f+0x250>
 c0111de:	eee6 7a25 	vfma.f32	s15, s12, s11
 c0111e2:	eed7 7a26 	vfnms.f32	s15, s14, s13
 c0111e6:	ee30 7a67 	vsub.f32	s14, s0, s15
 c0111ea:	ed84 7a00 	vstr	s14, [r4]
 c0111ee:	e7bc      	b.n	c01116a <__ieee754_rem_pio2f+0x102>
 c0111f0:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 c0111f4:	d306      	bcc.n	c011204 <__ieee754_rem_pio2f+0x19c>
 c0111f6:	ee70 7a40 	vsub.f32	s15, s0, s0
 c0111fa:	edc0 7a01 	vstr	s15, [r0, #4]
 c0111fe:	edc0 7a00 	vstr	s15, [r0]
 c011202:	e73f      	b.n	c011084 <__ieee754_rem_pio2f+0x1c>
 c011204:	15ea      	asrs	r2, r5, #23
 c011206:	eddf 6a2d 	vldr	s13, [pc, #180]	@ c0112bc <__ieee754_rem_pio2f+0x254>
 c01120a:	3a86      	subs	r2, #134	@ 0x86
 c01120c:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 c011210:	ee07 3a90 	vmov	s15, r3
 c011214:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 c011218:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 c01121c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c011220:	ed8d 7a03 	vstr	s14, [sp, #12]
 c011224:	ee67 7aa6 	vmul.f32	s15, s15, s13
 c011228:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 c01122c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 c011230:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c011234:	ed8d 7a04 	vstr	s14, [sp, #16]
 c011238:	ee67 7aa6 	vmul.f32	s15, s15, s13
 c01123c:	eef5 7a40 	vcmp.f32	s15, #0.0
 c011240:	edcd 7a05 	vstr	s15, [sp, #20]
 c011244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c011248:	d11e      	bne.n	c011288 <__ieee754_rem_pio2f+0x220>
 c01124a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 c01124e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c011252:	bf0c      	ite	eq
 c011254:	2301      	moveq	r3, #1
 c011256:	2302      	movne	r3, #2
 c011258:	4919      	ldr	r1, [pc, #100]	@ (c0112c0 <__ieee754_rem_pio2f+0x258>)
 c01125a:	a803      	add	r0, sp, #12
 c01125c:	9101      	str	r1, [sp, #4]
 c01125e:	2102      	movs	r1, #2
 c011260:	9100      	str	r1, [sp, #0]
 c011262:	4621      	mov	r1, r4
 c011264:	f000 f85a 	bl	c01131c <__kernel_rem_pio2f>
 c011268:	2e00      	cmp	r6, #0
 c01126a:	f6bf af30 	bge.w	c0110ce <__ieee754_rem_pio2f+0x66>
 c01126e:	edd4 7a00 	vldr	s15, [r4]
 c011272:	eef1 7a67 	vneg.f32	s15, s15
 c011276:	edc4 7a00 	vstr	s15, [r4]
 c01127a:	edd4 7a01 	vldr	s15, [r4, #4]
 c01127e:	eef1 7a67 	vneg.f32	s15, s15
 c011282:	edc4 7a01 	vstr	s15, [r4, #4]
 c011286:	e782      	b.n	c01118e <__ieee754_rem_pio2f+0x126>
 c011288:	2303      	movs	r3, #3
 c01128a:	e7e5      	b.n	c011258 <__ieee754_rem_pio2f+0x1f0>
 c01128c:	3f490fd8 	.word	0x3f490fd8
 c011290:	4016cbe3 	.word	0x4016cbe3
 c011294:	3fc90f80 	.word	0x3fc90f80
 c011298:	3fc90fd0 	.word	0x3fc90fd0
 c01129c:	37354400 	.word	0x37354400
 c0112a0:	37354443 	.word	0x37354443
 c0112a4:	2e85a308 	.word	0x2e85a308
 c0112a8:	43490f80 	.word	0x43490f80
 c0112ac:	3f22f984 	.word	0x3f22f984
 c0112b0:	0c011dd4 	.word	0x0c011dd4
 c0112b4:	2e85a300 	.word	0x2e85a300
 c0112b8:	248d3132 	.word	0x248d3132
 c0112bc:	43800000 	.word	0x43800000
 c0112c0:	0c011e54 	.word	0x0c011e54

0c0112c4 <fabsf>:
 c0112c4:	ee10 3a10 	vmov	r3, s0
 c0112c8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 c0112cc:	ee00 3a10 	vmov	s0, r3
 c0112d0:	4770      	bx	lr

0c0112d2 <with_errnof>:
 c0112d2:	b510      	push	{r4, lr}
 c0112d4:	ed2d 8b02 	vpush	{d8}
 c0112d8:	eeb0 8a40 	vmov.f32	s16, s0
 c0112dc:	4604      	mov	r4, r0
 c0112de:	f7fe fa49 	bl	c00f774 <__errno>
 c0112e2:	6004      	str	r4, [r0, #0]
 c0112e4:	eeb0 0a48 	vmov.f32	s0, s16
 c0112e8:	ecbd 8b02 	vpop	{d8}
 c0112ec:	bd10      	pop	{r4, pc}

0c0112ee <xflowf>:
 c0112ee:	b130      	cbz	r0, c0112fe <xflowf+0x10>
 c0112f0:	eef1 7a40 	vneg.f32	s15, s0
 c0112f4:	ee27 0a80 	vmul.f32	s0, s15, s0
 c0112f8:	2022      	movs	r0, #34	@ 0x22
 c0112fa:	f7ff bfea 	b.w	c0112d2 <with_errnof>
 c0112fe:	eef0 7a40 	vmov.f32	s15, s0
 c011302:	e7f7      	b.n	c0112f4 <xflowf+0x6>

0c011304 <__math_uflowf>:
 c011304:	ed9f 0a01 	vldr	s0, [pc, #4]	@ c01130c <__math_uflowf+0x8>
 c011308:	f7ff bff1 	b.w	c0112ee <xflowf>
 c01130c:	10000000 	.word	0x10000000

0c011310 <__math_oflowf>:
 c011310:	ed9f 0a01 	vldr	s0, [pc, #4]	@ c011318 <__math_oflowf+0x8>
 c011314:	f7ff bfeb 	b.w	c0112ee <xflowf>
 c011318:	70000000 	.word	0x70000000

0c01131c <__kernel_rem_pio2f>:
 c01131c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c011320:	4690      	mov	r8, r2
 c011322:	4abc      	ldr	r2, [pc, #752]	@ (c011614 <__kernel_rem_pio2f+0x2f8>)
 c011324:	460f      	mov	r7, r1
 c011326:	f103 3bff 	add.w	fp, r3, #4294967295
 c01132a:	f118 0f04 	cmn.w	r8, #4
 c01132e:	ed2d 8b04 	vpush	{d8-d9}
 c011332:	b0d9      	sub	sp, #356	@ 0x164
 c011334:	9001      	str	r0, [sp, #4]
 c011336:	9866      	ldr	r0, [sp, #408]	@ 0x198
 c011338:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 c01133c:	db27      	blt.n	c01138e <__kernel_rem_pio2f+0x72>
 c01133e:	f1b8 0203 	subs.w	r2, r8, #3
 c011342:	bf48      	it	mi
 c011344:	f108 0204 	addmi.w	r2, r8, #4
 c011348:	10d2      	asrs	r2, r2, #3
 c01134a:	1c55      	adds	r5, r2, #1
 c01134c:	eba2 060b 	sub.w	r6, r2, fp
 c011350:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 c011352:	eb0a 0c0b 	add.w	ip, sl, fp
 c011356:	00e8      	lsls	r0, r5, #3
 c011358:	ac1c      	add	r4, sp, #112	@ 0x70
 c01135a:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 c01135e:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ c011624 <__kernel_rem_pio2f+0x308>
 c011362:	9002      	str	r0, [sp, #8]
 c011364:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 c011368:	2000      	movs	r0, #0
 c01136a:	4560      	cmp	r0, ip
 c01136c:	dd11      	ble.n	c011392 <__kernel_rem_pio2f+0x76>
 c01136e:	a91c      	add	r1, sp, #112	@ 0x70
 c011370:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 c011374:	f04f 0c00 	mov.w	ip, #0
 c011378:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 c01137c:	45d4      	cmp	ip, sl
 c01137e:	dc29      	bgt.n	c0113d4 <__kernel_rem_pio2f+0xb8>
 c011380:	f8dd e004 	ldr.w	lr, [sp, #4]
 c011384:	4606      	mov	r6, r0
 c011386:	eddf 7aa7 	vldr	s15, [pc, #668]	@ c011624 <__kernel_rem_pio2f+0x308>
 c01138a:	2400      	movs	r4, #0
 c01138c:	e018      	b.n	c0113c0 <__kernel_rem_pio2f+0xa4>
 c01138e:	2200      	movs	r2, #0
 c011390:	e7db      	b.n	c01134a <__kernel_rem_pio2f+0x2e>
 c011392:	42c6      	cmn	r6, r0
 c011394:	bf54      	ite	pl
 c011396:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 c01139a:	eef0 7a47 	vmovmi.f32	s15, s14
 c01139e:	f100 0001 	add.w	r0, r0, #1
 c0113a2:	bf5c      	itt	pl
 c0113a4:	ee07 1a90 	vmovpl	s15, r1
 c0113a8:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 c0113ac:	ece4 7a01 	vstmia	r4!, {s15}
 c0113b0:	e7db      	b.n	c01136a <__kernel_rem_pio2f+0x4e>
 c0113b2:	ecfe 6a01 	vldmia	lr!, {s13}
 c0113b6:	3401      	adds	r4, #1
 c0113b8:	ed96 7a00 	vldr	s14, [r6]
 c0113bc:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0113c0:	455c      	cmp	r4, fp
 c0113c2:	f1a6 0604 	sub.w	r6, r6, #4
 c0113c6:	ddf4      	ble.n	c0113b2 <__kernel_rem_pio2f+0x96>
 c0113c8:	f10c 0c01 	add.w	ip, ip, #1
 c0113cc:	3004      	adds	r0, #4
 c0113ce:	ece9 7a01 	vstmia	r9!, {s15}
 c0113d2:	e7d3      	b.n	c01137c <__kernel_rem_pio2f+0x60>
 c0113d4:	a908      	add	r1, sp, #32
 c0113d6:	4654      	mov	r4, sl
 c0113d8:	eddf 8a91 	vldr	s17, [pc, #580]	@ c011620 <__kernel_rem_pio2f+0x304>
 c0113dc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 c0113e0:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ c01161c <__kernel_rem_pio2f+0x300>
 c0113e4:	9104      	str	r1, [sp, #16]
 c0113e6:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 c0113e8:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 c0113ec:	9203      	str	r2, [sp, #12]
 c0113ee:	00a2      	lsls	r2, r4, #2
 c0113f0:	a944      	add	r1, sp, #272	@ 0x110
 c0113f2:	4626      	mov	r6, r4
 c0113f4:	9205      	str	r2, [sp, #20]
 c0113f6:	aa58      	add	r2, sp, #352	@ 0x160
 c0113f8:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 c0113fc:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 c011400:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 c011404:	aa08      	add	r2, sp, #32
 c011406:	4694      	mov	ip, r2
 c011408:	2e00      	cmp	r6, #0
 c01140a:	f1a0 0004 	sub.w	r0, r0, #4
 c01140e:	dc4c      	bgt.n	c0114aa <__kernel_rem_pio2f+0x18e>
 c011410:	4628      	mov	r0, r5
 c011412:	e9cd 2306 	strd	r2, r3, [sp, #24]
 c011416:	f000 f9f5 	bl	c011804 <scalbnf>
 c01141a:	eeb0 8a40 	vmov.f32	s16, s0
 c01141e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 c011422:	ee28 0a00 	vmul.f32	s0, s16, s0
 c011426:	f000 fa51 	bl	c0118cc <floorf>
 c01142a:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 c01142e:	2d00      	cmp	r5, #0
 c011430:	eea0 8a67 	vfms.f32	s16, s0, s15
 c011434:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 c011438:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 c01143c:	ee17 9a90 	vmov	r9, s15
 c011440:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c011444:	ee38 8a67 	vsub.f32	s16, s16, s15
 c011448:	dd41      	ble.n	c0114ce <__kernel_rem_pio2f+0x1b2>
 c01144a:	f104 3cff 	add.w	ip, r4, #4294967295
 c01144e:	a908      	add	r1, sp, #32
 c011450:	f1c5 0e08 	rsb	lr, r5, #8
 c011454:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 c011458:	fa46 f00e 	asr.w	r0, r6, lr
 c01145c:	4481      	add	r9, r0
 c01145e:	fa00 f00e 	lsl.w	r0, r0, lr
 c011462:	1a36      	subs	r6, r6, r0
 c011464:	f1c5 0007 	rsb	r0, r5, #7
 c011468:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 c01146c:	4106      	asrs	r6, r0
 c01146e:	2e00      	cmp	r6, #0
 c011470:	dd3c      	ble.n	c0114ec <__kernel_rem_pio2f+0x1d0>
 c011472:	f04f 0e00 	mov.w	lr, #0
 c011476:	f109 0901 	add.w	r9, r9, #1
 c01147a:	4670      	mov	r0, lr
 c01147c:	4574      	cmp	r4, lr
 c01147e:	dc68      	bgt.n	c011552 <__kernel_rem_pio2f+0x236>
 c011480:	2d00      	cmp	r5, #0
 c011482:	dd03      	ble.n	c01148c <__kernel_rem_pio2f+0x170>
 c011484:	2d01      	cmp	r5, #1
 c011486:	d074      	beq.n	c011572 <__kernel_rem_pio2f+0x256>
 c011488:	2d02      	cmp	r5, #2
 c01148a:	d07d      	beq.n	c011588 <__kernel_rem_pio2f+0x26c>
 c01148c:	2e02      	cmp	r6, #2
 c01148e:	d12d      	bne.n	c0114ec <__kernel_rem_pio2f+0x1d0>
 c011490:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c011494:	ee30 8a48 	vsub.f32	s16, s0, s16
 c011498:	b340      	cbz	r0, c0114ec <__kernel_rem_pio2f+0x1d0>
 c01149a:	4628      	mov	r0, r5
 c01149c:	9306      	str	r3, [sp, #24]
 c01149e:	f000 f9b1 	bl	c011804 <scalbnf>
 c0114a2:	9b06      	ldr	r3, [sp, #24]
 c0114a4:	ee38 8a40 	vsub.f32	s16, s16, s0
 c0114a8:	e020      	b.n	c0114ec <__kernel_rem_pio2f+0x1d0>
 c0114aa:	ee60 7a28 	vmul.f32	s15, s0, s17
 c0114ae:	3e01      	subs	r6, #1
 c0114b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 c0114b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c0114b8:	eea7 0ac9 	vfms.f32	s0, s15, s18
 c0114bc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 c0114c0:	ecac 0a01 	vstmia	ip!, {s0}
 c0114c4:	ed90 0a00 	vldr	s0, [r0]
 c0114c8:	ee37 0a80 	vadd.f32	s0, s15, s0
 c0114cc:	e79c      	b.n	c011408 <__kernel_rem_pio2f+0xec>
 c0114ce:	d105      	bne.n	c0114dc <__kernel_rem_pio2f+0x1c0>
 c0114d0:	1e60      	subs	r0, r4, #1
 c0114d2:	a908      	add	r1, sp, #32
 c0114d4:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 c0114d8:	11f6      	asrs	r6, r6, #7
 c0114da:	e7c8      	b.n	c01146e <__kernel_rem_pio2f+0x152>
 c0114dc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 c0114e0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 c0114e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0114e8:	da31      	bge.n	c01154e <__kernel_rem_pio2f+0x232>
 c0114ea:	2600      	movs	r6, #0
 c0114ec:	eeb5 8a40 	vcmp.f32	s16, #0.0
 c0114f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c0114f4:	f040 8098 	bne.w	c011628 <__kernel_rem_pio2f+0x30c>
 c0114f8:	1e60      	subs	r0, r4, #1
 c0114fa:	2200      	movs	r2, #0
 c0114fc:	4550      	cmp	r0, sl
 c0114fe:	da4b      	bge.n	c011598 <__kernel_rem_pio2f+0x27c>
 c011500:	2a00      	cmp	r2, #0
 c011502:	d065      	beq.n	c0115d0 <__kernel_rem_pio2f+0x2b4>
 c011504:	3c01      	subs	r4, #1
 c011506:	ab08      	add	r3, sp, #32
 c011508:	3d08      	subs	r5, #8
 c01150a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 c01150e:	2b00      	cmp	r3, #0
 c011510:	d0f8      	beq.n	c011504 <__kernel_rem_pio2f+0x1e8>
 c011512:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 c011516:	4628      	mov	r0, r5
 c011518:	f000 f974 	bl	c011804 <scalbnf>
 c01151c:	1c63      	adds	r3, r4, #1
 c01151e:	aa44      	add	r2, sp, #272	@ 0x110
 c011520:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ c011620 <__kernel_rem_pio2f+0x304>
 c011524:	0099      	lsls	r1, r3, #2
 c011526:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 c01152a:	4623      	mov	r3, r4
 c01152c:	2b00      	cmp	r3, #0
 c01152e:	f280 80a9 	bge.w	c011684 <__kernel_rem_pio2f+0x368>
 c011532:	4623      	mov	r3, r4
 c011534:	2b00      	cmp	r3, #0
 c011536:	f2c0 80c7 	blt.w	c0116c8 <__kernel_rem_pio2f+0x3ac>
 c01153a:	aa44      	add	r2, sp, #272	@ 0x110
 c01153c:	f8df c0d8 	ldr.w	ip, [pc, #216]	@ c011618 <__kernel_rem_pio2f+0x2fc>
 c011540:	eddf 7a38 	vldr	s15, [pc, #224]	@ c011624 <__kernel_rem_pio2f+0x308>
 c011544:	2000      	movs	r0, #0
 c011546:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 c01154a:	1ae2      	subs	r2, r4, r3
 c01154c:	e0b1      	b.n	c0116b2 <__kernel_rem_pio2f+0x396>
 c01154e:	2602      	movs	r6, #2
 c011550:	e78f      	b.n	c011472 <__kernel_rem_pio2f+0x156>
 c011552:	f852 1b04 	ldr.w	r1, [r2], #4
 c011556:	b948      	cbnz	r0, c01156c <__kernel_rem_pio2f+0x250>
 c011558:	b121      	cbz	r1, c011564 <__kernel_rem_pio2f+0x248>
 c01155a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 c01155e:	f842 1c04 	str.w	r1, [r2, #-4]
 c011562:	2101      	movs	r1, #1
 c011564:	f10e 0e01 	add.w	lr, lr, #1
 c011568:	4608      	mov	r0, r1
 c01156a:	e787      	b.n	c01147c <__kernel_rem_pio2f+0x160>
 c01156c:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 c011570:	e7f5      	b.n	c01155e <__kernel_rem_pio2f+0x242>
 c011572:	f104 3cff 	add.w	ip, r4, #4294967295
 c011576:	aa08      	add	r2, sp, #32
 c011578:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 c01157c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 c011580:	a908      	add	r1, sp, #32
 c011582:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 c011586:	e781      	b.n	c01148c <__kernel_rem_pio2f+0x170>
 c011588:	f104 3cff 	add.w	ip, r4, #4294967295
 c01158c:	aa08      	add	r2, sp, #32
 c01158e:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 c011592:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 c011596:	e7f3      	b.n	c011580 <__kernel_rem_pio2f+0x264>
 c011598:	a908      	add	r1, sp, #32
 c01159a:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 c01159e:	3801      	subs	r0, #1
 c0115a0:	430a      	orrs	r2, r1
 c0115a2:	e7ab      	b.n	c0114fc <__kernel_rem_pio2f+0x1e0>
 c0115a4:	3201      	adds	r2, #1
 c0115a6:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 c0115aa:	2e00      	cmp	r6, #0
 c0115ac:	d0fa      	beq.n	c0115a4 <__kernel_rem_pio2f+0x288>
 c0115ae:	9905      	ldr	r1, [sp, #20]
 c0115b0:	18e6      	adds	r6, r4, r3
 c0115b2:	f104 0c01 	add.w	ip, r4, #1
 c0115b6:	4422      	add	r2, r4
 c0115b8:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 c0115bc:	eb0d 0001 	add.w	r0, sp, r1
 c0115c0:	a91c      	add	r1, sp, #112	@ 0x70
 c0115c2:	384c      	subs	r0, #76	@ 0x4c
 c0115c4:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 c0115c8:	4562      	cmp	r2, ip
 c0115ca:	da04      	bge.n	c0115d6 <__kernel_rem_pio2f+0x2ba>
 c0115cc:	4614      	mov	r4, r2
 c0115ce:	e70e      	b.n	c0113ee <__kernel_rem_pio2f+0xd2>
 c0115d0:	9804      	ldr	r0, [sp, #16]
 c0115d2:	2201      	movs	r2, #1
 c0115d4:	e7e7      	b.n	c0115a6 <__kernel_rem_pio2f+0x28a>
 c0115d6:	9903      	ldr	r1, [sp, #12]
 c0115d8:	2400      	movs	r4, #0
 c0115da:	f8dd e004 	ldr.w	lr, [sp, #4]
 c0115de:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 c0115e2:	ee07 1a90 	vmov	s15, r1
 c0115e6:	9105      	str	r1, [sp, #20]
 c0115e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c0115ec:	ece6 7a01 	vstmia	r6!, {s15}
 c0115f0:	46b1      	mov	r9, r6
 c0115f2:	eddf 7a0c 	vldr	s15, [pc, #48]	@ c011624 <__kernel_rem_pio2f+0x308>
 c0115f6:	455c      	cmp	r4, fp
 c0115f8:	dd04      	ble.n	c011604 <__kernel_rem_pio2f+0x2e8>
 c0115fa:	f10c 0c01 	add.w	ip, ip, #1
 c0115fe:	ece0 7a01 	vstmia	r0!, {s15}
 c011602:	e7e1      	b.n	c0115c8 <__kernel_rem_pio2f+0x2ac>
 c011604:	ecfe 6a01 	vldmia	lr!, {s13}
 c011608:	3401      	adds	r4, #1
 c01160a:	ed39 7a01 	vldmdb	r9!, {s14}
 c01160e:	eee6 7a87 	vfma.f32	s15, s13, s14
 c011612:	e7f0      	b.n	c0115f6 <__kernel_rem_pio2f+0x2da>
 c011614:	0c012198 	.word	0x0c012198
 c011618:	0c01216c 	.word	0x0c01216c
 c01161c:	43800000 	.word	0x43800000
 c011620:	3b800000 	.word	0x3b800000
 c011624:	00000000 	.word	0x00000000
 c011628:	9b02      	ldr	r3, [sp, #8]
 c01162a:	eeb0 0a48 	vmov.f32	s0, s16
 c01162e:	eba3 0008 	sub.w	r0, r3, r8
 c011632:	f000 f8e7 	bl	c011804 <scalbnf>
 c011636:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ c01161c <__kernel_rem_pio2f+0x300>
 c01163a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 c01163e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 c011642:	db19      	blt.n	c011678 <__kernel_rem_pio2f+0x35c>
 c011644:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ c011620 <__kernel_rem_pio2f+0x304>
 c011648:	aa08      	add	r2, sp, #32
 c01164a:	3508      	adds	r5, #8
 c01164c:	ee60 7a27 	vmul.f32	s15, s0, s15
 c011650:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 c011654:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c011658:	eea7 0ac7 	vfms.f32	s0, s15, s14
 c01165c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 c011660:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 c011664:	ee10 3a10 	vmov	r3, s0
 c011668:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 c01166c:	3401      	adds	r4, #1
 c01166e:	ee17 3a90 	vmov	r3, s15
 c011672:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 c011676:	e74c      	b.n	c011512 <__kernel_rem_pio2f+0x1f6>
 c011678:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 c01167c:	aa08      	add	r2, sp, #32
 c01167e:	ee10 3a10 	vmov	r3, s0
 c011682:	e7f6      	b.n	c011672 <__kernel_rem_pio2f+0x356>
 c011684:	a808      	add	r0, sp, #32
 c011686:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 c01168a:	3b01      	subs	r3, #1
 c01168c:	ee07 0a90 	vmov	s15, r0
 c011690:	9001      	str	r0, [sp, #4]
 c011692:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 c011696:	ee67 7a80 	vmul.f32	s15, s15, s0
 c01169a:	ee20 0a07 	vmul.f32	s0, s0, s14
 c01169e:	ed62 7a01 	vstmdb	r2!, {s15}
 c0116a2:	e743      	b.n	c01152c <__kernel_rem_pio2f+0x210>
 c0116a4:	ecfc 6a01 	vldmia	ip!, {s13}
 c0116a8:	3001      	adds	r0, #1
 c0116aa:	ecb5 7a01 	vldmia	r5!, {s14}
 c0116ae:	eee6 7a87 	vfma.f32	s15, s13, s14
 c0116b2:	4550      	cmp	r0, sl
 c0116b4:	dc01      	bgt.n	c0116ba <__kernel_rem_pio2f+0x39e>
 c0116b6:	4282      	cmp	r2, r0
 c0116b8:	daf4      	bge.n	c0116a4 <__kernel_rem_pio2f+0x388>
 c0116ba:	a858      	add	r0, sp, #352	@ 0x160
 c0116bc:	3b01      	subs	r3, #1
 c0116be:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 c0116c2:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 c0116c6:	e735      	b.n	c011534 <__kernel_rem_pio2f+0x218>
 c0116c8:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 c0116ca:	2b02      	cmp	r3, #2
 c0116cc:	dc09      	bgt.n	c0116e2 <__kernel_rem_pio2f+0x3c6>
 c0116ce:	2b00      	cmp	r3, #0
 c0116d0:	dc2b      	bgt.n	c01172a <__kernel_rem_pio2f+0x40e>
 c0116d2:	d044      	beq.n	c01175e <__kernel_rem_pio2f+0x442>
 c0116d4:	f009 0007 	and.w	r0, r9, #7
 c0116d8:	b059      	add	sp, #356	@ 0x164
 c0116da:	ecbd 8b04 	vpop	{d8-d9}
 c0116de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0116e2:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 c0116e4:	2b03      	cmp	r3, #3
 c0116e6:	d1f5      	bne.n	c0116d4 <__kernel_rem_pio2f+0x3b8>
 c0116e8:	aa30      	add	r2, sp, #192	@ 0xc0
 c0116ea:	1f0b      	subs	r3, r1, #4
 c0116ec:	4620      	mov	r0, r4
 c0116ee:	4413      	add	r3, r2
 c0116f0:	461a      	mov	r2, r3
 c0116f2:	2800      	cmp	r0, #0
 c0116f4:	f1a2 0204 	sub.w	r2, r2, #4
 c0116f8:	dc52      	bgt.n	c0117a0 <__kernel_rem_pio2f+0x484>
 c0116fa:	4622      	mov	r2, r4
 c0116fc:	2a01      	cmp	r2, #1
 c0116fe:	f1a3 0304 	sub.w	r3, r3, #4
 c011702:	dc5d      	bgt.n	c0117c0 <__kernel_rem_pio2f+0x4a4>
 c011704:	ab30      	add	r3, sp, #192	@ 0xc0
 c011706:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ c011624 <__kernel_rem_pio2f+0x308>
 c01170a:	440b      	add	r3, r1
 c01170c:	2c01      	cmp	r4, #1
 c01170e:	dc67      	bgt.n	c0117e0 <__kernel_rem_pio2f+0x4c4>
 c011710:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 c011714:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 c011718:	2e00      	cmp	r6, #0
 c01171a:	d167      	bne.n	c0117ec <__kernel_rem_pio2f+0x4d0>
 c01171c:	edc7 6a00 	vstr	s13, [r7]
 c011720:	ed87 7a01 	vstr	s14, [r7, #4]
 c011724:	edc7 7a02 	vstr	s15, [r7, #8]
 c011728:	e7d4      	b.n	c0116d4 <__kernel_rem_pio2f+0x3b8>
 c01172a:	ab30      	add	r3, sp, #192	@ 0xc0
 c01172c:	4622      	mov	r2, r4
 c01172e:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ c011624 <__kernel_rem_pio2f+0x308>
 c011732:	440b      	add	r3, r1
 c011734:	2a00      	cmp	r2, #0
 c011736:	da24      	bge.n	c011782 <__kernel_rem_pio2f+0x466>
 c011738:	b34e      	cbz	r6, c01178e <__kernel_rem_pio2f+0x472>
 c01173a:	eef1 7a47 	vneg.f32	s15, s14
 c01173e:	edc7 7a00 	vstr	s15, [r7]
 c011742:	aa31      	add	r2, sp, #196	@ 0xc4
 c011744:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 c011748:	2301      	movs	r3, #1
 c01174a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c01174e:	429c      	cmp	r4, r3
 c011750:	da20      	bge.n	c011794 <__kernel_rem_pio2f+0x478>
 c011752:	b10e      	cbz	r6, c011758 <__kernel_rem_pio2f+0x43c>
 c011754:	eef1 7a67 	vneg.f32	s15, s15
 c011758:	edc7 7a01 	vstr	s15, [r7, #4]
 c01175c:	e7ba      	b.n	c0116d4 <__kernel_rem_pio2f+0x3b8>
 c01175e:	ab30      	add	r3, sp, #192	@ 0xc0
 c011760:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ c011624 <__kernel_rem_pio2f+0x308>
 c011764:	440b      	add	r3, r1
 c011766:	2c00      	cmp	r4, #0
 c011768:	da05      	bge.n	c011776 <__kernel_rem_pio2f+0x45a>
 c01176a:	b10e      	cbz	r6, c011770 <__kernel_rem_pio2f+0x454>
 c01176c:	eef1 7a67 	vneg.f32	s15, s15
 c011770:	edc7 7a00 	vstr	s15, [r7]
 c011774:	e7ae      	b.n	c0116d4 <__kernel_rem_pio2f+0x3b8>
 c011776:	ed33 7a01 	vldmdb	r3!, {s14}
 c01177a:	3c01      	subs	r4, #1
 c01177c:	ee77 7a87 	vadd.f32	s15, s15, s14
 c011780:	e7f1      	b.n	c011766 <__kernel_rem_pio2f+0x44a>
 c011782:	ed73 7a01 	vldmdb	r3!, {s15}
 c011786:	3a01      	subs	r2, #1
 c011788:	ee37 7a27 	vadd.f32	s14, s14, s15
 c01178c:	e7d2      	b.n	c011734 <__kernel_rem_pio2f+0x418>
 c01178e:	eef0 7a47 	vmov.f32	s15, s14
 c011792:	e7d4      	b.n	c01173e <__kernel_rem_pio2f+0x422>
 c011794:	ecb2 7a01 	vldmia	r2!, {s14}
 c011798:	3301      	adds	r3, #1
 c01179a:	ee77 7a87 	vadd.f32	s15, s15, s14
 c01179e:	e7d6      	b.n	c01174e <__kernel_rem_pio2f+0x432>
 c0117a0:	edd2 7a00 	vldr	s15, [r2]
 c0117a4:	3801      	subs	r0, #1
 c0117a6:	edd2 6a01 	vldr	s13, [r2, #4]
 c0117aa:	ee37 7aa6 	vadd.f32	s14, s15, s13
 c0117ae:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c0117b2:	ed82 7a00 	vstr	s14, [r2]
 c0117b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 c0117ba:	edc2 7a01 	vstr	s15, [r2, #4]
 c0117be:	e798      	b.n	c0116f2 <__kernel_rem_pio2f+0x3d6>
 c0117c0:	edd3 7a00 	vldr	s15, [r3]
 c0117c4:	3a01      	subs	r2, #1
 c0117c6:	edd3 6a01 	vldr	s13, [r3, #4]
 c0117ca:	ee37 7aa6 	vadd.f32	s14, s15, s13
 c0117ce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 c0117d2:	ed83 7a00 	vstr	s14, [r3]
 c0117d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 c0117da:	edc3 7a01 	vstr	s15, [r3, #4]
 c0117de:	e78d      	b.n	c0116fc <__kernel_rem_pio2f+0x3e0>
 c0117e0:	ed33 7a01 	vldmdb	r3!, {s14}
 c0117e4:	3c01      	subs	r4, #1
 c0117e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 c0117ea:	e78f      	b.n	c01170c <__kernel_rem_pio2f+0x3f0>
 c0117ec:	eef1 6a66 	vneg.f32	s13, s13
 c0117f0:	eeb1 7a47 	vneg.f32	s14, s14
 c0117f4:	eef1 7a67 	vneg.f32	s15, s15
 c0117f8:	edc7 6a00 	vstr	s13, [r7]
 c0117fc:	ed87 7a01 	vstr	s14, [r7, #4]
 c011800:	e790      	b.n	c011724 <__kernel_rem_pio2f+0x408>
 c011802:	bf00      	nop

0c011804 <scalbnf>:
 c011804:	ee10 3a10 	vmov	r3, s0
 c011808:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 c01180c:	d02a      	beq.n	c011864 <scalbnf+0x60>
 c01180e:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 c011812:	d302      	bcc.n	c01181a <scalbnf+0x16>
 c011814:	ee30 0a00 	vadd.f32	s0, s0, s0
 c011818:	4770      	bx	lr
 c01181a:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 c01181e:	d122      	bne.n	c011866 <scalbnf+0x62>
 c011820:	4b23      	ldr	r3, [pc, #140]	@ (c0118b0 <scalbnf+0xac>)
 c011822:	eddf 7a24 	vldr	s15, [pc, #144]	@ c0118b4 <scalbnf+0xb0>
 c011826:	4298      	cmp	r0, r3
 c011828:	ee20 0a27 	vmul.f32	s0, s0, s15
 c01182c:	db16      	blt.n	c01185c <scalbnf+0x58>
 c01182e:	ee10 3a10 	vmov	r3, s0
 c011832:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 c011836:	3a19      	subs	r2, #25
 c011838:	f24c 3150 	movw	r1, #50000	@ 0xc350
 c01183c:	4288      	cmp	r0, r1
 c01183e:	dd14      	ble.n	c01186a <scalbnf+0x66>
 c011840:	eddf 7a1d 	vldr	s15, [pc, #116]	@ c0118b8 <scalbnf+0xb4>
 c011844:	ee10 3a10 	vmov	r3, s0
 c011848:	eddf 6a1c 	vldr	s13, [pc, #112]	@ c0118bc <scalbnf+0xb8>
 c01184c:	eeb0 7a67 	vmov.f32	s14, s15
 c011850:	2b00      	cmp	r3, #0
 c011852:	fe67 7aa6 	vselge.f32	s15, s15, s13
 c011856:	ee27 0a87 	vmul.f32	s0, s15, s14
 c01185a:	4770      	bx	lr
 c01185c:	eddf 7a18 	vldr	s15, [pc, #96]	@ c0118c0 <scalbnf+0xbc>
 c011860:	ee27 0a80 	vmul.f32	s0, s15, s0
 c011864:	4770      	bx	lr
 c011866:	0dd2      	lsrs	r2, r2, #23
 c011868:	e7e6      	b.n	c011838 <scalbnf+0x34>
 c01186a:	4410      	add	r0, r2
 c01186c:	28fe      	cmp	r0, #254	@ 0xfe
 c01186e:	dce7      	bgt.n	c011840 <scalbnf+0x3c>
 c011870:	2800      	cmp	r0, #0
 c011872:	dd06      	ble.n	c011882 <scalbnf+0x7e>
 c011874:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 c011878:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 c01187c:	ee00 3a10 	vmov	s0, r3
 c011880:	4770      	bx	lr
 c011882:	f110 0f16 	cmn.w	r0, #22
 c011886:	da09      	bge.n	c01189c <scalbnf+0x98>
 c011888:	eddf 7a0d 	vldr	s15, [pc, #52]	@ c0118c0 <scalbnf+0xbc>
 c01188c:	ee10 3a10 	vmov	r3, s0
 c011890:	eddf 6a0c 	vldr	s13, [pc, #48]	@ c0118c4 <scalbnf+0xc0>
 c011894:	eeb0 7a67 	vmov.f32	s14, s15
 c011898:	2b00      	cmp	r3, #0
 c01189a:	e7da      	b.n	c011852 <scalbnf+0x4e>
 c01189c:	3019      	adds	r0, #25
 c01189e:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 c0118a2:	ed9f 0a09 	vldr	s0, [pc, #36]	@ c0118c8 <scalbnf+0xc4>
 c0118a6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 c0118aa:	ee07 3a90 	vmov	s15, r3
 c0118ae:	e7d7      	b.n	c011860 <scalbnf+0x5c>
 c0118b0:	ffff3cb0 	.word	0xffff3cb0
 c0118b4:	4c000000 	.word	0x4c000000
 c0118b8:	7149f2ca 	.word	0x7149f2ca
 c0118bc:	f149f2ca 	.word	0xf149f2ca
 c0118c0:	0da24260 	.word	0x0da24260
 c0118c4:	8da24260 	.word	0x8da24260
 c0118c8:	33000000 	.word	0x33000000

0c0118cc <floorf>:
 c0118cc:	febb 0a40 	vrintm.f32	s0, s0
 c0118d0:	4770      	bx	lr
	...

0c0118d4 <_init>:
 c0118d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c0118d6:	bf00      	nop
 c0118d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 c0118da:	bc08      	pop	{r3}
 c0118dc:	469e      	mov	lr, r3
 c0118de:	4770      	bx	lr

0c0118e0 <_fini>:
 c0118e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 c0118e2:	bf00      	nop
 c0118e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 c0118e6:	bc08      	pop	{r3}
 c0118e8:	469e      	mov	lr, r3
 c0118ea:	4770      	bx	lr

Disassembly of section .gnu.sgstubs:

0c03e000 <SECURE_SystemCoreClockUpdate>:
 c03e000:	e97f e97f 	sg
 c03e004:	f7c4 b94a 	b.w	c00229c <__acle_se_SECURE_SystemCoreClockUpdate>

0c03e008 <SECURE_recv>:
 c03e008:	e97f e97f 	sg
 c03e00c:	f7c3 bd94 	b.w	c001b38 <__acle_se_SECURE_recv>

0c03e010 <SECURE_RegisterCallback>:
 c03e010:	e97f e97f 	sg
 c03e014:	f7c3 bd0c 	b.w	c001a30 <__acle_se_SECURE_RegisterCallback>

0c03e018 <SECURE_send>:
 c03e018:	e97f e97f 	sg
 c03e01c:	f7c3 bd4a 	b.w	c001ab4 <__acle_se_SECURE_send>

0c03e020 <SECURE_pox>:
 c03e020:	e97f e97f 	sg
 c03e024:	f7c3 be76 	b.w	c001d14 <__acle_se_SECURE_pox>
	...
